<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_nAzcoLhLEe2uyMDTtZ4aHg" name="SchedulableObject">
    <eAnnotations xmi:id="_nGzW8LhLEe2uyMDTtZ4aHg" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_nGzW8bhLEe2uyMDTtZ4aHg" source="codegen">
        <details xmi:id="_nGzW8rhLEe2uyMDTtZ4aHg" key="codegenDirectory" value="/cs2820-spring23/src"/>
        <details xmi:id="_qTzecLhLEe2uyMDTtZ4aHg" key="AssociatedSourceCode" value="/cs2820-spring23/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Activations.java;3305092594/1;/cs2820-spring23/src/edu/uiowa/cs/warp/BasicPoset.java;3238489715/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ChannelAnalysis.java;1217720653/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ChannelVisualization.java;2873127052/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Channels.java;3701064188/1;/cs2820-spring23/src/edu/uiowa/cs/warp/CodeFragment.java;1941462046/1;/cs2820-spring23/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820-spring23/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ConnectivityPoset.java;3754377617/1;/cs2820-spring23/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Description.java;2596849957/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Edge.java;1242144003/1;/cs2820-spring23/src/edu/uiowa/cs/warp/FileManager.java;1791012323/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Flow.java;1068535148/1;/cs2820-spring23/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820-spring23/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820-spring23/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820-spring23/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820-spring23/src/edu/uiowa/cs/warp/GuiVisualization.java;654882569/1;/cs2820-spring23/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820-spring23/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820-spring23/src/edu/uiowa/cs/warp/LatencyAnalysis.java;2064230864/1;/cs2820-spring23/src/edu/uiowa/cs/warp/LatencyVisualization.java;2426998793/1;/cs2820-spring23/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820-spring23/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Node.java;1243472081/1;/cs2820-spring23/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/cs2820-spring23/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820-spring23/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820-spring23/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;/cs2820-spring23/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820-spring23/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Program.java;765069261/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ProgramVisualization.java;108384050/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;2919449855/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityParameters.java;1976749484/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;4166646452/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Row.java;3413533457/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SystemFactory.java;4134708055/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/cs2820-spring23/src/edu/uiowa/cs/warp/VisualizationFactory.java;1134295780/1;/cs2820-spring23/src/edu/uiowa/cs/warp/VisualizationImplementation.java;1783231272/1;/cs2820-spring23/src/edu/uiowa/cs/warp/VisualizationObject.java;1022989847/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WorkLoadListener.java;195958787/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WorkLoadDescription.java;3097834434/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WarpInterface.java;2926400465/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WarpSystem.java;1603794739/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WorkLoad.java;4087709754/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Warp.java;2175298915/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WorkLoadTest.java;250494534/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_oIs40LhLEe2uyMDTtZ4aHg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_oIs40bhLEe2uyMDTtZ4aHg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_oIs40rhLEe2uyMDTtZ4aHg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_oItf4LhLEe2uyMDTtZ4aHg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_oItf4bhLEe2uyMDTtZ4aHg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_oItf4rhLEe2uyMDTtZ4aHg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_oItf47hLEe2uyMDTtZ4aHg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_oItf5LhLEe2uyMDTtZ4aHg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_oIuG8LhLEe2uyMDTtZ4aHg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_oG_BkLhLEe2uyMDTtZ4aHg" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_oG_ooLhLEe2uyMDTtZ4aHg" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_oG_oobhLEe2uyMDTtZ4aHg" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_oHFvQLhLEe2uyMDTtZ4aHg" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_oI8wcLhLEe2uyMDTtZ4aHg" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_oorZYbhLEe2uyMDTtZ4aHg" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_oJ_SQLhLEe2uyMDTtZ4aHg" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_opaZMrhLEe2uyMDTtZ4aHg" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_oKEx0LhLEe2uyMDTtZ4aHg" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_opcOYLhLEe2uyMDTtZ4aHg" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_opc1cbhLEe2uyMDTtZ4aHg" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oNocILhLEe2uyMDTtZ4aHg" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_oqdiELhLEe2uyMDTtZ4aHg" general="_ontwELhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_osKyQLhLEe2uyMDTtZ4aHg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_osLZULhLEe2uyMDTtZ4aHg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ot6esLhLEe2uyMDTtZ4aHg" name="AbstractMap" specification="_oOFIELhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ot6esbhLEe2uyMDTtZ4aHg" type="_oNocILhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oOFIELhLEe2uyMDTtZ4aHg" name="AbstractMap" method="_ot6esLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oOGWMLhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oOGWMbhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oOGWMrhLEe2uyMDTtZ4aHg" type="_oNocILhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oOHkULhLEe2uyMDTtZ4aHg" name="Activation">
              <generalization xmi:id="_on4II7hLEe2uyMDTtZ4aHg" general="_oVWNsLhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_osLZUbhLEe2uyMDTtZ4aHg" name="coordinators" type="_onvlQLhLEe2uyMDTtZ4aHg" isReadOnly="true" association="_owFB4LhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_osMncLhLEe2uyMDTtZ4aHg" name="edges" type="_onvlQLhLEe2uyMDTtZ4aHg" isReadOnly="true" association="_owFo8bhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_osNOgLhLEe2uyMDTtZ4aHg" name="additionalScheduleTimes" type="_onvlQLhLEe2uyMDTtZ4aHg" isReadOnly="true" association="_owGQAbhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_osNOgrhLEe2uyMDTtZ4aHg" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_osN1kLhLEe2uyMDTtZ4aHg" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_oqfXQbhLEe2uyMDTtZ4aHg" client="_oOHkULhLEe2uyMDTtZ4aHg" supplier="_oqewMbhLEe2uyMDTtZ4aHg" contract="_oqewMbhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouV8gLhLEe2uyMDTtZ4aHg" name="Activation" specification="_oOJZgLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouV8gbhLEe2uyMDTtZ4aHg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouV8grhLEe2uyMDTtZ4aHg" type="_oOHkULhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouWjkLhLEe2uyMDTtZ4aHg" name="Activation" specification="_onzPoLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouWjkbhLEe2uyMDTtZ4aHg" name="elem" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouWjkrhLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouWjk7hLEe2uyMDTtZ4aHg" type="_oOHkULhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouWjlLhLEe2uyMDTtZ4aHg" name="clone" specification="_oOKnoLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouWjlbhLEe2uyMDTtZ4aHg" type="_oOHkULhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouWjlrhLEe2uyMDTtZ4aHg" name="getEdgesByReleaseTime" specification="_oOND4LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouWjl7hLEe2uyMDTtZ4aHg" type="_oSKW0bhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouWjmLhLEe2uyMDTtZ4aHg" name="getEdgesByLatestReleaseTime" specification="_oOO5EbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouWjmbhLEe2uyMDTtZ4aHg" type="_oSKW0bhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouWjmrhLEe2uyMDTtZ4aHg" name="getEdgesByPeriod" specification="_oORVULhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouWjm7hLEe2uyMDTtZ4aHg" type="_oSKW0bhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouXKoLhLEe2uyMDTtZ4aHg" name="getEdgesByDeadline" specification="_oOTKgLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouXKobhLEe2uyMDTtZ4aHg" type="_oSKW0bhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouXKorhLEe2uyMDTtZ4aHg" name="getEdgesByPriority" specification="_oOVmwLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouXKo7hLEe2uyMDTtZ4aHg" type="_oSKW0bhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouXKpLhLEe2uyMDTtZ4aHg" name="addEdges" specification="_oqglYLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouXKpbhLEe2uyMDTtZ4aHg" name="edges" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouXKprhLEe2uyMDTtZ4aHg" name="addEdge" specification="_on0dwbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouXKp7hLEe2uyMDTtZ4aHg" name="edge" type="_oPrqkLhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouXKqLhLEe2uyMDTtZ4aHg" name="increaseEdgePhases" specification="_oOYDALhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouXKqbhLEe2uyMDTtZ4aHg" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouXKqrhLEe2uyMDTtZ4aHg" name="updatePriorityAndRelease" specification="_oOYqELhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouXKq7hLEe2uyMDTtZ4aHg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouXKrLhLEe2uyMDTtZ4aHg" name="addConflict" specification="_oOZRILhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouXKrbhLEe2uyMDTtZ4aHg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouXxsLhLEe2uyMDTtZ4aHg" name="addConflicts" specification="_oqhzgLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouXxsbhLEe2uyMDTtZ4aHg" name="conflicts" type="_onyokbhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouXxsrhLEe2uyMDTtZ4aHg" name="addCoordinator" specification="_oOZ4MLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouXxs7hLEe2uyMDTtZ4aHg" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouXxtLhLEe2uyMDTtZ4aHg" name="addCoordinators" specification="_oqiakbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouXxtbhLEe2uyMDTtZ4aHg" name="coordinators" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouXxtrhLEe2uyMDTtZ4aHg" name="addScheduleTimes" specification="_oqjBobhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouXxt7hLEe2uyMDTtZ4aHg" name="scheduleTime" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouXxuLhLEe2uyMDTtZ4aHg" name="getNextScheduleTime" specification="_oObGULhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouXxubhLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouXxurhLEe2uyMDTtZ4aHg" type="_oSyo8LhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouYYwLhLEe2uyMDTtZ4aHg" name="getMatchingEndTime" specification="_oOcUcLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouYYwbhLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouYYwrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouY_0LhLEe2uyMDTtZ4aHg" name="getNextStartTime" specification="_oOc7gLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouY_0bhLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouY_0rhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouY_07hLEe2uyMDTtZ4aHg" name="getNextEndTime" specification="_oOeJoLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouY_1LhLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouY_1bhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouY_1rhLEe2uyMDTtZ4aHg" name="getNumEdges" specification="_oOewsbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouY_17hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouY_2LhLEe2uyMDTtZ4aHg" name="compareTo" specification="_on0dxLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouY_2bhLEe2uyMDTtZ4aHg" name="obj" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouY_2rhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouY_27hLEe2uyMDTtZ4aHg" name="conflictExists" specification="_on2S8LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouY_3LhLEe2uyMDTtZ4aHg" name="obj" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouY_3bhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouY_3rhLEe2uyMDTtZ4aHg" name="canCombine" specification="_on2S87hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouY_37hLEe2uyMDTtZ4aHg" name="a2" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouY_4LhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouZm4LhLEe2uyMDTtZ4aHg" name="getDelta" specification="_oOf-0LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouZm4bhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouZm4rhLEe2uyMDTtZ4aHg" name="getExecutionDuration" specification="_oOhM8LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouZm47hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouZm5LhLEe2uyMDTtZ4aHg" name="getCombinedExecutionDuration" specification="_on2S9rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouZm5bhLEe2uyMDTtZ4aHg" name="a2" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouZm5rhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouZm57hLEe2uyMDTtZ4aHg" name="printAll" specification="_oOh0AbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouZm6LhLEe2uyMDTtZ4aHg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouZm6bhLEe2uyMDTtZ4aHg" name="printAll" specification="_oOibELhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouZm6rhLEe2uyMDTtZ4aHg" name="printEdges" specification="_on26ALhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouZm67hLEe2uyMDTtZ4aHg" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouZm7LhLEe2uyMDTtZ4aHg" name="edges" type="_oSIhoLhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouaN8LhLEe2uyMDTtZ4aHg" name="printEdges" specification="_on4IILhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouaN8bhLEe2uyMDTtZ4aHg" name="edges" type="_oSIhoLhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oOJZgLhLEe2uyMDTtZ4aHg" name="Activation" visibility="package" method="_ouV8gLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oOKAkbhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oOKAkrhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oOKAkLhLEe2uyMDTtZ4aHg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oOKAk7hLEe2uyMDTtZ4aHg" type="_oOHkULhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oOKnoLhLEe2uyMDTtZ4aHg" name="clone" method="_ouWjlLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_onz2s7hLEe2uyMDTtZ4aHg" type="_oOHkULhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oOND4LhLEe2uyMDTtZ4aHg" name="getEdgesByReleaseTime" method="_ouWjlrhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovbhoLhLEe2uyMDTtZ4aHg">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_onz2tLhLEe2uyMDTtZ4aHg" type="_oSKW0bhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oOO5EbhLEe2uyMDTtZ4aHg" name="getEdgesByLatestReleaseTime" method="_ouWjmLhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovbhobhLEe2uyMDTtZ4aHg">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_onz2tbhLEe2uyMDTtZ4aHg" type="_oSKW0bhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oORVULhLEe2uyMDTtZ4aHg" name="getEdgesByPeriod" method="_ouWjmrhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovbhorhLEe2uyMDTtZ4aHg">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_onz2trhLEe2uyMDTtZ4aHg" type="_oSKW0bhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oOTKgLhLEe2uyMDTtZ4aHg" name="getEdgesByDeadline" method="_ouXKoLhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovbho7hLEe2uyMDTtZ4aHg">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_onz2t7hLEe2uyMDTtZ4aHg" type="_oSKW0bhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oOVmwLhLEe2uyMDTtZ4aHg" name="getEdgesByPriority" method="_ouXKorhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovbhpLhLEe2uyMDTtZ4aHg">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_on0dwLhLEe2uyMDTtZ4aHg" type="_oSKW0bhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oOYDALhLEe2uyMDTtZ4aHg" name="increaseEdgePhases" method="_ouXKqLhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovbhpbhLEe2uyMDTtZ4aHg">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_oOYDAbhLEe2uyMDTtZ4aHg" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oOYqELhLEe2uyMDTtZ4aHg" name="updatePriorityAndRelease" method="_ouXKqrhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovbhprhLEe2uyMDTtZ4aHg">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_oOYqEbhLEe2uyMDTtZ4aHg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oOZRILhLEe2uyMDTtZ4aHg" name="addConflict" method="_ouXKrLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oOZRIbhLEe2uyMDTtZ4aHg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oOZ4MLhLEe2uyMDTtZ4aHg" name="addCoordinator" method="_ouXxsrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oOZ4MbhLEe2uyMDTtZ4aHg" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oObGULhLEe2uyMDTtZ4aHg" name="getNextScheduleTime" method="_ouXxuLhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovbhqLhLEe2uyMDTtZ4aHg">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_oObGUbhLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_on0dw7hLEe2uyMDTtZ4aHg" type="_oSyo8LhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oOcUcLhLEe2uyMDTtZ4aHg" name="getMatchingEndTime" method="_ouYYwLhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovbhqbhLEe2uyMDTtZ4aHg">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_oOcUcbhLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oOcUcrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oOc7gLhLEe2uyMDTtZ4aHg" name="getNextStartTime" method="_ouY_0LhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovbhqrhLEe2uyMDTtZ4aHg">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_oOc7gbhLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oOdikLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oOeJoLhLEe2uyMDTtZ4aHg" name="getNextEndTime" method="_ouY_07hLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovbhq7hLEe2uyMDTtZ4aHg">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_oOeJobhLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oOewsLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oOewsbhLEe2uyMDTtZ4aHg" name="getNumEdges" method="_ouY_1rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oOfXwLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oOf-0LhLEe2uyMDTtZ4aHg" name="getDelta" method="_ouZm4LhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovbhrLhLEe2uyMDTtZ4aHg">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_oOgl4LhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oOhM8LhLEe2uyMDTtZ4aHg" name="getExecutionDuration" method="_ouZm4rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oOh0ALhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oOh0AbhLEe2uyMDTtZ4aHg" name="printAll" method="_ouZm57hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oOh0ArhLEe2uyMDTtZ4aHg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oOibELhLEe2uyMDTtZ4aHg" name="printAll" method="_ouZm6bhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_onzPoLhLEe2uyMDTtZ4aHg" name="Activation" visibility="package" method="_ouWjkLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_onz2sLhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_onz2sbhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_onzPobhLEe2uyMDTtZ4aHg" name="elem" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_onzPorhLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_onz2srhLEe2uyMDTtZ4aHg" type="_oOHkULhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_on0dwbhLEe2uyMDTtZ4aHg" name="addEdge" method="_ouXKprhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_on0dwrhLEe2uyMDTtZ4aHg" name="edge" type="_oPrqkLhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_on0dxLhLEe2uyMDTtZ4aHg" name="compareTo" method="_ouY_2LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_on1E0LhLEe2uyMDTtZ4aHg" name="obj" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_on1E0bhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_on2S8LhLEe2uyMDTtZ4aHg" name="conflictExists" method="_ouY_27hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_on2S8bhLEe2uyMDTtZ4aHg" name="obj" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_on2S8rhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_on2S87hLEe2uyMDTtZ4aHg" name="canCombine" method="_ouY_3rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_on2S9LhLEe2uyMDTtZ4aHg" name="a2" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_on2S9bhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_on2S9rhLEe2uyMDTtZ4aHg" name="getCombinedExecutionDuration" method="_ouZm5LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_on2S97hLEe2uyMDTtZ4aHg" name="a2" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_on2S-LhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_on26ALhLEe2uyMDTtZ4aHg" name="printEdges" visibility="private" method="_ouZm6rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_on26AbhLEe2uyMDTtZ4aHg" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_on26ArhLEe2uyMDTtZ4aHg" name="edges" type="_oSIhoLhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_on4IILhLEe2uyMDTtZ4aHg" name="printEdges" visibility="private" method="_ouaN8LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_on4IIbhLEe2uyMDTtZ4aHg" name="edges" type="_oSIhoLhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oqglYLhLEe2uyMDTtZ4aHg" name="addEdges" method="_ouXKpLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oqglYbhLEe2uyMDTtZ4aHg" name="edges" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oqhzgLhLEe2uyMDTtZ4aHg" name="addConflicts" method="_ouXxsLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oqhzgbhLEe2uyMDTtZ4aHg" name="conflicts" type="_onyokbhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oqiakbhLEe2uyMDTtZ4aHg" name="addCoordinators" method="_ouXxtLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oqiakrhLEe2uyMDTtZ4aHg" name="coordinators" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oqjBobhLEe2uyMDTtZ4aHg" name="addScheduleTimes" method="_ouXxtrhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovbhp7hLEe2uyMDTtZ4aHg">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_oqjBorhLEe2uyMDTtZ4aHg" name="scheduleTime" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oOtaMLhLEe2uyMDTtZ4aHg" name="Activations">
              <generalization xmi:id="_on6kYLhLEe2uyMDTtZ4aHg" general="_oNocILhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_osPDsLhLEe2uyMDTtZ4aHg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_osPDsbhLEe2uyMDTtZ4aHg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oOvPYLhLEe2uyMDTtZ4aHg" name="BasicPoset">
              <ownedComment xmi:id="_ovbhrbhLEe2uyMDTtZ4aHg">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_on7LdbhLEe2uyMDTtZ4aHg" general="_oRGm4LhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouaN8rhLEe2uyMDTtZ4aHg" name="BasicPoset" specification="_on7LcLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouaN87hLEe2uyMDTtZ4aHg" name="workload" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouaN9LhLEe2uyMDTtZ4aHg" type="_oOvPYLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_on7LcLhLEe2uyMDTtZ4aHg" name="BasicPoset" visibility="package" method="_ouaN8rhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_on7LcrhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_on7Lc7hLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_on7LcbhLEe2uyMDTtZ4aHg" name="workload" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_on7LdLhLEe2uyMDTtZ4aHg" type="_oOvPYLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oOxEkLhLEe2uyMDTtZ4aHg" name="ChannelAnalysis">
              <ownedComment xmi:id="_ovbhrrhLEe2uyMDTtZ4aHg">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_osPqwLhLEe2uyMDTtZ4aHg" name="program" visibility="private" type="_oReaULhLEe2uyMDTtZ4aHg" association="_owG3EbhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_osQR0LhLEe2uyMDTtZ4aHg" name="programTable" visibility="private" type="_oR54ILhLEe2uyMDTtZ4aHg" association="_owIFMLhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_osQR0rhLEe2uyMDTtZ4aHg" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oua1ALhLEe2uyMDTtZ4aHg" name="ChannelAnalysis" specification="_on7ygLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oua1AbhLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oua1ArhLEe2uyMDTtZ4aHg" type="_oOxEkLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>this.program = warp.toProgram();&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oua1A7hLEe2uyMDTtZ4aHg" name="ChannelAnalysis" specification="_on8ZkbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oua1BLhLEe2uyMDTtZ4aHg" name="program" type="_oReaULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oua1BbhLEe2uyMDTtZ4aHg" type="_oOxEkLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oubcELhLEe2uyMDTtZ4aHg" name="isChannelConflict" specification="_oOySsLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oubcEbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oOySsLhLEe2uyMDTtZ4aHg" name="isChannelConflict" method="_oubcELhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oOySsbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_on7ygLhLEe2uyMDTtZ4aHg" name="ChannelAnalysis" visibility="package" method="_oua1ALhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_on7ygrhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_on7yg7hLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_on7ygbhLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_on8ZkLhLEe2uyMDTtZ4aHg" type="_oOxEkLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_on8ZkbhLEe2uyMDTtZ4aHg" name="ChannelAnalysis" visibility="package" method="_oua1A7hLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_on8Zk7hLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_on8ZlLhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_on8ZkrhLEe2uyMDTtZ4aHg" name="program" type="_oReaULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_on8ZlbhLEe2uyMDTtZ4aHg" type="_oOxEkLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oO0H4LhLEe2uyMDTtZ4aHg" name="ChannelVisualization">
              <ownedComment xmi:id="_ovbhr7hLEe2uyMDTtZ4aHg">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_on9ApbhLEe2uyMDTtZ4aHg" general="_oTRKELhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_osQ44bhLEe2uyMDTtZ4aHg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_osQ44rhLEe2uyMDTtZ4aHg" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osRf8LhLEe2uyMDTtZ4aHg" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_osRf8bhLEe2uyMDTtZ4aHg" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osRf8rhLEe2uyMDTtZ4aHg" name="warp" visibility="private" type="_oTo9gLhLEe2uyMDTtZ4aHg" association="_owIsQLhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_osSHAbhLEe2uyMDTtZ4aHg" name="ca" visibility="private" type="_oOxEkLhLEe2uyMDTtZ4aHg" association="_owIsQ7hLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oubcErhLEe2uyMDTtZ4aHg" name="ChannelVisualization" specification="_on9AoLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oubcE7hLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oubcFLhLEe2uyMDTtZ4aHg" type="_oO0H4LhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_on9AoLhLEe2uyMDTtZ4aHg" name="ChannelVisualization" visibility="package" method="_oubcErhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_on9AorhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_on9Ao7hLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_on9AobhLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_on9ApLhLEe2uyMDTtZ4aHg" type="_oO0H4LhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oO2kILhLEe2uyMDTtZ4aHg" name="Channels">
              <ownedComment xmi:id="_ovbhsLhLEe2uyMDTtZ4aHg">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_osSuErhLEe2uyMDTtZ4aHg" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osTVIbhLEe2uyMDTtZ4aHg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osT8MLhLEe2uyMDTtZ4aHg" name="channelsAvailable" visibility="package" type="_onvlQLhLEe2uyMDTtZ4aHg" association="_owJTUbhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oucDILhLEe2uyMDTtZ4aHg" name="Channels" specification="_oO7coLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oucDIbhLEe2uyMDTtZ4aHg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oucDIrhLEe2uyMDTtZ4aHg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oucDI7hLEe2uyMDTtZ4aHg" type="_oO2kILhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oucDJLhLEe2uyMDTtZ4aHg" name="getChannelSet" specification="_oO8qwLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oucDJbhLEe2uyMDTtZ4aHg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oucDJrhLEe2uyMDTtZ4aHg" type="_onwzYbhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>/* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oucDJ7hLEe2uyMDTtZ4aHg" name="addNewChannelSet" specification="_oO-f8LhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oucDKLhLEe2uyMDTtZ4aHg" name="isEmpty" specification="_oO_HALhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oucDKbhLEe2uyMDTtZ4aHg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oucDKrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oucDK7hLEe2uyMDTtZ4aHg" name="removeChannel" specification="_oPAVILhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oucDLLhLEe2uyMDTtZ4aHg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oucDLbhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oucDLrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oucqMLhLEe2uyMDTtZ4aHg" name="addChannel" specification="_oPA8MLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oucqMbhLEe2uyMDTtZ4aHg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oucqMrhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oucqM7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oucqNLhLEe2uyMDTtZ4aHg" name="getNumChannels" specification="_oPBjQbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oucqNbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oO7coLhLEe2uyMDTtZ4aHg" name="Channels" visibility="package" method="_oucDILhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oO8DsLhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oO8DsbhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oO7cobhLEe2uyMDTtZ4aHg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oO7corhLEe2uyMDTtZ4aHg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oO8DsrhLEe2uyMDTtZ4aHg" type="_oO2kILhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oO8qwLhLEe2uyMDTtZ4aHg" name="getChannelSet" method="_oucDJLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oO8qwbhLEe2uyMDTtZ4aHg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oqld4bhLEe2uyMDTtZ4aHg" type="_onwzYbhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oO-f8LhLEe2uyMDTtZ4aHg" name="addNewChannelSet" method="_oucDJ7hLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oO_HALhLEe2uyMDTtZ4aHg" name="isEmpty" method="_oucDKLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oO_uELhLEe2uyMDTtZ4aHg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oO_uEbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oPAVILhLEe2uyMDTtZ4aHg" name="removeChannel" method="_oucDK7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oPAVIbhLEe2uyMDTtZ4aHg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPAVIrhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPAVI7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oPA8MLhLEe2uyMDTtZ4aHg" name="addChannel" method="_oucqMLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oPA8MbhLEe2uyMDTtZ4aHg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPA8MrhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPBjQLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oPBjQbhLEe2uyMDTtZ4aHg" name="getNumChannels" method="_oucqNLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oPBjQrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_oO3yQLhLEe2uyMDTtZ4aHg" name="ChannelSet" visibility="private">
                <generalization xmi:id="_oqk20LhLEe2uyMDTtZ4aHg" general="_onwzYbhLEe2uyMDTtZ4aHg"/>
                <ownedAttribute xmi:id="_osSuELhLEe2uyMDTtZ4aHg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_osSuEbhLEe2uyMDTtZ4aHg" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oubcFbhLEe2uyMDTtZ4aHg" name="ChannelSet" specification="_oO4ZULhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_oubcFrhLEe2uyMDTtZ4aHg" type="_oO3yQLhLEe2uyMDTtZ4aHg" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oubcF7hLEe2uyMDTtZ4aHg" name="ChannelSet" specification="_oO5ncLhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_oubcGLhLEe2uyMDTtZ4aHg" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_oubcGbhLEe2uyMDTtZ4aHg" type="_oO3yQLhLEe2uyMDTtZ4aHg" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oO4ZULhLEe2uyMDTtZ4aHg" name="ChannelSet" visibility="private" method="_oubcFbhLEe2uyMDTtZ4aHg">
                  <eAnnotations xmi:id="_oO5AYLhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_oO5AYbhLEe2uyMDTtZ4aHg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_oO5AYrhLEe2uyMDTtZ4aHg" type="_oO3yQLhLEe2uyMDTtZ4aHg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oO5ncLhLEe2uyMDTtZ4aHg" name="ChannelSet" visibility="private" method="_oubcF7hLEe2uyMDTtZ4aHg">
                  <eAnnotations xmi:id="_oO5ncrhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_oO5nc7hLEe2uyMDTtZ4aHg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_oO5ncbhLEe2uyMDTtZ4aHg" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_oO5ndLhLEe2uyMDTtZ4aHg" type="_oO3yQLhLEe2uyMDTtZ4aHg" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oPD_gLhLEe2uyMDTtZ4aHg" name="CodeFragment">
              <ownedAttribute xmi:id="_osVKULhLEe2uyMDTtZ4aHg" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_osVKUbhLEe2uyMDTtZ4aHg" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osVKUrhLEe2uyMDTtZ4aHg" name="edges" visibility="package" type="_onvlQLhLEe2uyMDTtZ4aHg" association="_owJ6YbhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_osVxYbhLEe2uyMDTtZ4aHg" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osWYcbhLEe2uyMDTtZ4aHg" name="codeFragment" visibility="package" type="_onvlQLhLEe2uyMDTtZ4aHg" association="_owKhcbhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_osXmkLhLEe2uyMDTtZ4aHg" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osXmkrhLEe2uyMDTtZ4aHg" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oucqNrhLEe2uyMDTtZ4aHg" name="CodeFragment" specification="_oPF0sLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oucqN7hLEe2uyMDTtZ4aHg" type="_oPD_gLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oucqOLhLEe2uyMDTtZ4aHg" name="CodeFragment" specification="_oqmsALhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oucqObhLEe2uyMDTtZ4aHg" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oucqOrhLEe2uyMDTtZ4aHg" name="edges" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oucqO7hLEe2uyMDTtZ4aHg" name="coordinators" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oucqPLhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oucqPbhLEe2uyMDTtZ4aHg" type="_oPD_gLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oudRQLhLEe2uyMDTtZ4aHg" name="getCoordinator" specification="_oPHC0LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oudRQbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oudRQrhLEe2uyMDTtZ4aHg" name="instructions" specification="_oPHC0rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oudRQ7hLEe2uyMDTtZ4aHg" type="_onvlQLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oudRRLhLEe2uyMDTtZ4aHg" name="size" specification="_oPI4ALhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oudRRbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oudRRrhLEe2uyMDTtZ4aHg" name="generateCodeFragment" specification="_oPI4ArhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oudRR7hLEe2uyMDTtZ4aHg" name="getBaseInstruction" specification="_oPJfELhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oudRSLhLEe2uyMDTtZ4aHg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oudRSbhLEe2uyMDTtZ4aHg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oudRSrhLEe2uyMDTtZ4aHg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oudRS7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oudRTLhLEe2uyMDTtZ4aHg" name="push" specification="_oPKtMLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oud4ULhLEe2uyMDTtZ4aHg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oud4UbhLEe2uyMDTtZ4aHg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oud4UrhLEe2uyMDTtZ4aHg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oud4U7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oud4VLhLEe2uyMDTtZ4aHg" name="pull" specification="_oPMiYLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oud4VbhLEe2uyMDTtZ4aHg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oud4VrhLEe2uyMDTtZ4aHg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oud4V7hLEe2uyMDTtZ4aHg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oud4WLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oud4WbhLEe2uyMDTtZ4aHg" name="ifHas" specification="_oPNJcrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oud4WrhLEe2uyMDTtZ4aHg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oud4W7hLEe2uyMDTtZ4aHg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oud4XLhLEe2uyMDTtZ4aHg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oud4XbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oud4XrhLEe2uyMDTtZ4aHg" name="ifNotHas" specification="_oPOXkLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oud4X7hLEe2uyMDTtZ4aHg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oud4YLhLEe2uyMDTtZ4aHg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oud4YbhLEe2uyMDTtZ4aHg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oud4YrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oud4Y7hLEe2uyMDTtZ4aHg" name="wait" specification="_oPPlsLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oud4ZLhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oud4ZbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouefYLhLEe2uyMDTtZ4aHg" name="sleep" specification="_oPPls7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouefYbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oufGcLhLEe2uyMDTtZ4aHg" name="reportIfDifferentCoordinators" specification="_oqn6IrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oufGcbhLEe2uyMDTtZ4aHg" name="coordinators" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oufGcrhLEe2uyMDTtZ4aHg" name="multipleCoordinators" specification="_oqpIQLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oufGc7hLEe2uyMDTtZ4aHg" name="coordinators" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oufGdLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oPF0sLhLEe2uyMDTtZ4aHg" name="CodeFragment" visibility="package" method="_oucqNrhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oPF0sbhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oPF0srhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ovbhsbhLEe2uyMDTtZ4aHg">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_oPF0s7hLEe2uyMDTtZ4aHg" type="_oPD_gLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oPHC0LhLEe2uyMDTtZ4aHg" name="getCoordinator" method="_oudRQLhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovcIsbhLEe2uyMDTtZ4aHg">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_oPHC0bhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oPHC0rhLEe2uyMDTtZ4aHg" name="instructions" method="_oudRQrhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovcIsrhLEe2uyMDTtZ4aHg">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_oqn6IbhLEe2uyMDTtZ4aHg" type="_onvlQLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oPI4ALhLEe2uyMDTtZ4aHg" name="size" method="_oudRRLhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovcIs7hLEe2uyMDTtZ4aHg">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_oPI4AbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oPI4ArhLEe2uyMDTtZ4aHg" name="generateCodeFragment" visibility="private" method="_oudRRrhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oPJfELhLEe2uyMDTtZ4aHg" name="getBaseInstruction" visibility="private" method="_oudRR7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oPKGILhLEe2uyMDTtZ4aHg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPKGIbhLEe2uyMDTtZ4aHg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPKGIrhLEe2uyMDTtZ4aHg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPKGI7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oPKtMLhLEe2uyMDTtZ4aHg" name="push" visibility="private" method="_oudRTLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oPKtMbhLEe2uyMDTtZ4aHg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPLUQLhLEe2uyMDTtZ4aHg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPLUQbhLEe2uyMDTtZ4aHg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPL7ULhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oPMiYLhLEe2uyMDTtZ4aHg" name="pull" visibility="private" method="_oud4VLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oPMiYbhLEe2uyMDTtZ4aHg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPMiYrhLEe2uyMDTtZ4aHg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPNJcLhLEe2uyMDTtZ4aHg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPNJcbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oPNJcrhLEe2uyMDTtZ4aHg" name="ifHas" visibility="private" method="_oud4WbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oPNJc7hLEe2uyMDTtZ4aHg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPNwgLhLEe2uyMDTtZ4aHg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPNwgbhLEe2uyMDTtZ4aHg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPNwgrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oPOXkLhLEe2uyMDTtZ4aHg" name="ifNotHas" visibility="private" method="_oud4XrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oPOXkbhLEe2uyMDTtZ4aHg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPO-oLhLEe2uyMDTtZ4aHg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPO-obhLEe2uyMDTtZ4aHg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPO-orhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oPPlsLhLEe2uyMDTtZ4aHg" name="wait" method="_oud4Y7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oPPlsbhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPPlsrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oPPls7hLEe2uyMDTtZ4aHg" name="sleep" isStatic="true" method="_ouefYLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oPQMwLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oqmsALhLEe2uyMDTtZ4aHg" name="CodeFragment" visibility="package" method="_oucqOLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oqmsBbhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oqmsBrhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ovcIsLhLEe2uyMDTtZ4aHg">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_oqmsAbhLEe2uyMDTtZ4aHg" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oqmsArhLEe2uyMDTtZ4aHg" name="edges" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oqmsA7hLEe2uyMDTtZ4aHg" name="coordinators" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oqmsBLhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oqmsB7hLEe2uyMDTtZ4aHg" type="_oPD_gLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oqn6IrhLEe2uyMDTtZ4aHg" name="reportIfDifferentCoordinators" visibility="private" method="_oufGcLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oqohMLhLEe2uyMDTtZ4aHg" name="coordinators" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oqpIQLhLEe2uyMDTtZ4aHg" name="multipleCoordinators" visibility="private" method="_oufGcrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oqpIQbhLEe2uyMDTtZ4aHg" name="coordinators" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oqpIQrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oPUeMLhLEe2uyMDTtZ4aHg" name="CombinedActivation">
              <generalization xmi:id="_ooCgNLhLEe2uyMDTtZ4aHg" general="_oOHkULhLEe2uyMDTtZ4aHg"/>
              <interfaceRealization xmi:id="_oqpvULhLEe2uyMDTtZ4aHg" client="_oPUeMLhLEe2uyMDTtZ4aHg" supplier="_oqewMbhLEe2uyMDTtZ4aHg" contract="_oqewMbhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oufGdbhLEe2uyMDTtZ4aHg" name="CombinedActivation" specification="_oPVFQLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oufGdrhLEe2uyMDTtZ4aHg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oufGd7hLEe2uyMDTtZ4aHg" type="_oPUeMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oufGeLhLEe2uyMDTtZ4aHg" name="CombinedActivation" specification="_ooArALhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oufGebhLEe2uyMDTtZ4aHg" name="elem" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oufGerhLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oufGe7hLEe2uyMDTtZ4aHg" type="_oPUeMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oufGfLhLEe2uyMDTtZ4aHg" name="CombinedActivation" specification="_ooB5ILhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oufGfbhLEe2uyMDTtZ4aHg" name="priorEntry" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oufGfrhLEe2uyMDTtZ4aHg" name="next" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oufGf7hLEe2uyMDTtZ4aHg" type="_oPUeMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouftgLhLEe2uyMDTtZ4aHg" name="canCombine" specification="_ooB5JrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouftgbhLEe2uyMDTtZ4aHg" name="a2" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouftgrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oPVFQLhLEe2uyMDTtZ4aHg" name="CombinedActivation" visibility="package" method="_oufGdbhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oPVsULhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oPVsUbhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oPVFQbhLEe2uyMDTtZ4aHg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPVsUrhLEe2uyMDTtZ4aHg" type="_oPUeMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ooArALhLEe2uyMDTtZ4aHg" name="CombinedActivation" visibility="package" method="_oufGeLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_ooBSErhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ooBSE7hLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ooBSELhLEe2uyMDTtZ4aHg" name="elem" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ooBSEbhLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ooBSFLhLEe2uyMDTtZ4aHg" type="_oPUeMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ooB5ILhLEe2uyMDTtZ4aHg" name="CombinedActivation" visibility="package" method="_oufGfLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_ooB5I7hLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ooB5JLhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ooB5IbhLEe2uyMDTtZ4aHg" name="priorEntry" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ooB5IrhLEe2uyMDTtZ4aHg" name="next" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ooB5JbhLEe2uyMDTtZ4aHg" type="_oPUeMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ooB5JrhLEe2uyMDTtZ4aHg" name="canCombine" method="_ouftgLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ooB5J7hLEe2uyMDTtZ4aHg" name="a2" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ooCgMLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oPYvoLhLEe2uyMDTtZ4aHg" name="CommunicationGraph">
              <ownedComment xmi:id="_ovcItLhLEe2uyMDTtZ4aHg">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ooEVarhLEe2uyMDTtZ4aHg" general="_oTRKELhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_osZbwLhLEe2uyMDTtZ4aHg" name="wfm" visibility="package" type="_oP330LhLEe2uyMDTtZ4aHg" association="_owLIgLhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_osaC0bhLEe2uyMDTtZ4aHg" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osap4bhLEe2uyMDTtZ4aHg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osbQ8bhLEe2uyMDTtZ4aHg" name="workLoad" visibility="package" type="_oUEbULhLEe2uyMDTtZ4aHg" association="_owLvkLhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouftg7hLEe2uyMDTtZ4aHg" name="CommunicationGraph" specification="_ooDHQLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oufthLhLEe2uyMDTtZ4aHg" name="fm" type="_oP330LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oufthbhLEe2uyMDTtZ4aHg" name="workLoad" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oufthrhLEe2uyMDTtZ4aHg" type="_oPYvoLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oufth7hLEe2uyMDTtZ4aHg" name="CommunicationGraph" specification="_ooEVYLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouftiLhLEe2uyMDTtZ4aHg" name="fm" type="_oP330LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouftibhLEe2uyMDTtZ4aHg" name="workLoad" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouftirhLEe2uyMDTtZ4aHg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oufti7hLEe2uyMDTtZ4aHg" type="_oPYvoLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouftjLhLEe2uyMDTtZ4aHg" name="createHeader" specification="_oPbL4LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouftjbhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouftjrhLEe2uyMDTtZ4aHg" name="createFooter" specification="_oPdBELhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouftj7hLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ougUkLhLEe2uyMDTtZ4aHg" name="visualization" specification="_oPePMrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ougUkbhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ougUkrhLEe2uyMDTtZ4aHg" name="createWarpFileContent" specification="_oPfdUrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ougUk7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oPbL4LhLEe2uyMDTtZ4aHg" name="createHeader" method="_ouftjLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ooEVZ7hLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oPdBELhLEe2uyMDTtZ4aHg" name="createFooter" method="_ouftjrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ooEVaLhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oPePMrhLEe2uyMDTtZ4aHg" name="visualization" method="_ougUkLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ooEVabhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oPfdUrhLEe2uyMDTtZ4aHg" name="createWarpFileContent" method="_ougUkrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oPgEYLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ooDHQLhLEe2uyMDTtZ4aHg" name="CommunicationGraph" method="_ouftg7hLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_ooDuULhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ooDuUbhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ooDHQbhLEe2uyMDTtZ4aHg" name="fm" type="_oP330LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ooDHQrhLEe2uyMDTtZ4aHg" name="workLoad" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ooDuUrhLEe2uyMDTtZ4aHg" type="_oPYvoLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ooEVYLhLEe2uyMDTtZ4aHg" name="CommunicationGraph" method="_oufth7hLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_ooEVZLhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ooEVZbhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ooEVYbhLEe2uyMDTtZ4aHg" name="fm" type="_oP330LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ooEVYrhLEe2uyMDTtZ4aHg" name="workLoad" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ooEVY7hLEe2uyMDTtZ4aHg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ooEVZrhLEe2uyMDTtZ4aHg" type="_oPYvoLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oPjHsLhLEe2uyMDTtZ4aHg" name="ConnectivityPoset">
              <ownedComment xmi:id="_ovcItbhLEe2uyMDTtZ4aHg">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_ooE8dbhLEe2uyMDTtZ4aHg" general="_oRGm4LhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ougUlLhLEe2uyMDTtZ4aHg" name="ConnectivityPoset" specification="_ooE8cLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ougUlbhLEe2uyMDTtZ4aHg" name="workload" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ougUlrhLEe2uyMDTtZ4aHg" type="_oPjHsLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ougUl7hLEe2uyMDTtZ4aHg" name="findCoordinator" specification="_oqq9cLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ougUmLhLEe2uyMDTtZ4aHg" name="nodesInFlow" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ougUmbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ooE8cLhLEe2uyMDTtZ4aHg" name="ConnectivityPoset" visibility="package" method="_ougUlLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_ooE8crhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ooE8c7hLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ooE8cbhLEe2uyMDTtZ4aHg" name="workload" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ooE8dLhLEe2uyMDTtZ4aHg" type="_oPjHsLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oqq9cLhLEe2uyMDTtZ4aHg" name="findCoordinator" visibility="protected" method="_ougUl7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oqq9cbhLEe2uyMDTtZ4aHg" name="nodesInFlow" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oqq9crhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oPk84LhLEe2uyMDTtZ4aHg" name="DeadlineComparator">
              <interfaceRealization xmi:id="_oqsLkrhLEe2uyMDTtZ4aHg" client="_oPk84LhLEe2uyMDTtZ4aHg" supplier="_ooFjgLhLEe2uyMDTtZ4aHg" contract="_ooFjgLhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ougUmrhLEe2uyMDTtZ4aHg" name="compare" specification="_oqtZsbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ougUm7hLEe2uyMDTtZ4aHg" name="obj1" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ougUnLhLEe2uyMDTtZ4aHg" name="obj2" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ougUnbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oqtZsbhLEe2uyMDTtZ4aHg" name="compare" method="_ougUmrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oqtZsrhLEe2uyMDTtZ4aHg" name="obj1" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oquAwLhLEe2uyMDTtZ4aHg" name="obj2" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oquAwbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oPoAMLhLEe2uyMDTtZ4aHg" name="Description">
              <ownedComment xmi:id="_ovcItrhLEe2uyMDTtZ4aHg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_oqun0LhLEe2uyMDTtZ4aHg" general="_onvlQLhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_osb4ALhLEe2uyMDTtZ4aHg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oscfELhLEe2uyMDTtZ4aHg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oug7oLhLEe2uyMDTtZ4aHg" name="Description" specification="_oPonQLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouhisLhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouiJwLhLEe2uyMDTtZ4aHg" name="Description" specification="_oPpOUbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouiJwbhLEe2uyMDTtZ4aHg" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouiJwrhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouiJw7hLEe2uyMDTtZ4aHg" name="toString" specification="_oPp1Y7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouiJxLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oPonQLhLEe2uyMDTtZ4aHg" name="Description" method="_oug7oLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oPonQbhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oPonQrhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oPpOULhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oPpOUbhLEe2uyMDTtZ4aHg" name="Description" method="_ouiJwLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oPp1YLhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oPp1YbhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oPpOUrhLEe2uyMDTtZ4aHg" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPp1YrhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oPp1Y7hLEe2uyMDTtZ4aHg" name="toString" method="_ouiJw7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oPp1ZLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oPrqkLhLEe2uyMDTtZ4aHg" name="Edge">
              <generalization xmi:id="_ooH_wbhLEe2uyMDTtZ4aHg" general="_oVWNsLhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_oscfEbhLEe2uyMDTtZ4aHg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_osdGILhLEe2uyMDTtZ4aHg" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osdGIbhLEe2uyMDTtZ4aHg" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osdGIrhLEe2uyMDTtZ4aHg" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osdtMLhLEe2uyMDTtZ4aHg" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osdtMbhLEe2uyMDTtZ4aHg" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osdtMrhLEe2uyMDTtZ4aHg" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oseUQLhLEe2uyMDTtZ4aHg" name="state" type="_oPtfwLhLEe2uyMDTtZ4aHg" association="_ovcvwLhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_oseUQbhLEe2uyMDTtZ4aHg" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_oqvO4LhLEe2uyMDTtZ4aHg" client="_oPrqkLhLEe2uyMDTtZ4aHg" supplier="_oqewMbhLEe2uyMDTtZ4aHg" contract="_oqewMbhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouiJxbhLEe2uyMDTtZ4aHg" name="Edge" specification="_oPut4bhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouiJxrhLEe2uyMDTtZ4aHg" type="_oPrqkLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouiw0LhLEe2uyMDTtZ4aHg" name="Edge" specification="_oPvU8LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouiw0bhLEe2uyMDTtZ4aHg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouiw0rhLEe2uyMDTtZ4aHg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouiw07hLEe2uyMDTtZ4aHg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouiw1LhLEe2uyMDTtZ4aHg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouiw1bhLEe2uyMDTtZ4aHg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouiw1rhLEe2uyMDTtZ4aHg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouiw17hLEe2uyMDTtZ4aHg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouiw2LhLEe2uyMDTtZ4aHg" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouiw2bhLEe2uyMDTtZ4aHg" type="_oPrqkLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouiw2rhLEe2uyMDTtZ4aHg" name="compareTo" specification="_ooHYsLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouiw27hLEe2uyMDTtZ4aHg" name="edge" type="_oPrqkLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouiw3LhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouiw3bhLEe2uyMDTtZ4aHg" name="toString" specification="_oPxKILhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouiw3rhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oujX4LhLEe2uyMDTtZ4aHg" name="print" specification="_oPyYQrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oujX4bhLEe2uyMDTtZ4aHg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oujX4rhLEe2uyMDTtZ4aHg" name="print" specification="_oPzmY7hLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oPut4bhLEe2uyMDTtZ4aHg" name="Edge" visibility="package" method="_ouiJxbhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oPut4rhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oPut47hLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oPut5LhLEe2uyMDTtZ4aHg" type="_oPrqkLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oPvU8LhLEe2uyMDTtZ4aHg" name="Edge" visibility="package" method="_ouiw0LhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oPv8BbhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oPv8BrhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oPvU8bhLEe2uyMDTtZ4aHg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPvU8rhLEe2uyMDTtZ4aHg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPvU87hLEe2uyMDTtZ4aHg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPv8ALhLEe2uyMDTtZ4aHg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPv8AbhLEe2uyMDTtZ4aHg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPv8ArhLEe2uyMDTtZ4aHg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPv8A7hLEe2uyMDTtZ4aHg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPv8BLhLEe2uyMDTtZ4aHg" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oPv8B7hLEe2uyMDTtZ4aHg" type="_oPrqkLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oPxKILhLEe2uyMDTtZ4aHg" name="toString" method="_ouiw3bhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oPxKIbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oPyYQrhLEe2uyMDTtZ4aHg" name="print" method="_oujX4LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oPy_ULhLEe2uyMDTtZ4aHg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oPzmY7hLEe2uyMDTtZ4aHg" name="print" method="_oujX4rhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_ooHYsLhLEe2uyMDTtZ4aHg" name="compareTo" method="_ouiw2rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ooHYsbhLEe2uyMDTtZ4aHg" name="edge" type="_oPrqkLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ooHYsrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_oPtfwLhLEe2uyMDTtZ4aHg" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_oPuG0bhLEe2uyMDTtZ4aHg" name="RELEASED"/>
                <ownedLiteral xmi:id="_oPuG0rhLEe2uyMDTtZ4aHg" name="EXECUTING"/>
                <ownedLiteral xmi:id="_oPut4LhLEe2uyMDTtZ4aHg" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oP330LhLEe2uyMDTtZ4aHg" name="FileManager">
              <ownedComment xmi:id="_ovdW0bhLEe2uyMDTtZ4aHg">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_osgJcLhLEe2uyMDTtZ4aHg" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osgJcbhLEe2uyMDTtZ4aHg" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oujX47hLEe2uyMDTtZ4aHg" name="FileManager" specification="_oP5F8LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oujX5LhLEe2uyMDTtZ4aHg" type="_oP330LhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 verbose = false; // initialize verbose to false&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oujX5bhLEe2uyMDTtZ4aHg" name="FileManager" specification="_oP5tAbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oujX5rhLEe2uyMDTtZ4aHg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oujX57hLEe2uyMDTtZ4aHg" type="_oP330LhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouj-8LhLEe2uyMDTtZ4aHg" name="getDocumentsDirectory" specification="_oP6UErhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouj-8bhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
 String documentsDirectory;&#xD;
 if (OSValidator.isWindows()) {&#xD;
   documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
 } else if (OSValidator.isMac()) {&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;) + File.separator + &quot;Documents&quot;;&#xD;
 } else { // for all other Unix systems&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not&#xD;
                                                         // MACOS)&#xD;
 }&#xD;
 return documentsDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouj-8rhLEe2uyMDTtZ4aHg" name="getCurrentDirectory" specification="_oP67ILhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouj-87hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouj-9LhLEe2uyMDTtZ4aHg" name="createFile" specification="_oP7iMLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouj-9bhLEe2uyMDTtZ4aHg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouj-9rhLEe2uyMDTtZ4aHg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouj-97hLEe2uyMDTtZ4aHg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouj--LhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * we don't actually create the file...it will be created when written to this routine really&#xD;
  * just creates the file name ;-)&#xD;
  */&#xD;
 Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex); // get the file string sans the suffix&#xD;
 }&#xD;
 /*&#xD;
  * fileString has no suffix at this point (removed if it existed) Now add file name extension&#xD;
  * and suffix&#xD;
  */&#xD;
 fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oukmALhLEe2uyMDTtZ4aHg" name="createFile" specification="_oP8JQLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oukmAbhLEe2uyMDTtZ4aHg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oukmArhLEe2uyMDTtZ4aHg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oukmA7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex - 1); // get the file string sans the suffix&#xD;
 }&#xD;
 // fileString has no suffix at this point (removed if it existed)&#xD;
 // Now add file name extension and suffix&#xD;
 fileString = fileString + suffix;&#xD;
 // we don't actually create the file...it will be created when written to&#xD;
 // this routine really just creates the file name ;-)&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oukmBLhLEe2uyMDTtZ4aHg" name="createDirectory" specification="_oP9XYLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oukmBbhLEe2uyMDTtZ4aHg" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oukmBrhLEe2uyMDTtZ4aHg" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oukmB7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory;&#xD;
 if (subDirectory.startsWith(&quot;/&quot;)) { // check if full path provided&#xD;
   newDirectory = subDirectory; // if subDirectory is a full path, use it.&#xD;
 } else { // subDirectory has relative path, so just append&#xD;
   newDirectory = directory + File.separator + subDirectory;&#xD;
 }&#xD;
 try {&#xD;
   Path path = Paths.get(newDirectory);&#xD;
   Files.createDirectories(path);&#xD;
   if (verbose) {&#xD;
     System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
   }&#xD;
 } catch (IOException e) {&#xD;
   System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
   newDirectory = directory; // in case of error, just use the initial directory&#xD;
 }&#xD;
 return newDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oukmCLhLEe2uyMDTtZ4aHg" name="writeFile" specification="_oP9-cLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oukmCbhLEe2uyMDTtZ4aHg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oukmCrhLEe2uyMDTtZ4aHg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Authentication tag = new Authentication(COURSE_TAG);&#xD;
 Path fileName = Path.of(file);&#xD;
 try {&#xD;
   // Files.writeString(fileName, tag.sign(fileContents)); // uncomment to tag course file&#xD;
   Files.writeString(fileName, fileContents); // comment out if tag is being used (line above)&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oulNELhLEe2uyMDTtZ4aHg" name="readFile" specification="_oP-lgLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oulNEbhLEe2uyMDTtZ4aHg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oulNErhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
 Path fileName = Path.of(file);&#xD;
 String contents = null;&#xD;
 try {&#xD;
   contents = Files.readString(fileName);&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on reading file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
 return contents;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oP5F8LhLEe2uyMDTtZ4aHg" name="FileManager" method="_oujX47hLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oP5F8bhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oP5F8rhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ovdW0rhLEe2uyMDTtZ4aHg">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_oP5tALhLEe2uyMDTtZ4aHg" type="_oP330LhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oP5tAbhLEe2uyMDTtZ4aHg" name="FileManager" method="_oujX5bhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oP5tA7hLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oP6UELhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oP5tArhLEe2uyMDTtZ4aHg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oP6UEbhLEe2uyMDTtZ4aHg" type="_oP330LhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oP6UErhLEe2uyMDTtZ4aHg" name="getDocumentsDirectory" method="_ouj-8LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oP6UE7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oP67ILhLEe2uyMDTtZ4aHg" name="getCurrentDirectory" method="_ouj-8rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oP67IbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oP7iMLhLEe2uyMDTtZ4aHg" name="createFile" method="_ouj-9LhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovdW07hLEe2uyMDTtZ4aHg">
                  <body>Build the name extension used for all files created by this tool. The nameExtension will be&#xD;
   * added to the base input file name so that all of the output files can be associated with the&#xD;
   * input file The file naming pattern is: baseFileNameFileType-NonDefaultParameterList where&#xD;
   * FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray Default parameters are&#xD;
   * not identified in the NameExtension All parameters used to create the file, should be listed&#xD;
   * near the top of the file in the Parameter Section, followed by the file contents.&#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_oP7iMbhLEe2uyMDTtZ4aHg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oP7iMrhLEe2uyMDTtZ4aHg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oP7iM7hLEe2uyMDTtZ4aHg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oP7iNLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oP8JQLhLEe2uyMDTtZ4aHg" name="createFile" method="_oukmALhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oP8JQbhLEe2uyMDTtZ4aHg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oP8wULhLEe2uyMDTtZ4aHg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oP8wUbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oP9XYLhLEe2uyMDTtZ4aHg" name="createDirectory" method="_oukmBLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oP9XYbhLEe2uyMDTtZ4aHg" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oP9XYrhLEe2uyMDTtZ4aHg" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oP9XY7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oP9-cLhLEe2uyMDTtZ4aHg" name="writeFile" method="_oukmCLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oP9-cbhLEe2uyMDTtZ4aHg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oP9-crhLEe2uyMDTtZ4aHg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oP-lgLhLEe2uyMDTtZ4aHg" name="readFile" method="_oulNELhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oP-lgbhLEe2uyMDTtZ4aHg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oP-lgrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oP_zoLhLEe2uyMDTtZ4aHg" name="Flow">
              <ownedComment xmi:id="_ovdW1LhLEe2uyMDTtZ4aHg">
                <body>Flow is a java class in which the user creates a flow object based on the graph file provided.&#xD;
The flows, edges, link transmission and total cost are all added to separate ArrayLists which are stored and can&#xD;
be accessed if needed. Methods inside the class allow the user to manipulate certain aspects of the flow and return&#xD;
certain values.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_ooPUhLhLEe2uyMDTtZ4aHg" general="_oVWNsLhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_oshXkLhLEe2uyMDTtZ4aHg" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oshXkbhLEe2uyMDTtZ4aHg" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oshXkrhLEe2uyMDTtZ4aHg" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_osh-oLhLEe2uyMDTtZ4aHg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osh-obhLEe2uyMDTtZ4aHg" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_osh-orhLEe2uyMDTtZ4aHg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osh-o7hLEe2uyMDTtZ4aHg" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_osilsLhLEe2uyMDTtZ4aHg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osilsbhLEe2uyMDTtZ4aHg" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_osilsrhLEe2uyMDTtZ4aHg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osils7hLEe2uyMDTtZ4aHg" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_osiltLhLEe2uyMDTtZ4aHg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osjMwLhLEe2uyMDTtZ4aHg" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_osjMwbhLEe2uyMDTtZ4aHg" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osjz0LhLEe2uyMDTtZ4aHg" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osjz0rhLEe2uyMDTtZ4aHg" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oska4bhLEe2uyMDTtZ4aHg" name="nodes" visibility="package" type="_onvlQLhLEe2uyMDTtZ4aHg" association="_owMWoLhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_oslpALhLEe2uyMDTtZ4aHg" name="linkTxAndTotalCost" visibility="package" type="_onvlQLhLEe2uyMDTtZ4aHg" association="_owM9sLhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_osmQEbhLEe2uyMDTtZ4aHg" name="edges" visibility="package" type="_onvlQLhLEe2uyMDTtZ4aHg" association="_owM9s7hLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_osm3IrhLEe2uyMDTtZ4aHg" name="nodePredecessor" visibility="package" type="_oQ39YLhLEe2uyMDTtZ4aHg" association="_owNkwbhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_osneMbhLEe2uyMDTtZ4aHg" name="edgePredecessor" visibility="package" type="_oPrqkLhLEe2uyMDTtZ4aHg" association="_owOL0bhLEe2uyMDTtZ4aHg"/>
              <interfaceRealization xmi:id="_oqxEELhLEe2uyMDTtZ4aHg" client="_oP_zoLhLEe2uyMDTtZ4aHg" supplier="_oqewMbhLEe2uyMDTtZ4aHg" contract="_oqewMbhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oul0ILhLEe2uyMDTtZ4aHg" name="Flow" specification="_oQC28LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oul0IbhLEe2uyMDTtZ4aHg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oul0IrhLEe2uyMDTtZ4aHg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oul0I7hLEe2uyMDTtZ4aHg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oul0JLhLEe2uyMDTtZ4aHg" type="_oP_zoLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 	this.index = index;&#xD;
     /*&#xD;
      *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
      *  on flow updated based on flow length and reliability parameters&#xD;
      */&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges  = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();	&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oul0JbhLEe2uyMDTtZ4aHg" name="Flow" specification="_oQEFELhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oul0JrhLEe2uyMDTtZ4aHg" type="_oP_zoLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	this.index = DEFAULT_INDEX;&#xD;
 	/*&#xD;
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
 	 *  on flow updated based on flow length and reliability parameters&#xD;
 	 */&#xD;
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 	this.nodes = new ArrayList&lt;>();&#xD;
 	this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 	this.edges = new ArrayList&lt;>();&#xD;
 	this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oul0J7hLEe2uyMDTtZ4aHg" name="getInitialPriority" specification="_oQEFFLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oul0KLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oul0KbhLEe2uyMDTtZ4aHg" name="getIndex" specification="_oQEsIbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oul0KrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oul0K7hLEe2uyMDTtZ4aHg" name="getNumTxPerLink" specification="_oQFTMLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oul0LLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oul0LbhLEe2uyMDTtZ4aHg" name="getNodes" specification="_oQFTMrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oul0LrhLEe2uyMDTtZ4aHg" type="_onvlQLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oul0L7hLEe2uyMDTtZ4aHg" name="getEdges" specification="_oQHIYLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oul0MLhLEe2uyMDTtZ4aHg" type="_onvlQLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oul0MbhLEe2uyMDTtZ4aHg" name="addEdge" specification="_ooOGYLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oul0MrhLEe2uyMDTtZ4aHg" name="edge" type="_oPrqkLhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oul0M7hLEe2uyMDTtZ4aHg" name="addNode" specification="_ooOtcLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oul0NLhLEe2uyMDTtZ4aHg" name="node" type="_oQ39YLhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oumbMLhLEe2uyMDTtZ4aHg" name="getLinkTxAndTotalCost" specification="_oQIWgLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oumbMbhLEe2uyMDTtZ4aHg" type="_onvlQLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oumbMrhLEe2uyMDTtZ4aHg" name="setInitialPriority" specification="_oQKLsLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oumbM7hLEe2uyMDTtZ4aHg" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oumbNLhLEe2uyMDTtZ4aHg" name="setIndex" specification="_oQKLsrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oumbNbhLEe2uyMDTtZ4aHg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oumbNrhLEe2uyMDTtZ4aHg" name="setNumTxPerLink" specification="_oQKywbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oumbN7hLEe2uyMDTtZ4aHg" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ounCQLhLEe2uyMDTtZ4aHg" name="setNodes" specification="_oqy5QLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ounCQbhLEe2uyMDTtZ4aHg" name="nodes" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ounCQrhLEe2uyMDTtZ4aHg" name="setLinkTxAndTotalCost" specification="_oqzgULhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ounCQ7hLEe2uyMDTtZ4aHg" name="linkTxAndTotalCost" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ounpULhLEe2uyMDTtZ4aHg" name="compareTo" specification="_ooOtcrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ounpUbhLEe2uyMDTtZ4aHg" name="flow" type="_oP_zoLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ounpUrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ounpU7hLEe2uyMDTtZ4aHg" name="toString" specification="_oQMA4LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ounpVLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oQC28LhLEe2uyMDTtZ4aHg" name="Flow" visibility="package" method="_oul0ILhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oQDeALhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oQDeAbhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ovd94LhLEe2uyMDTtZ4aHg">
                  <body>Constructor that sets name, priority, and index of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_oQC28bhLEe2uyMDTtZ4aHg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oQC28rhLEe2uyMDTtZ4aHg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oQC287hLEe2uyMDTtZ4aHg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oQDeArhLEe2uyMDTtZ4aHg" type="_oP_zoLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oQEFELhLEe2uyMDTtZ4aHg" name="Flow" visibility="package" method="_oul0JbhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oQEFEbhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oQEFErhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ovd94bhLEe2uyMDTtZ4aHg">
                  <body>Constructor</body>
                </ownedComment>
                <ownedParameter xmi:id="_oQEFE7hLEe2uyMDTtZ4aHg" type="_oP_zoLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oQEFFLhLEe2uyMDTtZ4aHg" name="getInitialPriority" method="_oul0J7hLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovd94rhLEe2uyMDTtZ4aHg">
                  <body>Gets the initial priority of the flow.&#xD;
	 * &#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_oQEsILhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oQEsIbhLEe2uyMDTtZ4aHg" name="getIndex" method="_oul0KbhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovd947hLEe2uyMDTtZ4aHg">
                  <body>Gets the index of the flow. The order in which the node was read from the &#xD;
	 * graph file.&#xD;
	 *  &#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_oQEsIrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oQFTMLhLEe2uyMDTtZ4aHg" name="getNumTxPerLink" method="_oul0K7hLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovd95LhLEe2uyMDTtZ4aHg">
                  <body>Gets the number of transmissions per link of the flow.&#xD;
	 * Defaulted to 1.&#xD;
	 * &#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_oQFTMbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oQFTMrhLEe2uyMDTtZ4aHg" name="getNodes" method="_oul0LbhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovd95bhLEe2uyMDTtZ4aHg">
                  <body>Gets an ArrayList of nodes in the flow.&#xD;
	 * &#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_oqySMLhLEe2uyMDTtZ4aHg" type="_onvlQLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oQHIYLhLEe2uyMDTtZ4aHg" name="getEdges" method="_oul0L7hLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovd95rhLEe2uyMDTtZ4aHg">
                  <body>Gets and ArrayList of edges in the flow.&#xD;
	 * &#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_oqySMbhLEe2uyMDTtZ4aHg" type="_onvlQLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oQIWgLhLEe2uyMDTtZ4aHg" name="getLinkTxAndTotalCost" method="_oumbMLhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovd96bhLEe2uyMDTtZ4aHg">
                  <body>Gets the link transmission and total cost of the flow.&#xD;
	 * &#xD;
	 * @return ArrayList of link transmission and total cost values.</body>
                </ownedComment>
                <ownedParameter xmi:id="_oqySMrhLEe2uyMDTtZ4aHg" type="_onvlQLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oQKLsLhLEe2uyMDTtZ4aHg" name="setInitialPriority" method="_oumbMrhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovd96rhLEe2uyMDTtZ4aHg">
                  <body>Sets the initial priority of the flow. Default is -1.&#xD;
	 * &#xD;
	 * @param initialPriority the initial priority to be set</body>
                </ownedComment>
                <ownedParameter xmi:id="_oQKLsbhLEe2uyMDTtZ4aHg" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oQKLsrhLEe2uyMDTtZ4aHg" name="setIndex" method="_oumbNLhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovd967hLEe2uyMDTtZ4aHg">
                  <body>Sets the index of a node in the flow. Default is 0.&#xD;
	 * &#xD;
	 * @param index the index to be set</body>
                </ownedComment>
                <ownedParameter xmi:id="_oQKywLhLEe2uyMDTtZ4aHg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oQKywbhLEe2uyMDTtZ4aHg" name="setNumTxPerLink" method="_oumbNrhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovd97LhLEe2uyMDTtZ4aHg">
                  <body>Sets the number of transmissions per link. Determined by the fault model.&#xD;
	 * &#xD;
	 * @param numTxPerLink the number of transmissions per link to be set.</body>
                </ownedComment>
                <ownedParameter xmi:id="_oQKywrhLEe2uyMDTtZ4aHg" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oQMA4LhLEe2uyMDTtZ4aHg" name="toString" method="_ounpU7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oQMA4bhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ooOGYLhLEe2uyMDTtZ4aHg" name="addEdge" method="_oul0MbhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovd957hLEe2uyMDTtZ4aHg">
                  <body>Add an edge to the flow by first setting the edge predecessor, adding the edge, then&#xD;
	 * updating the predecessor for the next node.&#xD;
	 * &#xD;
	 * @param edge the edge to added</body>
                </ownedComment>
                <ownedParameter xmi:id="_ooOGYbhLEe2uyMDTtZ4aHg" name="edge" type="_oPrqkLhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ooOtcLhLEe2uyMDTtZ4aHg" name="addNode" method="_oul0M7hLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovd96LhLEe2uyMDTtZ4aHg">
                  <body>Add a node to the flow by first setting its predecessor, adding the node, then &#xD;
	 * updating the predecessor for the next node.&#xD;
	 * &#xD;
	 * @param node the node to be added</body>
                </ownedComment>
                <ownedParameter xmi:id="_ooOtcbhLEe2uyMDTtZ4aHg" name="node" type="_oQ39YLhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ooOtcrhLEe2uyMDTtZ4aHg" name="compareTo" method="_ounpULhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ooOtc7hLEe2uyMDTtZ4aHg" name="flow" type="_oP_zoLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ooPUgLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oqy5QLhLEe2uyMDTtZ4aHg" name="setNodes" method="_ounCQLhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovd97bhLEe2uyMDTtZ4aHg">
                  <body>Sets a list of nodes to the flow.&#xD;
	 * &#xD;
	 * @param nodes the ArrayList of nodes to be set.</body>
                </ownedComment>
                <ownedParameter xmi:id="_oqy5QbhLEe2uyMDTtZ4aHg" name="nodes" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oqzgULhLEe2uyMDTtZ4aHg" name="setLinkTxAndTotalCost" method="_ounCQrhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovd97rhLEe2uyMDTtZ4aHg">
                  <body>Sets a list of link transmission and total cost to the flow.&#xD;
	 * &#xD;
	 * @param linkTxAndTotalCost the ArrayList of values to set.</body>
                </ownedComment>
                <ownedParameter xmi:id="_oqzgUbhLEe2uyMDTtZ4aHg" name="linkTxAndTotalCost" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oQRgcLhLEe2uyMDTtZ4aHg" name="FlowMap">
              <ownedComment xmi:id="_ovd977hLEe2uyMDTtZ4aHg">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ooRwwLhLEe2uyMDTtZ4aHg" general="_oNocILhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_ospTYLhLEe2uyMDTtZ4aHg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ospTYbhLEe2uyMDTtZ4aHg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oQSHgLhLEe2uyMDTtZ4aHg" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_ovd98LhLEe2uyMDTtZ4aHg">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ooSX0LhLEe2uyMDTtZ4aHg" general="_oNocILhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_osp6cLhLEe2uyMDTtZ4aHg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_osp6cbhLEe2uyMDTtZ4aHg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oQTVoLhLEe2uyMDTtZ4aHg" name="GraphViz">
              <ownedComment xmi:id="_ovd98bhLEe2uyMDTtZ4aHg">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ooUNAbhLEe2uyMDTtZ4aHg" general="_oTRKELhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_osp6crhLEe2uyMDTtZ4aHg" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_osp6c7hLEe2uyMDTtZ4aHg" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osp6dLhLEe2uyMDTtZ4aHg" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_osqhgLhLEe2uyMDTtZ4aHg" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osqhgbhLEe2uyMDTtZ4aHg" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osqhg7hLEe2uyMDTtZ4aHg" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osrIkbhLEe2uyMDTtZ4aHg" name="wfm" visibility="package" type="_oP330LhLEe2uyMDTtZ4aHg" association="_owOy4bhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_osrvobhLEe2uyMDTtZ4aHg" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ossWsbhLEe2uyMDTtZ4aHg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oss9wLhLEe2uyMDTtZ4aHg" name="gv" visibility="package" type="_oQTVoLhLEe2uyMDTtZ4aHg" association="_owOy5LhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ounpVbhLEe2uyMDTtZ4aHg" name="GraphViz" specification="_ooS-4LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ounpVrhLEe2uyMDTtZ4aHg" name="wfm" type="_oP330LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ounpV7hLEe2uyMDTtZ4aHg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ounpWLhLEe2uyMDTtZ4aHg" type="_oQTVoLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ounpWbhLEe2uyMDTtZ4aHg" name="GraphViz" specification="_ooTl87hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ounpWrhLEe2uyMDTtZ4aHg" name="wfm" type="_oP330LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ounpW7hLEe2uyMDTtZ4aHg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ounpXLhLEe2uyMDTtZ4aHg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ounpXbhLEe2uyMDTtZ4aHg" type="_oQTVoLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouoQYLhLEe2uyMDTtZ4aHg" name="visualization" specification="_oQVK0LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouoQYbhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouoQYrhLEe2uyMDTtZ4aHg" name="initializeGraphVizContent" specification="_oQWY8rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouoQY7hLEe2uyMDTtZ4aHg" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouoQZLhLEe2uyMDTtZ4aHg" name="finalizeGraphVizContent" specification="_oQXAAbhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouoQZbhLEe2uyMDTtZ4aHg" name="getGraphVizContent" specification="_oQXAArhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouoQZrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouoQZ7hLEe2uyMDTtZ4aHg" name="createGraphVizContent" specification="_oQXnEbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouoQaLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouo3cLhLEe2uyMDTtZ4aHg" name="addFlowToGraphViz" specification="_oQYOILhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouo3cbhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouo3crhLEe2uyMDTtZ4aHg" name="addSrcNodeToGraphViz" specification="_oQY1MLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouo3c7hLEe2uyMDTtZ4aHg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouo3dLhLEe2uyMDTtZ4aHg" name="addSnkNodeToGraphViz" specification="_oQY1MrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouo3dbhLEe2uyMDTtZ4aHg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouo3drhLEe2uyMDTtZ4aHg" name="finalizeCurrentFlowInGraphViz" specification="_oQZcQLhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouo3d7hLEe2uyMDTtZ4aHg" name="addNodeName" specification="_oQZcQbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouo3eLhLEe2uyMDTtZ4aHg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouo3ebhLEe2uyMDTtZ4aHg" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oQVK0LhLEe2uyMDTtZ4aHg" name="visualization" method="_ouoQYLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ooUNALhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oQWY8rhLEe2uyMDTtZ4aHg" name="initializeGraphVizContent" method="_ouoQYrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oQXAALhLEe2uyMDTtZ4aHg" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oQXAAbhLEe2uyMDTtZ4aHg" name="finalizeGraphVizContent" method="_ouoQZLhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oQXAArhLEe2uyMDTtZ4aHg" name="getGraphVizContent" method="_ouoQZbhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovek8LhLEe2uyMDTtZ4aHg">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_oQXnELhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oQXnEbhLEe2uyMDTtZ4aHg" name="createGraphVizContent" method="_ouoQZ7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oQXnErhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oQYOILhLEe2uyMDTtZ4aHg" name="addFlowToGraphViz" method="_ouo3cLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oQYOIbhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oQY1MLhLEe2uyMDTtZ4aHg" name="addSrcNodeToGraphViz" method="_ouo3crhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oQY1MbhLEe2uyMDTtZ4aHg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oQY1MrhLEe2uyMDTtZ4aHg" name="addSnkNodeToGraphViz" method="_ouo3dLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oQY1M7hLEe2uyMDTtZ4aHg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oQZcQLhLEe2uyMDTtZ4aHg" name="finalizeCurrentFlowInGraphViz" method="_ouo3drhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oQZcQbhLEe2uyMDTtZ4aHg" name="addNodeName" visibility="private" method="_ouo3d7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oQZcQrhLEe2uyMDTtZ4aHg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oQZcQ7hLEe2uyMDTtZ4aHg" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ooS-4LhLEe2uyMDTtZ4aHg" name="GraphViz" visibility="package" method="_ounpVbhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_ooTl8LhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ooTl8bhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ooS-4bhLEe2uyMDTtZ4aHg" name="wfm" type="_oP330LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ooS-4rhLEe2uyMDTtZ4aHg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ooTl8rhLEe2uyMDTtZ4aHg" type="_oQTVoLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ooTl87hLEe2uyMDTtZ4aHg" name="GraphViz" visibility="package" method="_ounpWbhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_ooTl97hLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ooTl-LhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ooTl9LhLEe2uyMDTtZ4aHg" name="wfm" type="_oP330LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ooTl9bhLEe2uyMDTtZ4aHg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ooTl9rhLEe2uyMDTtZ4aHg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ooTl-bhLEe2uyMDTtZ4aHg" type="_oQTVoLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oQb4gLhLEe2uyMDTtZ4aHg" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_ovek8bhLEe2uyMDTtZ4aHg">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_oq1VgLhLEe2uyMDTtZ4aHg" general="_ooYecbhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_ostk0LhLEe2uyMDTtZ4aHg" name="gv" visibility="package" type="_oQTVoLhLEe2uyMDTtZ4aHg" association="_owPZ8bhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouo3erhLEe2uyMDTtZ4aHg" name="GraphVizListener" specification="_ooaTobhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouo3e7hLEe2uyMDTtZ4aHg" name="gv" type="_oQTVoLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouo3fLhLEe2uyMDTtZ4aHg" type="_oQb4gLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oupegLhLEe2uyMDTtZ4aHg" name="buildGraphViz" specification="_ooa6sLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oupegbhLEe2uyMDTtZ4aHg" name="gv" type="_oQTVoLhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oupegrhLEe2uyMDTtZ4aHg" name="enterWarpName" specification="_oobhwbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oupeg7hLEe2uyMDTtZ4aHg" name="ctx" type="_ooa6srhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oupehLhLEe2uyMDTtZ4aHg" name="exitWarp" specification="_oocv4bhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oupehbhLEe2uyMDTtZ4aHg" name="ctx" type="_oocI07hLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouqFkLhLEe2uyMDTtZ4aHg" name="enterFlowName" specification="_oodW9LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouqFkbhLEe2uyMDTtZ4aHg" name="ctx" type="_oodW8rhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouqFkrhLEe2uyMDTtZ4aHg" name="exitSrcNode" specification="_ooelErhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouqFk7hLEe2uyMDTtZ4aHg" name="ctx" type="_ooelELhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouqFlLhLEe2uyMDTtZ4aHg" name="exitSnkNode" specification="_oogaQLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouqFlbhLEe2uyMDTtZ4aHg" name="ctx" type="_oofMI7hLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouqsoLhLEe2uyMDTtZ4aHg" name="exitFlow" specification="_oohoYbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouqsobhLEe2uyMDTtZ4aHg" name="ctx" type="_oohBUrhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ooaTobhLEe2uyMDTtZ4aHg" name="GraphVizListener" visibility="private" method="_ouo3erhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_ooaTo7hLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ooaTpLhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ooaTorhLEe2uyMDTtZ4aHg" name="gv" type="_oQTVoLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ooaTpbhLEe2uyMDTtZ4aHg" type="_oQb4gLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ooa6sLhLEe2uyMDTtZ4aHg" name="buildGraphViz" isStatic="true" method="_oupegLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ooa6sbhLEe2uyMDTtZ4aHg" name="gv" type="_oQTVoLhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oobhwbhLEe2uyMDTtZ4aHg" name="enterWarpName" method="_oupegrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oobhwrhLEe2uyMDTtZ4aHg" name="ctx" type="_ooa6srhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oocv4bhLEe2uyMDTtZ4aHg" name="exitWarp" method="_oupehLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oocv4rhLEe2uyMDTtZ4aHg" name="ctx" type="_oocI07hLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oodW9LhLEe2uyMDTtZ4aHg" name="enterFlowName" method="_ouqFkLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ood-ALhLEe2uyMDTtZ4aHg" name="ctx" type="_oodW8rhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ooelErhLEe2uyMDTtZ4aHg" name="exitSrcNode" method="_ouqFkrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ooelE7hLEe2uyMDTtZ4aHg" name="ctx" type="_ooelELhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oogaQLhLEe2uyMDTtZ4aHg" name="exitSnkNode" method="_ouqFlLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oogaQbhLEe2uyMDTtZ4aHg" name="ctx" type="_oofMI7hLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oohoYbhLEe2uyMDTtZ4aHg" name="exitFlow" method="_ouqsoLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oohoYrhLEe2uyMDTtZ4aHg" name="ctx" type="_oohBUrhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oQe70LhLEe2uyMDTtZ4aHg" name="GuiVisualization">
              <ownedComment xmi:id="_ovek8rhLEe2uyMDTtZ4aHg">
                <body>GuiVisualization Class to create a Java Swing window that displays a table of data with column&#xD;
headings.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_osuL4bhLEe2uyMDTtZ4aHg" name="frame" visibility="package" type="_oojdkbhLEe2uyMDTtZ4aHg" association="_owQBALhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_osuy8bhLEe2uyMDTtZ4aHg" name="jtable" visibility="package" type="_ookrsbhLEe2uyMDTtZ4aHg" association="_owQBA7hLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ourTsLhLEe2uyMDTtZ4aHg" name="GuiVisualization" specification="_oQfi4LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ourTsbhLEe2uyMDTtZ4aHg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ourTsrhLEe2uyMDTtZ4aHg" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ourTs7hLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ourTtLhLEe2uyMDTtZ4aHg" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ourTtbhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ourTtrhLEe2uyMDTtZ4aHg" type="_oQe70LhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>// Frame initialization&#xD;
 frame = new JFrame();&#xD;
&#xD;
 // Frame Title&#xD;
 frame.setTitle(title);&#xD;
&#xD;
 // Initializing the JTable with input parameters&#xD;
 jtable = new JTable(table, columnNames);&#xD;
 jtable.setBounds(30, 40, 200, 300); // default size&#xD;
 // resizeColumnWidth(jtable); // uncomment to auto size column widths&#xD;
&#xD;
 // attached the table to a JScrollPane and then add both to the frame&#xD;
 JScrollPane sp = new JScrollPane(jtable); // gives table a vertical scrollbar&#xD;
 frame.add(sp);&#xD;
 // Frame Size&#xD;
 frame.setSize(500, 200);&#xD;
 jtable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); // creates horizontal scrollbar&#xD;
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
 // Frame Visible = false&#xD;
 frame.setVisible(false);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_our6wLhLEe2uyMDTtZ4aHg" name="setVisible" specification="_oQgxAbhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>frame.setVisible(true);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_our6wbhLEe2uyMDTtZ4aHg" name="resizeColumnWidth" specification="_oq18kLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_our6wrhLEe2uyMDTtZ4aHg" name="table" type="_ookrsbhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>final TableColumnModel columnModel = table.getColumnModel();&#xD;
 for (int column = 0; column &lt; table.getColumnCount(); column++) {&#xD;
   int width = 70; // Min width&#xD;
   for (int row = 0; row &lt; table.getRowCount(); row++) {&#xD;
     TableCellRenderer renderer = table.getCellRenderer(row, column);&#xD;
     Component comp = table.prepareRenderer(renderer, row, column);&#xD;
     width = Math.max(comp.getPreferredSize().width + 5, width);&#xD;
   }&#xD;
   if (width > 300)&#xD;
     width = 300;&#xD;
   columnModel.getColumn(column).setPreferredWidth(width);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oQfi4LhLEe2uyMDTtZ4aHg" name="GuiVisualization" method="_ourTsLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oQgJ8LhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oQgJ8bhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ovek87hLEe2uyMDTtZ4aHg">
                  <body>Constructor to create a Java Swing Window for a table of data with column headings. The window&#xD;
   * is initially not visible, and is made visible by a call to setVisible().&#xD;
   * &#xD;
   * @param title Window title&#xD;
   * @param columnNames Column heading names&#xD;
   * @param table table of strings representing the data</body>
                </ownedComment>
                <ownedParameter xmi:id="_oQfi4bhLEe2uyMDTtZ4aHg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oQfi4rhLEe2uyMDTtZ4aHg" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQgJ87hLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oQfi47hLEe2uyMDTtZ4aHg" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQgJ9LhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oQgJ8rhLEe2uyMDTtZ4aHg" type="_oQe70LhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oQgxAbhLEe2uyMDTtZ4aHg" name="setVisible" method="_our6wLhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovek9LhLEe2uyMDTtZ4aHg">
                  <body>Make the table visible.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oq18kLhLEe2uyMDTtZ4aHg" name="resizeColumnWidth" visibility="private" method="_our6wbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oq18kbhLEe2uyMDTtZ4aHg" name="table" type="_ookrsbhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oQh_ILhLEe2uyMDTtZ4aHg" name="InputGraphFile">
              <ownedComment xmi:id="_ovek9bhLEe2uyMDTtZ4aHg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_osuy87hLEe2uyMDTtZ4aHg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_osvaALhLEe2uyMDTtZ4aHg" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osvaAbhLEe2uyMDTtZ4aHg" name="wfm" visibility="private" type="_oP330LhLEe2uyMDTtZ4aHg" association="_owQoEbhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_osvaA7hLEe2uyMDTtZ4aHg" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osvaBLhLEe2uyMDTtZ4aHg" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oswBEbhLEe2uyMDTtZ4aHg" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oswBErhLEe2uyMDTtZ4aHg" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_our6w7hLEe2uyMDTtZ4aHg" name="InputGraphFile" specification="_ooo9ILhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_our6xLhLEe2uyMDTtZ4aHg" name="fm" type="_oP330LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_our6xbhLEe2uyMDTtZ4aHg" type="_oQh_ILhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_our6xrhLEe2uyMDTtZ4aHg" name="InputGraphFile" specification="_oopkMLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_our6x7hLEe2uyMDTtZ4aHg" name="fm" type="_oP330LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_our6yLhLEe2uyMDTtZ4aHg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_our6ybhLEe2uyMDTtZ4aHg" type="_oQh_ILhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_our6yrhLEe2uyMDTtZ4aHg" name="setGraphFileName" specification="_oQj0ULhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_our6y7hLEe2uyMDTtZ4aHg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oush0LhLEe2uyMDTtZ4aHg" name="verifyGraphFileName" specification="_oQkbYLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oush0bhLEe2uyMDTtZ4aHg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oush0rhLEe2uyMDTtZ4aHg" name="readGraphFile" specification="_oQlCcbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oush07hLEe2uyMDTtZ4aHg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oush1LhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oush1bhLEe2uyMDTtZ4aHg" name="getInputGraphFileName" specification="_oQmQkLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oush1rhLEe2uyMDTtZ4aHg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oush17hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oush2LhLEe2uyMDTtZ4aHg" name="readGraphFileContents" specification="_oQm3oLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oush2bhLEe2uyMDTtZ4aHg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oush2rhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_oush27hLEe2uyMDTtZ4aHg" name="printVerboseMessage" specification="_oQnesbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oush3LhLEe2uyMDTtZ4aHg" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oush3bhLEe2uyMDTtZ4aHg" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oush3rhLEe2uyMDTtZ4aHg" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oQj0ULhLEe2uyMDTtZ4aHg" name="setGraphFileName" visibility="private" method="_our6yrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oQj0UbhLEe2uyMDTtZ4aHg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oQkbYLhLEe2uyMDTtZ4aHg" name="verifyGraphFileName" visibility="private" method="_oush0LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oQlCcLhLEe2uyMDTtZ4aHg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oQlCcbhLEe2uyMDTtZ4aHg" name="readGraphFile" method="_oush0rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oQlpgLhLEe2uyMDTtZ4aHg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oQlpgbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oQmQkLhLEe2uyMDTtZ4aHg" name="getInputGraphFileName" visibility="private" method="_oush1bhLEe2uyMDTtZ4aHg" raisedException="_oq2joLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oQmQkbhLEe2uyMDTtZ4aHg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oQmQkrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oQm3oLhLEe2uyMDTtZ4aHg" name="readGraphFileContents" visibility="private" method="_oush2LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oQm3obhLEe2uyMDTtZ4aHg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oQnesLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oQnesbhLEe2uyMDTtZ4aHg" name="printVerboseMessage" visibility="private" method="_oush27hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oQnesrhLEe2uyMDTtZ4aHg" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oQoFwLhLEe2uyMDTtZ4aHg" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oQoFwbhLEe2uyMDTtZ4aHg" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ooo9ILhLEe2uyMDTtZ4aHg" name="InputGraphFile" method="_our6w7hLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_ooo9IrhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ooo9I7hLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ooo9IbhLEe2uyMDTtZ4aHg" name="fm" type="_oP330LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ooo9JLhLEe2uyMDTtZ4aHg" type="_oQh_ILhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oopkMLhLEe2uyMDTtZ4aHg" name="InputGraphFile" method="_our6xrhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oopkM7hLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oopkNLhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oopkMbhLEe2uyMDTtZ4aHg" name="fm" type="_oP330LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oopkMrhLEe2uyMDTtZ4aHg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oopkNbhLEe2uyMDTtZ4aHg" type="_oQh_ILhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oQqiALhLEe2uyMDTtZ4aHg" name="InstructionTimeSlot">
              <generalization xmi:id="_ooqyULhLEe2uyMDTtZ4aHg" general="_oSbckLhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_oswoILhLEe2uyMDTtZ4aHg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oswoIbhLEe2uyMDTtZ4aHg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_outI4LhLEe2uyMDTtZ4aHg" name="InstructionTimeSlot" specification="_oQrJELhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_outI4bhLEe2uyMDTtZ4aHg" type="_oQqiALhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_outI4rhLEe2uyMDTtZ4aHg" name="InstructionTimeSlot" specification="_oQrwILhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_outI47hLEe2uyMDTtZ4aHg" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_outI5LhLEe2uyMDTtZ4aHg" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_outI5bhLEe2uyMDTtZ4aHg" type="_oQqiALhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_outI5rhLEe2uyMDTtZ4aHg" name="InstructionTimeSlot" specification="_oQsXMLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_outI57hLEe2uyMDTtZ4aHg" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_outI6LhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_outI6bhLEe2uyMDTtZ4aHg" type="_oQqiALhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oQrJELhLEe2uyMDTtZ4aHg" name="InstructionTimeSlot" method="_outI4LhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oQrJEbhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oQrJErhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oQrJE7hLEe2uyMDTtZ4aHg" type="_oQqiALhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oQrwILhLEe2uyMDTtZ4aHg" name="InstructionTimeSlot" visibility="package" method="_outI4rhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oQrwI7hLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oQrwJLhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oQrwIbhLEe2uyMDTtZ4aHg" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oQrwIrhLEe2uyMDTtZ4aHg" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oQrwJbhLEe2uyMDTtZ4aHg" type="_oQqiALhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oQsXMLhLEe2uyMDTtZ4aHg" name="InstructionTimeSlot" visibility="package" method="_outI5rhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oQsXMrhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oQsXM7hLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oQsXMbhLEe2uyMDTtZ4aHg" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oQsXNbhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oQsXNLhLEe2uyMDTtZ4aHg" type="_oQqiALhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oQs-QLhLEe2uyMDTtZ4aHg" name="LatencyAnalysis">
              <ownedComment xmi:id="_ovek9rhLEe2uyMDTtZ4aHg">
                <body>@author sgoddard2&#xD;
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_oswoIrhLEe2uyMDTtZ4aHg" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_oswoI7hLEe2uyMDTtZ4aHg" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osxPMbhLEe2uyMDTtZ4aHg" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_osxPM7hLEe2uyMDTtZ4aHg" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_osx2QLhLEe2uyMDTtZ4aHg" name="latencyReport" visibility="private" type="_oPoAMLhLEe2uyMDTtZ4aHg" association="_owRPILhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_osx2QrhLEe2uyMDTtZ4aHg" name="program" visibility="private" type="_oReaULhLEe2uyMDTtZ4aHg" association="_owRPI7hLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_osydUbhLEe2uyMDTtZ4aHg" name="workload" visibility="private" type="_oUEbULhLEe2uyMDTtZ4aHg" association="_owR2MbhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_oszEYLhLEe2uyMDTtZ4aHg" name="programTable" visibility="private" type="_oR54ILhLEe2uyMDTtZ4aHg" association="_owSdQrhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_oszEYrhLEe2uyMDTtZ4aHg" name="nodeIndex" visibility="private" type="_ontwELhLEe2uyMDTtZ4aHg" association="_owTEUbhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_outI6rhLEe2uyMDTtZ4aHg" name="LatencyAnalysis" specification="_oosngLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_outI67hLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_outI7LhLEe2uyMDTtZ4aHg" type="_oQs-QLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = warp.toProgram();&#xD;
 this.workload = warp.toWorkload();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_outv8LhLEe2uyMDTtZ4aHg" name="LatencyAnalysis" specification="_ootOlLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_outv8bhLEe2uyMDTtZ4aHg" name="program" type="_oReaULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_outv8rhLEe2uyMDTtZ4aHg" type="_oQs-QLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_outv87hLEe2uyMDTtZ4aHg" name="latencyReport" specification="_oQuzcLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_outv9LhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>/*&#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
&#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {&#xD;
   var time = 0;&#xD;
&#xD;
   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   /* get snk of last link in the flow, which is also the Flow snk node */&#xD;
   String snk = nodes[flowSnkIndex];&#xD;
   /* get the src of last link in the flow */&#xD;
   String src = nodes[flowSnkIndex - 1];&#xD;
   /* get (column) indexes into programTable of these nodes */&#xD;
   var snkIndex = nodeIndex.get(snk);&#xD;
   var srcIndex = nodeIndex.get(src);&#xD;
   /* get the array containing the number of transmissions required for each link in the flow */&#xD;
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
   /* get the number of transmission required for the last link in the flow */&#xD;
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
   var instance = 0;&#xD;
   while (time &lt; workload.getHyperPeriod()) {&#xD;
     /* get next release time and absolute deadline of the flow */&#xD;
     var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
     // var latency = 0;&#xD;
     time = releaseTime;&#xD;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
     while (time &lt; nextReleaseTime) {&#xD;
       /* get instruction strings at these to locations */&#xD;
       String instr1 = programTable.get(time, srcIndex);&#xD;
       String instr2 = programTable.get(time, snkIndex);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
       if (numTxProcessed == numTxRequired) {&#xD;
         /*&#xD;
          * all required Tx attempts have been made compute and record latency&#xD;
          */&#xD;
         var latency = time - releaseTime + 1;&#xD;
         // report latency&#xD;
         String latencyMsg =&#xD;
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
         if (latency > deadline) {&#xD;
           /* deadline missed, so color the text red */&#xD;
           latencyMsg += DEADLINE_MISS;&#xD;
         }&#xD;
         latencyMsg += &quot;\n&quot;;&#xD;
         latencyReport.add(latencyMsg);&#xD;
         time = nextReleaseTime;&#xD;
       } else {&#xD;
         time++;&#xD;
       }&#xD;
&#xD;
     }&#xD;
     if (numTxProcessed &lt; numTxRequired) {&#xD;
       /*&#xD;
        * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
        * printed with the schedulers built&#xD;
        */&#xD;
       String latencyMsg =&#xD;
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
               flowName, instance);&#xD;
       latencyReport.add(latencyMsg);&#xD;
     }&#xD;
     instance++;&#xD;
   }&#xD;
   String flowSeparator = FLOW_SEPARATOR;&#xD;
   latencyReport.add(flowSeparator);&#xD;
 }&#xD;
 return latencyReport;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouuXALhLEe2uyMDTtZ4aHg" name="numMatchingTx" specification="_oQvagLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouuXAbhLEe2uyMDTtZ4aHg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouuXArhLEe2uyMDTtZ4aHg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouuXA7hLEe2uyMDTtZ4aHg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouuXBLhLEe2uyMDTtZ4aHg" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouuXBbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var dsl = new WarpDSL();&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oQuzcLhLEe2uyMDTtZ4aHg" name="latencyReport" method="_outv87hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oot1o7hLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oQvagLhLEe2uyMDTtZ4aHg" name="numMatchingTx" method="_ouuXALhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oQvagbhLEe2uyMDTtZ4aHg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oQvagrhLEe2uyMDTtZ4aHg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oQvag7hLEe2uyMDTtZ4aHg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oQvahLhLEe2uyMDTtZ4aHg" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oQvahbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oosngLhLEe2uyMDTtZ4aHg" name="LatencyAnalysis" visibility="package" method="_outI6rhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_ootOkbhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ootOkrhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ootOkLhLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ootOk7hLEe2uyMDTtZ4aHg" type="_oQs-QLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ootOlLhLEe2uyMDTtZ4aHg" name="LatencyAnalysis" visibility="package" method="_outv8LhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oot1oLhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oot1obhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ootOlbhLEe2uyMDTtZ4aHg" name="program" type="_oReaULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oot1orhLEe2uyMDTtZ4aHg" type="_oQs-QLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oQx2wLhLEe2uyMDTtZ4aHg" name="LatencyVisualization">
              <ownedComment xmi:id="_ovek97hLEe2uyMDTtZ4aHg">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2022 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.3&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_oovDxbhLEe2uyMDTtZ4aHg" general="_oTRKELhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_os0SgLhLEe2uyMDTtZ4aHg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_os0SgbhLEe2uyMDTtZ4aHg" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_os0SgrhLEe2uyMDTtZ4aHg" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_os0Sg7hLEe2uyMDTtZ4aHg" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_os05kLhLEe2uyMDTtZ4aHg" name="warp" visibility="private" type="_oTo9gLhLEe2uyMDTtZ4aHg" association="_owTrYbhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_os05krhLEe2uyMDTtZ4aHg" name="la" visibility="private" type="_oQs-QLhLEe2uyMDTtZ4aHg" association="_owUScbhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouuXBrhLEe2uyMDTtZ4aHg" name="LatencyVisualization" specification="_oovDwLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouuXB7hLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouuXCLhLEe2uyMDTtZ4aHg" type="_oQx2wLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oovDwLhLEe2uyMDTtZ4aHg" name="LatencyVisualization" visibility="package" method="_ouuXBrhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oovDwrhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oovDw7hLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oovDwbhLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oovDxLhLEe2uyMDTtZ4aHg" type="_oQx2wLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oQ0TALhLEe2uyMDTtZ4aHg" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_orOXELhLEe2uyMDTtZ4aHg" client="_oQ0TALhLEe2uyMDTtZ4aHg" supplier="_ooFjgLhLEe2uyMDTtZ4aHg" contract="_ooFjgLhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouu-ELhLEe2uyMDTtZ4aHg" name="compare" specification="_orO-IbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouu-EbhLEe2uyMDTtZ4aHg" name="obj1" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouu-ErhLEe2uyMDTtZ4aHg" name="obj2" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouu-E7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_orO-IbhLEe2uyMDTtZ4aHg" name="compare" method="_ouu-ELhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_orPlMLhLEe2uyMDTtZ4aHg" name="obj1" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_orPlMbhLEe2uyMDTtZ4aHg" name="obj2" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_orQMQLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oQ2IMLhLEe2uyMDTtZ4aHg" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_orQMRLhLEe2uyMDTtZ4aHg" client="_oQ2IMLhLEe2uyMDTtZ4aHg" supplier="_ooFjgLhLEe2uyMDTtZ4aHg" contract="_ooFjgLhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouu-FLhLEe2uyMDTtZ4aHg" name="compare" specification="_orRaYLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouu-FbhLEe2uyMDTtZ4aHg" name="obj1" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouu-FrhLEe2uyMDTtZ4aHg" name="obj2" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouu-F7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_orRaYLhLEe2uyMDTtZ4aHg" name="compare" method="_ouu-FLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_orSBcLhLEe2uyMDTtZ4aHg" name="obj1" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_orSBcbhLEe2uyMDTtZ4aHg" name="obj2" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_orSBcrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oQ39YLhLEe2uyMDTtZ4aHg" name="Node">
              <generalization xmi:id="_ooyHELhLEe2uyMDTtZ4aHg" general="_oVWNsLhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_os1gobhLEe2uyMDTtZ4aHg" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_os1gorhLEe2uyMDTtZ4aHg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_os1go7hLEe2uyMDTtZ4aHg" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_os2HsLhLEe2uyMDTtZ4aHg" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_os2HsbhLEe2uyMDTtZ4aHg" name="edges" type="_onvlQLhLEe2uyMDTtZ4aHg" isReadOnly="true" association="_owU5gbhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_os2uwbhLEe2uyMDTtZ4aHg" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_os2uwrhLEe2uyMDTtZ4aHg" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_orSogLhLEe2uyMDTtZ4aHg" client="_oQ39YLhLEe2uyMDTtZ4aHg" supplier="_oqewMbhLEe2uyMDTtZ4aHg" contract="_oqewMbhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouu-GLhLEe2uyMDTtZ4aHg" name="Node" specification="_oQ5LgLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouu-GbhLEe2uyMDTtZ4aHg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouu-GrhLEe2uyMDTtZ4aHg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouu-G7hLEe2uyMDTtZ4aHg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouu-HLhLEe2uyMDTtZ4aHg" type="_oQ39YLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouu-HbhLEe2uyMDTtZ4aHg" name="compareTo" specification="_oow48LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouu-HrhLEe2uyMDTtZ4aHg" name="node" type="_oQ39YLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouu-H7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouvlILhLEe2uyMDTtZ4aHg" name="toString" specification="_oQ5ykLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouvlIbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouvlIrhLEe2uyMDTtZ4aHg" name="addEdge" specification="_ooxgA7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouvlI7hLEe2uyMDTtZ4aHg" name="edge" type="_oPrqkLhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouvlJLhLEe2uyMDTtZ4aHg" name="addConflict" specification="_oQ7AsLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouvlJbhLEe2uyMDTtZ4aHg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouvlJrhLEe2uyMDTtZ4aHg" name="numEdges" specification="_oQ7AsrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouvlJ7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouvlKLhLEe2uyMDTtZ4aHg" name="print" specification="_oQ7nwLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouvlKbhLEe2uyMDTtZ4aHg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouwMMLhLEe2uyMDTtZ4aHg" name="print" specification="_oQ8O0rhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oQ5LgLhLEe2uyMDTtZ4aHg" name="Node" visibility="package" method="_ouu-GLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oQ5LhLhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oQ5LhbhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oQ5LgbhLEe2uyMDTtZ4aHg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oQ5LgrhLEe2uyMDTtZ4aHg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oQ5Lg7hLEe2uyMDTtZ4aHg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oQ5LhrhLEe2uyMDTtZ4aHg" type="_oQ39YLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oQ5ykLhLEe2uyMDTtZ4aHg" name="toString" method="_ouvlILhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oQ5ykbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oQ7AsLhLEe2uyMDTtZ4aHg" name="addConflict" method="_ouvlJLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oQ7AsbhLEe2uyMDTtZ4aHg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oQ7AsrhLEe2uyMDTtZ4aHg" name="numEdges" method="_ouvlJrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oQ7As7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oQ7nwLhLEe2uyMDTtZ4aHg" name="print" method="_ouvlKLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oQ7nwbhLEe2uyMDTtZ4aHg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oQ8O0rhLEe2uyMDTtZ4aHg" name="print" method="_ouwMMLhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oow48LhLEe2uyMDTtZ4aHg" name="compareTo" method="_ouu-HbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oow48bhLEe2uyMDTtZ4aHg" name="node" type="_oQ39YLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oow48rhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ooxgA7hLEe2uyMDTtZ4aHg" name="addEdge" method="_ouvlIrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ooxgBLhLEe2uyMDTtZ4aHg" name="edge" type="_oPrqkLhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oQ_SILhLEe2uyMDTtZ4aHg" name="NodeMap">
              <ownedComment xmi:id="_ovfMALhLEe2uyMDTtZ4aHg">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ooyuILhLEe2uyMDTtZ4aHg" general="_oNocILhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_os3V0LhLEe2uyMDTtZ4aHg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_os3V0bhLEe2uyMDTtZ4aHg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oQ_5MLhLEe2uyMDTtZ4aHg" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_ovfMAbhLEe2uyMDTtZ4aHg">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ooz8RLhLEe2uyMDTtZ4aHg" general="_oSiKQLhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouwMMbhLEe2uyMDTtZ4aHg" name="NonPreemptiveSchedule" specification="_oozVMbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouwMMrhLEe2uyMDTtZ4aHg" name="poset" type="_oRGm4LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouwMM7hLEe2uyMDTtZ4aHg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouwMNLhLEe2uyMDTtZ4aHg" type="_oQ_5MLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oozVMbhLEe2uyMDTtZ4aHg" name="NonPreemptiveSchedule" visibility="package" method="_ouwMMbhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_ooz8QbhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ooz8QrhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oozVMrhLEe2uyMDTtZ4aHg" name="poset" type="_oRGm4LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ooz8QLhLEe2uyMDTtZ4aHg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ooz8Q7hLEe2uyMDTtZ4aHg" type="_oQ_5MLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oRBHULhLEe2uyMDTtZ4aHg" name="NotImplentedVisualization">
              <generalization xmi:id="_ooz8RrhLEe2uyMDTtZ4aHg" general="_oTRKELhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_os3V0rhLEe2uyMDTtZ4aHg" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_os3V07hLEe2uyMDTtZ4aHg" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_os3V1LhLEe2uyMDTtZ4aHg" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_os384LhLEe2uyMDTtZ4aHg" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_os384bhLEe2uyMDTtZ4aHg" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_os384rhLEe2uyMDTtZ4aHg" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouwzQLhLEe2uyMDTtZ4aHg" name="NotImplentedVisualization" specification="_oRBuYLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouwzQbhLEe2uyMDTtZ4aHg" type="_oRBHULhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouwzQrhLEe2uyMDTtZ4aHg" name="NotImplentedVisualization" specification="_oRCVc7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouwzQ7hLEe2uyMDTtZ4aHg" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouwzRLhLEe2uyMDTtZ4aHg" type="_oRBHULhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouwzRbhLEe2uyMDTtZ4aHg" name="visualization" specification="_oRC8g7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouwzRrhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oRBuYLhLEe2uyMDTtZ4aHg" name="NotImplentedVisualization" visibility="package" method="_ouwzQLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oRCVcLhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oRCVcbhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oRCVcrhLEe2uyMDTtZ4aHg" type="_oRBHULhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oRCVc7hLEe2uyMDTtZ4aHg" name="NotImplentedVisualization" visibility="package" method="_ouwzQrhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oRC8gLhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oRC8gbhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oRCVdLhLEe2uyMDTtZ4aHg" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oRC8grhLEe2uyMDTtZ4aHg" type="_oRBHULhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oRC8g7hLEe2uyMDTtZ4aHg" name="visualization" method="_ouwzRbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ooz8RbhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oREKoLhLEe2uyMDTtZ4aHg" name="PeriodComparator">
              <interfaceRealization xmi:id="_orUdsLhLEe2uyMDTtZ4aHg" client="_oREKoLhLEe2uyMDTtZ4aHg" supplier="_ooFjgLhLEe2uyMDTtZ4aHg" contract="_ooFjgLhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouwzR7hLEe2uyMDTtZ4aHg" name="compare" specification="_orVEwbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouwzSLhLEe2uyMDTtZ4aHg" name="obj1" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouwzSbhLEe2uyMDTtZ4aHg" name="obj2" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouwzSrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_orVEwbhLEe2uyMDTtZ4aHg" name="compare" method="_ouwzR7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_orVr0LhLEe2uyMDTtZ4aHg" name="obj1" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_orVr0bhLEe2uyMDTtZ4aHg" name="obj2" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_orVr0rhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oRGm4LhLEe2uyMDTtZ4aHg" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_ovfMArhLEe2uyMDTtZ4aHg">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_os3847hLEe2uyMDTtZ4aHg" name="activations" visibility="private" type="_oOtaMLhLEe2uyMDTtZ4aHg" association="_owVgkbhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_os4j8bhLEe2uyMDTtZ4aHg" name="workload" visibility="private" type="_oUEbULhLEe2uyMDTtZ4aHg" association="_owVglLhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_os5LALhLEe2uyMDTtZ4aHg" name="flows" visibility="protected" type="_oP_zoLhLEe2uyMDTtZ4aHg" association="_owWHobhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_os5LArhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_os5LA7hLEe2uyMDTtZ4aHg" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_os5LAbhLEe2uyMDTtZ4aHg" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_os5LBbhLEe2uyMDTtZ4aHg" name="nodes" visibility="private" type="_oQ39YLhLEe2uyMDTtZ4aHg" association="_owWusbhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_os5yEbhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_os5yErhLEe2uyMDTtZ4aHg" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_os5yELhLEe2uyMDTtZ4aHg" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_os5yFLhLEe2uyMDTtZ4aHg" name="nodeMap" visibility="private" type="_oQ_SILhLEe2uyMDTtZ4aHg" association="_owWutLhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_os6ZIbhLEe2uyMDTtZ4aHg" name="priorityQueue" visibility="private" type="_oSKW0bhLEe2uyMDTtZ4aHg" association="_owXVwbhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_os7AMbhLEe2uyMDTtZ4aHg" name="nodeConnectivityMap" visibility="protected" type="_ontwELhLEe2uyMDTtZ4aHg" association="_owX80LhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_os7nQbhLEe2uyMDTtZ4aHg" name="activationMap" visibility="package" type="_oQSHgLhLEe2uyMDTtZ4aHg" association="_owX807hLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouxaULhLEe2uyMDTtZ4aHg" name="Poset" specification="_oo1xcLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouxaUbhLEe2uyMDTtZ4aHg" name="workload" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouxaUrhLEe2uyMDTtZ4aHg" type="_oRGm4LhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouxaU7hLEe2uyMDTtZ4aHg" name="getNodeConnectivity" specification="_oRIcELhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouxaVLhLEe2uyMDTtZ4aHg" type="_ontwELhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouxaVbhLEe2uyMDTtZ4aHg" name="getNodeNames" specification="_oRJqMLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouxaVrhLEe2uyMDTtZ4aHg" type="_onvlQLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouxaV7hLEe2uyMDTtZ4aHg" name="getNodesNamesOrderedAlphabetically" specification="_oRK4UbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouxaWLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ouxaWbhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouxaWrhLEe2uyMDTtZ4aHg" name="buildPosetOfActivations" specification="_oRLfYbhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouxaW7hLEe2uyMDTtZ4aHg" name="createEdgeLists" specification="_oRMGcLhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouxaXLhLEe2uyMDTtZ4aHg" name="createConflictLists" specification="_oRMGcbhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouyBYLhLEe2uyMDTtZ4aHg" name="createGlobalConflictLists" specification="_oRMtgLhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouyBYbhLEe2uyMDTtZ4aHg" name="createLocalConflictLists" specification="_oRMtgbhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouyBYrhLEe2uyMDTtZ4aHg" name="findCoordinator" specification="_orW58rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouyBY7hLEe2uyMDTtZ4aHg" name="nodesInFlow" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouyBZLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouyBZbhLEe2uyMDTtZ4aHg" name="buildTxArray" specification="_orYIELhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouyBZrhLEe2uyMDTtZ4aHg" name="nodesInFlow" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouyBZ7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ouyBaLhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouyBabhLEe2uyMDTtZ4aHg" name="createInitialActivations" specification="_oRNUkLhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouyBarhLEe2uyMDTtZ4aHg" name="getMaxTx" specification="_oo2_kLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouyBa7hLEe2uyMDTtZ4aHg" name="node" type="_oQ39YLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouyBbLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouyocLhLEe2uyMDTtZ4aHg" name="getActivation" specification="_oo2_k7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouyocbhLEe2uyMDTtZ4aHg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouyocrhLEe2uyMDTtZ4aHg" name="node" type="_oQ39YLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouyoc7hLEe2uyMDTtZ4aHg" type="_oOHkULhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouyodLhLEe2uyMDTtZ4aHg" name="getHyperPeriod" specification="_oRN7oLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouyodbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouyodrhLEe2uyMDTtZ4aHg" name="getMaxPhase" specification="_oROisbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouyod7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouyoeLhLEe2uyMDTtZ4aHg" name="orderActivations" specification="_oRPw0LhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouyoebhLEe2uyMDTtZ4aHg" name="getNextActivation" specification="_oRPw0bhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouyoerhLEe2uyMDTtZ4aHg" type="_oOHkULhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouyoe7hLEe2uyMDTtZ4aHg" name="addActivation" specification="_oo3mpLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouyofLhLEe2uyMDTtZ4aHg" name="activation" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouzPgLhLEe2uyMDTtZ4aHg" name="findBaseStation" specification="_oRQX4LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouzPgbhLEe2uyMDTtZ4aHg" type="_oQ39YLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oRIcELhLEe2uyMDTtZ4aHg" name="getNodeConnectivity" visibility="private" method="_ouxaU7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_orW58LhLEe2uyMDTtZ4aHg" type="_ontwELhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oRJqMLhLEe2uyMDTtZ4aHg" name="getNodeNames" method="_ouxaVbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_orW58bhLEe2uyMDTtZ4aHg" type="_onvlQLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oRK4UbhLEe2uyMDTtZ4aHg" name="getNodesNamesOrderedAlphabetically" method="_ouxaV7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oRK4UrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oRK4U7hLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oRLfYbhLEe2uyMDTtZ4aHg" name="buildPosetOfActivations" method="_ouxaWrhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oRMGcLhLEe2uyMDTtZ4aHg" name="createEdgeLists" visibility="private" method="_ouxaW7hLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oRMGcbhLEe2uyMDTtZ4aHg" name="createConflictLists" visibility="private" method="_ouxaXLhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oRMtgLhLEe2uyMDTtZ4aHg" name="createGlobalConflictLists" visibility="private" method="_ouyBYLhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oRMtgbhLEe2uyMDTtZ4aHg" name="createLocalConflictLists" visibility="private" method="_ouyBYbhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oRNUkLhLEe2uyMDTtZ4aHg" name="createInitialActivations" visibility="private" method="_ouyBabhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oRN7oLhLEe2uyMDTtZ4aHg" name="getHyperPeriod" method="_ouyodLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oROisLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oROisbhLEe2uyMDTtZ4aHg" name="getMaxPhase" method="_ouyodrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oROisrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oRPw0LhLEe2uyMDTtZ4aHg" name="orderActivations" method="_ouyoeLhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oRPw0bhLEe2uyMDTtZ4aHg" name="getNextActivation" method="_ouyoebhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovfMBbhLEe2uyMDTtZ4aHg">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_oo3mo7hLEe2uyMDTtZ4aHg" type="_oOHkULhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oRQX4LhLEe2uyMDTtZ4aHg" name="findBaseStation" visibility="protected" method="_ouzPgLhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovfMB7hLEe2uyMDTtZ4aHg">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_oo3mprhLEe2uyMDTtZ4aHg" type="_oQ39YLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oo1xcLhLEe2uyMDTtZ4aHg" name="Poset" visibility="package" method="_ouxaULhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oo2YgbhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oo2YgrhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ovfMA7hLEe2uyMDTtZ4aHg">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_oo2YgLhLEe2uyMDTtZ4aHg" name="workload" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oo2Yg7hLEe2uyMDTtZ4aHg" type="_oRGm4LhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oo2_kLhLEe2uyMDTtZ4aHg" name="getMaxTx" visibility="private" method="_ouyBarhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oo2_kbhLEe2uyMDTtZ4aHg" name="node" type="_oQ39YLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oo2_krhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oo2_k7hLEe2uyMDTtZ4aHg" name="getActivation" visibility="private" method="_ouyocLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oo3moLhLEe2uyMDTtZ4aHg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oo3mobhLEe2uyMDTtZ4aHg" name="node" type="_oQ39YLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oo3morhLEe2uyMDTtZ4aHg" type="_oOHkULhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oo3mpLhLEe2uyMDTtZ4aHg" name="addActivation" method="_ouyoe7hLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovfMBrhLEe2uyMDTtZ4aHg">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_oo3mpbhLEe2uyMDTtZ4aHg" name="activation" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_orW58rhLEe2uyMDTtZ4aHg" name="findCoordinator" visibility="protected" method="_ouyBYrhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovfMBLhLEe2uyMDTtZ4aHg">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_orXhALhLEe2uyMDTtZ4aHg" name="nodesInFlow" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_orXhAbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_orYIELhLEe2uyMDTtZ4aHg" name="buildTxArray" visibility="private" method="_ouyBZbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_orYIEbhLEe2uyMDTtZ4aHg" name="nodesInFlow" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_orYIErhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_orYIE7hLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oRV3cLhLEe2uyMDTtZ4aHg" name="PreemptiveSchedule">
              <ownedComment xmi:id="_ovfMCLhLEe2uyMDTtZ4aHg">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_oo9tRrhLEe2uyMDTtZ4aHg" general="_oSiKQLhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouzPgrhLEe2uyMDTtZ4aHg" name="PreemptiveSchedule" specification="_oo40wLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouzPg7hLEe2uyMDTtZ4aHg" name="poset" type="_oRGm4LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouzPhLhLEe2uyMDTtZ4aHg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouzPhbhLEe2uyMDTtZ4aHg" type="_oRV3cLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouzPhrhLEe2uyMDTtZ4aHg" name="continueSearch" specification="_oo5b1bhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouzPh7hLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouzPiLhLEe2uyMDTtZ4aHg" name="activation" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouzPibhLEe2uyMDTtZ4aHg" type="_orZ9QLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouzPirhLEe2uyMDTtZ4aHg" name="toProgram" specification="_oRXsoLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouzPi7hLEe2uyMDTtZ4aHg" type="_oR54ILhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouz2kLhLEe2uyMDTtZ4aHg" name="findPreeptiveChannelAndTime" specification="_oo6p8LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouz2kbhLEe2uyMDTtZ4aHg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouz2krhLEe2uyMDTtZ4aHg" name="schedulableObject" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouz2k7hLEe2uyMDTtZ4aHg" type="_orZ9QLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouz2lLhLEe2uyMDTtZ4aHg" name="findAdditionalTime" specification="_oo6p87hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouz2lbhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouz2lrhLEe2uyMDTtZ4aHg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouz2l7hLEe2uyMDTtZ4aHg" name="a1" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouz2mLhLEe2uyMDTtZ4aHg" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouz2mbhLEe2uyMDTtZ4aHg" type="_onvlQLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouz2mrhLEe2uyMDTtZ4aHg" name="findMaxTimeAvailable" specification="_oo74EbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouz2m7hLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouz2nLhLEe2uyMDTtZ4aHg" name="schedulableObject" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouz2nbhLEe2uyMDTtZ4aHg" type="_orZ9QLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ouz2nrhLEe2uyMDTtZ4aHg" name="availableTime" specification="_oo8fILhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ouz2n7hLEe2uyMDTtZ4aHg" name="a1" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ouz2oLhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouz2obhLEe2uyMDTtZ4aHg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ouz2orhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou0doLhLEe2uyMDTtZ4aHg" name="addToSchedule" specification="_oo8fJbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou0dobhLEe2uyMDTtZ4aHg" name="next" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou0dorhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou0do7hLEe2uyMDTtZ4aHg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou0dpLhLEe2uyMDTtZ4aHg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou0dpbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou0dprhLEe2uyMDTtZ4aHg" name="addToSchedule" specification="_oo9tQLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou0dp7hLEe2uyMDTtZ4aHg" name="next" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou0dqLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oRXsoLhLEe2uyMDTtZ4aHg" name="toProgram" method="_ouzPirhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oo6C47hLEe2uyMDTtZ4aHg" type="_oR54ILhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oo40wLhLEe2uyMDTtZ4aHg" name="PreemptiveSchedule" visibility="package" method="_ouzPgrhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oo5b0rhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oo5b07hLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oo5b0LhLEe2uyMDTtZ4aHg" name="poset" type="_oRGm4LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oo5b0bhLEe2uyMDTtZ4aHg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oo5b1LhLEe2uyMDTtZ4aHg" type="_oRV3cLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oo5b1bhLEe2uyMDTtZ4aHg" name="continueSearch" visibility="protected" method="_ouzPhrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oo5b1rhLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oo5b17hLEe2uyMDTtZ4aHg" name="activation" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_orbLYbhLEe2uyMDTtZ4aHg" type="_orZ9QLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oo6p8LhLEe2uyMDTtZ4aHg" name="findPreeptiveChannelAndTime" visibility="private" method="_ouz2kLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oo6p8bhLEe2uyMDTtZ4aHg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oo6p8rhLEe2uyMDTtZ4aHg" name="schedulableObject" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_orbLYrhLEe2uyMDTtZ4aHg" type="_orZ9QLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oo6p87hLEe2uyMDTtZ4aHg" name="findAdditionalTime" visibility="private" method="_ouz2lLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oo6p9LhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oo6p9bhLEe2uyMDTtZ4aHg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oo6p9rhLEe2uyMDTtZ4aHg" name="a1" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oo6p97hLEe2uyMDTtZ4aHg" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_orbLY7hLEe2uyMDTtZ4aHg" type="_onvlQLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oo74EbhLEe2uyMDTtZ4aHg" name="findMaxTimeAvailable" visibility="private" method="_ouz2mrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oo74ErhLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oo74E7hLEe2uyMDTtZ4aHg" name="schedulableObject" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_orbLZLhLEe2uyMDTtZ4aHg" type="_orZ9QLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oo8fILhLEe2uyMDTtZ4aHg" name="availableTime" visibility="private" method="_ouz2nrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oo8fIbhLEe2uyMDTtZ4aHg" name="a1" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oo8fIrhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oo8fI7hLEe2uyMDTtZ4aHg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oo8fJLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oo8fJbhLEe2uyMDTtZ4aHg" name="addToSchedule" visibility="private" method="_ou0doLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oo8fJrhLEe2uyMDTtZ4aHg" name="next" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oo9GMLhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oo9GMbhLEe2uyMDTtZ4aHg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oo9GMrhLEe2uyMDTtZ4aHg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oo9GM7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oo9tQLhLEe2uyMDTtZ4aHg" name="addToSchedule" visibility="protected" method="_ou0dprhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oo9tQbhLEe2uyMDTtZ4aHg" name="next" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oo9tQrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oRdMMLhLEe2uyMDTtZ4aHg" name="PriorityComparator">
              <interfaceRealization xmi:id="_orbycLhLEe2uyMDTtZ4aHg" client="_oRdMMLhLEe2uyMDTtZ4aHg" supplier="_ooFjgLhLEe2uyMDTtZ4aHg" contract="_ooFjgLhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou1EsLhLEe2uyMDTtZ4aHg" name="compare" specification="_orcZgLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou1EsbhLEe2uyMDTtZ4aHg" name="obj1" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou1EsrhLEe2uyMDTtZ4aHg" name="obj2" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou1Es7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_orcZgLhLEe2uyMDTtZ4aHg" name="compare" method="_ou1EsLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_orcZgbhLEe2uyMDTtZ4aHg" name="obj1" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_orcZgrhLEe2uyMDTtZ4aHg" name="obj2" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_orcZg7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oReaULhLEe2uyMDTtZ4aHg" name="Program">
              <ownedComment xmi:id="_ovfMCbhLEe2uyMDTtZ4aHg">
                <body>Contains the main logic for constructing schedules given a schedule choice and number of channels.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_os8OULhLEe2uyMDTtZ4aHg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_os8OUbhLEe2uyMDTtZ4aHg" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_os81YLhLEe2uyMDTtZ4aHg" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_os81YbhLEe2uyMDTtZ4aHg" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_os81YrhLEe2uyMDTtZ4aHg" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_os81Y7hLEe2uyMDTtZ4aHg" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_os81ZLhLEe2uyMDTtZ4aHg" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_os81ZbhLEe2uyMDTtZ4aHg" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_os9ccLhLEe2uyMDTtZ4aHg" name="workLoad" visibility="package" type="_oUEbULhLEe2uyMDTtZ4aHg" association="_owYj4bhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_os9ccrhLEe2uyMDTtZ4aHg" name="scheduleBuilt" visibility="package" type="_oR54ILhLEe2uyMDTtZ4aHg" association="_owZK8LhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_os-DgbhLEe2uyMDTtZ4aHg" name="SchedulerSelected" visibility="package" type="_ordnoLhLEe2uyMDTtZ4aHg" association="_owZK87hLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_os-Dg7hLEe2uyMDTtZ4aHg" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_os-qkbhLEe2uyMDTtZ4aHg" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_os-qk7hLEe2uyMDTtZ4aHg" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_os_RobhLEe2uyMDTtZ4aHg" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_os_Ro7hLEe2uyMDTtZ4aHg" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_os_4sbhLEe2uyMDTtZ4aHg" name="channelsAvailable" visibility="package" type="_oO2kILhLEe2uyMDTtZ4aHg" association="_owZyAbhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otAfwbhLEe2uyMDTtZ4aHg" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otBG0LhLEe2uyMDTtZ4aHg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otBG0rhLEe2uyMDTtZ4aHg" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otBt4bhLEe2uyMDTtZ4aHg" name="deadlineMisses" visibility="private" type="_oPoAMLhLEe2uyMDTtZ4aHg" association="_owaZEbhLEe2uyMDTtZ4aHg"/>
              <interfaceRealization xmi:id="_opAJgLhLEe2uyMDTtZ4aHg" client="_oReaULhLEe2uyMDTtZ4aHg" supplier="_oS3hcLhLEe2uyMDTtZ4aHg" contract="_oS3hcLhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou1EtLhLEe2uyMDTtZ4aHg" name="Program" specification="_oreOsLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou1EtbhLEe2uyMDTtZ4aHg" name="workLoad" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou1EtrhLEe2uyMDTtZ4aHg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou1Et7hLEe2uyMDTtZ4aHg" name="choice" type="_ordnoLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou1EuLhLEe2uyMDTtZ4aHg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou1EubhLEe2uyMDTtZ4aHg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou1EurhLEe2uyMDTtZ4aHg" type="_oReaULhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou1Eu7hLEe2uyMDTtZ4aHg" name="Program" specification="_orfc0LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou1EvLhLEe2uyMDTtZ4aHg" name="workLoad" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou1EvbhLEe2uyMDTtZ4aHg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou1EvrhLEe2uyMDTtZ4aHg" name="choice" type="_ordnoLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou1Ev7hLEe2uyMDTtZ4aHg" type="_oReaULhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou1rwLhLEe2uyMDTtZ4aHg" name="setDefaultParameters" specification="_opBXoLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou1rwbhLEe2uyMDTtZ4aHg" name="workLoad" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou1rwrhLEe2uyMDTtZ4aHg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou1rw7hLEe2uyMDTtZ4aHg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou1rxLhLEe2uyMDTtZ4aHg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou1rxbhLEe2uyMDTtZ4aHg" name="toWorkLoad" specification="_oRiEsLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou1rxrhLEe2uyMDTtZ4aHg" type="_oUEbULhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou1rx7hLEe2uyMDTtZ4aHg" name="buildProgram" specification="_orfc17hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou1ryLhLEe2uyMDTtZ4aHg" name="choice" type="_ordnoLhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou1rybhLEe2uyMDTtZ4aHg" name="buildOriginalProgram" specification="_oRirwLhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); &#xD;
   // create a time slot for nNodes, each initialized with a SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { &#xD;
     	// don't push for last node, so stop at node n-1, which is 2 less than count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); &#xD;
         // make sure precedence constraints on flow are preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { &#xD;
         	// instructionIndex is beyond current schedule length. Increase schedule and channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); &#xD;
             // create a time slot for nNodes, each initialized with a SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); &#xD;
             // need make sure we have channels available for all slots. instructionIndex may be >&#xD;
             // initialized size of array because of phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); &#xD;
               // create a time slot for nNodes, each initialized with a SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; &#xD;
           // get instruction scheduled for snk to execute in the prior time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { &#xD;
             	// The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; &#xD;
               // get instruction scheduled for sink/curentNodeName) to execute in the prior time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { &#xD;
             	  // will try to push and pull to/from the same node, so use the prior instruction channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou1ryrhLEe2uyMDTtZ4aHg" name="waitInstruction" specification="_oRirwbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou1ry7hLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou1rzLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou1rzbhLEe2uyMDTtZ4aHg" name="elseWaitInstruction" specification="_oRjS0bhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou1rzrhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou1rz7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou1r0LhLEe2uyMDTtZ4aHg" name="elsePullClause" specification="_oRj54LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou1r0bhLEe2uyMDTtZ4aHg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou1r0rhLEe2uyMDTtZ4aHg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou1r07hLEe2uyMDTtZ4aHg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou1r1LhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou1r1bhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou2S0LhLEe2uyMDTtZ4aHg" name="hasPushInstruction" specification="_oRkg8bhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou2S0bhLEe2uyMDTtZ4aHg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou2S0rhLEe2uyMDTtZ4aHg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou2S07hLEe2uyMDTtZ4aHg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou2S1LhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou2S1bhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou2S1rhLEe2uyMDTtZ4aHg" name="pushInstruction" specification="_oRlvELhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou2S17hLEe2uyMDTtZ4aHg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou2S2LhLEe2uyMDTtZ4aHg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou2S2bhLEe2uyMDTtZ4aHg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou2S2rhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou2S27hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou2S3LhLEe2uyMDTtZ4aHg" name="getFirstChannelInInstruction" specification="_oRmWILhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou2S3bhLEe2uyMDTtZ4aHg" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou2S3rhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou2S37hLEe2uyMDTtZ4aHg" name="findNextAvailableInstructionTimeSlot" specification="_opB-sbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou2S4LhLEe2uyMDTtZ4aHg" name="schedule" type="_oR54ILhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou2S4bhLEe2uyMDTtZ4aHg" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou2S4rhLEe2uyMDTtZ4aHg" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou2S47hLEe2uyMDTtZ4aHg" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou2S5LhLEe2uyMDTtZ4aHg" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou2S5bhLEe2uyMDTtZ4aHg" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ou2S5rhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou2S57hLEe2uyMDTtZ4aHg" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ou2S6LhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou2S6bhLEe2uyMDTtZ4aHg" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou2S6rhLEe2uyMDTtZ4aHg" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou2S67hLEe2uyMDTtZ4aHg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou2S7LhLEe2uyMDTtZ4aHg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou2S7bhLEe2uyMDTtZ4aHg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou2S7rhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou254LhLEe2uyMDTtZ4aHg" name="slotIsAvailable" specification="_opDM0rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou254bhLEe2uyMDTtZ4aHg" name="currentInstructionTimeSlot" type="_oQqiALhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou254rhLEe2uyMDTtZ4aHg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou2547hLEe2uyMDTtZ4aHg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou255LhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou255bhLEe2uyMDTtZ4aHg" name="findNextAvailableChannel" specification="_opDz4bhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou255rhLEe2uyMDTtZ4aHg" name="schedule" type="_oR54ILhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou2557hLEe2uyMDTtZ4aHg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou256LhLEe2uyMDTtZ4aHg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou256bhLEe2uyMDTtZ4aHg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou256rhLEe2uyMDTtZ4aHg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou2567hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check&#xD;
                           // this result&#xD;
&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
 InstructionTimeSlot priorInstructionTimeSlot;&#xD;
&#xD;
 var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
 if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in&#xD;
                        // that slot, which have to be avoided here&#xD;
   Integer priorTime = currentTime - 1;&#xD;
   priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
   var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
   var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
   // extract the channels used by the src and snk nodes in the prior time slot and store them in&#xD;
   // an array&#xD;
   var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get&#xD;
                                                                                           // the&#xD;
                                                                                           // parameters&#xD;
                                                                                           // from&#xD;
                                                                                           // the&#xD;
                                                                                           // instruction&#xD;
                                                                                           // in&#xD;
                                                                                           // the&#xD;
                                                                                           // src&#xD;
                                                                                           // node's&#xD;
                                                                                           // prior&#xD;
                                                                                           // time&#xD;
                                                                                           // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
   instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the&#xD;
                                                                                       // parameters&#xD;
                                                                                       // from&#xD;
                                                                                       // the&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in the&#xD;
                                                                                       // snk&#xD;
                                                                                       // node's&#xD;
                                                                                       // prior&#xD;
                                                                                       // time&#xD;
                                                                                       // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
 }&#xD;
 Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node&#xD;
 channel++; // increment the channel because we don't use the same channel in consecutive time&#xD;
            // slots for the same node&#xD;
 if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits&#xD;
                                    // max&#xD;
   channel = 0;&#xD;
 }&#xD;
 var channelFound = false;&#xD;
 while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of&#xD;
                                                // channels to assign&#xD;
   var channelString = String.valueOf(channel);&#xD;
   var channelRemoved = channels.remove(channelString);&#xD;
   if (channelRemoved) {&#xD;
     // newChannel has the channel&#xD;
     newChannel = channelString;&#xD;
     channelFound = true;&#xD;
   } else {&#xD;
     // try another channel&#xD;
     channel += 1;&#xD;
     if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel&#xD;
                                        // hits max&#xD;
       channel = 0;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou257LhLEe2uyMDTtZ4aHg" name="selectPriority" specification="_oRnkQLhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou257bhLEe2uyMDTtZ4aHg" name="selectRM" specification="_oRoLULhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou257rhLEe2uyMDTtZ4aHg" name="selectDM" specification="_oRoLUbhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou2577hLEe2uyMDTtZ4aHg" name="selectRtHART" specification="_oRoLUrhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou258LhLEe2uyMDTtZ4aHg" name="setScheduleSelected" specification="_orgD4bhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou258bhLEe2uyMDTtZ4aHg" name="choice" type="_ordnoLhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou3g8LhLEe2uyMDTtZ4aHg" name="setSchedule" specification="_opEa87hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou3g8bhLEe2uyMDTtZ4aHg" name="schedule" type="_oR54ILhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou3g8rhLEe2uyMDTtZ4aHg" name="getSchedule" specification="_oRoLU7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou3g87hLEe2uyMDTtZ4aHg" type="_oR54ILhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou3g9LhLEe2uyMDTtZ4aHg" name="getSchedulerName" specification="_oRoyYLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou3g9bhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou3g9rhLEe2uyMDTtZ4aHg" name="getSchChoice" specification="_oRpZcLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou3g97hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou4IALhLEe2uyMDTtZ4aHg" name="getNumChannels" specification="_oRpZcrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou4IAbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou4IArhLEe2uyMDTtZ4aHg" name="getNumTransmissions" specification="_oRqnkbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou4IA7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou4IBLhLEe2uyMDTtZ4aHg" name="getRealTimeHartFlag" specification="_oRrOobhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou4IBbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou4IBrhLEe2uyMDTtZ4aHg" name="setRealTimeHartFlag" specification="_oRrOo7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou4IB7hLEe2uyMDTtZ4aHg" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou4ICLhLEe2uyMDTtZ4aHg" name="getMinPacketReceptionRate" specification="_oRr1sLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou4ICbhLEe2uyMDTtZ4aHg" type="_orgq8LhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou4ICrhLEe2uyMDTtZ4aHg" name="getE2e" specification="_oRtD0rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou4IC7hLEe2uyMDTtZ4aHg" type="_orgq8LhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou4IDLhLEe2uyMDTtZ4aHg" name="getName" specification="_oRuR8LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou4IDbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou4IDrhLEe2uyMDTtZ4aHg" name="getOptimizationFlag" specification="_oRu5ALhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou4ID7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou4vELhLEe2uyMDTtZ4aHg" name="deadlineMisses" specification="_oRwHIrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou4vEbhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou4vErhLEe2uyMDTtZ4aHg" name="getNumFaults" specification="_oRwHI7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou4vE7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou4vFLhLEe2uyMDTtZ4aHg" name="getNodeMapIndex" specification="_oRxVQrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou4vFbhLEe2uyMDTtZ4aHg" type="_ontwELhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
                                                                  // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndexMap = new HashMap&lt;String, Integer>(); // create a new mapping from node names to&#xD;
                                                    // index in schedule&#xD;
 // table&#xD;
 var nNodes = orderedNodes.length;&#xD;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
   var name = orderedNodes[index];&#xD;
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
 }&#xD;
 return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oRiEsLhLEe2uyMDTtZ4aHg" name="toWorkLoad" method="_ou1rxbhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovfMCrhLEe2uyMDTtZ4aHg">
                  <body>Getter method to retrieve workLoad from which schedules are built.</body>
                </ownedComment>
                <ownedParameter xmi:id="_opB-sLhLEe2uyMDTtZ4aHg" type="_oUEbULhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oRirwLhLEe2uyMDTtZ4aHg" name="buildOriginalProgram" method="_ou1rybhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oRirwbhLEe2uyMDTtZ4aHg" name="waitInstruction" visibility="private" method="_ou1ryrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oRirwrhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oRjS0LhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oRjS0bhLEe2uyMDTtZ4aHg" name="elseWaitInstruction" visibility="private" method="_ou1rzbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oRjS0rhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oRjS07hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oRj54LhLEe2uyMDTtZ4aHg" name="elsePullClause" visibility="private" method="_ou1r0LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oRj54bhLEe2uyMDTtZ4aHg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oRj54rhLEe2uyMDTtZ4aHg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oRj547hLEe2uyMDTtZ4aHg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oRj55LhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oRkg8LhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oRkg8bhLEe2uyMDTtZ4aHg" name="hasPushInstruction" visibility="private" method="_ou2S0LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oRlIALhLEe2uyMDTtZ4aHg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oRlIAbhLEe2uyMDTtZ4aHg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oRlIArhLEe2uyMDTtZ4aHg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oRlIA7hLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oRlIBLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oRlvELhLEe2uyMDTtZ4aHg" name="pushInstruction" visibility="private" method="_ou2S1rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oRlvEbhLEe2uyMDTtZ4aHg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oRlvErhLEe2uyMDTtZ4aHg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oRlvE7hLEe2uyMDTtZ4aHg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oRlvFLhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oRlvFbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oRmWILhLEe2uyMDTtZ4aHg" name="getFirstChannelInInstruction" visibility="private" method="_ou2S3LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oRmWIbhLEe2uyMDTtZ4aHg" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oRmWIrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oRnkQLhLEe2uyMDTtZ4aHg" name="selectPriority" method="_ou257LhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oRoLULhLEe2uyMDTtZ4aHg" name="selectRM" method="_ou257bhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oRoLUbhLEe2uyMDTtZ4aHg" name="selectDM" method="_ou257rhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oRoLUrhLEe2uyMDTtZ4aHg" name="selectRtHART" method="_ou2577hLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oRoLU7hLEe2uyMDTtZ4aHg" name="getSchedule" method="_ou3g8rhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovfzELhLEe2uyMDTtZ4aHg">
                  <body>Getter method to retrieve built schedule from program.</body>
                </ownedComment>
                <ownedParameter xmi:id="_opEa9bhLEe2uyMDTtZ4aHg" type="_oR54ILhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oRoyYLhLEe2uyMDTtZ4aHg" name="getSchedulerName" method="_ou3g9LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oRoyYbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oRpZcLhLEe2uyMDTtZ4aHg" name="getSchChoice" method="_ou3g9rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oRpZcbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oRpZcrhLEe2uyMDTtZ4aHg" name="getNumChannels" method="_ou4IALhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oRqAgLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oRqnkbhLEe2uyMDTtZ4aHg" name="getNumTransmissions" method="_ou4IArhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oRqnkrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oRrOobhLEe2uyMDTtZ4aHg" name="getRealTimeHartFlag" visibility="private" method="_ou4IBLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oRrOorhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oRrOo7hLEe2uyMDTtZ4aHg" name="setRealTimeHartFlag" visibility="private" method="_ou4IBrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oRrOpLhLEe2uyMDTtZ4aHg" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oRr1sLhLEe2uyMDTtZ4aHg" name="getMinPacketReceptionRate" method="_ou4ICLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_orgq8rhLEe2uyMDTtZ4aHg" type="_orgq8LhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oRtD0rhLEe2uyMDTtZ4aHg" name="getE2e" method="_ou4ICrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_orhSALhLEe2uyMDTtZ4aHg" type="_orgq8LhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oRuR8LhLEe2uyMDTtZ4aHg" name="getName" method="_ou4IDLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oRuR8bhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oRu5ALhLEe2uyMDTtZ4aHg" name="getOptimizationFlag" method="_ou4IDrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oRu5AbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oRwHIrhLEe2uyMDTtZ4aHg" name="deadlineMisses" method="_ou4vELhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opEa9rhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oRwHI7hLEe2uyMDTtZ4aHg" name="getNumFaults" method="_ou4vErhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oRwuMLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oRxVQrhLEe2uyMDTtZ4aHg" name="getNodeMapIndex" method="_ou4vFLhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovfzEbhLEe2uyMDTtZ4aHg">
                  <body>Maps nodes from workload to their respective indexes.&#xD;
   * &#xD;
   * @return HashMap of node indexes</body>
                </ownedComment>
                <ownedParameter xmi:id="_orhSAbhLEe2uyMDTtZ4aHg" type="_ontwELhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_opBXoLhLEe2uyMDTtZ4aHg" name="setDefaultParameters" visibility="private" method="_ou1rwLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opBXobhLEe2uyMDTtZ4aHg" name="workLoad" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opBXorhLEe2uyMDTtZ4aHg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opBXo7hLEe2uyMDTtZ4aHg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opBXpLhLEe2uyMDTtZ4aHg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_opB-sbhLEe2uyMDTtZ4aHg" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_ou2S37hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opB-srhLEe2uyMDTtZ4aHg" name="schedule" type="_oR54ILhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opClwLhLEe2uyMDTtZ4aHg" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opClwbhLEe2uyMDTtZ4aHg" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opClwrhLEe2uyMDTtZ4aHg" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opClw7hLEe2uyMDTtZ4aHg" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opClxLhLEe2uyMDTtZ4aHg" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_opDM0LhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opClxbhLEe2uyMDTtZ4aHg" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_opDM0bhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opClxrhLEe2uyMDTtZ4aHg" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opClx7hLEe2uyMDTtZ4aHg" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opClyLhLEe2uyMDTtZ4aHg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opClybhLEe2uyMDTtZ4aHg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opClyrhLEe2uyMDTtZ4aHg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opCly7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_opDM0rhLEe2uyMDTtZ4aHg" name="slotIsAvailable" visibility="private" method="_ou254LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opDM07hLEe2uyMDTtZ4aHg" name="currentInstructionTimeSlot" type="_oQqiALhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opDM1LhLEe2uyMDTtZ4aHg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opDM1bhLEe2uyMDTtZ4aHg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opDz4LhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_opDz4bhLEe2uyMDTtZ4aHg" name="findNextAvailableChannel" visibility="private" method="_ou255bhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opDz4rhLEe2uyMDTtZ4aHg" name="schedule" type="_oR54ILhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opDz47hLEe2uyMDTtZ4aHg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opDz5LhLEe2uyMDTtZ4aHg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opEa8LhLEe2uyMDTtZ4aHg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opEa8bhLEe2uyMDTtZ4aHg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opEa8rhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_opEa87hLEe2uyMDTtZ4aHg" name="setSchedule" visibility="private" method="_ou3g8LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opEa9LhLEe2uyMDTtZ4aHg" name="schedule" type="_oR54ILhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oreOsLhLEe2uyMDTtZ4aHg" name="Program" visibility="package" method="_ou1EtLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_ore1w7hLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ore1xLhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oreOsbhLEe2uyMDTtZ4aHg" name="workLoad" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oreOsrhLEe2uyMDTtZ4aHg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ore1wLhLEe2uyMDTtZ4aHg" name="choice" type="_ordnoLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ore1wbhLEe2uyMDTtZ4aHg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ore1wrhLEe2uyMDTtZ4aHg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ore1xbhLEe2uyMDTtZ4aHg" type="_oReaULhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_orfc0LhLEe2uyMDTtZ4aHg" name="Program" visibility="package" method="_ou1Eu7hLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_orfc1LhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_orfc1bhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_orfc0bhLEe2uyMDTtZ4aHg" name="workLoad" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_orfc0rhLEe2uyMDTtZ4aHg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_orfc07hLEe2uyMDTtZ4aHg" name="choice" type="_ordnoLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_orfc1rhLEe2uyMDTtZ4aHg" type="_oReaULhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_orfc17hLEe2uyMDTtZ4aHg" name="buildProgram" method="_ou1rx7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_orgD4LhLEe2uyMDTtZ4aHg" name="choice" type="_ordnoLhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_orgD4bhLEe2uyMDTtZ4aHg" name="setScheduleSelected" visibility="private" method="_ou258LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_orgD4rhLEe2uyMDTtZ4aHg" name="choice" type="_ordnoLhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oR54ILhLEe2uyMDTtZ4aHg" name="ProgramSchedule">
              <generalization xmi:id="_opHeQLhLEe2uyMDTtZ4aHg" general="_oS_dQLhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otDjELhLEe2uyMDTtZ4aHg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otDjEbhLEe2uyMDTtZ4aHg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou5WILhLEe2uyMDTtZ4aHg" name="ProgramSchedule" specification="_oR54IbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou5WIbhLEe2uyMDTtZ4aHg" type="_oR54ILhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou5WIrhLEe2uyMDTtZ4aHg" name="ProgramSchedule" specification="_oR7GQLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou5WI7hLEe2uyMDTtZ4aHg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou5WJLhLEe2uyMDTtZ4aHg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou5WJbhLEe2uyMDTtZ4aHg" type="_oR54ILhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oR54IbhLEe2uyMDTtZ4aHg" name="ProgramSchedule" method="_ou5WILhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oR54IrhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oR6fMLhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oR6fMbhLEe2uyMDTtZ4aHg" type="_oR54ILhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oR7GQLhLEe2uyMDTtZ4aHg" name="ProgramSchedule" visibility="package" method="_ou5WIrhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oR7GQ7hLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oR7GRLhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oR7GQbhLEe2uyMDTtZ4aHg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oR7GQrhLEe2uyMDTtZ4aHg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oR7tULhLEe2uyMDTtZ4aHg" type="_oR54ILhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oR8UYLhLEe2uyMDTtZ4aHg" name="ProgramVisualization">
              <ownedComment xmi:id="_ovfzErhLEe2uyMDTtZ4aHg">
                <body>Allows the user to generate a GUI to visualize WARP data given by .dsl files.&#xD;
If applicable, the GUI will contain minimum packet reception rate, End-to-End transmission reliability, &#xD;
and number of channels.&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_opIsZrhLEe2uyMDTtZ4aHg" general="_oTRKELhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otDjErhLEe2uyMDTtZ4aHg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otDjE7hLEe2uyMDTtZ4aHg" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otDjFLhLEe2uyMDTtZ4aHg" name="sourceCode" visibility="private" type="_oR54ILhLEe2uyMDTtZ4aHg" association="_owaZFLhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otEKIbhLEe2uyMDTtZ4aHg" name="program" visibility="private" type="_oReaULhLEe2uyMDTtZ4aHg" association="_owbAIbhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otEKI7hLEe2uyMDTtZ4aHg" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou5WJrhLEe2uyMDTtZ4aHg" name="ProgramVisualization" specification="_opIFUbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou5WJ7hLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou5WKLhLEe2uyMDTtZ4aHg" type="_oR8UYLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou5WKbhLEe2uyMDTtZ4aHg" name="displayVisualization" specification="_oR9igLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou5WKrhLEe2uyMDTtZ4aHg" type="_oQe70LhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou59MLhLEe2uyMDTtZ4aHg" name="createHeader" specification="_oR-JkrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou59MbhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(createTitle());&#xD;
 header.add(String.format(&quot;Scheduler Name: %s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumFaults() > 0) { // only specify when deterministic fault model is assumed&#xD;
   header.add(String.format(&quot;numFaults: %d\n&quot;, program.getNumFaults()));&#xD;
 }&#xD;
 header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
 header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(program.getE2e())));&#xD;
 header.add(String.format(&quot;nChannels: %d\n&quot;, program.getNumChannels()));&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou59MrhLEe2uyMDTtZ4aHg" name="createFooter" specification="_oR_XsrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou59M7hLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou59NLhLEe2uyMDTtZ4aHg" name="createColumnHeader" specification="_oSAl0rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou59NbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ou59NrhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
 String[] columnNames = new String[orderedNodes.length + 1];&#xD;
 columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first&#xD;
 /* loop through the node names, adding each to the header */&#xD;
 for (int i = 0; i &lt; orderedNodes.length; i++) {&#xD;
   columnNames[i + 1] = orderedNodes[i];&#xD;
 }&#xD;
 return columnNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou59N7hLEe2uyMDTtZ4aHg" name="createVisualizationData" specification="_oSBz8rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou59OLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ou59ObhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
   int numRows = sourceCode.getNumRows();&#xD;
   int numColumns = sourceCode.getNumColumns();&#xD;
   visualizationData = new String[numRows][numColumns + 1];&#xD;
&#xD;
   for (int row = 0; row &lt; numRows; row++) {&#xD;
     visualizationData[row][0] = String.format(&quot;%s&quot;, row);&#xD;
     for (int column = 0; column &lt; numColumns; column++) {&#xD;
       visualizationData[row][column + 1] = sourceCode.get(row, column);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return visualizationData;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou59OrhLEe2uyMDTtZ4aHg" name="createTitle" specification="_oSDCErhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou59O7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;WARP program for graph %s\n&quot;, program.getName());&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oR9igLhLEe2uyMDTtZ4aHg" name="displayVisualization" method="_ou5WKbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opIsY7hLEe2uyMDTtZ4aHg" type="_oQe70LhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oR-JkrhLEe2uyMDTtZ4aHg" name="createHeader" visibility="protected" method="_ou59MLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opIsZLhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oR_XsrhLEe2uyMDTtZ4aHg" name="createFooter" visibility="protected" method="_ou59MrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opIsZbhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oSAl0rhLEe2uyMDTtZ4aHg" name="createColumnHeader" visibility="protected" method="_ou59NLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oSBM4LhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oSBM4bhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oSBz8rhLEe2uyMDTtZ4aHg" name="createVisualizationData" visibility="protected" method="_ou59N7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oSCbALhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oSCbAbhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oSDCErhLEe2uyMDTtZ4aHg" name="createTitle" visibility="private" method="_ou59OrhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovfzFLhLEe2uyMDTtZ4aHg">
                  <body>Creates a title for the GUI using the name from the program.&#xD;
   * &#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_oSDCE7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_opIFUbhLEe2uyMDTtZ4aHg" name="ProgramVisualization" visibility="package" method="_ou5WJrhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_opIsYLhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_opIsYbhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ovfzE7hLEe2uyMDTtZ4aHg">
                  <body>Constructor for new ProgramVisualization. Used WARP file as input changes it to&#xD;
   * a program and gets the schedule and deadlines met.&#xD;
   * &#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_opIFUrhLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opIsYrhLEe2uyMDTtZ4aHg" type="_oR8UYLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oSGFYLhLEe2uyMDTtZ4aHg" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_orjHMLhLEe2uyMDTtZ4aHg" client="_oSGFYLhLEe2uyMDTtZ4aHg" supplier="_ooFjgLhLEe2uyMDTtZ4aHg" contract="_ooFjgLhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou6kQLhLEe2uyMDTtZ4aHg" name="compare" specification="_orjuQLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou6kQbhLEe2uyMDTtZ4aHg" name="obj1" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou6kQrhLEe2uyMDTtZ4aHg" name="obj2" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou6kQ7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_orjuQLhLEe2uyMDTtZ4aHg" name="compare" method="_ou6kQLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_orjuQbhLEe2uyMDTtZ4aHg" name="obj1" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_orjuQrhLEe2uyMDTtZ4aHg" name="obj2" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_orjuQ7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oSIhoLhLEe2uyMDTtZ4aHg" name="ReleaseTimeQueue">
              <generalization xmi:id="_oSLk8LhLEe2uyMDTtZ4aHg" general="_oSKW0bhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otFYQLhLEe2uyMDTtZ4aHg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otFYQbhLEe2uyMDTtZ4aHg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou6kRLhLEe2uyMDTtZ4aHg" name="ReleaseTimeQueue" specification="_oSJvwbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou6kRbhLEe2uyMDTtZ4aHg" type="_oSIhoLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou6kRrhLEe2uyMDTtZ4aHg" name="ReleaseTimeQueue" specification="_opJ6gLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou6kR7hLEe2uyMDTtZ4aHg" name="schedulableObjects" type="_oo1KYLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou6kSLhLEe2uyMDTtZ4aHg" type="_oSIhoLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oSJvwbhLEe2uyMDTtZ4aHg" name="ReleaseTimeQueue" visibility="package" method="_ou6kRLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oSJvwrhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oSJvw7hLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oSKW0LhLEe2uyMDTtZ4aHg" type="_oSIhoLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_opJ6gLhLEe2uyMDTtZ4aHg" name="ReleaseTimeQueue" visibility="package" method="_ou6kRrhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_opKhkbhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_opKhkrhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_opKhkLhLEe2uyMDTtZ4aHg" name="schedulableObjects" type="_oo1KYLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opKhk7hLEe2uyMDTtZ4aHg" type="_oSIhoLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oSMzELhLEe2uyMDTtZ4aHg" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_ovfzFbhLEe2uyMDTtZ4aHg">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages transmitted in flows for the&#xD;
WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The end-to-end&#xD;
reliability for each flow, flow:src->sink, is computed iteratively as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released. All other initial&#xD;
probabilities are 0.0. (That is, the reset of the nodes in the flow have an initial probability&#xD;
value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState = (1-M)*PrevSnkNodeState +&#xD;
M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by the node SinkNode.&#xD;
Thus, the NewSinkNodeState probability will increase each time a push or pull is executed with&#xD;
SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the message reaching that&#xD;
node, and the end-to-end reliability of a flow is the value of the last Flow:SinkNode&#xD;
probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to compute the probabilities the comprise the&#xD;
ReliablityMatrix, which is the core of the file visualization that is requested in Warp.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the instructions for each node,&#xD;
in each time slot, to extract the src and snk nodes in the instruction and then apply the message&#xD;
success probability equation defined above.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to extract the src and&#xD;
snk nodes from the instruction string in a program schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou6kSbhLEe2uyMDTtZ4aHg" name="ReliabilityAnalysis" specification="_opLIobhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou6kSrhLEe2uyMDTtZ4aHg" name="program" type="_oReaULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou6kS7hLEe2uyMDTtZ4aHg" type="_oSMzELhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>// TODO Auto-generated constructor stub&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou7LULhLEe2uyMDTtZ4aHg" name="verifyReliabilities" specification="_oSNaILhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou7LUbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
 return true;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oSNaILhLEe2uyMDTtZ4aHg" name="verifyReliabilities" method="_ou7LULhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oSOBMLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_opLIobhLEe2uyMDTtZ4aHg" name="ReliabilityAnalysis" method="_ou6kSbhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_opLvsbhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_opLvsrhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_opLvsLhLEe2uyMDTtZ4aHg" name="program" type="_oReaULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opLvs7hLEe2uyMDTtZ4aHg" type="_oSMzELhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_oSOoQLhLEe2uyMDTtZ4aHg" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_ovfzFrhLEe2uyMDTtZ4aHg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_oSPPULhLEe2uyMDTtZ4aHg" name="minPacketReceptionRate" type="_orgq8LhLEe2uyMDTtZ4aHg" isReadOnly="true"/>
              <ownedAttribute xmi:id="_oSP2YLhLEe2uyMDTtZ4aHg" name="e2e" type="_orgq8LhLEe2uyMDTtZ4aHg" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oSQdcLhLEe2uyMDTtZ4aHg" name="ReliabilityRow">
              <generalization xmi:id="_opMWwLhLEe2uyMDTtZ4aHg" general="_oSbckLhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otFYQrhLEe2uyMDTtZ4aHg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otFYQ7hLEe2uyMDTtZ4aHg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou7LUrhLEe2uyMDTtZ4aHg" name="ReliabilityRow" specification="_oSREgLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou7LU7hLEe2uyMDTtZ4aHg" type="_oSQdcLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou7LVLhLEe2uyMDTtZ4aHg" name="ReliabilityRow" specification="_ork8YLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou7LVbhLEe2uyMDTtZ4aHg" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou7LVrhLEe2uyMDTtZ4aHg" name="element" type="_orgq8LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou7LV7hLEe2uyMDTtZ4aHg" type="_oSQdcLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou7LWLhLEe2uyMDTtZ4aHg" name="ReliabilityRow" specification="_orljcLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou7LWbhLEe2uyMDTtZ4aHg" name="rowArray" type="_orgq8LhLEe2uyMDTtZ4aHg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ou7LWrhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou7LW7hLEe2uyMDTtZ4aHg" type="_oSQdcLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oSREgLhLEe2uyMDTtZ4aHg" name="ReliabilityRow" method="_ou7LUrhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oSRrkLhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oSRrkbhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oSRrkrhLEe2uyMDTtZ4aHg" type="_oSQdcLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ork8YLhLEe2uyMDTtZ4aHg" name="ReliabilityRow" visibility="package" method="_ou7LVLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_ork8Y7hLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ork8ZLhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ork8YbhLEe2uyMDTtZ4aHg" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ork8YrhLEe2uyMDTtZ4aHg" name="element" type="_orgq8LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ork8ZbhLEe2uyMDTtZ4aHg" type="_oSQdcLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_orljcLhLEe2uyMDTtZ4aHg" name="ReliabilityRow" visibility="package" method="_ou7LWLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_orljcrhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_orljc7hLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_orljcbhLEe2uyMDTtZ4aHg" name="rowArray" type="_orgq8LhLEe2uyMDTtZ4aHg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_orljdbhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_orljdLhLEe2uyMDTtZ4aHg" type="_oSQdcLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oSS5sLhLEe2uyMDTtZ4aHg" name="ReliabilityTable">
              <generalization xmi:id="_opM90LhLEe2uyMDTtZ4aHg" general="_oS_dQLhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otFYRLhLEe2uyMDTtZ4aHg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otFYRbhLEe2uyMDTtZ4aHg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou7LXLhLEe2uyMDTtZ4aHg" name="ReliabilityTable" specification="_oSTgwLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou7LXbhLEe2uyMDTtZ4aHg" type="_oSS5sLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou7yYLhLEe2uyMDTtZ4aHg" name="ReliabilityTable" specification="_oSUH0LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou7yYbhLEe2uyMDTtZ4aHg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou7yYrhLEe2uyMDTtZ4aHg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou7yY7hLEe2uyMDTtZ4aHg" type="_oSS5sLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oSTgwLhLEe2uyMDTtZ4aHg" name="ReliabilityTable" method="_ou7LXLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oSTgwbhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oSTgwrhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oSTgw7hLEe2uyMDTtZ4aHg" type="_oSS5sLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oSUH0LhLEe2uyMDTtZ4aHg" name="ReliabilityTable" visibility="package" method="_ou7yYLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oSUH07hLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oSUH1LhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oSUH0bhLEe2uyMDTtZ4aHg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSUH0rhLEe2uyMDTtZ4aHg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSUH1bhLEe2uyMDTtZ4aHg" type="_oSS5sLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oSUu4LhLEe2uyMDTtZ4aHg" name="ReliabilityVisualization">
              <ownedComment xmi:id="_ovfzF7hLEe2uyMDTtZ4aHg">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to create&#xD;
the file visualization that is requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_opOzALhLEe2uyMDTtZ4aHg" general="_oTRKELhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otF_ULhLEe2uyMDTtZ4aHg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otF_UbhLEe2uyMDTtZ4aHg" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otF_UrhLEe2uyMDTtZ4aHg" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otF_U7hLEe2uyMDTtZ4aHg" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otF_VLhLEe2uyMDTtZ4aHg" name="warp" visibility="private" type="_oTo9gLhLEe2uyMDTtZ4aHg" association="_owbnMbhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otGmYbhLEe2uyMDTtZ4aHg" name="ra" visibility="private" type="_oSMzELhLEe2uyMDTtZ4aHg" association="_owcOQLhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou7yZLhLEe2uyMDTtZ4aHg" name="ReliabilityVisualization" specification="_opOL8LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou7yZbhLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou7yZrhLEe2uyMDTtZ4aHg" type="_oSUu4LhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_opOL8LhLEe2uyMDTtZ4aHg" name="ReliabilityVisualization" visibility="package" method="_ou7yZLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_opOL8rhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_opOL87hLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_opOL8bhLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opOL9LhLEe2uyMDTtZ4aHg" type="_oSUu4LhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oSWkELhLEe2uyMDTtZ4aHg" name="ReportVisualization">
              <generalization xmi:id="_opQBIrhLEe2uyMDTtZ4aHg" general="_oTRKELhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otGmY7hLEe2uyMDTtZ4aHg" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otHNcLhLEe2uyMDTtZ4aHg" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otHNcbhLEe2uyMDTtZ4aHg" name="content" visibility="private" type="_oPoAMLhLEe2uyMDTtZ4aHg" association="_owcOQ7hLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otHNc7hLEe2uyMDTtZ4aHg" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou7yZ7hLEe2uyMDTtZ4aHg" name="ReportVisualization" specification="_opPaELhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou7yaLhLEe2uyMDTtZ4aHg" name="fm" type="_oP330LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou7yabhLEe2uyMDTtZ4aHg" name="warp" type="_oS3hcLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou7yarhLEe2uyMDTtZ4aHg" name="content" type="_oPoAMLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou7ya7hLEe2uyMDTtZ4aHg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou7ybLhLEe2uyMDTtZ4aHg" type="_oSWkELhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou7ybbhLEe2uyMDTtZ4aHg" name="visualization" specification="_oSYZQLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou7ybrhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou7yb7hLEe2uyMDTtZ4aHg" name="createReport" specification="_oSZnYLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou7ycLhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oSYZQLhLEe2uyMDTtZ4aHg" name="visualization" method="_ou7ybbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opQBILhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oSZnYLhLEe2uyMDTtZ4aHg" name="createReport" visibility="private" method="_ou7yb7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opQBIbhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_opPaELhLEe2uyMDTtZ4aHg" name="ReportVisualization" visibility="package" method="_ou7yZ7hLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_opPaFbhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_opPaFrhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_opPaEbhLEe2uyMDTtZ4aHg" name="fm" type="_oP330LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opPaErhLEe2uyMDTtZ4aHg" name="warp" type="_oS3hcLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opPaE7hLEe2uyMDTtZ4aHg" name="content" type="_oPoAMLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opPaFLhLEe2uyMDTtZ4aHg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opPaF7hLEe2uyMDTtZ4aHg" type="_oSWkELhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oSbckLhLEe2uyMDTtZ4aHg" name="Row">
              <generalization xmi:id="_ornYobhLEe2uyMDTtZ4aHg" general="_onvlQLhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otH0gLhLEe2uyMDTtZ4aHg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otH0gbhLEe2uyMDTtZ4aHg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou8ZcLhLEe2uyMDTtZ4aHg" name="Row" specification="_oScDobhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou8ZcbhLEe2uyMDTtZ4aHg" type="_oSbckLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou8ZcrhLEe2uyMDTtZ4aHg" name="Row" specification="_ormKgLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou8Zc7hLEe2uyMDTtZ4aHg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou8ZdLhLEe2uyMDTtZ4aHg" name="element" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou8ZdbhLEe2uyMDTtZ4aHg" type="_oSbckLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou8ZdrhLEe2uyMDTtZ4aHg" name="Row" specification="_ormxk7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou8Zd7hLEe2uyMDTtZ4aHg" name="rowArray" type="_oqsyobhLEe2uyMDTtZ4aHg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ou8ZeLhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou8ZebhLEe2uyMDTtZ4aHg" type="_oSbckLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou9AgLhLEe2uyMDTtZ4aHg" name="Row" specification="_oSdRwLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou9AgbhLEe2uyMDTtZ4aHg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou9AgrhLEe2uyMDTtZ4aHg" type="_oSbckLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oScDobhLEe2uyMDTtZ4aHg" name="Row" method="_ou8ZcLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oScqsLhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oScqsbhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oScqsrhLEe2uyMDTtZ4aHg" type="_oSbckLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oSdRwLhLEe2uyMDTtZ4aHg" name="Row" visibility="package" method="_ou9AgLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oSdRwrhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oSdRw7hLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oSdRwbhLEe2uyMDTtZ4aHg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSd40LhLEe2uyMDTtZ4aHg" type="_oSbckLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ormKgLhLEe2uyMDTtZ4aHg" name="Row" visibility="package" method="_ou8ZcrhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_ormxkLhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ormxkbhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ormKgbhLEe2uyMDTtZ4aHg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ormKgrhLEe2uyMDTtZ4aHg" name="element" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ormxkrhLEe2uyMDTtZ4aHg" type="_oSbckLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ormxk7hLEe2uyMDTtZ4aHg" name="Row" visibility="package" method="_ou8ZdrhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_ormxlbhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ormxlrhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ormxlLhLEe2uyMDTtZ4aHg" name="rowArray" type="_oqsyobhLEe2uyMDTtZ4aHg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ornYoLhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ormxl7hLEe2uyMDTtZ4aHg" type="_oSbckLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oSfG8LhLEe2uyMDTtZ4aHg" name="SchedulableObjectQueue">
              <generalization xmi:id="_oSgVELhLEe2uyMDTtZ4aHg" general="_oSKW0bhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otH0grhLEe2uyMDTtZ4aHg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otH0g7hLEe2uyMDTtZ4aHg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou9Ag7hLEe2uyMDTtZ4aHg" name="SchedulableObjectQueue" specification="_orn_sLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou9AhLhLEe2uyMDTtZ4aHg" name="comparitor" type="_ooFjgLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou9AhbhLEe2uyMDTtZ4aHg" type="_oSfG8LhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou9AhrhLEe2uyMDTtZ4aHg" name="SchedulableObjectQueue" specification="_orpN0LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou9Ah7hLEe2uyMDTtZ4aHg" name="comparitor" type="_ooFjgLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou9AiLhLEe2uyMDTtZ4aHg" name="schedulableObjects" type="_oo1KYLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou9AibhLEe2uyMDTtZ4aHg" type="_oSfG8LhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_orn_sLhLEe2uyMDTtZ4aHg" name="SchedulableObjectQueue" visibility="package" method="_ou9Ag7hLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_orn_srhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_orn_s7hLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_orn_sbhLEe2uyMDTtZ4aHg" name="comparitor" type="_ooFjgLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_orn_tLhLEe2uyMDTtZ4aHg" type="_oSfG8LhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_orpN0LhLEe2uyMDTtZ4aHg" name="SchedulableObjectQueue" visibility="package" method="_ou9AhrhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_orpN07hLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_orpN1LhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_orpN0bhLEe2uyMDTtZ4aHg" name="comparitor" type="_ooFjgLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_orpN0rhLEe2uyMDTtZ4aHg" name="schedulableObjects" type="_oo1KYLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_orpN1bhLEe2uyMDTtZ4aHg" type="_oSfG8LhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oSiKQLhLEe2uyMDTtZ4aHg" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_ovfzGLhLEe2uyMDTtZ4aHg">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_otIbkLhLEe2uyMDTtZ4aHg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otIbkbhLEe2uyMDTtZ4aHg" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otIbkrhLEe2uyMDTtZ4aHg" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otJCobhLEe2uyMDTtZ4aHg" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otJCo7hLEe2uyMDTtZ4aHg" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otJCpLhLEe2uyMDTtZ4aHg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otJpsbhLEe2uyMDTtZ4aHg" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otJps7hLEe2uyMDTtZ4aHg" name="schedule" visibility="protected" type="_oSwzwLhLEe2uyMDTtZ4aHg" association="_owc1UbhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otKQwbhLEe2uyMDTtZ4aHg" name="poset" visibility="protected" type="_oRGm4LhLEe2uyMDTtZ4aHg" association="_owdcYbhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou9nkLhLEe2uyMDTtZ4aHg" name="Schedule" specification="_opR2ULhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou9nkbhLEe2uyMDTtZ4aHg" name="poset" type="_oRGm4LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou9nkrhLEe2uyMDTtZ4aHg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou9nk7hLEe2uyMDTtZ4aHg" type="_oSiKQLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou-OpLhLEe2uyMDTtZ4aHg" name="getSchedule" specification="_oSnCwbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou-OpbhLEe2uyMDTtZ4aHg" type="_oSwzwLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou-1sLhLEe2uyMDTtZ4aHg" name="buildSchedule" specification="_oSnp0LhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou-1sbhLEe2uyMDTtZ4aHg" name="toProgram" specification="_oSnp0bhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou-1srhLEe2uyMDTtZ4aHg" type="_oR54ILhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou-1s7hLEe2uyMDTtZ4aHg" name="replaceNullWithSleep" specification="_opTEcLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou-1tLhLEe2uyMDTtZ4aHg" name="program" type="_oR54ILhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou-1tbhLEe2uyMDTtZ4aHg" name="fakeSchedulingToTestRest" specification="_opTEcrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou-1trhLEe2uyMDTtZ4aHg" name="next" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou-1t7hLEe2uyMDTtZ4aHg" name="getChannelAndSetStartTime" specification="_opTEdLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou-1uLhLEe2uyMDTtZ4aHg" name="schedulableObject" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou-1ubhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou-1urhLEe2uyMDTtZ4aHg" name="findChannelAndTime" specification="_opTrgLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou-1u7hLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou-1vLhLEe2uyMDTtZ4aHg" name="schedulableObject" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou-1vbhLEe2uyMDTtZ4aHg" type="_oSj_cLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou_cwLhLEe2uyMDTtZ4aHg" name="continueSearch" specification="_opUSkLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou_cwbhLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou_cwrhLEe2uyMDTtZ4aHg" name="activation" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou_cw7hLEe2uyMDTtZ4aHg" type="_oSj_cLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou_cxLhLEe2uyMDTtZ4aHg" name="noOtherChannelConflicts" specification="_opU5oLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou_cxbhLEe2uyMDTtZ4aHg" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou_cxrhLEe2uyMDTtZ4aHg" name="schedulableObject" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou_cx7hLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou_cyLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou_cybhLEe2uyMDTtZ4aHg" name="conflictsExist" specification="_opU5pbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou_cyrhLEe2uyMDTtZ4aHg" name="obj" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou_cy7hLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou_czLhLEe2uyMDTtZ4aHg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou_czbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou_czrhLEe2uyMDTtZ4aHg" name="freeOfCoordinatorConflicts" specification="_opVgsLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou_cz7hLEe2uyMDTtZ4aHg" name="obj" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou_c0LhLEe2uyMDTtZ4aHg" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou_c0bhLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou_c0rhLEe2uyMDTtZ4aHg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou_c07hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou_c1LhLEe2uyMDTtZ4aHg" name="isAvailable" specification="_opVgtrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou_c1bhLEe2uyMDTtZ4aHg" name="a1" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou_c1rhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou_c17hLEe2uyMDTtZ4aHg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou_c2LhLEe2uyMDTtZ4aHg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou_c2bhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou_c2rhLEe2uyMDTtZ4aHg" name="isAvailable" specification="_opWHwbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ou_c27hLEe2uyMDTtZ4aHg" name="a1" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ou_c3LhLEe2uyMDTtZ4aHg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou_c3bhLEe2uyMDTtZ4aHg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ou_c3rhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovAD0LhLEe2uyMDTtZ4aHg" name="timeRemaining" specification="_oSpfALhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovAD0bhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovAD0rhLEe2uyMDTtZ4aHg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovAD07hLEe2uyMDTtZ4aHg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovAD1LhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovAD1bhLEe2uyMDTtZ4aHg" name="canCombineEntriesInPlace" specification="_opWHxrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovAD1rhLEe2uyMDTtZ4aHg" name="a1" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovAD17hLEe2uyMDTtZ4aHg" name="a2" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovAD2LhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovAD2bhLEe2uyMDTtZ4aHg" name="combinedEntriesInPlace" specification="_opWu0rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovAD2rhLEe2uyMDTtZ4aHg" name="a1" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovAD27hLEe2uyMDTtZ4aHg" name="a2" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovAD3LhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovAD3bhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovAD3rhLEe2uyMDTtZ4aHg" name="addToSchedule" specification="_opWu17hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovAD37hLEe2uyMDTtZ4aHg" name="next" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovAD4LhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovAD4bhLEe2uyMDTtZ4aHg" name="reportNotSchedulable" specification="_opXV4rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovAD4rhLEe2uyMDTtZ4aHg" name="object" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovAD47hLEe2uyMDTtZ4aHg" name="printVerbose" specification="_oSqtILhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovAD5LhLEe2uyMDTtZ4aHg" name="print" specification="_oSqtIbhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oSnCwbhLEe2uyMDTtZ4aHg" name="getSchedule" method="_ou-OpLhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovgaILhLEe2uyMDTtZ4aHg">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_opSdZbhLEe2uyMDTtZ4aHg" type="_oSwzwLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oSnp0LhLEe2uyMDTtZ4aHg" name="buildSchedule" visibility="private" method="_ou-1sLhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oSnp0bhLEe2uyMDTtZ4aHg" name="toProgram" method="_ou-1sbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opSdZrhLEe2uyMDTtZ4aHg" type="_oR54ILhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oSpfALhLEe2uyMDTtZ4aHg" name="timeRemaining" visibility="protected" method="_ovAD0LhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovgaJrhLEe2uyMDTtZ4aHg">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_oSpfAbhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSpfArhLEe2uyMDTtZ4aHg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSpfA7hLEe2uyMDTtZ4aHg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSqGELhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oSqtILhLEe2uyMDTtZ4aHg" name="printVerbose" method="_ovAD47hLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oSqtIbhLEe2uyMDTtZ4aHg" name="print" method="_ovAD5LhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_opR2ULhLEe2uyMDTtZ4aHg" name="Schedule" visibility="package" method="_ou9nkLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_opSdYrhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_opSdY7hLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_opSdYLhLEe2uyMDTtZ4aHg" name="poset" type="_oRGm4LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opSdYbhLEe2uyMDTtZ4aHg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opSdZLhLEe2uyMDTtZ4aHg" type="_oSiKQLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_opTEcLhLEe2uyMDTtZ4aHg" name="replaceNullWithSleep" visibility="private" method="_ou-1s7hLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovgaIbhLEe2uyMDTtZ4aHg">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_opTEcbhLEe2uyMDTtZ4aHg" name="program" type="_oR54ILhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_opTEcrhLEe2uyMDTtZ4aHg" name="fakeSchedulingToTestRest" visibility="private" method="_ou-1tbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opTEc7hLEe2uyMDTtZ4aHg" name="next" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_opTEdLhLEe2uyMDTtZ4aHg" name="getChannelAndSetStartTime" visibility="protected" method="_ou-1t7hLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovgaIrhLEe2uyMDTtZ4aHg">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_opTEdbhLEe2uyMDTtZ4aHg" name="schedulableObject" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opTEdrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_opTrgLhLEe2uyMDTtZ4aHg" name="findChannelAndTime" visibility="protected" method="_ou-1urhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opTrgbhLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opTrgrhLEe2uyMDTtZ4aHg" name="schedulableObject" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opTrg7hLEe2uyMDTtZ4aHg" type="_oSj_cLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_opUSkLhLEe2uyMDTtZ4aHg" name="continueSearch" visibility="protected" method="_ou_cwLhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovgaI7hLEe2uyMDTtZ4aHg">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_opUSkbhLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opUSkrhLEe2uyMDTtZ4aHg" name="activation" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opUSk7hLEe2uyMDTtZ4aHg" type="_oSj_cLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_opU5oLhLEe2uyMDTtZ4aHg" name="noOtherChannelConflicts" visibility="protected" method="_ou_cxLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opU5obhLEe2uyMDTtZ4aHg" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opU5orhLEe2uyMDTtZ4aHg" name="schedulableObject" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opU5o7hLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opU5pLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_opU5pbhLEe2uyMDTtZ4aHg" name="conflictsExist" visibility="protected" method="_ou_cybhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opU5prhLEe2uyMDTtZ4aHg" name="obj" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opU5p7hLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opU5qLhLEe2uyMDTtZ4aHg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opU5qbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_opVgsLhLEe2uyMDTtZ4aHg" name="freeOfCoordinatorConflicts" visibility="protected" method="_ou_czrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opVgsbhLEe2uyMDTtZ4aHg" name="obj" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opVgsrhLEe2uyMDTtZ4aHg" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opVgs7hLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opVgtLhLEe2uyMDTtZ4aHg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opVgtbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_opVgtrhLEe2uyMDTtZ4aHg" name="isAvailable" visibility="protected" method="_ou_c1LhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovgaJLhLEe2uyMDTtZ4aHg">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_opVgt7hLEe2uyMDTtZ4aHg" name="a1" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opVguLhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opVgubhLEe2uyMDTtZ4aHg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opVgurhLEe2uyMDTtZ4aHg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opWHwLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_opWHwbhLEe2uyMDTtZ4aHg" name="isAvailable" visibility="protected" method="_ou_c2rhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovgaJbhLEe2uyMDTtZ4aHg">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_opWHwrhLEe2uyMDTtZ4aHg" name="a1" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opWHw7hLEe2uyMDTtZ4aHg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opWHxLhLEe2uyMDTtZ4aHg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opWHxbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_opWHxrhLEe2uyMDTtZ4aHg" name="canCombineEntriesInPlace" visibility="private" method="_ovAD1bhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opWHx7hLEe2uyMDTtZ4aHg" name="a1" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opWu0LhLEe2uyMDTtZ4aHg" name="a2" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opWu0bhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_opWu0rhLEe2uyMDTtZ4aHg" name="combinedEntriesInPlace" visibility="private" method="_ovAD2bhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opWu07hLEe2uyMDTtZ4aHg" name="a1" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opWu1LhLEe2uyMDTtZ4aHg" name="a2" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opWu1bhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opWu1rhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_opWu17hLEe2uyMDTtZ4aHg" name="addToSchedule" visibility="protected" method="_ovAD3rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opXV4LhLEe2uyMDTtZ4aHg" name="next" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opXV4bhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_opXV4rhLEe2uyMDTtZ4aHg" name="reportNotSchedulable" visibility="private" method="_ovAD4bhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opXV47hLEe2uyMDTtZ4aHg" name="object" type="_oOHkULhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_oSj_cLhLEe2uyMDTtZ4aHg" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_otKQw7hLEe2uyMDTtZ4aHg" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_otK30bhLEe2uyMDTtZ4aHg" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou9nlLhLEe2uyMDTtZ4aHg" name="ScheduleLocation" specification="_oSlNkLhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_ou9nlbhLEe2uyMDTtZ4aHg" type="_oSj_cLhLEe2uyMDTtZ4aHg" direction="return"/>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou9nlrhLEe2uyMDTtZ4aHg" name="ScheduleLocation" specification="_oSl0oLhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_ou9nl7hLEe2uyMDTtZ4aHg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ou9nmLhLEe2uyMDTtZ4aHg" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ou9nmbhLEe2uyMDTtZ4aHg" type="_oSj_cLhLEe2uyMDTtZ4aHg" direction="return"/>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou-OoLhLEe2uyMDTtZ4aHg" name="getChannel" specification="_oSmbsLhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_ou-OobhLEe2uyMDTtZ4aHg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ou-OorhLEe2uyMDTtZ4aHg" name="getTime" specification="_oSmbsrhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_ou-Oo7hLEe2uyMDTtZ4aHg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oSlNkLhLEe2uyMDTtZ4aHg" name="ScheduleLocation" visibility="package" method="_ou9nlLhLEe2uyMDTtZ4aHg">
                  <eAnnotations xmi:id="_oSlNkbhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_oSlNkrhLEe2uyMDTtZ4aHg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_oSlNk7hLEe2uyMDTtZ4aHg" type="_oSj_cLhLEe2uyMDTtZ4aHg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oSl0oLhLEe2uyMDTtZ4aHg" name="ScheduleLocation" visibility="package" method="_ou9nlrhLEe2uyMDTtZ4aHg">
                  <eAnnotations xmi:id="_oSl0o7hLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_oSl0pLhLEe2uyMDTtZ4aHg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_oSl0obhLEe2uyMDTtZ4aHg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_oSl0orhLEe2uyMDTtZ4aHg" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_oSl0pbhLEe2uyMDTtZ4aHg" type="_oSj_cLhLEe2uyMDTtZ4aHg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oSmbsLhLEe2uyMDTtZ4aHg" name="getChannel" visibility="protected" method="_ou-OoLhLEe2uyMDTtZ4aHg">
                  <ownedComment xmi:id="_ovfzGbhLEe2uyMDTtZ4aHg">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_oSmbsbhLEe2uyMDTtZ4aHg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oSmbsrhLEe2uyMDTtZ4aHg" name="getTime" visibility="protected" method="_ou-OorhLEe2uyMDTtZ4aHg">
                  <ownedComment xmi:id="_ovfzGrhLEe2uyMDTtZ4aHg">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_oSnCwLhLEe2uyMDTtZ4aHg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oSwzwLhLEe2uyMDTtZ4aHg" name="ScheduleTable">
              <generalization xmi:id="_opYkALhLEe2uyMDTtZ4aHg" general="_oS_dQLhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otMF8LhLEe2uyMDTtZ4aHg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otMF8bhLEe2uyMDTtZ4aHg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovAq4LhLEe2uyMDTtZ4aHg" name="ScheduleTable" specification="_oSxa0LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovAq4bhLEe2uyMDTtZ4aHg" type="_oSwzwLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovBR8LhLEe2uyMDTtZ4aHg" name="ScheduleTable" specification="_oSyB4LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovBR8bhLEe2uyMDTtZ4aHg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovBR8rhLEe2uyMDTtZ4aHg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovBR87hLEe2uyMDTtZ4aHg" type="_oSwzwLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oSxa0LhLEe2uyMDTtZ4aHg" name="ScheduleTable" visibility="package" method="_ovAq4LhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oSxa0bhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oSxa0rhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oSxa07hLEe2uyMDTtZ4aHg" type="_oSwzwLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oSyB4LhLEe2uyMDTtZ4aHg" name="ScheduleTable" visibility="package" method="_ovBR8LhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oSyB47hLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oSyB5LhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oSyB4bhLEe2uyMDTtZ4aHg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSyB4rhLEe2uyMDTtZ4aHg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSyB5bhLEe2uyMDTtZ4aHg" type="_oSwzwLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oSyo8LhLEe2uyMDTtZ4aHg" name="ScheduleTime">
              <ownedAttribute xmi:id="_otMF8rhLEe2uyMDTtZ4aHg" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otMF87hLEe2uyMDTtZ4aHg" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovBR9LhLEe2uyMDTtZ4aHg" name="ScheduleTime" specification="_oSzQALhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovBR9bhLEe2uyMDTtZ4aHg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovBR9rhLEe2uyMDTtZ4aHg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovBR97hLEe2uyMDTtZ4aHg" type="_oSyo8LhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oSzQALhLEe2uyMDTtZ4aHg" name="ScheduleTime" visibility="package" method="_ovBR9LhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oSz3EbhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oSz3ErhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oSzQAbhLEe2uyMDTtZ4aHg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSz3ELhLEe2uyMDTtZ4aHg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oSz3E7hLEe2uyMDTtZ4aHg" type="_oSyo8LhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oS0eILhLEe2uyMDTtZ4aHg" name="SimulatorInput">
              <ownedComment xmi:id="_ovgaJ7hLEe2uyMDTtZ4aHg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oS1FMLhLEe2uyMDTtZ4aHg" name="SortedPeriodQueue">
              <generalization xmi:id="_oS2TULhLEe2uyMDTtZ4aHg" general="_oSKW0bhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otMtALhLEe2uyMDTtZ4aHg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otMtAbhLEe2uyMDTtZ4aHg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovBR-LhLEe2uyMDTtZ4aHg" name="SortedPeriodQueue" specification="_oS1sQbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovBR-bhLEe2uyMDTtZ4aHg" type="_oS1FMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovBR-rhLEe2uyMDTtZ4aHg" name="SortedPeriodQueue" specification="_opZyILhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovBR-7hLEe2uyMDTtZ4aHg" name="schedulableObjects" type="_oo1KYLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovBR_LhLEe2uyMDTtZ4aHg" type="_oS1FMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oS1sQbhLEe2uyMDTtZ4aHg" name="SortedPeriodQueue" visibility="package" method="_ovBR-LhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oS1sQrhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oS1sQ7hLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oS1sRLhLEe2uyMDTtZ4aHg" type="_oS1FMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_opZyILhLEe2uyMDTtZ4aHg" name="SortedPeriodQueue" visibility="package" method="_ovBR-rhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_opZyIrhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_opZyI7hLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_opZyIbhLEe2uyMDTtZ4aHg" name="schedulableObjects" type="_oo1KYLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opZyJLhLEe2uyMDTtZ4aHg" type="_oS1FMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_oS3hcLhLEe2uyMDTtZ4aHg" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_opaZMbhLEe2uyMDTtZ4aHg" general="_oSOoQLhLEe2uyMDTtZ4aHg"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_oS4vkLhLEe2uyMDTtZ4aHg" name="ScheduleChoices">
                <ownedLiteral xmi:id="_oS5WoLhLEe2uyMDTtZ4aHg" name="PRIORITY"/>
                <ownedLiteral xmi:id="_oS5WobhLEe2uyMDTtZ4aHg" name="RM"/>
                <ownedLiteral xmi:id="_oS5WorhLEe2uyMDTtZ4aHg" name="DM"/>
                <ownedLiteral xmi:id="_oS5Wo7hLEe2uyMDTtZ4aHg" name="RTHART"/>
                <ownedLiteral xmi:id="_oS5WpLhLEe2uyMDTtZ4aHg" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_oS59sLhLEe2uyMDTtZ4aHg" name="POSET_RM"/>
                <ownedLiteral xmi:id="_oS59sbhLEe2uyMDTtZ4aHg" name="POSET_DM"/>
                <ownedLiteral xmi:id="_oS59srhLEe2uyMDTtZ4aHg" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_oS59s7hLEe2uyMDTtZ4aHg" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_oS6kwLhLEe2uyMDTtZ4aHg" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_oS6kwbhLEe2uyMDTtZ4aHg" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_oS6kwrhLEe2uyMDTtZ4aHg" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_oS6kw7hLEe2uyMDTtZ4aHg" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_oS7L0LhLEe2uyMDTtZ4aHg" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oS7L0bhLEe2uyMDTtZ4aHg" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oS7y4LhLEe2uyMDTtZ4aHg" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oS8Z8LhLEe2uyMDTtZ4aHg" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oS8Z8bhLEe2uyMDTtZ4aHg" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_oS9BALhLEe2uyMDTtZ4aHg" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oS9oELhLEe2uyMDTtZ4aHg" name="SystemFactory">
              <ownedComment xmi:id="_ovgaKLhLEe2uyMDTtZ4aHg">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovBR_bhLEe2uyMDTtZ4aHg" name="create" specification="_opbnUbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovBR_rhLEe2uyMDTtZ4aHg" name="workload" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovBR_7hLEe2uyMDTtZ4aHg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovBSALhLEe2uyMDTtZ4aHg" name="choice" type="_oS4vkLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovBSAbhLEe2uyMDTtZ4aHg" type="_oTo9gLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_opbnUbhLEe2uyMDTtZ4aHg" name="create" isStatic="true" method="_ovBR_bhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opbnUrhLEe2uyMDTtZ4aHg" name="workload" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opbnU7hLEe2uyMDTtZ4aHg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opbnVLhLEe2uyMDTtZ4aHg" name="choice" type="_oS4vkLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opbnVbhLEe2uyMDTtZ4aHg" type="_oTo9gLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oS_dQLhLEe2uyMDTtZ4aHg" name="Table">
              <generalization xmi:id="_orsRILhLEe2uyMDTtZ4aHg" general="_onvlQLhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otMtArhLEe2uyMDTtZ4aHg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otMtA7hLEe2uyMDTtZ4aHg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovBSArhLEe2uyMDTtZ4aHg" name="Table" specification="_oTArYLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovBSA7hLEe2uyMDTtZ4aHg" type="_oS_dQLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovBSBLhLEe2uyMDTtZ4aHg" name="Table" specification="_oTBScLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovBSBbhLEe2uyMDTtZ4aHg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovBSBrhLEe2uyMDTtZ4aHg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovBSB7hLEe2uyMDTtZ4aHg" type="_oS_dQLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovBSCLhLEe2uyMDTtZ4aHg" name="getNumRows" specification="_oTBSdrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovBSCbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovBSCrhLEe2uyMDTtZ4aHg" name="getNumColumns" specification="_oTB5gbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovBSC7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovB5ALhLEe2uyMDTtZ4aHg" name="set" specification="_orrDALhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovB5AbhLEe2uyMDTtZ4aHg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovB5ArhLEe2uyMDTtZ4aHg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovB5A7hLEe2uyMDTtZ4aHg" name="element" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovB5BLhLEe2uyMDTtZ4aHg" name="get" specification="_oTCgkLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovB5BbhLEe2uyMDTtZ4aHg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovB5BrhLEe2uyMDTtZ4aHg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovB5B7hLEe2uyMDTtZ4aHg" type="_oqsyobhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oTArYLhLEe2uyMDTtZ4aHg" name="Table" method="_ovBSArhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oTArYbhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oTArYrhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oTArY7hLEe2uyMDTtZ4aHg" type="_oS_dQLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oTBScLhLEe2uyMDTtZ4aHg" name="Table" method="_ovBSBLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oTBSc7hLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oTBSdLhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oTBScbhLEe2uyMDTtZ4aHg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTBScrhLEe2uyMDTtZ4aHg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTBSdbhLEe2uyMDTtZ4aHg" type="_oS_dQLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oTBSdrhLEe2uyMDTtZ4aHg" name="getNumRows" method="_ovBSCLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oTB5gLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oTB5gbhLEe2uyMDTtZ4aHg" name="getNumColumns" method="_ovBSCrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oTB5grhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oTCgkLhLEe2uyMDTtZ4aHg" name="get" method="_ovB5BLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oTCgkbhLEe2uyMDTtZ4aHg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTCgkrhLEe2uyMDTtZ4aHg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_orrqE7hLEe2uyMDTtZ4aHg" type="_oqsyobhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_orrDALhLEe2uyMDTtZ4aHg" name="set" method="_ovB5ALhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_orrqELhLEe2uyMDTtZ4aHg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_orrqEbhLEe2uyMDTtZ4aHg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_orrqErhLEe2uyMDTtZ4aHg" name="element" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_oTDusLhLEe2uyMDTtZ4aHg" name="Visualization">
              <ownedComment xmi:id="_ovgaKbhLEe2uyMDTtZ4aHg">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_oTEVwLhLEe2uyMDTtZ4aHg" name="SystemChoices">
                <ownedLiteral xmi:id="_oTEVwrhLEe2uyMDTtZ4aHg" name="SOURCE"/>
                <ownedLiteral xmi:id="_oTE80LhLEe2uyMDTtZ4aHg" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_oTE80bhLEe2uyMDTtZ4aHg" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_oTE80rhLEe2uyMDTtZ4aHg" name="LATENCY"/>
                <ownedLiteral xmi:id="_oTE807hLEe2uyMDTtZ4aHg" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_oTE81LhLEe2uyMDTtZ4aHg" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_oTE81bhLEe2uyMDTtZ4aHg" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_oTFj4LhLEe2uyMDTtZ4aHg" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_oTFj4rhLEe2uyMDTtZ4aHg" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_oTFj47hLEe2uyMDTtZ4aHg" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_oTGK8LhLEe2uyMDTtZ4aHg" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_oTGK8bhLEe2uyMDTtZ4aHg" name="toDisplay"/>
              <ownedOperation xmi:id="_oTGK8rhLEe2uyMDTtZ4aHg" name="toFile"/>
              <ownedOperation xmi:id="_oTGK87hLEe2uyMDTtZ4aHg" name="toString">
                <ownedParameter xmi:id="_oTGyALhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oTGyAbhLEe2uyMDTtZ4aHg" name="VisualizationFactory">
              <ownedComment xmi:id="_ovgaKrhLEe2uyMDTtZ4aHg">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovB5CLhLEe2uyMDTtZ4aHg" name="createProgramVisualization" specification="_opdcgbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovB5CbhLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovB5CrhLEe2uyMDTtZ4aHg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovB5C7hLEe2uyMDTtZ4aHg" name="choice" type="_oTEVwLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovB5DLhLEe2uyMDTtZ4aHg" type="_oTDusLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovB5DbhLEe2uyMDTtZ4aHg" name="createWorkLoadVisualization" specification="_opeDk7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovB5DrhLEe2uyMDTtZ4aHg" name="workload" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovB5D7hLEe2uyMDTtZ4aHg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovB5ELhLEe2uyMDTtZ4aHg" name="choice" type="_oTFj4LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovB5EbhLEe2uyMDTtZ4aHg" type="_oTDusLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_opdcgbhLEe2uyMDTtZ4aHg" name="createProgramVisualization" isStatic="true" method="_ovB5CLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opdcgrhLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opeDkLhLEe2uyMDTtZ4aHg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opeDkbhLEe2uyMDTtZ4aHg" name="choice" type="_oTEVwLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opeDkrhLEe2uyMDTtZ4aHg" type="_oTDusLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_opeDk7hLEe2uyMDTtZ4aHg" name="createWorkLoadVisualization" isStatic="true" method="_ovB5DbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opeDlLhLEe2uyMDTtZ4aHg" name="workload" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opeDlbhLEe2uyMDTtZ4aHg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opeDlrhLEe2uyMDTtZ4aHg" name="choice" type="_oTFj4LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opeDl7hLEe2uyMDTtZ4aHg" type="_oTDusLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oTInMLhLEe2uyMDTtZ4aHg" name="VisualizationImplementation">
              <ownedComment xmi:id="_ovgaK7hLEe2uyMDTtZ4aHg">
                <body>Handles visualizations for Warp program outputs.&#xD;
This includes creating either GraphViz files (.gv) or WARP files (.wf) and &#xD;
displaying graphs in a new window.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5</body>
              </ownedComment>
              <ownedAttribute xmi:id="_otNUELhLEe2uyMDTtZ4aHg" name="visualization" visibility="private" type="_oPoAMLhLEe2uyMDTtZ4aHg" association="_owdcZLhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otNUErhLEe2uyMDTtZ4aHg" name="fileContent" visibility="private" type="_oPoAMLhLEe2uyMDTtZ4aHg" association="_oweDcbhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otN7IbhLEe2uyMDTtZ4aHg" name="window" visibility="private" type="_oQe70LhLEe2uyMDTtZ4aHg" association="_oweqgLhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otN7I7hLEe2uyMDTtZ4aHg" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otOiMbhLEe2uyMDTtZ4aHg" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otOiM7hLEe2uyMDTtZ4aHg" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otPJQbhLEe2uyMDTtZ4aHg" name="fm" visibility="private" type="_oP330LhLEe2uyMDTtZ4aHg" association="_oweqg7hLEe2uyMDTtZ4aHg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otPJQrhLEe2uyMDTtZ4aHg" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otPJRLhLEe2uyMDTtZ4aHg" name="warp" visibility="private" type="_oTo9gLhLEe2uyMDTtZ4aHg" association="_owfRkbhLEe2uyMDTtZ4aHg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otPwULhLEe2uyMDTtZ4aHg" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otPwUrhLEe2uyMDTtZ4aHg" name="workLoad" visibility="private" type="_oUEbULhLEe2uyMDTtZ4aHg" association="_owf4oLhLEe2uyMDTtZ4aHg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otPwU7hLEe2uyMDTtZ4aHg" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otQXYbhLEe2uyMDTtZ4aHg" name="visualizationObject" visibility="private" type="_oTRKELhLEe2uyMDTtZ4aHg" association="_owf4o7hLEe2uyMDTtZ4aHg"/>
              <interfaceRealization xmi:id="_opeqoLhLEe2uyMDTtZ4aHg" client="_oTInMLhLEe2uyMDTtZ4aHg" supplier="_oTDusLhLEe2uyMDTtZ4aHg" contract="_oTDusLhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovCgELhLEe2uyMDTtZ4aHg" name="VisualizationImplementation" specification="_orutYLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovCgEbhLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovCgErhLEe2uyMDTtZ4aHg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovCgE7hLEe2uyMDTtZ4aHg" name="choice" type="_ortfQLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovCgFLhLEe2uyMDTtZ4aHg" type="_oTInMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovCgFbhLEe2uyMDTtZ4aHg" name="VisualizationImplementation" specification="_orvUcbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovCgFrhLEe2uyMDTtZ4aHg" name="workLoad" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovCgF7hLEe2uyMDTtZ4aHg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovCgGLhLEe2uyMDTtZ4aHg" name="choice" type="_orutZ7hLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovCgGbhLEe2uyMDTtZ4aHg" type="_oTInMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovCgGrhLEe2uyMDTtZ4aHg" name="toDisplay" specification="_oTKcYLhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>window = visualizationObject.displayVisualization();&#xD;
 if (window != null) {&#xD;
   window.setVisible();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovCgG7hLEe2uyMDTtZ4aHg" name="toFile" specification="_oTLDc7hLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovCgHLhLEe2uyMDTtZ4aHg" name="toString" specification="_oTLqg7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovCgHbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovCgHrhLEe2uyMDTtZ4aHg" name="createVisualization" specification="_orwikLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovCgH7hLEe2uyMDTtZ4aHg" name="choice" type="_ortfQLhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case RELIABILITIES:&#xD;
     // TODO Implement Reliability Analysis Visualization&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case SIMULATOR_INPUT:&#xD;
     // TODO Implement Simulator Input Visualization&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
&#xD;
   case LATENCY:&#xD;
     // TODO Implement Latency Analysis Visualization&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case CHANNEL:&#xD;
     // TODO Implement Channel Analysis Visualization&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp,&#xD;
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(&#xD;
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovCgILhLEe2uyMDTtZ4aHg" name="createVisualization" specification="_orwikrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovCgIbhLEe2uyMDTtZ4aHg" name="choice" type="_orutZ7hLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case COMUNICATION_GRAPH:&#xD;
     // createWarpVisualization();&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovDHILhLEe2uyMDTtZ4aHg" name="createVisualization" specification="_orxJoLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovDHIbhLEe2uyMDTtZ4aHg" name="obj" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 /* display is file content printed to console */&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
 visualizationObject = obj;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovDHIrhLEe2uyMDTtZ4aHg" name="createFileNameTemplate" specification="_oTM4obhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovDHI7hLEe2uyMDTtZ4aHg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovDHJLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 // Now create the fileNameTemplate using full output path and input filename&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oTKcYLhLEe2uyMDTtZ4aHg" name="toDisplay" method="_ovCgGrhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oTLDc7hLEe2uyMDTtZ4aHg" name="toFile" method="_ovCgG7hLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oTLqg7hLEe2uyMDTtZ4aHg" name="toString" method="_ovCgHLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oTMRkLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oTM4obhLEe2uyMDTtZ4aHg" name="createFileNameTemplate" visibility="private" method="_ovDHIrhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovhBM7hLEe2uyMDTtZ4aHg">
                  <body>Generates full path to output file.&#xD;
   * &#xD;
   * @param outputDirectory&#xD;
   * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_oTM4orhLEe2uyMDTtZ4aHg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTNfsLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_orutYLhLEe2uyMDTtZ4aHg" name="VisualizationImplementation" method="_ovCgELhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_orutZLhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_orutZbhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ovhBMLhLEe2uyMDTtZ4aHg">
                  <body>Creates visualization from warp program output.&#xD;
   * &#xD;
   * @param warp WarpInterface object. &#xD;
   * @param outputDirectory Where to save the visualization&#xD;
   * @param choice Type of visualization to create. @see Visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_orutYbhLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_orutYrhLEe2uyMDTtZ4aHg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_orutY7hLEe2uyMDTtZ4aHg" name="choice" type="_ortfQLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_orutZrhLEe2uyMDTtZ4aHg" type="_oTInMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_orvUcbhLEe2uyMDTtZ4aHg" name="VisualizationImplementation" method="_ovCgFbhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_orv7grhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_orv7g7hLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ovhBMbhLEe2uyMDTtZ4aHg">
                  <body>Creates visualization from given workload.&#xD;
   * &#xD;
   * @param workLoad WorkLoad object&#xD;
   * @param outputDirectory Where to save the visualization&#xD;
   * @param choice Type of visualization to create. @see Visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_orvUcrhLEe2uyMDTtZ4aHg" name="workLoad" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_orv7gLhLEe2uyMDTtZ4aHg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_orv7gbhLEe2uyMDTtZ4aHg" name="choice" type="_orutZ7hLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_orv7hLhLEe2uyMDTtZ4aHg" type="_oTInMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_orwikLhLEe2uyMDTtZ4aHg" name="createVisualization" visibility="private" method="_ovCgHrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_orwikbhLEe2uyMDTtZ4aHg" name="choice" type="_ortfQLhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_orwikrhLEe2uyMDTtZ4aHg" name="createVisualization" visibility="private" method="_ovCgILhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovhBMrhLEe2uyMDTtZ4aHg">
                  <body>Generates visualization from workload choice.&#xD;
   * Either communication graph, graphviz, or input graph.&#xD;
   * &#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_orwik7hLEe2uyMDTtZ4aHg" name="choice" type="_orutZ7hLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_orxJoLhLEe2uyMDTtZ4aHg" name="createVisualization" visibility="private" method="_ovDHILhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_orxJobhLEe2uyMDTtZ4aHg" name="obj" type="_oqsyobhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oTRKELhLEe2uyMDTtZ4aHg" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_ovhBNLhLEe2uyMDTtZ4aHg">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_otQ-cLhLEe2uyMDTtZ4aHg" name="fm" visibility="private" type="_oP330LhLEe2uyMDTtZ4aHg" association="_owgfsbhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otRlgbhLEe2uyMDTtZ4aHg" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otSMkbhLEe2uyMDTtZ4aHg" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otSzoLhLEe2uyMDTtZ4aHg" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otSzobhLEe2uyMDTtZ4aHg" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otSzorhLEe2uyMDTtZ4aHg" name="visualizationData" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_otTasLhLEe2uyMDTtZ4aHg" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovDHJbhLEe2uyMDTtZ4aHg" name="VisualizationObject" specification="_ophG4LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovDHJrhLEe2uyMDTtZ4aHg" name="fm" type="_oP330LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovDHJ7hLEe2uyMDTtZ4aHg" name="workLoad" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovDHKLhLEe2uyMDTtZ4aHg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovDHKbhLEe2uyMDTtZ4aHg" type="_oTRKELhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,&#xD;
     String.valueOf(workLoad.getMinPacketReceptionRate()), String.valueOf(workLoad.getE2e()));&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovDHKrhLEe2uyMDTtZ4aHg" name="VisualizationObject" specification="_opht8LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovDHK7hLEe2uyMDTtZ4aHg" name="fm" type="_oP330LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovDHLLhLEe2uyMDTtZ4aHg" name="warp" type="_oS3hcLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovDHLbhLEe2uyMDTtZ4aHg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovDHLrhLEe2uyMDTtZ4aHg" type="_oTRKELhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults());&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e());&#xD;
 }&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovDuMLhLEe2uyMDTtZ4aHg" name="VisualizationObject" specification="_opht97hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovDuMbhLEe2uyMDTtZ4aHg" name="fm" type="_oP330LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovDuMrhLEe2uyMDTtZ4aHg" name="warp" type="_oS3hcLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovDuM7hLEe2uyMDTtZ4aHg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovDuNLhLEe2uyMDTtZ4aHg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovDuNbhLEe2uyMDTtZ4aHg" type="_oTRKELhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getNumFaults()) + nameExtension;&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e())&#xD;
           + nameExtension;&#xD;
 }&#xD;
&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovDuNrhLEe2uyMDTtZ4aHg" name="VisualizationObject" specification="_opiVA7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovDuN7hLEe2uyMDTtZ4aHg" name="fm" type="_oP330LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovDuOLhLEe2uyMDTtZ4aHg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovDuObhLEe2uyMDTtZ4aHg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovDuOrhLEe2uyMDTtZ4aHg" type="_oTRKELhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = nameExtension;&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovDuO7hLEe2uyMDTtZ4aHg" name="nameExtension" specification="_oryXwLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovDuPLhLEe2uyMDTtZ4aHg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovDuPbhLEe2uyMDTtZ4aHg" name="m" type="_orgq8LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovDuPrhLEe2uyMDTtZ4aHg" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovDuP7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension =&#xD;
     String.format(&quot;%s-%sM-%sE2E&quot;, schName, String.valueOf(m), String.valueOf(e2e));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovDuQLhLEe2uyMDTtZ4aHg" name="nameExtension" specification="_oTTmULhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovDuQbhLEe2uyMDTtZ4aHg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovDuQrhLEe2uyMDTtZ4aHg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovDuQ7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;, schName, String.valueOf(numFaults));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovDuRLhLEe2uyMDTtZ4aHg" name="getFileManager" specification="_oTU0cLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovDuRbhLEe2uyMDTtZ4aHg" type="_oP330LhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return fm;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovDuRrhLEe2uyMDTtZ4aHg" name="visualization" specification="_oTU0cbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovDuR7hLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 var data = createVisualizationData();&#xD;
&#xD;
 if (data != null) {&#xD;
   String nodeString = String.join(&quot;\t&quot;, createColumnHeader()) + &quot;\n&quot;;&#xD;
   content.add(nodeString);&#xD;
&#xD;
   for (int rowIndex = 0; rowIndex &lt; data.length; rowIndex++) {&#xD;
     var row = data[rowIndex];&#xD;
     String rowString = String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
     content.add(rowString);&#xD;
   }&#xD;
 } else {&#xD;
   content.add(NOT_IMPLEMENTED);&#xD;
 }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovDuSLhLEe2uyMDTtZ4aHg" name="createFile" specification="_oTVbgLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovDuSbhLEe2uyMDTtZ4aHg" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovDuSrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovEVQLhLEe2uyMDTtZ4aHg" name="fileVisualization" specification="_oTWCkbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovEVQbhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 fileContent.addAll(visualization());&#xD;
 fileContent.addAll(createFooter());&#xD;
 return fileContent;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovEVQrhLEe2uyMDTtZ4aHg" name="displayVisualization" specification="_oTWpoLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovEVQ7hLEe2uyMDTtZ4aHg" type="_oQe70LhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return null; // not implemented&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovEVRLhLEe2uyMDTtZ4aHg" name="createHeader" specification="_oTWpobhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovEVRbhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovEVRrhLEe2uyMDTtZ4aHg" name="createFooter" specification="_oTXQsLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovEVR7hLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovEVSLhLEe2uyMDTtZ4aHg" name="createColumnHeader" specification="_oTXQsbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovEVSbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ovEVSrhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new String[] {NOT_IMPLEMENTED};&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovE8ULhLEe2uyMDTtZ4aHg" name="createVisualizationData" specification="_oTX3wbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovE8UbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ovE8UrhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualizationData; // not implemented--returns null&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oTTmULhLEe2uyMDTtZ4aHg" name="nameExtension" visibility="private" method="_ovDuQLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oTUNYLhLEe2uyMDTtZ4aHg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTUNYbhLEe2uyMDTtZ4aHg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTUNYrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oTU0cLhLEe2uyMDTtZ4aHg" name="getFileManager" method="_ovDuRLhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovhBNbhLEe2uyMDTtZ4aHg">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_opi8E7hLEe2uyMDTtZ4aHg" type="_oP330LhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oTU0cbhLEe2uyMDTtZ4aHg" name="visualization" method="_ovDuRrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opi8FLhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oTVbgLhLEe2uyMDTtZ4aHg" name="createFile" method="_ovDuSLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oTVbgbhLEe2uyMDTtZ4aHg" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTWCkLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oTWCkbhLEe2uyMDTtZ4aHg" name="fileVisualization" method="_ovEVQLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opi8FbhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oTWpoLhLEe2uyMDTtZ4aHg" name="displayVisualization" method="_ovEVQrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opi8FrhLEe2uyMDTtZ4aHg" type="_oQe70LhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oTWpobhLEe2uyMDTtZ4aHg" name="createHeader" visibility="protected" method="_ovEVRLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opjjILhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oTXQsLhLEe2uyMDTtZ4aHg" name="createFooter" visibility="protected" method="_ovEVRrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opjjIbhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oTXQsbhLEe2uyMDTtZ4aHg" name="createColumnHeader" visibility="protected" method="_ovEVSLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oTXQsrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTXQs7hLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oTX3wbhLEe2uyMDTtZ4aHg" name="createVisualizationData" visibility="protected" method="_ovE8ULhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oTYe0LhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTYe0bhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ophG4LhLEe2uyMDTtZ4aHg" name="VisualizationObject" visibility="package" method="_ovDHJbhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_ophG5LhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ophG5bhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ophG4bhLEe2uyMDTtZ4aHg" name="fm" type="_oP330LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ophG4rhLEe2uyMDTtZ4aHg" name="workLoad" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ophG47hLEe2uyMDTtZ4aHg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ophG5rhLEe2uyMDTtZ4aHg" type="_oTRKELhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_opht8LhLEe2uyMDTtZ4aHg" name="VisualizationObject" visibility="package" method="_ovDHKrhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_opht9LhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_opht9bhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_opht8bhLEe2uyMDTtZ4aHg" name="fm" type="_oP330LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opht8rhLEe2uyMDTtZ4aHg" name="warp" type="_oS3hcLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opht87hLEe2uyMDTtZ4aHg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opht9rhLEe2uyMDTtZ4aHg" type="_oTRKELhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_opht97hLEe2uyMDTtZ4aHg" name="VisualizationObject" visibility="package" method="_ovDuMLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_opiVALhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_opiVAbhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_opht-LhLEe2uyMDTtZ4aHg" name="fm" type="_oP330LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opht-bhLEe2uyMDTtZ4aHg" name="warp" type="_oS3hcLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opht-rhLEe2uyMDTtZ4aHg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opht-7hLEe2uyMDTtZ4aHg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opiVArhLEe2uyMDTtZ4aHg" type="_oTRKELhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_opiVA7hLEe2uyMDTtZ4aHg" name="VisualizationObject" visibility="package" method="_ovDuNrhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_opi8ELhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_opi8EbhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_opiVBLhLEe2uyMDTtZ4aHg" name="fm" type="_oP330LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opiVBbhLEe2uyMDTtZ4aHg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opiVBrhLEe2uyMDTtZ4aHg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_opi8ErhLEe2uyMDTtZ4aHg" type="_oTRKELhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oryXwLhLEe2uyMDTtZ4aHg" name="nameExtension" visibility="private" method="_ovDuO7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oryXwbhLEe2uyMDTtZ4aHg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ory-0LhLEe2uyMDTtZ4aHg" name="m" type="_orgq8LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ory-0bhLEe2uyMDTtZ4aHg" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ory-0rhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oTdXULhLEe2uyMDTtZ4aHg" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_ovhBNrhLEe2uyMDTtZ4aHg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_orzl4LhLEe2uyMDTtZ4aHg" general="_ooYecbhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otUo0LhLEe2uyMDTtZ4aHg" name="workLoad" visibility="package" type="_oUEbULhLEe2uyMDTtZ4aHg" association="_owhGwLhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otUo0rhLEe2uyMDTtZ4aHg" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovE8U7hLEe2uyMDTtZ4aHg" name="WorkLoadListener" specification="_opkKMLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovE8VLhLEe2uyMDTtZ4aHg" name="workLoad" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovE8VbhLEe2uyMDTtZ4aHg" type="_oTdXULhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovE8VrhLEe2uyMDTtZ4aHg" name="buildNodesAndFlows" specification="_opkxQLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovE8V7hLEe2uyMDTtZ4aHg" name="workLoad" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovE8WLhLEe2uyMDTtZ4aHg" name="testPrintStdOut" specification="_oTfMgLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovE8WbhLEe2uyMDTtZ4aHg" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovFjYLhLEe2uyMDTtZ4aHg" name="enterWarpName" specification="_opkxQrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovFjYbhLEe2uyMDTtZ4aHg" name="ctx" type="_ooa6srhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovFjYrhLEe2uyMDTtZ4aHg" name="enterFlowName" specification="_oplYU7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovFjY7hLEe2uyMDTtZ4aHg" name="ctx" type="_oodW8rhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovFjZLhLEe2uyMDTtZ4aHg" name="exitPriority" specification="_opmmcLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovFjZbhLEe2uyMDTtZ4aHg" name="ctx" type="_opl_YrhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovFjZrhLEe2uyMDTtZ4aHg" name="exitPeriod" specification="_opnNgrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovFjZ7hLEe2uyMDTtZ4aHg" name="ctx" type="_opnNgLhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovFjaLhLEe2uyMDTtZ4aHg" name="exitDeadline" specification="_opobobhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovFjabhLEe2uyMDTtZ4aHg" name="ctx" type="_opn0k7hLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovFjarhLEe2uyMDTtZ4aHg" name="exitPhase" specification="_opppwbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovFja7hLEe2uyMDTtZ4aHg" name="ctx" type="_oppCs7hLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovGKcLhLEe2uyMDTtZ4aHg" name="exitSrcNode" specification="_opqQ0rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovGKcbhLEe2uyMDTtZ4aHg" name="ctx" type="_ooelELhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovGKcrhLEe2uyMDTtZ4aHg" name="exitSnkNode" specification="_opq34rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovGKc7hLEe2uyMDTtZ4aHg" name="ctx" type="_oofMI7hLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovGKdLhLEe2uyMDTtZ4aHg" name="exitFlow" specification="_opre87hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovGKdbhLEe2uyMDTtZ4aHg" name="ctx" type="_oohBUrhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oTfMgLhLEe2uyMDTtZ4aHg" name="testPrintStdOut" method="_ovE8WLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oTfMgbhLEe2uyMDTtZ4aHg" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_opkKMLhLEe2uyMDTtZ4aHg" name="WorkLoadListener" visibility="private" method="_ovE8U7hLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_opkKMrhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_opkKM7hLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_opkKMbhLEe2uyMDTtZ4aHg" name="workLoad" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opkKNLhLEe2uyMDTtZ4aHg" type="_oTdXULhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_opkxQLhLEe2uyMDTtZ4aHg" name="buildNodesAndFlows" isStatic="true" method="_ovE8VrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opkxQbhLEe2uyMDTtZ4aHg" name="workLoad" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_opkxQrhLEe2uyMDTtZ4aHg" name="enterWarpName" method="_ovFjYLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opkxQ7hLEe2uyMDTtZ4aHg" name="ctx" type="_ooa6srhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oplYU7hLEe2uyMDTtZ4aHg" name="enterFlowName" method="_ovFjYrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oplYVLhLEe2uyMDTtZ4aHg" name="ctx" type="_oodW8rhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_opmmcLhLEe2uyMDTtZ4aHg" name="exitPriority" method="_ovFjZLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opmmcbhLEe2uyMDTtZ4aHg" name="ctx" type="_opl_YrhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_opnNgrhLEe2uyMDTtZ4aHg" name="exitPeriod" method="_ovFjZrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opnNg7hLEe2uyMDTtZ4aHg" name="ctx" type="_opnNgLhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_opobobhLEe2uyMDTtZ4aHg" name="exitDeadline" method="_ovFjaLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opoborhLEe2uyMDTtZ4aHg" name="ctx" type="_opn0k7hLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_opppwbhLEe2uyMDTtZ4aHg" name="exitPhase" method="_ovFjarhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opppwrhLEe2uyMDTtZ4aHg" name="ctx" type="_oppCs7hLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_opqQ0rhLEe2uyMDTtZ4aHg" name="exitSrcNode" method="_ovGKcLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opqQ07hLEe2uyMDTtZ4aHg" name="ctx" type="_ooelELhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_opq34rhLEe2uyMDTtZ4aHg" name="exitSnkNode" method="_ovGKcrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opq347hLEe2uyMDTtZ4aHg" name="ctx" type="_oofMI7hLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_opre87hLEe2uyMDTtZ4aHg" name="exitFlow" method="_ovGKdLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opre9LhLEe2uyMDTtZ4aHg" name="ctx" type="_oohBUrhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oTiP0LhLEe2uyMDTtZ4aHg" name="WorkLoadDescription">
              <ownedComment xmi:id="_ovhoQLhLEe2uyMDTtZ4aHg">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4 Fall 2022</body>
              </ownedComment>
              <generalization xmi:id="_optUILhLEe2uyMDTtZ4aHg" general="_oTRKELhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otVP4bhLEe2uyMDTtZ4aHg" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otV28LhLEe2uyMDTtZ4aHg" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otV28bhLEe2uyMDTtZ4aHg" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otV28rhLEe2uyMDTtZ4aHg" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otV287hLEe2uyMDTtZ4aHg" name="FILE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otV29LhLEe2uyMDTtZ4aHg" value="&quot;StressTest.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otWeALhLEe2uyMDTtZ4aHg" name="description" visibility="private" type="_oPoAMLhLEe2uyMDTtZ4aHg" association="_owhGw7hLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otWeArhLEe2uyMDTtZ4aHg" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otXFEbhLEe2uyMDTtZ4aHg" name="fm" visibility="private" type="_oP330LhLEe2uyMDTtZ4aHg" association="_owht0bhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otXFE7hLEe2uyMDTtZ4aHg" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovGKdrhLEe2uyMDTtZ4aHg" name="WorkLoadDescription" specification="_oTjd8LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovGKd7hLEe2uyMDTtZ4aHg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovGKeLhLEe2uyMDTtZ4aHg" type="_oTiP0LhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
 this.fm = this.getFileManager();&#xD;
 initialize(inputFileName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovGKebhLEe2uyMDTtZ4aHg" name="visualization" specification="_oTkFA7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovGKerhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovGxgLhLEe2uyMDTtZ4aHg" name="fileVisualization" specification="_oTksErhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovGxgbhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovGxgrhLEe2uyMDTtZ4aHg" name="toString" specification="_oTlTI7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovGxg7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovGxhLhLEe2uyMDTtZ4aHg" name="initialize" specification="_oTmhQLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovGxhbhLEe2uyMDTtZ4aHg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
 InputGraphFile gf = new InputGraphFile(fm);&#xD;
 inputGraphString = gf.readGraphFile(inputFile);&#xD;
 this.inputFileName = gf.getGraphFileName();&#xD;
 description = new Description(inputGraphString);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovGxhrhLEe2uyMDTtZ4aHg" name="main" specification="_oTnIULhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovGxh7hLEe2uyMDTtZ4aHg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ovGxiLhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>//Initiating new WorkLoadDescription w/ FILE&#xD;
	  //FILE is a static final variable initialized at the beginning of the file&#xD;
	  //allowing for quick swap of files&#xD;
	   WorkLoadDescription wldTest = new WorkLoadDescription(FILE);&#xD;
	   //Initializing new array list for which elements of the file will be stored&#xD;
	   ArrayList&lt;String> testFile = new ArrayList&lt;String>();&#xD;
	   //for loop to add elements from wldTest to Array list skipping the title line&#xD;
	   for(int i = 1 ; i &lt; wldTest.visualization().size(); i++) {&#xD;
		   testFile.add(wldTest.visualization().get(i));&#xD;
	   }&#xD;
	   //Sorting the new ArrayList&#xD;
	   Collections.sort(testFile);&#xD;
	   //Print out the input file name without suffix&#xD;
	   System.out.println(wldTest.getInputFileName().replace(&quot;.txt&quot;, &quot;&quot;));&#xD;
	   //for loop goes through the new ArrayList skipping the final &quot;}&quot;&#xD;
	   for(int i = 0 ; i &lt; testFile.size() - 1; i++ ) {&#xD;
		   //if condition skips blank lines&#xD;
		   if (testFile.get(i).isBlank()) {&#xD;
			   continue;&#xD;
		   }&#xD;
		   //Printing out results formatted to example, trimming leading or ending blank space&#xD;
		   System.out.println(&quot;Flow &quot; + (i + 1) +&quot;: &quot; + testFile.get(i).trim() );&#xD;
		   &#xD;
	   }&#xD;
	   &#xD;
	   &#xD;
	  &#xD;
	   &#xD;
	   &#xD;
	  &#xD;
&#xD;
	   	   &#xD;
	   &#xD;
	   </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oTjd8LhLEe2uyMDTtZ4aHg" name="WorkLoadDescription" visibility="package" method="_ovGKdrhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oTkFALhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oTkFAbhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oTjd8bhLEe2uyMDTtZ4aHg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oTkFArhLEe2uyMDTtZ4aHg" type="_oTiP0LhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oTkFA7hLEe2uyMDTtZ4aHg" name="visualization" method="_ovGKebhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opstELhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oTksErhLEe2uyMDTtZ4aHg" name="fileVisualization" method="_ovGxgLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opstEbhLEe2uyMDTtZ4aHg" type="_oPoAMLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oTlTI7hLEe2uyMDTtZ4aHg" name="toString" method="_ovGxgrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oTl6MLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oTmhQLhLEe2uyMDTtZ4aHg" name="initialize" visibility="private" method="_ovGxhLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oTmhQbhLEe2uyMDTtZ4aHg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oTnIULhLEe2uyMDTtZ4aHg" name="main" isStatic="true" method="_ovGxhrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oTnIUbhLEe2uyMDTtZ4aHg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oTnIUrhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_oTo9gLhLEe2uyMDTtZ4aHg" name="WarpInterface">
              <ownedComment xmi:id="_ovhoQbhLEe2uyMDTtZ4aHg">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_optUIbhLEe2uyMDTtZ4aHg" general="_oS3hcLhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oTpkkLhLEe2uyMDTtZ4aHg" name="toWorkload">
                <ownedParameter xmi:id="_opt7MLhLEe2uyMDTtZ4aHg" type="_oUEbULhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oTqLoLhLEe2uyMDTtZ4aHg" name="toProgram">
                <ownedParameter xmi:id="_opt7MbhLEe2uyMDTtZ4aHg" type="_oReaULhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oTqLobhLEe2uyMDTtZ4aHg" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_opt7MrhLEe2uyMDTtZ4aHg" type="_oSMzELhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oTqysLhLEe2uyMDTtZ4aHg" name="toSimulator">
                <ownedParameter xmi:id="_opt7M7hLEe2uyMDTtZ4aHg" type="_oS0eILhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oTqysbhLEe2uyMDTtZ4aHg" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_opt7NLhLEe2uyMDTtZ4aHg" type="_oQs-QLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oTrZwLhLEe2uyMDTtZ4aHg" name="toChannelAnalysis">
                <ownedParameter xmi:id="_opt7NbhLEe2uyMDTtZ4aHg" type="_oOxEkLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oTrZwbhLEe2uyMDTtZ4aHg" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_oTsA0LhLEe2uyMDTtZ4aHg" name="reliabilitiesMet">
                <ownedParameter xmi:id="_oTsA0bhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oTsn4LhLEe2uyMDTtZ4aHg" name="deadlinesMet">
                <ownedParameter xmi:id="_oTsn4bhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oTt2ALhLEe2uyMDTtZ4aHg" name="WarpPoset">
              <ownedComment xmi:id="_ovhoQrhLEe2uyMDTtZ4aHg">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_opuiRLhLEe2uyMDTtZ4aHg" general="_oRGm4LhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovGxibhLEe2uyMDTtZ4aHg" name="WarpPoset" specification="_opt7NrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovGxirhLEe2uyMDTtZ4aHg" name="workload" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovGxi7hLEe2uyMDTtZ4aHg" type="_oTt2ALhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovHYkLhLEe2uyMDTtZ4aHg" name="findCoordinator" specification="_or0M8LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovHYkbhLEe2uyMDTtZ4aHg" name="nodesInFlow" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovHYkrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_opt7NrhLEe2uyMDTtZ4aHg" name="WarpPoset" visibility="package" method="_ovGxibhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_opuiQbhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_opuiQrhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_opuiQLhLEe2uyMDTtZ4aHg" name="workload" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_opuiQ7hLEe2uyMDTtZ4aHg" type="_oTt2ALhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_or0M8LhLEe2uyMDTtZ4aHg" name="findCoordinator" visibility="protected" method="_ovHYkLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_or00ALhLEe2uyMDTtZ4aHg" name="nodesInFlow" type="_onvlQLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_or00AbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oTwSQLhLEe2uyMDTtZ4aHg" name="WarpSystem">
              <ownedComment xmi:id="_ovhoQ7hLEe2uyMDTtZ4aHg">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_otXsILhLEe2uyMDTtZ4aHg" name="program" visibility="private" type="_oReaULhLEe2uyMDTtZ4aHg" association="_owiU4LhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otYTMLhLEe2uyMDTtZ4aHg" name="workLoad" visibility="private" type="_oUEbULhLEe2uyMDTtZ4aHg" association="_owiU47hLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otYTMrhLEe2uyMDTtZ4aHg" name="ra" visibility="private" type="_oSMzELhLEe2uyMDTtZ4aHg" association="_owi78bhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otY6QLhLEe2uyMDTtZ4aHg" name="la" visibility="private" type="_oQs-QLhLEe2uyMDTtZ4aHg" association="_owi79LhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otY6QrhLEe2uyMDTtZ4aHg" name="ca" visibility="private" type="_oOxEkLhLEe2uyMDTtZ4aHg" association="_owjjAbhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otY6RLhLEe2uyMDTtZ4aHg" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otavcrhLEe2uyMDTtZ4aHg" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otavc7hLEe2uyMDTtZ4aHg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otavdbhLEe2uyMDTtZ4aHg" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otbWgLhLEe2uyMDTtZ4aHg" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_opvJULhLEe2uyMDTtZ4aHg" client="_oTwSQLhLEe2uyMDTtZ4aHg" supplier="_oTo9gLhLEe2uyMDTtZ4aHg" contract="_oTo9gLhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovH_oLhLEe2uyMDTtZ4aHg" name="WarpSystem" specification="_or2CILhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovH_obhLEe2uyMDTtZ4aHg" name="workLoad" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovH_orhLEe2uyMDTtZ4aHg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovH_o7hLEe2uyMDTtZ4aHg" name="choice" type="_ordnoLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovH_pLhLEe2uyMDTtZ4aHg" type="_oTwSQLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
 this.numChannels = numChannels;&#xD;
 createProgram(workLoad, numChannels, choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovH_pbhLEe2uyMDTtZ4aHg" name="toWorkload" specification="_oTyHcLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovH_prhLEe2uyMDTtZ4aHg" type="_oUEbULhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovH_p7hLEe2uyMDTtZ4aHg" name="toProgram" specification="_oTz8oLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovH_qLhLEe2uyMDTtZ4aHg" type="_oReaULhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return program;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovH_qbhLEe2uyMDTtZ4aHg" name="toReliabilityAnalysis" specification="_oT0jsrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovH_qrhLEe2uyMDTtZ4aHg" type="_oSMzELhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);&#xD;
 return ra;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovH_q7hLEe2uyMDTtZ4aHg" name="toSimulator" specification="_oT1x0LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovH_rLhLEe2uyMDTtZ4aHg" type="_oS0eILhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovH_rbhLEe2uyMDTtZ4aHg" name="toLatencyAnalysis" specification="_oT2Y4rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovH_rrhLEe2uyMDTtZ4aHg" type="_oQs-QLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
 return la;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovH_r7hLEe2uyMDTtZ4aHg" name="toChannelAnalysis" specification="_oT2_87hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovH_sLhLEe2uyMDTtZ4aHg" type="_oOxEkLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
 return ca;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovImsLhLEe2uyMDTtZ4aHg" name="reliabilitiesMet" specification="_oT4OEbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovImsbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
   ra = new ReliabilityAnalysis(program);&#xD;
 }&#xD;
 return ra.verifyReliabilities();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovImsrhLEe2uyMDTtZ4aHg" name="deadlinesMet" specification="_oT41IrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovIms7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
 if (program.deadlineMisses().size() > 0) {&#xD;
   result = false;&#xD;
 }&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovImtLhLEe2uyMDTtZ4aHg" name="createProgram" specification="_or2pMrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovImtbhLEe2uyMDTtZ4aHg" name="workLoad" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovImtrhLEe2uyMDTtZ4aHg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovImt7hLEe2uyMDTtZ4aHg" name="choice" type="_ordnoLhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovImuLhLEe2uyMDTtZ4aHg" name="getNumFaults" specification="_oT5cMrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovImubhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovImurhLEe2uyMDTtZ4aHg" name="getMinPacketReceptionRate" specification="_oT6DRLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovImu7hLEe2uyMDTtZ4aHg" type="_orgq8LhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovImvLhLEe2uyMDTtZ4aHg" name="getE2e" specification="_oT7RYbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovImvbhLEe2uyMDTtZ4aHg" type="_orgq8LhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovImvrhLEe2uyMDTtZ4aHg" name="getName" specification="_oT74crhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovImv7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovImwLhLEe2uyMDTtZ4aHg" name="getSchedulerName" specification="_oT8fhLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovImwbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovJNwLhLEe2uyMDTtZ4aHg" name="getNumTransmissions" specification="_oT9GlLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovJNwbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovJNwrhLEe2uyMDTtZ4aHg" name="getOptimizationFlag" specification="_oT-UsLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovJNw7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oTyHcLhLEe2uyMDTtZ4aHg" name="toWorkload" method="_ovH_pbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opvJUbhLEe2uyMDTtZ4aHg" type="_oUEbULhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oTz8oLhLEe2uyMDTtZ4aHg" name="toProgram" method="_ovH_p7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opvwYLhLEe2uyMDTtZ4aHg" type="_oReaULhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oT0jsrhLEe2uyMDTtZ4aHg" name="toReliabilityAnalysis" method="_ovH_qbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opvwYbhLEe2uyMDTtZ4aHg" type="_oSMzELhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oT1x0LhLEe2uyMDTtZ4aHg" name="toSimulator" method="_ovH_q7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opvwYrhLEe2uyMDTtZ4aHg" type="_oS0eILhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oT2Y4rhLEe2uyMDTtZ4aHg" name="toLatencyAnalysis" method="_ovH_rbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opvwY7hLEe2uyMDTtZ4aHg" type="_oQs-QLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oT2_87hLEe2uyMDTtZ4aHg" name="toChannelAnalysis" method="_ovH_r7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_opvwZLhLEe2uyMDTtZ4aHg" type="_oOxEkLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oT4OEbhLEe2uyMDTtZ4aHg" name="reliabilitiesMet" method="_ovImsLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oT4OErhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oT41IrhLEe2uyMDTtZ4aHg" name="deadlinesMet" method="_ovImsrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oT41I7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oT5cMrhLEe2uyMDTtZ4aHg" name="getNumFaults" method="_ovImuLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oT6DQLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oT6DRLhLEe2uyMDTtZ4aHg" name="getMinPacketReceptionRate" method="_ovImurhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_or3QQLhLEe2uyMDTtZ4aHg" type="_orgq8LhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oT7RYbhLEe2uyMDTtZ4aHg" name="getE2e" method="_ovImvLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_or3QQbhLEe2uyMDTtZ4aHg" type="_orgq8LhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oT74crhLEe2uyMDTtZ4aHg" name="getName" method="_ovImvrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oT8fgLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oT8fhLhLEe2uyMDTtZ4aHg" name="getSchedulerName" method="_ovImwLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oT9GkLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oT9GlLhLEe2uyMDTtZ4aHg" name="getNumTransmissions" method="_ovJNwLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oT9toLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oT-UsLhLEe2uyMDTtZ4aHg" name="getOptimizationFlag" method="_ovJNwrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oT-UsbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oT-7wrhLEe2uyMDTtZ4aHg" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_or2CILhLEe2uyMDTtZ4aHg" name="WarpSystem" method="_ovH_oLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_or2CJLhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_or2pMLhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_or2CIbhLEe2uyMDTtZ4aHg" name="workLoad" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_or2CIrhLEe2uyMDTtZ4aHg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_or2CI7hLEe2uyMDTtZ4aHg" name="choice" type="_ordnoLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_or2pMbhLEe2uyMDTtZ4aHg" type="_oTwSQLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_or2pMrhLEe2uyMDTtZ4aHg" name="createProgram" visibility="private" method="_ovImtLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_or2pM7hLEe2uyMDTtZ4aHg" name="workLoad" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_or2pNLhLEe2uyMDTtZ4aHg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_or2pNbhLEe2uyMDTtZ4aHg" name="choice" type="_ordnoLhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oUEbULhLEe2uyMDTtZ4aHg" name="WorkLoad">
              <ownedComment xmi:id="_ovhoRLhLEe2uyMDTtZ4aHg">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_op13AbhLEe2uyMDTtZ4aHg" general="_oTiP0LhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otb9kLhLEe2uyMDTtZ4aHg" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otb9kbhLEe2uyMDTtZ4aHg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otb9krhLEe2uyMDTtZ4aHg" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otb9k7hLEe2uyMDTtZ4aHg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otckoLhLEe2uyMDTtZ4aHg" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otckobhLEe2uyMDTtZ4aHg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otckorhLEe2uyMDTtZ4aHg" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otcko7hLEe2uyMDTtZ4aHg" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otckpLhLEe2uyMDTtZ4aHg" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otckpbhLEe2uyMDTtZ4aHg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otckprhLEe2uyMDTtZ4aHg" name="minPacketReceptionRate" type="_orgq8LhLEe2uyMDTtZ4aHg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otckp7hLEe2uyMDTtZ4aHg" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otdLsLhLEe2uyMDTtZ4aHg" name="e2e" visibility="private" type="_orgq8LhLEe2uyMDTtZ4aHg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otdLsbhLEe2uyMDTtZ4aHg" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otdLs7hLEe2uyMDTtZ4aHg" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otdLtLhLEe2uyMDTtZ4aHg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otdywLhLEe2uyMDTtZ4aHg" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otdywbhLEe2uyMDTtZ4aHg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otdyw7hLEe2uyMDTtZ4aHg" name="flows" type="_oQRgcLhLEe2uyMDTtZ4aHg" association="_ovhoRbhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_oteZ0LhLEe2uyMDTtZ4aHg" name="nodes" type="_oQ_SILhLEe2uyMDTtZ4aHg" association="_oviPUbhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_oteZ0bhLEe2uyMDTtZ4aHg" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otfA4LhLEe2uyMDTtZ4aHg" name="flowNamesInOriginalOrder" type="_onvlQLhLEe2uyMDTtZ4aHg" association="_owkKEbhLEe2uyMDTtZ4aHg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otfA4rhLEe2uyMDTtZ4aHg" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otfn8LhLEe2uyMDTtZ4aHg" name="flowNamesInPriorityOrder" type="_onvlQLhLEe2uyMDTtZ4aHg" association="_owkxILhLEe2uyMDTtZ4aHg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otfn8rhLEe2uyMDTtZ4aHg" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_opzawbhLEe2uyMDTtZ4aHg" client="_oUEbULhLEe2uyMDTtZ4aHg" supplier="_oSOoQLhLEe2uyMDTtZ4aHg" contract="_oSOoQLhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovJNxLhLEe2uyMDTtZ4aHg" name="WorkLoad" specification="_or5FcLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovJNxbhLEe2uyMDTtZ4aHg" name="m" type="_orgq8LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovJNxrhLEe2uyMDTtZ4aHg" name="e2e" type="_orgq8LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovJNx7hLEe2uyMDTtZ4aHg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovJNyLhLEe2uyMDTtZ4aHg" type="_oUEbULhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovJNybhLEe2uyMDTtZ4aHg" name="WorkLoad" specification="_or5sgLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovJNyrhLEe2uyMDTtZ4aHg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovJNy7hLEe2uyMDTtZ4aHg" name="m" type="_orgq8LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovJNzLhLEe2uyMDTtZ4aHg" name="e2e" type="_orgq8LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovJNzbhLEe2uyMDTtZ4aHg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovJNzrhLEe2uyMDTtZ4aHg" type="_oUEbULhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 this.numFaults = numFaults;&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovJ00LhLEe2uyMDTtZ4aHg" name="setDefaultParameters" specification="_oUHeoLhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovJ00bhLEe2uyMDTtZ4aHg" name="getE2e" specification="_oUIFsLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovJ00rhLEe2uyMDTtZ4aHg" type="_orgq8LhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovJ007hLEe2uyMDTtZ4aHg" name="getIntForFlowNames" specification="_oUIFsbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovJ01LhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovJ01bhLEe2uyMDTtZ4aHg" name="getName" specification="_oUIswLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovJ01rhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovJ017hLEe2uyMDTtZ4aHg" name="setMinPacketReceptionRate" specification="_or6TkbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovJ02LhLEe2uyMDTtZ4aHg" name="minPacketReceptionRate" type="_orgq8LhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovJ02bhLEe2uyMDTtZ4aHg" name="getMaxPhase" specification="_oUIswrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovJ02rhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovJ027hLEe2uyMDTtZ4aHg" name="getMinPeriod" specification="_oUJT0bhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovJ03LhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovJ03bhLEe2uyMDTtZ4aHg" name="setE2e" specification="_or6Tk7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovJ03rhLEe2uyMDTtZ4aHg" name="e2e" type="_orgq8LhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovKb4LhLEe2uyMDTtZ4aHg" name="setIntForFlowNames" specification="_oUJ64bhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovKb4bhLEe2uyMDTtZ4aHg" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovKb4rhLEe2uyMDTtZ4aHg" name="setName" specification="_oUKh8LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovKb47hLEe2uyMDTtZ4aHg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovKb5LhLEe2uyMDTtZ4aHg" name="setNodeChannel" specification="_oULJALhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovKb5bhLEe2uyMDTtZ4aHg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovKb5rhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovKb57hLEe2uyMDTtZ4aHg" name="getNodeChannel" specification="_oULJA7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovKb6LhLEe2uyMDTtZ4aHg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovKb6bhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovKb6rhLEe2uyMDTtZ4aHg" name="addFlow" specification="_oULwEbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovKb67hLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
  * default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
  * This will create a default priority equal to the order listed in the input graph file. We&#xD;
  * also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
  * initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
  * optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
  * over written&#xD;
  */&#xD;
 if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovKb7LhLEe2uyMDTtZ4aHg" name="isIntForNodeNames" specification="_oULwE7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovKb7bhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints&#xD;
 return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovKb7rhLEe2uyMDTtZ4aHg" name="isIntForFlowNames" specification="_oUMXIbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovKb77hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovLC8LhLEe2uyMDTtZ4aHg" name="addNodeToFlow" specification="_oUMXI7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovLC8bhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovLC8rhLEe2uyMDTtZ4aHg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovLC87hLEe2uyMDTtZ4aHg" name="getFlowPriority" specification="_oUM-MbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovLC9LhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovLC9bhLEe2uyMDTtZ4aHg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovLC9rhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovLC97hLEe2uyMDTtZ4aHg" name="setFlowPriority" specification="_oUNlQbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovLC-LhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovLC-bhLEe2uyMDTtZ4aHg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovLC-rhLEe2uyMDTtZ4aHg" name="setFlowPeriod" specification="_oUOMULhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovLC-7hLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovLC_LhLEe2uyMDTtZ4aHg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovLC_bhLEe2uyMDTtZ4aHg" name="setFlowDeadline" specification="_oUOMU7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovLC_rhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovLC_7hLEe2uyMDTtZ4aHg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovLDALhLEe2uyMDTtZ4aHg" name="setFlowPhase" specification="_oUOzYbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovLDAbhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovLDArhLEe2uyMDTtZ4aHg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovLDA7hLEe2uyMDTtZ4aHg" name="getFlowIndex" specification="_oUPacLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovLDBLhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovLDBbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovLqALhLEe2uyMDTtZ4aHg" name="getFlowPriority" specification="_oUQBgLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovLqAbhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovLqArhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovLqA7hLEe2uyMDTtZ4aHg" name="getFlowPeriod" specification="_oUQokLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovLqBLhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovLqBbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovLqBrhLEe2uyMDTtZ4aHg" name="getFlowDeadline" specification="_oUQok7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovLqB7hLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovLqCLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovLqCbhLEe2uyMDTtZ4aHg" name="getFlowPhase" specification="_oURPobhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovLqCrhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovLqC7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovMRELhLEe2uyMDTtZ4aHg" name="getFlowTxAttemptsPerLink" specification="_oUR2sbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovMREbhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovMRErhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovMRE7hLEe2uyMDTtZ4aHg" name="setFlowsInPriorityOrder" specification="_oUSdwbhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovMRFLhLEe2uyMDTtZ4aHg" name="setFlowsInDMorder" specification="_oUSdwrhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovMRFbhLEe2uyMDTtZ4aHg" name="setFlowsInRMorder" specification="_oUSdw7hLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovM4ILhLEe2uyMDTtZ4aHg" name="setFlowsInRealTimeHARTorder" specification="_oUTE0LhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovM4IbhLEe2uyMDTtZ4aHg" name="finalizeCurrentFlow" specification="_oUTE0bhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovM4IrhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovM4I7hLEe2uyMDTtZ4aHg" name="nextReleaseTime" specification="_oUTr4LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovM4JLhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovM4JbhLEe2uyMDTtZ4aHg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovM4JrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovM4J7hLEe2uyMDTtZ4aHg" name="nextAbsoluteDeadline" specification="_oUUS8LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovM4KLhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovM4KbhLEe2uyMDTtZ4aHg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovM4KrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovM4K7hLEe2uyMDTtZ4aHg" name="finalizeFlowWithE2eParameters" specification="_oUU6ALhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovM4LLhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 var m = minPacketReceptionRate; // shorten the name :-)&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
                     // and when m == 1.0&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost =&#xD;
       numTxAttemptsPerLinkAndTotalTxAttempts(flowNode, e2e, m, true);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovNfMLhLEe2uyMDTtZ4aHg" name="finalizeFlowWithFixedFaultTolerance" specification="_oUU6ArhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovNfMbhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = getFixedTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovNfMrhLEe2uyMDTtZ4aHg" name="getFixedTxPerLinkAndTotalTxCost" specification="_op0o4LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovNfM7hLEe2uyMDTtZ4aHg" name="flow" type="_oP_zoLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovNfNLhLEe2uyMDTtZ4aHg" type="_onvlQLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size();&#xD;
 ArrayList&lt;Integer> txArrayList = new ArrayList&lt;Integer>();&#xD;
 /*&#xD;
  * Each node will have at most numFaults+1 transmissions. Because we don't know which nodes will&#xD;
  * send the message over an edge, we give the cost to each node.&#xD;
  */&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   txArrayList.add(numFaults + 1);&#xD;
 }&#xD;
 /*&#xD;
  * now compute the maximum # of TX, assuming at most numFaults occur on an edge per period, and&#xD;
  * each edge requires at least one successful TX.&#xD;
  */&#xD;
 var numEdgesInFlow = nNodesInFlow - 1;&#xD;
 var maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
 txArrayList.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
 return txArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovNfNbhLEe2uyMDTtZ4aHg" name="numTxAttemptsPerLinkAndTotalTxAttempts" specification="_or66obhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovNfNrhLEe2uyMDTtZ4aHg" name="flow" type="_oP_zoLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovNfN7hLEe2uyMDTtZ4aHg" name="e2e" type="_orgq8LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovNfOLhLEe2uyMDTtZ4aHg" name="M" type="_orgq8LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovNfObhLEe2uyMDTtZ4aHg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovNfOrhLEe2uyMDTtZ4aHg" type="_onvlQLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size(); // The last entry will contain the worst-case cost of&#xD;
                                        // transmitting E2E in isolation&#xD;
 // var nPushes = Array(repeating: 0, count: nNodesInFlow+1);&#xD;
 var nPushes = new Integer[nNodesInFlow + 1]; // Array to track nPushes for each node in this&#xD;
                                              // flow (same as nTx per link)&#xD;
 Arrays.fill(nPushes, 0); // initialize to all 0 values&#xD;
 var nHops = nNodesInFlow - 1;&#xD;
 // minLinkReliablityNeded is the minimum reliability needed per link in a flow to hit E2E&#xD;
 // reliability for the flow&#xD;
 Double minLinkReliablityNeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops))); // use max&#xD;
                                                                                       // to&#xD;
                                                                                       // handle&#xD;
                                                                                       // rounding&#xD;
                                                                                       // error&#xD;
                                                                                       // when&#xD;
                                                                                       // e2e ==&#xD;
                                                                                       // 1.0&#xD;
 // Now compute reliability of packet reaching each node in the given time slot&#xD;
 // Start with a 2-D reliability window that is a 2-D matrix of no size&#xD;
 // each row is a time slot, stating at time 0&#xD;
 // each column represents the reliability of the packet reaching that node at the&#xD;
 // current time slot (i.e., the row it is in)&#xD;
 // will add rows as we compute reliabilities until the final reliability is reached&#xD;
 // for all nodes.&#xD;
 var reliabilityWindow = new Vector&lt;Vector&lt;Double>>();&#xD;
 var newReliabilityRow = new Vector&lt;Double>();&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   newReliabilityRow.add(0.0); // create the the row initialized with 0.0 values&#xD;
 }&#xD;
 reliabilityWindow.add(newReliabilityRow); // now add row to the reliability window, Time 0&#xD;
 Vector&lt;Double> tmpVector = reliabilityWindow.get(0);&#xD;
 var currentReliabilityRow = tmpVector.toArray(new Double[tmpVector.size()]);&#xD;
 // var currentReliabilityRow = (Double[]) reliabilityWindow.get(0).toArray();&#xD;
 // Want reliabilityWindow[0][0] = 1.0 (i.e., P(packet@FlowSrc) = 1&#xD;
 // but I din't want to mess with the newReliablityRow vector I use below&#xD;
 // So, we initialize this first entry to 1.0, wich is reliabilityWindow[0][0]&#xD;
 // We will then update this row with computed values for each node and put it&#xD;
 // back in the matrix&#xD;
 currentReliabilityRow[0] = 1.0; // initialize (i.e., P(packet@FlowSrc) = 1&#xD;
 Double e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1]; // the analysis will end&#xD;
                                                                       // when the 2e2&#xD;
                                                                       // reliability metrix is&#xD;
                                                                       // met, initially the&#xD;
                                                                       // state is not met and&#xD;
                                                                       // will be 0 with this&#xD;
                                                                       // statement&#xD;
 var timeSlot = 0; // start time at 0&#xD;
 while (e2eReliabilityState &lt; e2e) { // change to while and increment increment timeSlot becuase&#xD;
                                     // we don't know how long this schedule window will last&#xD;
   var prevReliabilityRow = currentReliabilityRow;&#xD;
   currentReliabilityRow = newReliabilityRow.toArray(new Double[newReliabilityRow.size()]); // would&#xD;
                                                                                            // be&#xD;
                                                                                            // reliabilityWindow[timeSlot]&#xD;
                                                                                            // if&#xD;
                                                                                            // working&#xD;
                                                                                            // through&#xD;
                                                                                            // a&#xD;
                                                                                            // schedule&#xD;
   // Now use each flow:src->sink to update reliability computations&#xD;
   // this is the update formula for the state probabilities&#xD;
   // nextState = (1 - M) * prevState + M*NextHighestFlowState&#xD;
   // use MinLQ for M in above equation&#xD;
   // NewSinkNodeState = (1-M)*PrevSnkNodeState + M*PrevSrcNodeState&#xD;
&#xD;
   for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) { // loop through each&#xD;
                                                                          // node in the flow and&#xD;
                                                                          // update the sates for&#xD;
                                                                          // each link (i.e.,&#xD;
                                                                          // sink->src pair)&#xD;
     var flowSrcNodeindex = nodeIndex;&#xD;
     var flowSnkNodeindex = nodeIndex + 1;&#xD;
     var prevSrcNodeState = prevReliabilityRow[flowSrcNodeindex];&#xD;
     var prevSnkNodeState = prevReliabilityRow[flowSnkNodeindex];&#xD;
     Double nextSnkState;&#xD;
     if ((prevSnkNodeState &lt; minLinkReliablityNeded) &amp;&amp; prevSrcNodeState > 0) { // do a push&#xD;
                                                                                // until PrevSnk&#xD;
                                                                                // state > e2e to&#xD;
                                                                                // ensure next&#xD;
                                                                                // node reaches&#xD;
                                                                                // target E2E BUT&#xD;
                                                                                // skip if no&#xD;
                                                                                // chance of&#xD;
                                                                                // success (i.e.,&#xD;
                                                                                // source doesn't&#xD;
                                                                                // have packet)&#xD;
       nextSnkState = ((1.0 - M) * prevSnkNodeState) + (M * prevSrcNodeState); // need to&#xD;
                                                                               // continue&#xD;
                                                                               // attempting to&#xD;
                                                                               // Tx, so update&#xD;
                                                                               // current state&#xD;
       nPushes[nodeIndex] += 1; // increment the number of pushes for for this node to snk node&#xD;
     } else {&#xD;
       nextSnkState = prevSnkNodeState; // snkNode has met its reliability. Thus move on to the&#xD;
                                        // next node and record the reliability met&#xD;
     }&#xD;
&#xD;
     if (currentReliabilityRow[flowSrcNodeindex] &lt; prevReliabilityRow[flowSrcNodeindex]) { // probabilities&#xD;
                                                                                           // are&#xD;
                                                                                           // non-decreasing&#xD;
                                                                                           // so&#xD;
                                                                                           // update&#xD;
                                                                                           // if&#xD;
                                                                                           // we&#xD;
                                                                                           // were&#xD;
                                                                                           // higher&#xD;
                                                                                           // by&#xD;
                                                                                           // carring&#xD;
                                                                                           // old&#xD;
                                                                                           // value&#xD;
                                                                                           // forward&#xD;
       currentReliabilityRow[flowSrcNodeindex] = prevReliabilityRow[flowSrcNodeindex]; // carry&#xD;
                                                                                       // forward&#xD;
                                                                                       // the&#xD;
                                                                                       // previous&#xD;
                                                                                       // state&#xD;
                                                                                       // for the&#xD;
                                                                                       // src&#xD;
                                                                                       // node,&#xD;
                                                                                       // which&#xD;
                                                                                       // may get&#xD;
                                                                                       // over&#xD;
                                                                                       // written&#xD;
                                                                                       // later&#xD;
                                                                                       // by&#xD;
                                                                                       // another&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in this&#xD;
                                                                                       // slot&#xD;
     }&#xD;
     currentReliabilityRow[flowSnkNodeindex] = nextSnkState;&#xD;
   }&#xD;
&#xD;
   e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1];&#xD;
   Vector&lt;Double> currentReliabilityVector = new Vector&lt;Double>();&#xD;
   // convert the row to a vector so we can add it to the reliability window&#xD;
   Collections.addAll(currentReliabilityVector, currentReliabilityRow);&#xD;
   if (timeSlot &lt; reliabilityWindow.size()) {&#xD;
     reliabilityWindow.set(timeSlot, (currentReliabilityVector));&#xD;
   } else {&#xD;
     reliabilityWindow.add(currentReliabilityVector);&#xD;
   }&#xD;
   timeSlot += 1; // increase to next time slot&#xD;
 }&#xD;
 var size = reliabilityWindow.size();&#xD;
 nPushes[nNodesInFlow] = size; // The total (worst-case) cost to transmit E2E in isolation with&#xD;
                               // specified reliability target is the number of rows in the&#xD;
                               // reliabilityWindow&#xD;
 // Now convert the array to the ArrayList needed to return&#xD;
 ArrayList&lt;Integer> nPushesArrayList = new ArrayList&lt;Integer>();&#xD;
 Collections.addAll(nPushesArrayList, nPushes);&#xD;
 return nPushesArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovNfO7hLEe2uyMDTtZ4aHg" name="getNodeNamesOrderedAlphabetically" specification="_oUVhELhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovNfPLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ovNfPbhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovNfPrhLEe2uyMDTtZ4aHg" name="getFlow" specification="_oUWvMLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovNfP7hLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovNfQLhLEe2uyMDTtZ4aHg" type="_oP_zoLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovOGQLhLEe2uyMDTtZ4aHg" name="getFlowNames" specification="_oUWvMrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovOGQbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ovOGQrhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovOGQ7hLEe2uyMDTtZ4aHg" name="getNodeIndex" specification="_oUXWQrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovOGRLhLEe2uyMDTtZ4aHg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovOGRbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovOGRrhLEe2uyMDTtZ4aHg" name="getNodesInFlow" specification="_oUX9UrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovOGR7hLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovOGSLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ovOGSbhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovOGSrhLEe2uyMDTtZ4aHg" name="getHyperPeriod" specification="_oUYkYrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovOGS7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
   // var dm = new Utlitities();&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod&#xD;
                                                                      // so far and the current&#xD;
                                                                      // period, then update the&#xD;
                                                                      // hyperPeriod with that&#xD;
                                                                      // value&#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovOGTLhLEe2uyMDTtZ4aHg" name="getTotalTxAttemptsInFlow" specification="_oUZLcbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovOGTbhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovOGTrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovOGT7hLEe2uyMDTtZ4aHg" name="getNumTxAttemptsPerLink" specification="_oUaZkLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovOGULhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovOGUbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ovOGUrhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of&#xD;
                                         // others&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovOGU7hLEe2uyMDTtZ4aHg" name="addEdge" specification="_op1P8bhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovOGVLhLEe2uyMDTtZ4aHg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovOGVbhLEe2uyMDTtZ4aHg" name="edge" type="_oPrqkLhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovOtULhLEe2uyMDTtZ4aHg" name="maxFlowLength" specification="_oUbnsLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovOtUbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oUHeoLhLEe2uyMDTtZ4aHg" name="setDefaultParameters" visibility="private" method="_ovJ00LhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_oviPVbhLEe2uyMDTtZ4aHg">
                  <body>Sets the default parameters for the nodes and flows.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oUIFsLhLEe2uyMDTtZ4aHg" name="getE2e" method="_ovJ00bhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_oviPVrhLEe2uyMDTtZ4aHg">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_or6TkLhLEe2uyMDTtZ4aHg" type="_orgq8LhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oUIFsbhLEe2uyMDTtZ4aHg" name="getIntForFlowNames" method="_ovJ007hLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_oviPV7hLEe2uyMDTtZ4aHg">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_oUIFsrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUIswLhLEe2uyMDTtZ4aHg" name="getName" method="_ovJ01bhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_oviPWLhLEe2uyMDTtZ4aHg">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_oUIswbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUIswrhLEe2uyMDTtZ4aHg" name="getMaxPhase" method="_ovJ02bhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_oviPWrhLEe2uyMDTtZ4aHg">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_oUJT0LhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUJT0bhLEe2uyMDTtZ4aHg" name="getMinPeriod" method="_ovJ027hLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_oviPW7hLEe2uyMDTtZ4aHg">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_oUJ64LhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUJ64bhLEe2uyMDTtZ4aHg" name="setIntForFlowNames" method="_ovKb4LhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_oviPXbhLEe2uyMDTtZ4aHg">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_oUJ64rhLEe2uyMDTtZ4aHg" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUKh8LhLEe2uyMDTtZ4aHg" name="setName" method="_ovKb4rhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_oviPXrhLEe2uyMDTtZ4aHg">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_oUKh8bhLEe2uyMDTtZ4aHg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oULJALhLEe2uyMDTtZ4aHg" name="setNodeChannel" method="_ovKb5LhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovi2YLhLEe2uyMDTtZ4aHg">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_oULJAbhLEe2uyMDTtZ4aHg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oULJArhLEe2uyMDTtZ4aHg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oULJA7hLEe2uyMDTtZ4aHg" name="getNodeChannel" method="_ovKb57hLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovi2YbhLEe2uyMDTtZ4aHg">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_oULJBLhLEe2uyMDTtZ4aHg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oULwELhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oULwEbhLEe2uyMDTtZ4aHg" name="addFlow" method="_ovKb6rhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovi2YrhLEe2uyMDTtZ4aHg">
                  <body>Adds a new flow to the Flows dictionary.&#xD;
   * &#xD;
   * @param flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_oULwErhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oULwE7hLEe2uyMDTtZ4aHg" name="isIntForNodeNames" method="_ovKb7LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oUMXILhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUMXIbhLEe2uyMDTtZ4aHg" name="isIntForFlowNames" method="_ovKb7rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oUMXIrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUMXI7hLEe2uyMDTtZ4aHg" name="addNodeToFlow" method="_ovLC8LhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovi2Y7hLEe2uyMDTtZ4aHg">
                  <body>Adds a node to the specified flow. If the node is not in the flow, it will create &#xD;
   * a new Node.&#xD;
   * &#xD;
   * @param flowName the name of the flow to be added to&#xD;
   * @param nodeName the name of the node to be added</body>
                </ownedComment>
                <ownedParameter xmi:id="_oUMXJLhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oUM-MLhLEe2uyMDTtZ4aHg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUM-MbhLEe2uyMDTtZ4aHg" name="getFlowPriority" method="_ovLC87hLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovi2ZLhLEe2uyMDTtZ4aHg">
                  <body>Gets the flow priority of the node by finding the source node and setting its index.&#xD;
   * &#xD;
   * @param flowName the name of the flow to be searched&#xD;
   * @param nodeName the name of the node to be found&#xD;
   * @return priority the priority of the node</body>
                </ownedComment>
                <ownedParameter xmi:id="_oUM-MrhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oUM-M7hLEe2uyMDTtZ4aHg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oUNlQLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUNlQbhLEe2uyMDTtZ4aHg" name="setFlowPriority" method="_ovLC97hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oUNlQrhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oUNlQ7hLEe2uyMDTtZ4aHg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUOMULhLEe2uyMDTtZ4aHg" name="setFlowPeriod" method="_ovLC-rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oUOMUbhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oUOMUrhLEe2uyMDTtZ4aHg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUOMU7hLEe2uyMDTtZ4aHg" name="setFlowDeadline" method="_ovLC_bhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oUOMVLhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oUOzYLhLEe2uyMDTtZ4aHg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUOzYbhLEe2uyMDTtZ4aHg" name="setFlowPhase" method="_ovLDALhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oUOzYrhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oUOzY7hLEe2uyMDTtZ4aHg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUPacLhLEe2uyMDTtZ4aHg" name="getFlowIndex" method="_ovLDA7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oUPacbhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oUPacrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUQBgLhLEe2uyMDTtZ4aHg" name="getFlowPriority" method="_ovLqALhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oUQBgbhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oUQBgrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUQokLhLEe2uyMDTtZ4aHg" name="getFlowPeriod" method="_ovLqA7hLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovi2ZbhLEe2uyMDTtZ4aHg">
                  <body>Gets the period of the given flow.&#xD;
   *  &#xD;
   * @param flowName&#xD;
   * @return the period of the given flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_oUQokbhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oUQokrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUQok7hLEe2uyMDTtZ4aHg" name="getFlowDeadline" method="_ovLqBrhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovi2ZrhLEe2uyMDTtZ4aHg">
                  <body>Gets the deadline of the given flow.&#xD;
   * &#xD;
   * @param flowName &#xD;
   * @return the deadline of the given flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_oUQolLhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oURPoLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oURPobhLEe2uyMDTtZ4aHg" name="getFlowPhase" method="_ovLqCbhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovi2Z7hLEe2uyMDTtZ4aHg">
                  <body>Gets the phase of the given flow.&#xD;
   * &#xD;
   * @param flowName&#xD;
   * @return the phase of the given flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_oURPorhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oUR2sLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUR2sbhLEe2uyMDTtZ4aHg" name="getFlowTxAttemptsPerLink" method="_ovMRELhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovi2aLhLEe2uyMDTtZ4aHg">
                  <body>Gets the number of flow transmissions attempts per link.&#xD;
   * &#xD;
   * @param flowName&#xD;
   * @return numTxPerLink the value of transmission attempts per link</body>
                </ownedComment>
                <ownedParameter xmi:id="_oUR2srhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oUSdwLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUSdwbhLEe2uyMDTtZ4aHg" name="setFlowsInPriorityOrder" method="_ovMRE7hLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovi2abhLEe2uyMDTtZ4aHg">
                  <body>Sorts the flows in order based on priority, then puts the ordered flow names into an ArrayList.&#xD;
   *</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oUSdwrhLEe2uyMDTtZ4aHg" name="setFlowsInDMorder" method="_ovMRFLhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovi2arhLEe2uyMDTtZ4aHg">
                  <body>Sorts the flows based on deadline, putting ordered flow into an ArrayList.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oUSdw7hLEe2uyMDTtZ4aHg" name="setFlowsInRMorder" method="_ovMRFbhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovi2a7hLEe2uyMDTtZ4aHg">
                  <body>Sorts the flows in order based on period, putting ordered flow names into an ArrayList.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oUTE0LhLEe2uyMDTtZ4aHg" name="setFlowsInRealTimeHARTorder" method="_ovM4ILhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oUTE0bhLEe2uyMDTtZ4aHg" name="finalizeCurrentFlow" method="_ovM4IbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oUTE0rhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUTr4LhLEe2uyMDTtZ4aHg" name="nextReleaseTime" method="_ovM4I7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oUTr4bhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oUTr4rhLEe2uyMDTtZ4aHg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oUTr47hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUUS8LhLEe2uyMDTtZ4aHg" name="nextAbsoluteDeadline" method="_ovM4J7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oUUS8bhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oUUS8rhLEe2uyMDTtZ4aHg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oUUS87hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUU6ALhLEe2uyMDTtZ4aHg" name="finalizeFlowWithE2eParameters" visibility="private" method="_ovM4K7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oUU6AbhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUU6ArhLEe2uyMDTtZ4aHg" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_ovNfMLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oUU6A7hLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUVhELhLEe2uyMDTtZ4aHg" name="getNodeNamesOrderedAlphabetically" method="_ovNfO7hLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovi2brhLEe2uyMDTtZ4aHg">
                  <body>Gets a String array of node names ordered alphabetically. If the node names &#xD;
   * are all integers, converts integers to alpha representation of integers.&#xD;
   * &#xD;
   * @return nodeNames array of node names</body>
                </ownedComment>
                <ownedParameter xmi:id="_oUWIILhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUWIIbhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUWvMLhLEe2uyMDTtZ4aHg" name="getFlow" visibility="private" method="_ovNfPrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oUWvMbhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_op1P8LhLEe2uyMDTtZ4aHg" type="_oP_zoLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oUWvMrhLEe2uyMDTtZ4aHg" name="getFlowNames" method="_ovOGQLhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovi2b7hLEe2uyMDTtZ4aHg">
                  <body>Gets an array of flow names in the order they were read from&#xD;
   * the graph file.&#xD;
   * &#xD;
   * @return the name of the flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_oUWvM7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUXWQLhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUXWQrhLEe2uyMDTtZ4aHg" name="getNodeIndex" method="_ovOGQ7hLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovi2cLhLEe2uyMDTtZ4aHg">
                  <body>Returns the index of the node from the dictionary of nodes&#xD;
   * &#xD;
   * @param nodeName the name of the node to be found&#xD;
   * @return index the index of the found node</body>
                </ownedComment>
                <ownedParameter xmi:id="_oUX9ULhLEe2uyMDTtZ4aHg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oUX9UbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUX9UrhLEe2uyMDTtZ4aHg" name="getNodesInFlow" method="_ovOGRrhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovi2cbhLEe2uyMDTtZ4aHg">
                  <body>Gets node names in order they appear in flow specification.&#xD;
   * &#xD;
   * @param flowName &#xD;
   * @return nodes array of node names in flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_oUX9U7hLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oUX9VLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUYkYLhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUYkYrhLEe2uyMDTtZ4aHg" name="getHyperPeriod" method="_ovOGSrhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovi2crhLEe2uyMDTtZ4aHg">
                  <body>Gets the hyper period, the least common multiple of all the periods.&#xD;
   * &#xD;
   * @return hyperPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_oUZLcLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUZLcbhLEe2uyMDTtZ4aHg" name="getTotalTxAttemptsInFlow" method="_ovOGTLhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovi2c7hLEe2uyMDTtZ4aHg">
                  <body>Gets the total transmission attempts in the flow.&#xD;
   * &#xD;
   * @param flowName &#xD;
   * @return totalCost total transmission attempts</body>
                </ownedComment>
                <ownedParameter xmi:id="_oUZLcrhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oUZygLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUaZkLhLEe2uyMDTtZ4aHg" name="getNumTxAttemptsPerLink" method="_ovOGT7hLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovi2dLhLEe2uyMDTtZ4aHg">
                  <body>Gets an array of the number of transmissions needed for each link&#xD;
   * to meet E2E target. &#xD;
   * &#xD;
   * @param flowName&#xD;
   * @return Integer value of the number of transmission attempts per link</body>
                </ownedComment>
                <ownedParameter xmi:id="_oUaZkbhLEe2uyMDTtZ4aHg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oUaZkrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oUaZk7hLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oUbnsLhLEe2uyMDTtZ4aHg" name="maxFlowLength" method="_ovOtULhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovjdcbhLEe2uyMDTtZ4aHg">
                  <body>Gets the max length of the flow. &#xD;
   * &#xD;
   * @return maxLength</body>
                </ownedComment>
                <ownedParameter xmi:id="_oUbnsbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_op0o4LhLEe2uyMDTtZ4aHg" name="getFixedTxPerLinkAndTotalTxCost" visibility="private" method="_ovNfMrhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovi2bLhLEe2uyMDTtZ4aHg">
                  <body>Calculates the fixed transmission per link, the total transmission cost, and returns it.&#xD;
   * &#xD;
   * @param flow the flow to be calculated&#xD;
   * @return txArrayList the ArrayList of fixed transmissions per link and total transmission cost values</body>
                </ownedComment>
                <ownedParameter xmi:id="_op0o4bhLEe2uyMDTtZ4aHg" name="flow" type="_oP_zoLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_or66oLhLEe2uyMDTtZ4aHg" type="_onvlQLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_op1P8bhLEe2uyMDTtZ4aHg" name="addEdge" method="_ovOGU7hLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovjdcLhLEe2uyMDTtZ4aHg">
                  <body>Adds an edge to a node.&#xD;
&#xD;
@param nodeName&#xD;
@param edge</body>
                </ownedComment>
                <ownedParameter xmi:id="_op1P8rhLEe2uyMDTtZ4aHg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_op13ALhLEe2uyMDTtZ4aHg" name="edge" type="_oPrqkLhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_or5FcLhLEe2uyMDTtZ4aHg" name="WorkLoad" visibility="package" method="_ovJNxLhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_or5FdLhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_or5FdbhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_oviPU7hLEe2uyMDTtZ4aHg">
                  <body>&#xD;
   * Creates a Workload object using the parameters minimum packet reception rate, End-to-End, and the file name. &#xD;
   * Then builds nodes and flows.&#xD;
   * &#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_or5FcbhLEe2uyMDTtZ4aHg" name="m" type="_orgq8LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_or5FcrhLEe2uyMDTtZ4aHg" name="e2e" type="_orgq8LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_or5Fc7hLEe2uyMDTtZ4aHg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_or5FdrhLEe2uyMDTtZ4aHg" type="_oUEbULhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_or5sgLhLEe2uyMDTtZ4aHg" name="WorkLoad" visibility="package" method="_ovJNybhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_or5shbhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_or5shrhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_oviPVLhLEe2uyMDTtZ4aHg">
                  <body>&#xD;
   * Then builds the nodes and flows.&#xD;
   * &#xD;
   * @param numFaults&#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_or5sgbhLEe2uyMDTtZ4aHg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_or5sgrhLEe2uyMDTtZ4aHg" name="m" type="_orgq8LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_or5sg7hLEe2uyMDTtZ4aHg" name="e2e" type="_orgq8LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_or5shLhLEe2uyMDTtZ4aHg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_or5sh7hLEe2uyMDTtZ4aHg" type="_oUEbULhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_or6TkbhLEe2uyMDTtZ4aHg" name="setMinPacketReceptionRate" method="_ovJ017hLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_oviPWbhLEe2uyMDTtZ4aHg">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_or6TkrhLEe2uyMDTtZ4aHg" name="minPacketReceptionRate" type="_orgq8LhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_or6Tk7hLEe2uyMDTtZ4aHg" name="setE2e" method="_ovJ03bhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_oviPXLhLEe2uyMDTtZ4aHg">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_or6TlLhLEe2uyMDTtZ4aHg" name="e2e" type="_orgq8LhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_or66obhLEe2uyMDTtZ4aHg" name="numTxAttemptsPerLinkAndTotalTxAttempts" visibility="private" method="_ovNfNbhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovi2bbhLEe2uyMDTtZ4aHg">
                  <body>Creates an array list of the number of transmission attempts per link and the total&#xD;
   * transmission attempts.&#xD;
   * &#xD;
   * @param flow&#xD;
   * @param e2e&#xD;
   * @param M&#xD;
   * @param optimizationRequested&#xD;
   * @return nPushesArrayList</body>
                </ownedComment>
                <ownedParameter xmi:id="_or66orhLEe2uyMDTtZ4aHg" name="flow" type="_oP_zoLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_or7hsLhLEe2uyMDTtZ4aHg" name="e2e" type="_orgq8LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_or7hsbhLEe2uyMDTtZ4aHg" name="M" type="_orgq8LhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_or7hsrhLEe2uyMDTtZ4aHg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_or8IwLhLEe2uyMDTtZ4aHg" type="_onvlQLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oUnN4LhLEe2uyMDTtZ4aHg" name="WarpDSL">
              <ownedComment xmi:id="_ovjdcrhLEe2uyMDTtZ4aHg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_otg2ELhLEe2uyMDTtZ4aHg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_othdILhLEe2uyMDTtZ4aHg" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_othdIbhLEe2uyMDTtZ4aHg" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_othdIrhLEe2uyMDTtZ4aHg" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_othdI7hLEe2uyMDTtZ4aHg" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_othdJLhLEe2uyMDTtZ4aHg" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovP7cLhLEe2uyMDTtZ4aHg" name="getInstructionParameters" specification="_oUstcLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovP7cbhLEe2uyMDTtZ4aHg" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovP7crhLEe2uyMDTtZ4aHg" type="_onvlQLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oUstcLhLEe2uyMDTtZ4aHg" name="getInstructionParameters" method="_ovP7cLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oUstcbhLEe2uyMDTtZ4aHg" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_or9W4LhLEe2uyMDTtZ4aHg" type="_onvlQLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_oUocALhLEe2uyMDTtZ4aHg" name="InstructionParameters">
                <ownedAttribute xmi:id="_othdJbhLEe2uyMDTtZ4aHg" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_othdJrhLEe2uyMDTtZ4aHg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_otiEMLhLEe2uyMDTtZ4aHg" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_otiEMbhLEe2uyMDTtZ4aHg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_otiEMrhLEe2uyMDTtZ4aHg" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_otiEM7hLEe2uyMDTtZ4aHg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_otiENLhLEe2uyMDTtZ4aHg" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_otiENbhLEe2uyMDTtZ4aHg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_otiENrhLEe2uyMDTtZ4aHg" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_otiEN7hLEe2uyMDTtZ4aHg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_otirQLhLEe2uyMDTtZ4aHg" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_otirQbhLEe2uyMDTtZ4aHg" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_otirQ7hLEe2uyMDTtZ4aHg" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_otirRLhLEe2uyMDTtZ4aHg" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovPUYLhLEe2uyMDTtZ4aHg" name="getCoordinator" specification="_oUpDELhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_ovPUYbhLEe2uyMDTtZ4aHg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovPUYrhLEe2uyMDTtZ4aHg" name="setCoordinator" specification="_oUpqIbhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_ovPUY7hLEe2uyMDTtZ4aHg" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovPUZLhLEe2uyMDTtZ4aHg" name="setName" specification="_oUqRMLhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_ovPUZbhLEe2uyMDTtZ4aHg" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovPUZrhLEe2uyMDTtZ4aHg" name="setFlow" specification="_oUq4QLhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_ovPUZ7hLEe2uyMDTtZ4aHg" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovPUaLhLEe2uyMDTtZ4aHg" name="setSrc" specification="_oUq4QrhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_ovPUabhLEe2uyMDTtZ4aHg" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovPUarhLEe2uyMDTtZ4aHg" name="setSnk" specification="_oUrfULhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_ovPUa7hLEe2uyMDTtZ4aHg" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovPUbLhLEe2uyMDTtZ4aHg" name="setChannel" specification="_oUrfUrhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_ovPUbbhLEe2uyMDTtZ4aHg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovPUbrhLEe2uyMDTtZ4aHg" name="unused" specification="_oUsGYLhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_ovPUb7hLEe2uyMDTtZ4aHg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oUpDELhLEe2uyMDTtZ4aHg" name="getCoordinator" method="_ovPUYLhLEe2uyMDTtZ4aHg">
                  <ownedComment xmi:id="_ovjdc7hLEe2uyMDTtZ4aHg">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_oUpqILhLEe2uyMDTtZ4aHg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oUpqIbhLEe2uyMDTtZ4aHg" name="setCoordinator" method="_ovPUYrhLEe2uyMDTtZ4aHg">
                  <ownedComment xmi:id="_ovjddLhLEe2uyMDTtZ4aHg">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_oUpqIrhLEe2uyMDTtZ4aHg" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oUqRMLhLEe2uyMDTtZ4aHg" name="setName" visibility="private" method="_ovPUZLhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_oUqRMbhLEe2uyMDTtZ4aHg" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oUq4QLhLEe2uyMDTtZ4aHg" name="setFlow" visibility="private" method="_ovPUZrhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_oUq4QbhLEe2uyMDTtZ4aHg" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oUq4QrhLEe2uyMDTtZ4aHg" name="setSrc" visibility="private" method="_ovPUaLhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_oUq4Q7hLEe2uyMDTtZ4aHg" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oUrfULhLEe2uyMDTtZ4aHg" name="setSnk" visibility="private" method="_ovPUarhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_oUrfUbhLEe2uyMDTtZ4aHg" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oUrfUrhLEe2uyMDTtZ4aHg" name="setChannel" visibility="private" method="_ovPUbLhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_oUrfU7hLEe2uyMDTtZ4aHg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_oUsGYLhLEe2uyMDTtZ4aHg" name="unused" method="_ovPUbrhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_oUsGYbhLEe2uyMDTtZ4aHg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_oUt7kLhLEe2uyMDTtZ4aHg" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_or-lArhLEe2uyMDTtZ4aHg" general="_or998LhLEe2uyMDTtZ4aHg"/>
                <ownedAttribute xmi:id="_otjSULhLEe2uyMDTtZ4aHg" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_otjSUrhLEe2uyMDTtZ4aHg" name="instructionParametersArrayList" visibility="package" type="_onvlQLhLEe2uyMDTtZ4aHg" association="_owlYMbhLEe2uyMDTtZ4aHg"/>
                <ownedAttribute xmi:id="_otj5YrhLEe2uyMDTtZ4aHg" name="instructionParameters" visibility="package" type="_oUocALhLEe2uyMDTtZ4aHg" association="_owl_QLhLEe2uyMDTtZ4aHg"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovP7c7hLEe2uyMDTtZ4aHg" name="ListenerDsl" specification="_oUuioLhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_ovP7dLhLEe2uyMDTtZ4aHg" type="_oUt7kLhLEe2uyMDTtZ4aHg" direction="return"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovP7dbhLEe2uyMDTtZ4aHg" name="getInstructionParameters" specification="_oUvJsLhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_ovP7drhLEe2uyMDTtZ4aHg" type="_onvlQLhLEe2uyMDTtZ4aHg" direction="return"/>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovP7d7hLEe2uyMDTtZ4aHg" name="enterAction" specification="_op6IcbhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_ovP7eLhLEe2uyMDTtZ4aHg" name="ctx" type="_op5hYLhLEe2uyMDTtZ4aHg"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovP7ebhLEe2uyMDTtZ4aHg" name="exitAction" specification="_op6vg7hLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_ovP7erhLEe2uyMDTtZ4aHg" name="ctx" type="_op5hYLhLEe2uyMDTtZ4aHg"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovP7e7hLEe2uyMDTtZ4aHg" name="exitFlowName" specification="_op79obhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_ovP7fLhLEe2uyMDTtZ4aHg" name="ctx" type="_op7WkrhLEe2uyMDTtZ4aHg"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovQigLhLEe2uyMDTtZ4aHg" name="exitCmd" specification="_op9LwLhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_ovQigbhLEe2uyMDTtZ4aHg" name="ctx" type="_op8ksrhLEe2uyMDTtZ4aHg"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovQigrhLEe2uyMDTtZ4aHg" name="exitSrcNode" specification="_op9y0rhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_ovQig7hLEe2uyMDTtZ4aHg" name="ctx" type="_op9y0LhLEe2uyMDTtZ4aHg"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovQihLhLEe2uyMDTtZ4aHg" name="exitSnkNode" specification="_op_A8bhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_ovQihbhLEe2uyMDTtZ4aHg" name="ctx" type="_op-Z47hLEe2uyMDTtZ4aHg"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovQihrhLEe2uyMDTtZ4aHg" name="exitChannel" specification="_oqAPEbhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_ovQih7hLEe2uyMDTtZ4aHg" name="ctx" type="_op_oA7hLEe2uyMDTtZ4aHg"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_oUuioLhLEe2uyMDTtZ4aHg" name="ListenerDsl" visibility="package" method="_ovP7c7hLEe2uyMDTtZ4aHg">
                  <eAnnotations xmi:id="_oUuiobhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_oUuiorhLEe2uyMDTtZ4aHg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_oUuio7hLEe2uyMDTtZ4aHg" type="_oUt7kLhLEe2uyMDTtZ4aHg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oUvJsLhLEe2uyMDTtZ4aHg" name="getInstructionParameters" method="_ovP7dbhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_or-lAbhLEe2uyMDTtZ4aHg" type="_onvlQLhLEe2uyMDTtZ4aHg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_op6IcbhLEe2uyMDTtZ4aHg" name="enterAction" method="_ovP7d7hLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_op6IcrhLEe2uyMDTtZ4aHg" name="ctx" type="_op5hYLhLEe2uyMDTtZ4aHg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_op6vg7hLEe2uyMDTtZ4aHg" name="exitAction" method="_ovP7ebhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_op6vhLhLEe2uyMDTtZ4aHg" name="ctx" type="_op5hYLhLEe2uyMDTtZ4aHg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_op79obhLEe2uyMDTtZ4aHg" name="exitFlowName" method="_ovP7e7hLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_op79orhLEe2uyMDTtZ4aHg" name="ctx" type="_op7WkrhLEe2uyMDTtZ4aHg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_op9LwLhLEe2uyMDTtZ4aHg" name="exitCmd" method="_ovQigLhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_op9LwbhLEe2uyMDTtZ4aHg" name="ctx" type="_op8ksrhLEe2uyMDTtZ4aHg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_op9y0rhLEe2uyMDTtZ4aHg" name="exitSrcNode" method="_ovQigrhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_op9y07hLEe2uyMDTtZ4aHg" name="ctx" type="_op9y0LhLEe2uyMDTtZ4aHg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_op_A8bhLEe2uyMDTtZ4aHg" name="exitSnkNode" method="_ovQihLhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_op_A8rhLEe2uyMDTtZ4aHg" name="ctx" type="_op-Z47hLEe2uyMDTtZ4aHg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_oqAPEbhLEe2uyMDTtZ4aHg" name="exitChannel" method="_ovQihrhLEe2uyMDTtZ4aHg">
                  <ownedParameter xmi:id="_oqAPErhLEe2uyMDTtZ4aHg" name="ctx" type="_op_oA7hLEe2uyMDTtZ4aHg"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oU1QULhLEe2uyMDTtZ4aHg" name="Warp">
              <ownedComment xmi:id="_ovjddbhLEe2uyMDTtZ4aHg">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_otlHgLhLEe2uyMDTtZ4aHg" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otlukLhLEe2uyMDTtZ4aHg" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otlukbhLEe2uyMDTtZ4aHg" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_orgq8LhLEe2uyMDTtZ4aHg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otlukrhLEe2uyMDTtZ4aHg" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otluk7hLEe2uyMDTtZ4aHg" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_orgq8LhLEe2uyMDTtZ4aHg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otmVoLhLEe2uyMDTtZ4aHg" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otmVobhLEe2uyMDTtZ4aHg" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otmVorhLEe2uyMDTtZ4aHg" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otmVo7hLEe2uyMDTtZ4aHg" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_oS4vkLhLEe2uyMDTtZ4aHg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otmVpLhLEe2uyMDTtZ4aHg" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otm8sLhLEe2uyMDTtZ4aHg" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otm8sbhLEe2uyMDTtZ4aHg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otm8srhLEe2uyMDTtZ4aHg" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otm8tLhLEe2uyMDTtZ4aHg" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otnjwbhLEe2uyMDTtZ4aHg" name="minLQ" visibility="private" isStatic="true" type="_orgq8LhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otoK0bhLEe2uyMDTtZ4aHg" name="e2e" visibility="private" isStatic="true" type="_orgq8LhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otoK07hLEe2uyMDTtZ4aHg" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otox4LhLEe2uyMDTtZ4aHg" name="guiRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otox4rhLEe2uyMDTtZ4aHg" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otox5LhLEe2uyMDTtZ4aHg" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otpY8bhLEe2uyMDTtZ4aHg" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otpY87hLEe2uyMDTtZ4aHg" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otqAALhLEe2uyMDTtZ4aHg" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otqAArhLEe2uyMDTtZ4aHg" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otqnELhLEe2uyMDTtZ4aHg" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otqnErhLEe2uyMDTtZ4aHg" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otrOIbhLEe2uyMDTtZ4aHg" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otrOIrhLEe2uyMDTtZ4aHg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otrOJLhLEe2uyMDTtZ4aHg" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otr1MbhLEe2uyMDTtZ4aHg" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otr1M7hLEe2uyMDTtZ4aHg" name="schedulerSelected" visibility="private" isStatic="true" type="_oS4vkLhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovRJkLhLEe2uyMDTtZ4aHg" name="main" specification="_oU4ToLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovRJkbhLEe2uyMDTtZ4aHg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ovRJkrhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
 setWarpParameters(args);&#xD;
&#xD;
 // and print out the values if in verbose mode&#xD;
 if (verboseMode) {&#xD;
   printWarpParameters();&#xD;
 }&#xD;
&#xD;
 // Create and visualize the workload&#xD;
 // inputFile string, which may be null,&#xD;
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
 if (allRequested) {&#xD;
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
     visualize(workLoad, choice); // visualize all Program choices&#xD;
   }&#xD;
   // Create and visualize the Warp System&#xD;
   if (schedulerRequested) {&#xD;
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
     verifyPerformanceRequirements(warp);&#xD;
     for (SystemChoices choice : SystemChoices.values()) {&#xD;
       visualize(warp, choice); // visualize all System choices&#xD;
     }&#xD;
   } else { // create a system for all scheduler choices&#xD;
     for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
       schedulerSelected = sch;&#xD;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
       verifyPerformanceRequirements(warp);&#xD;
       for (SystemChoices choice : SystemChoices.values()) {&#xD;
         visualize(warp, choice); // visualize all System choices&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 } else { // visualize warp workload, source program and other requested items&#xD;
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
   if (wfRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
   }&#xD;
   if (gvRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
   }&#xD;
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
   verifyPerformanceRequirements(warp);&#xD;
   visualize(warp, SystemChoices.SOURCE);&#xD;
   if (caRequested) {&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
   if (laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY);&#xD;
   }&#xD;
   if (latencyRequested || laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
   }&#xD;
   if (raRequested) {&#xD;
     visualize(warp, SystemChoices.RELIABILITIES);&#xD;
   }&#xD;
 }&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovRJk7hLEe2uyMDTtZ4aHg" name="visualize" specification="_oqEggLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovRJlLhLEe2uyMDTtZ4aHg" name="workLoad" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovRJlbhLEe2uyMDTtZ4aHg" name="choice" type="_oTFj4LhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>var viz =&#xD;
     VisualizationFactory.createWorkLoadVisualization(workLoad, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   if (verboseMode) {&#xD;
     System.out.println(viz.toString());&#xD;
   }&#xD;
   viz.toFile();&#xD;
   if (guiRequested) {&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovRJlrhLEe2uyMDTtZ4aHg" name="visualize" specification="_oqFHkrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovRJl7hLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovRJmLhLEe2uyMDTtZ4aHg" name="choice" type="_oTEVwLhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createProgramVisualization(warp, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   viz.toFile();&#xD;
   if (guiRequested &amp;&amp; schedulerRequested) {&#xD;
     /* Only display window when a specific scheduler has been requested */&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovRJmbhLEe2uyMDTtZ4aHg" name="verifyPerformanceRequirements" specification="_oqFHlbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovRJmrhLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
 verifyReliabilities(warp);&#xD;
 verifyNoChannelConflicts(warp);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovRJm7hLEe2uyMDTtZ4aHg" name="verifyReliabilities" specification="_oqFuoLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovRJnLhLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
   /* RealTime HART doesn't adhere to reliability targets */&#xD;
   if (!warp.reliabilitiesMet()) {&#xD;
     System.err.printf(&#xD;
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
             + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   } else if (verboseMode) {&#xD;
     System.out.printf(&#xD;
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovRJnbhLEe2uyMDTtZ4aHg" name="verifyDeadlines" specification="_oqFuorhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovRJnrhLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
   visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovRJn7hLEe2uyMDTtZ4aHg" name="verifyNoChannelConflicts" specification="_oqFupLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovRJoLhLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
   System.err&#xD;
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
   if (!caRequested) { // only need to create the visualization if not already requested&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovRJobhLEe2uyMDTtZ4aHg" name="setWarpParameters" specification="_oU5hwLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovRJorhLEe2uyMDTtZ4aHg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ovRJo7hLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this&#xD;
                                                      // function--need to set up globals?&#xD;
&#xD;
 // create holder objects for storing results ...&#xD;
 // BooleanHolder debug = new BooleanHolder();&#xD;
 StringHolder schedulerSelected = new StringHolder();&#xD;
 IntHolder channels = new IntHolder();&#xD;
 IntHolder faults = new IntHolder();&#xD;
 DoubleHolder m = new DoubleHolder();&#xD;
 DoubleHolder end2end = new DoubleHolder();&#xD;
 BooleanHolder gui = new BooleanHolder();&#xD;
 BooleanHolder gv = new BooleanHolder();&#xD;
 BooleanHolder wf = new BooleanHolder();&#xD;
 BooleanHolder ra = new BooleanHolder();&#xD;
 BooleanHolder la = new BooleanHolder();&#xD;
 BooleanHolder ca = new BooleanHolder();&#xD;
 BooleanHolder s = new BooleanHolder();&#xD;
 BooleanHolder all = new BooleanHolder();&#xD;
 BooleanHolder latency = new BooleanHolder();&#xD;
 BooleanHolder verbose = new BooleanHolder();&#xD;
 StringHolder input = new StringHolder();&#xD;
 StringHolder output = new StringHolder();&#xD;
&#xD;
 // create the parser and specify the allowed options ...&#xD;
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,&#xD;
     schedulerSelected);&#xD;
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
 parser.addOption(&#xD;
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,&#xD;
     end2end);&#xD;
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,&#xD;
     faults);&#xD;
 parser.addOption(&quot;-gui %v #create a gui visualizations&quot;, gui);&#xD;
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
 parser.addOption(&#xD;
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
     wf);&#xD;
 parser.addOption(&#xD;
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,&#xD;
     ra);&#xD;
 parser.addOption(&#xD;
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
 parser.addOption(&#xD;
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,&#xD;
     output);&#xD;
 parser.addOption(&#xD;
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
     verbose);&#xD;
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
 // $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
&#xD;
 // match the arguments ...&#xD;
 parser.matchAllArgs(args);&#xD;
&#xD;
 // Set WARP system configuration options&#xD;
 if (channels.value > 0) {&#xD;
   nChannels = channels.value; // set option specified&#xD;
 } else {&#xD;
   nChannels = NUM_CHANNELS; // set to default&#xD;
 }&#xD;
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
   numFaults = faults.value; // set option specified&#xD;
 } else {&#xD;
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
 }&#xD;
 if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   minLQ = m.value; // set option specified&#xD;
 } else {&#xD;
   minLQ = MIN_LQ; // set to default&#xD;
 }&#xD;
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   e2e = end2end.value; // set option specified&#xD;
 } else {&#xD;
   e2e = E2E; // set to default&#xD;
 }&#xD;
 if (output.value != null) { // default output subdirectory (from working directory)&#xD;
   outputSubDirectory = output.value; // set option specified&#xD;
 } else {&#xD;
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
 }&#xD;
&#xD;
 guiRequested = gui.value; // GraphVis file requested flag&#xD;
 gvRequested = gv.value; // GraphVis file requested flag&#xD;
 wfRequested = wf.value; // WARP file requested flag&#xD;
 raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
 laRequested = la.value; // Latency Analysis file requested flag&#xD;
 caRequested = ca.value; // Latency Analysis file requested flag&#xD;
 simRequested = s.value; // Simulation file requested flag&#xD;
 allRequested = all.value; // all out files requested flag&#xD;
 latencyRequested = latency.value; // latency report requested flag&#xD;
 verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
 inputFile = input.value; // input file specified&#xD;
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
   schedulerRequested = true;&#xD;
   switch (schedulerSelected.value) {&#xD;
     case &quot;priority&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
&#xD;
     case &quot;rm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
       break;&#xD;
&#xD;
     case &quot;dm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
       break;&#xD;
&#xD;
     case &quot;rtHart&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
       break;&#xD;
&#xD;
     case &quot;poset&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
       break;&#xD;
&#xD;
     default:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
   }&#xD;
 } else { // null value when no scheduler specified; so use default&#xD;
   Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovRwoLhLEe2uyMDTtZ4aHg" name="printWarpParameters" specification="_oU6I07hLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>// print all system configuration parameters&#xD;
 // Print out each of the system configuration values&#xD;
 System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
 System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
 System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
 System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
 System.out.println(&quot;\tguiRequest flag=&quot; + guiRequested);&#xD;
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
 if (inputFile != null) {&#xD;
   System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
 } else {&#xD;
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
 }&#xD;
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oU4ToLhLEe2uyMDTtZ4aHg" name="main" isStatic="true" method="_ovRJkLhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovjddrhLEe2uyMDTtZ4aHg">
                  <body>The main entry point for the application.&#xD;
   * Run with -help argument for more information about commands.&#xD;
   * @param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_oU46sLhLEe2uyMDTtZ4aHg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oU46sbhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oU5hwLhLEe2uyMDTtZ4aHg" name="setWarpParameters" visibility="private" isStatic="true" method="_ovRJobhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovkEhbhLEe2uyMDTtZ4aHg">
                  <body>Parses program arguments and assigns each attribute.&#xD;
   * &#xD;
   * @param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_oU6I0LhLEe2uyMDTtZ4aHg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oU6I0bhLEe2uyMDTtZ4aHg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oU6I07hLEe2uyMDTtZ4aHg" name="printWarpParameters" visibility="private" isStatic="true" method="_ovRwoLhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovkEhrhLEe2uyMDTtZ4aHg">
                  <body>Displays warp parameters to console.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oqEggLhLEe2uyMDTtZ4aHg" name="visualize" visibility="private" isStatic="true" method="_ovRJk7hLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovjdd7hLEe2uyMDTtZ4aHg">
                  <body>Visualizes workload by creating visualization object from workload object.&#xD;
   * Either prints to console or displays GUI depending on workload choice.&#xD;
   * &#xD;
   * @param workLoad&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_oqFHkLhLEe2uyMDTtZ4aHg" name="workLoad" type="_oUEbULhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oqFHkbhLEe2uyMDTtZ4aHg" name="choice" type="_oTFj4LhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oqFHkrhLEe2uyMDTtZ4aHg" name="visualize" visibility="private" isStatic="true" method="_ovRJlrhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovkEgLhLEe2uyMDTtZ4aHg">
                  <body>Visualizes workload by creating visualization object from WarpInterface object.&#xD;
   * Saves visualization to file.&#xD;
   * &#xD;
   * @param workLoad&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_oqFHk7hLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oqFHlLhLEe2uyMDTtZ4aHg" name="choice" type="_oTEVwLhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oqFHlbhLEe2uyMDTtZ4aHg" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_ovRJmbhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovkEgbhLEe2uyMDTtZ4aHg">
                  <body>Verifies deadlines, reliabilities, and channel conflicts.&#xD;
   * &#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_oqFHlrhLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oqFuoLhLEe2uyMDTtZ4aHg" name="verifyReliabilities" visibility="private" isStatic="true" method="_ovRJm7hLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovkEgrhLEe2uyMDTtZ4aHg">
                  <body>Verifies end to end reliabilities and displays to console.&#xD;
   * &#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_oqFuobhLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oqFuorhLEe2uyMDTtZ4aHg" name="verifyDeadlines" visibility="private" isStatic="true" method="_ovRJnbhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovkEg7hLEe2uyMDTtZ4aHg">
                  <body>Verifies that all flows meet their deadlines.&#xD;
   * &#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_oqFuo7hLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oqFupLhLEe2uyMDTtZ4aHg" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_ovRJn7hLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovkEhLhLEe2uyMDTtZ4aHg">
                  <body>Checks for conflicts between channels and prints to console.&#xD;
   * &#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_oqFupbhLEe2uyMDTtZ4aHg" name="warp" type="_oTo9gLhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oVA2gLhLEe2uyMDTtZ4aHg" name="WorkLoadTest" visibility="package">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovRwobhLEe2uyMDTtZ4aHg" name="createDefaultWorkload" specification="_oVCEoLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovRworhLEe2uyMDTtZ4aHg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovRwo7hLEe2uyMDTtZ4aHg" type="_oUEbULhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>int numFaults = 0;&#xD;
		double minLQ = 0.9;&#xD;
		double e2e = 0.99;&#xD;
		WorkLoad workload = new WorkLoad(numFaults, minLQ, e2e, inputFileName);&#xD;
		return workload;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovSXsLhLEe2uyMDTtZ4aHg" name="testAddFlow" specification="_oVCrsLhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addFlow(&quot;F2&quot;);&#xD;
		workload.addFlow(&quot;F3&quot;);&#xD;
		workload.addFlow(&quot;F4&quot;);&#xD;
		workload.addFlow(&quot;F5&quot;);&#xD;
		workload.addFlow(&quot;F6&quot;);&#xD;
		var expected = new String[] {&quot;F0&quot;, &quot;F1&quot;, &quot;F2&quot;, &quot;F3&quot;, &quot;F4&quot;, &quot;F5&quot;, &quot;F6&quot;};&#xD;
		var flows = workload.getFlowNamesInOriginalOrder();&#xD;
		for(int i = 0; i &lt; flows.size(); i++) {&#xD;
			var msg = String.format(&quot;At index %d: Flow expected: %s, was: %s.&quot;, i, expected[i], flows.get(i));&#xD;
			assertEquals(msg, flows.get(i), expected[i] );&#xD;
		}&#xD;
		&#xD;
			&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovSXsbhLEe2uyMDTtZ4aHg" name="testAddFlowJustNumbers" specification="_oVDSwrhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addFlow(&quot;2&quot;);&#xD;
		workload.addFlow(&quot;3&quot;);&#xD;
		workload.addFlow(&quot;4&quot;);&#xD;
		workload.addFlow(&quot;5&quot;);&#xD;
		workload.addFlow(&quot;6&quot;);&#xD;
		workload.addFlow(&quot;7&quot;);&#xD;
		var expected = new String[] {&quot;F0&quot;, &quot;F1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;};&#xD;
		var flows = workload.getFlowNamesInOriginalOrder();&#xD;
		for(int i = 0; i &lt; flows.size(); i++) {&#xD;
			var msg = String.format(&quot;At index %d: Flow expected: %s, was: %s.&quot;, i, expected[i], flows.get(i));&#xD;
			assertEquals(msg, flows.get(i), expected[i] );&#xD;
		}	&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovSXsrhLEe2uyMDTtZ4aHg" name="testAddNodeToFlow" specification="_oVD50LhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addNodeToFlow(&quot;F1&quot;, &quot;D&quot;);&#xD;
		workload.addNodeToFlow(&quot;F1&quot;, &quot;E&quot;);&#xD;
		workload.addNodeToFlow(&quot;F1&quot;, &quot;F&quot;);&#xD;
		var expected = new String[] {&quot;C&quot;, &quot;B&quot;, &quot;A&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;};&#xD;
		var nodes = workload.getNodesInFlow(&quot;F1&quot;);&#xD;
		for(int i = 0; i &lt; nodes.length; i++) {&#xD;
			var msg = String.format(&quot;At index %d: Node expected: %s was: %s&quot;, i, expected[i], nodes[i]);&#xD;
			assertEquals(msg, expected[i], nodes[i]);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovSXs7hLEe2uyMDTtZ4aHg" name="testAddNodeToFlowAddingToNewFlow" specification="_oVEg4rhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addFlow(&quot;testFlow&quot;);&#xD;
		workload.addNodeToFlow(&quot;testFlow&quot;, &quot;A&quot;);&#xD;
		workload.addNodeToFlow(&quot;testFlow&quot;, &quot;B&quot;);&#xD;
		workload.addNodeToFlow(&quot;testFlow&quot;, &quot;C&quot;);&#xD;
		var expected = new String[] {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;};&#xD;
		var nodes = workload.getNodesInFlow(&quot;testFlow&quot;);&#xD;
		for(int i = 0; i &lt; nodes.length; i++) {&#xD;
			var msg = String.format(&quot;At index %d: Node expected: %s was: %s&quot;, i, expected[i], nodes[i]);&#xD;
			assertEquals(msg, expected[i], nodes[i]);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovSXtLhLEe2uyMDTtZ4aHg" name="testGetTotalTxAttemptsInFlow" specification="_oVFvArhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		var expected = new int[] {5, 4};&#xD;
		var flows = workload.getFlowNames();&#xD;
		for(int i = 0; i &lt; flows.length; i++) {&#xD;
			int attempts = workload.getTotalTxAttemptsInFlow(flows[i]);&#xD;
			var msg = String.format(&quot;expected Tx Attempts: %d was: %d&quot;, expected[i], attempts);&#xD;
&#xD;
			assertEquals(msg, expected[i], attempts); &#xD;
		}&#xD;
		&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovSXtbhLEe2uyMDTtZ4aHg" name="testGetFlowPriority" specification="_oVGWErhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		var flows = workload.getFlowNamesInPriorityOrder();&#xD;
		var expectedP = new int[] {0, 1};&#xD;
		for(int i = 0; i &lt; flows.size(); i++) {&#xD;
			int flowPriority = workload.getFlowPriority(flows.get(i));&#xD;
			var msg = String.format(&quot;Expected Priority: %d Actual Priority: %d &quot;, expectedP[i], flowPriority);&#xD;
			assertEquals(msg, expectedP[i], flowPriority);	&#xD;
		}	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovSXtrhLEe2uyMDTtZ4aHg" name="testSetFlowPriority" specification="_oVG9I7hLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		//set integer to set the priority&#xD;
		Integer j = 0;&#xD;
		var flows = workload.getFlowNamesInPriorityOrder();&#xD;
		//for loops starts at the end of the list&#xD;
		for(int i = flows.size(); i > 0; i-- ) {&#xD;
			//sets the priority using j then increases j by 1&#xD;
			workload.setFlowPriority(flows.get(i), j );&#xD;
			j++;&#xD;
			var priority = workload.getFlowPriority(flows.get(i));&#xD;
			var msg = String.format(&quot;Expected Priority: %d Actual Priority: %d &quot;, j, priority);&#xD;
			assertEquals(msg, j, priority);&#xD;
		}&#xD;
		&#xD;
		&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovSXt7hLEe2uyMDTtZ4aHg" name="testGetFlowTxAttemptsPerLink" specification="_oVILQLhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addFlow(&quot;test&quot;);&#xD;
		var flows = workload.getFlowNames();&#xD;
		var expected = new int[] {3, 3, 1};&#xD;
		for(int i = 0; i &lt; flows.length; i++) {&#xD;
		int attempts = workload.getFlowTxAttemptsPerLink(flows[i]);&#xD;
		String msg = String.format(&quot;Expected No. of Tx: %d Actual No. of Tx: %d &quot;, expected[i], attempts);&#xD;
		assertEquals(msg, expected[i], attempts);&#xD;
		}&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovSXuLhLEe2uyMDTtZ4aHg" name="testSetFlowsInRMOrder" specification="_oVIyU7hLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
	    workload.setFlowsInRMorder();&#xD;
	    var flows = workload.getFlowNamesInPriorityOrder();&#xD;
		var expected = new String[] {&quot;F0&quot;, &quot;F1&quot; };&#xD;
		for(int i = 0; i &lt; flows.size(); i++ ) {&#xD;
			var msg = String.format(&quot;Expected Flow at index %d: %s Actual Flow: %s &quot;,i, expected[i], flows.get(i));&#xD;
			&#xD;
			assertEquals(msg, expected[i], flows.get(i).toString());&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovSXubhLEe2uyMDTtZ4aHg" name="testSetFlowsInRMOrderChangePriorityandPeriod" specification="_oVJZYrhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.setFlowPriority(&quot;F1&quot;, 0);&#xD;
		workload.setFlowPeriod(&quot;F1&quot;, 5);&#xD;
		workload.setFlowsInRMorder();&#xD;
		var flows = workload.getFlowNamesInPriorityOrder();&#xD;
		var expected = new String[] {&quot;F1&quot;, &quot;F0&quot; };&#xD;
		  for(int i = 0; i &lt; flows.size(); i++ ) {&#xD;
			var msg = String.format(&quot;Expected Flow at index %d: %s Actual Flow: %s &quot;,i, expected[i], flows.get(i));&#xD;
				&#xD;
			assertEquals(msg, expected[i], flows.get(i).toString());&#xD;
	}&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovSXurhLEe2uyMDTtZ4aHg" name="testGetNodeNamesInAlphabeticalOrder" specification="_oVKAcrhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		var expected = new String[] {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;,};&#xD;
		var actual = workload.getNodeNamesOrderedAlphabetically();&#xD;
		for(int i = 0; i &lt; actual.length; i++) {&#xD;
			var node = actual[i];&#xD;
			var msg = String.format(&quot;At index: %d Node expected: %s Actual Node: %s&quot;, i, expected[i], node);&#xD;
			assertEquals(msg, expected[i], node);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovSXu7hLEe2uyMDTtZ4aHg" name="testGetNodeNamesInAlphabeticalOrderExtraNodes" specification="_oVKng7hLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addNodeToFlow(&quot;F0&quot;, &quot;1&quot;);&#xD;
		workload.addNodeToFlow(&quot;F1&quot;, &quot;O&quot;);&#xD;
		workload.addNodeToFlow(&quot;F0&quot;, &quot;N&quot;);&#xD;
		workload.addNodeToFlow(&quot;F1&quot;, &quot;2&quot;);&#xD;
		var expected = new String[] {&quot;1&quot;, &quot;2&quot;, &quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;N&quot;, &quot;O&quot;};&#xD;
		var actual = workload.getNodeNamesOrderedAlphabetically();&#xD;
		for(int i = 0; i &lt; actual.length; i++) {&#xD;
			var node = actual[i];&#xD;
			var msg = String.format(&quot;At index: %d Node expected: %s Actual Node: %s&quot;, i, expected[i], node);&#xD;
			assertEquals(msg, expected[i], node);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovSXvLhLEe2uyMDTtZ4aHg" name="getFlowNames" specification="_oVLOkLhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		String[] actual = workload.getFlowNames();&#xD;
		String[] expected = {&quot;F0&quot;, &quot;F1&quot;};&#xD;
		assertArrayEquals(actual, expected, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovSXvbhLEe2uyMDTtZ4aHg" name="getNodeIndex_exists" specification="_oVL1oLhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int actual = workload.getNodeIndex(&quot;D&quot;);&#xD;
		int expected = 3;&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovSXvrhLEe2uyMDTtZ4aHg" name="getNodeIndex_doesNotExist" specification="_oVMcsbhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int actual = workload.getNodeIndex(&quot;&quot;);&#xD;
		int expected = 0;&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovSXv7hLEe2uyMDTtZ4aHg" name="getNodesInFlow" specification="_oVNDwLhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		String[] actual = workload.getNodesInFlow(&quot;F0&quot;);&#xD;
		String[] expected = {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;};&#xD;
		assertArrayEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovS-wLhLEe2uyMDTtZ4aHg" name="getHyperPeriod_Short" specification="_oVOR4rhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int actual = workload.getHyperPeriod();&#xD;
		int expected = 20;&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovS-wbhLEe2uyMDTtZ4aHg" name="getHyperPeriod_Long" specification="_oVO487hLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>String fileName = &quot;StressTest.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int actual = workload.getHyperPeriod();&#xD;
		int expected = 300;&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovS-wrhLEe2uyMDTtZ4aHg" name="getNumTxAttemptsPerLink" specification="_oVPgA7hLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>String fileName = &quot;StressTest.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		Integer[] actual = workload.getNumTxAttemptsPerLink(&quot;F1&quot;);&#xD;
		Integer[] expected = {3, 3, 0};&#xD;
		assertArrayEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovS-w7hLEe2uyMDTtZ4aHg" name="maxFlowLength_StressTest" specification="_oVQuILhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>String fileName = &quot;StressTest.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int expected = 8;&#xD;
		int actual = workload.maxFlowLength();&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovS-xLhLEe2uyMDTtZ4aHg" name="maxFlowLength_LongChain" specification="_oVRVMrhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>String fileName = &quot;LongChain.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int expected = 26;&#xD;
		int actual = workload.maxFlowLength();&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovS-xbhLEe2uyMDTtZ4aHg" name="getFlowDeadline" specification="_oVSjUbhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>String fileName = &quot;Example.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		&#xD;
		String flow = &quot;F0&quot;;&#xD;
		int expected = 10;&#xD;
		&#xD;
		workload.setFlowDeadline(flow, expected);&#xD;
		int actual = workload.getFlowDeadline(flow);&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovS-xrhLEe2uyMDTtZ4aHg" name="setFlowDeadline" specification="_oVTKY7hLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>String fileName = &quot;Example.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		&#xD;
		String flow = &quot;F0&quot;;&#xD;
		int expected = 10;&#xD;
		&#xD;
		workload.setFlowDeadline(flow, expected);&#xD;
		int actual = workload.getFlowDeadline(flow);&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oVCEoLhLEe2uyMDTtZ4aHg" name="createDefaultWorkload" visibility="private" method="_ovRwobhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovkEh7hLEe2uyMDTtZ4aHg">
                  <body>Helper method to setup workload object depending on filename.&#xD;
	 * @param inputFileName name of file to use.&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_oVCEobhLEe2uyMDTtZ4aHg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oqJZAbhLEe2uyMDTtZ4aHg" type="_oUEbULhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oVCrsLhLEe2uyMDTtZ4aHg" name="testAddFlow" visibility="package" method="_ovSXsLhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oVDSwrhLEe2uyMDTtZ4aHg" name="testAddFlowJustNumbers" visibility="package" method="_ovSXsbhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oVD50LhLEe2uyMDTtZ4aHg" name="testAddNodeToFlow" visibility="package" method="_ovSXsrhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oVEg4rhLEe2uyMDTtZ4aHg" name="testAddNodeToFlowAddingToNewFlow" visibility="package" method="_ovSXs7hLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oVFvArhLEe2uyMDTtZ4aHg" name="testGetTotalTxAttemptsInFlow" visibility="package" method="_ovSXtLhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oVGWErhLEe2uyMDTtZ4aHg" name="testGetFlowPriority" visibility="package" method="_ovSXtbhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oVG9I7hLEe2uyMDTtZ4aHg" name="testSetFlowPriority" visibility="package" method="_ovSXtrhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oVILQLhLEe2uyMDTtZ4aHg" name="testGetFlowTxAttemptsPerLink" visibility="package" method="_ovSXt7hLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oVIyU7hLEe2uyMDTtZ4aHg" name="testSetFlowsInRMOrder" visibility="package" method="_ovSXuLhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oVJZYrhLEe2uyMDTtZ4aHg" name="testSetFlowsInRMOrderChangePriorityandPeriod" visibility="package" method="_ovSXubhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oVKAcrhLEe2uyMDTtZ4aHg" name="testGetNodeNamesInAlphabeticalOrder" visibility="package" method="_ovSXurhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oVKng7hLEe2uyMDTtZ4aHg" name="testGetNodeNamesInAlphabeticalOrderExtraNodes" visibility="package" method="_ovSXu7hLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovkEiLhLEe2uyMDTtZ4aHg">
                  <body>tests the getNodeNamesOrderedAlphabetically method in WorkLoad.java class. Adds extra Nodes&#xD;
	 * with names not present in the original file, then tests to see if they are sorted properly.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_oVLOkLhLEe2uyMDTtZ4aHg" name="getFlowNames" visibility="package" method="_ovSXvLhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oVL1oLhLEe2uyMDTtZ4aHg" name="getNodeIndex_exists" visibility="package" method="_ovSXvbhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oVMcsbhLEe2uyMDTtZ4aHg" name="getNodeIndex_doesNotExist" visibility="package" method="_ovSXvrhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oVNDwLhLEe2uyMDTtZ4aHg" name="getNodesInFlow" visibility="package" method="_ovSXv7hLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oVOR4rhLEe2uyMDTtZ4aHg" name="getHyperPeriod_Short" visibility="package" method="_ovS-wLhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oVO487hLEe2uyMDTtZ4aHg" name="getHyperPeriod_Long" visibility="package" method="_ovS-wbhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oVPgA7hLEe2uyMDTtZ4aHg" name="getNumTxAttemptsPerLink" visibility="package" method="_ovS-wrhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oVQuILhLEe2uyMDTtZ4aHg" name="maxFlowLength_StressTest" visibility="package" method="_ovS-w7hLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oVRVMrhLEe2uyMDTtZ4aHg" name="maxFlowLength_LongChain" visibility="package" method="_ovS-xLhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oVSjUbhLEe2uyMDTtZ4aHg" name="getFlowDeadline" visibility="package" method="_ovS-xbhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oVTKY7hLEe2uyMDTtZ4aHg" name="setFlowDeadline" visibility="package" method="_ovS-xrhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oVWNsLhLEe2uyMDTtZ4aHg" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_ottDULhLEe2uyMDTtZ4aHg" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ottDUbhLEe2uyMDTtZ4aHg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ottDUrhLEe2uyMDTtZ4aHg" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ottqYLhLEe2uyMDTtZ4aHg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ottqYbhLEe2uyMDTtZ4aHg" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ottqYrhLEe2uyMDTtZ4aHg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ottqY7hLEe2uyMDTtZ4aHg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ottqZLhLEe2uyMDTtZ4aHg" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ottqZbhLEe2uyMDTtZ4aHg" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ottqZrhLEe2uyMDTtZ4aHg" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ottqZ7hLEe2uyMDTtZ4aHg" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otuRcbhLEe2uyMDTtZ4aHg" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otuRcrhLEe2uyMDTtZ4aHg" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otuRc7hLEe2uyMDTtZ4aHg" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otu4gLhLEe2uyMDTtZ4aHg" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otu4grhLEe2uyMDTtZ4aHg" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otvfkLhLEe2uyMDTtZ4aHg" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otvfkrhLEe2uyMDTtZ4aHg" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otwGoLhLEe2uyMDTtZ4aHg" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_otwGobhLEe2uyMDTtZ4aHg" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_otwGorhLEe2uyMDTtZ4aHg" name="predecessor" type="_oVWNsLhLEe2uyMDTtZ4aHg" association="_ovkEibhLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otwGo7hLEe2uyMDTtZ4aHg" name="endTimes" visibility="private" type="_oSKW0bhLEe2uyMDTtZ4aHg" association="_owl_Q7hLEe2uyMDTtZ4aHg"/>
              <ownedAttribute xmi:id="_otxUwbhLEe2uyMDTtZ4aHg" name="subObjects" type="_oqKnIbhLEe2uyMDTtZ4aHg" isReadOnly="true" association="_owmmUbhLEe2uyMDTtZ4aHg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovTl0LhLEe2uyMDTtZ4aHg" name="SchedulableObject" specification="_oVYp8LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovTl0bhLEe2uyMDTtZ4aHg" type="_oVWNsLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovTl0rhLEe2uyMDTtZ4aHg" name="SchedulableObject" specification="_oqL1QLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovTl07hLEe2uyMDTtZ4aHg" name="obj" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovTl1LhLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovTl1bhLEe2uyMDTtZ4aHg" type="_oVWNsLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovTl1rhLEe2uyMDTtZ4aHg" name="SchedulableObject" specification="_oVZ4ELhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovTl17hLEe2uyMDTtZ4aHg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovTl2LhLEe2uyMDTtZ4aHg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovTl2bhLEe2uyMDTtZ4aHg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovTl2rhLEe2uyMDTtZ4aHg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovTl27hLEe2uyMDTtZ4aHg" type="_oVWNsLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovUM4LhLEe2uyMDTtZ4aHg" name="SchedulableObject" specification="_oVafJ7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovUM4bhLEe2uyMDTtZ4aHg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovUM4rhLEe2uyMDTtZ4aHg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovUM47hLEe2uyMDTtZ4aHg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovUM5LhLEe2uyMDTtZ4aHg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovUM5bhLEe2uyMDTtZ4aHg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovUM5rhLEe2uyMDTtZ4aHg" type="_oVWNsLhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovUM57hLEe2uyMDTtZ4aHg" name="setDefaultParameters" specification="_oVbtQLhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovUM6LhLEe2uyMDTtZ4aHg" name="getAllEndTimes" specification="_oVbtQbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovUM6bhLEe2uyMDTtZ4aHg" type="_oSKW0bhLEe2uyMDTtZ4aHg" direction="return"/>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovUM6rhLEe2uyMDTtZ4aHg" name="addToEndTimes" specification="_oVcUUbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovUM67hLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovUM7LhLEe2uyMDTtZ4aHg" name="peekEndTimes" specification="_oVc7YLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovUM7bhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovUM7rhLEe2uyMDTtZ4aHg" name="pollEndTimes" specification="_oVdicLhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovUM77hLEe2uyMDTtZ4aHg" name="addSubObject" specification="_oqMcULhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovUM8LhLEe2uyMDTtZ4aHg" name="obj" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovUz8LhLEe2uyMDTtZ4aHg" name="getName" specification="_oVdicbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovUz8bhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovUz8rhLEe2uyMDTtZ4aHg" name="setName" specification="_oVdic7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovUz87hLEe2uyMDTtZ4aHg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovUz9LhLEe2uyMDTtZ4aHg" name="getReleaseTime" specification="_oVeJgLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovUz9bhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovUz9rhLEe2uyMDTtZ4aHg" name="getPhase" specification="_oVeJgrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovUz97hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovUz-LhLEe2uyMDTtZ4aHg" name="getStartTime" specification="_oVewkLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovUz-bhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovUz-rhLEe2uyMDTtZ4aHg" name="setEndTime" specification="_oVewkrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovUz-7hLEe2uyMDTtZ4aHg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovUz_LhLEe2uyMDTtZ4aHg" name="setStartTime" specification="_oVfXoLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovUz_bhLEe2uyMDTtZ4aHg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovUz_rhLEe2uyMDTtZ4aHg" name="setReleaseTime" specification="_oVfXorhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovUz_7hLEe2uyMDTtZ4aHg" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovVbALhLEe2uyMDTtZ4aHg" name="setPeriod" specification="_oVf-sLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovVbAbhLEe2uyMDTtZ4aHg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovVbArhLEe2uyMDTtZ4aHg" name="setPhase" specification="_oVglwLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovVbA7hLEe2uyMDTtZ4aHg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovVbBLhLEe2uyMDTtZ4aHg" name="setNextReleaseTime" specification="_oVglwrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovVbBbhLEe2uyMDTtZ4aHg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovVbBrhLEe2uyMDTtZ4aHg" name="maxPhaseComparison" specification="_oqMcUrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovVbB7hLEe2uyMDTtZ4aHg" name="obj2" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovVbCLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovWCELhLEe2uyMDTtZ4aHg" name="maxPhaseComparison" specification="_oqMcVbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovWCEbhLEe2uyMDTtZ4aHg" name="obj1" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovWCErhLEe2uyMDTtZ4aHg" name="obj2" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovWCE7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovWCFLhLEe2uyMDTtZ4aHg" name="deadlineComparison" specification="_oqNDYbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovWCFbhLEe2uyMDTtZ4aHg" name="obj2" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovWCFrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovWCF7hLEe2uyMDTtZ4aHg" name="deadlineComparison" specification="_oqNDZLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovWCGLhLEe2uyMDTtZ4aHg" name="obj1" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovWCGbhLEe2uyMDTtZ4aHg" name="obj2" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovWCGrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovWCG7hLEe2uyMDTtZ4aHg" name="periodComparison" specification="_oqNqcLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovWCHLhLEe2uyMDTtZ4aHg" name="obj2" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovWCHbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovWCHrhLEe2uyMDTtZ4aHg" name="periodComparison" specification="_oqNqc7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovWCH7hLEe2uyMDTtZ4aHg" name="obj1" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovWCILhLEe2uyMDTtZ4aHg" name="obj2" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovWCIbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovWpILhLEe2uyMDTtZ4aHg" name="priorityComparison" specification="_oqORgLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovWpIbhLEe2uyMDTtZ4aHg" name="obj2" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovWpIrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovWpI7hLEe2uyMDTtZ4aHg" name="priorityComparison" specification="_oqORg7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovWpJLhLEe2uyMDTtZ4aHg" name="obj1" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovWpJbhLEe2uyMDTtZ4aHg" name="obj2" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovWpJrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovWpJ7hLEe2uyMDTtZ4aHg" name="releaseTimeComparison" specification="_oqO4kLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovWpKLhLEe2uyMDTtZ4aHg" name="obj2" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovWpKbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovWpKrhLEe2uyMDTtZ4aHg" name="releaseTimeComparison" specification="_oqO4k7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovWpK7hLEe2uyMDTtZ4aHg" name="obj1" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovWpLLhLEe2uyMDTtZ4aHg" name="obj2" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovWpLbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovWpLrhLEe2uyMDTtZ4aHg" name="LatestReleaseTimeComparison" specification="_oqO4l7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovWpL7hLEe2uyMDTtZ4aHg" name="obj2" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovWpMLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovWpMbhLEe2uyMDTtZ4aHg" name="LatestReleaseTimeComparison" specification="_oqPfoLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovWpMrhLEe2uyMDTtZ4aHg" name="obj1" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovWpM7hLEe2uyMDTtZ4aHg" name="obj2" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_ovWpNLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovWpNbhLEe2uyMDTtZ4aHg" name="compareAscendingOrder" specification="_oVjCALhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovWpNrhLEe2uyMDTtZ4aHg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovWpN7hLEe2uyMDTtZ4aHg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovWpOLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovXQMLhLEe2uyMDTtZ4aHg" name="compareDescendingOrder" specification="_oVjpELhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovXQMbhLEe2uyMDTtZ4aHg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovXQMrhLEe2uyMDTtZ4aHg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ovXQM7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovXQNLhLEe2uyMDTtZ4aHg" name="print" specification="_oVjpFLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_ovXQNbhLEe2uyMDTtZ4aHg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ovXQNrhLEe2uyMDTtZ4aHg" name="print" specification="_oVkQILhLEe2uyMDTtZ4aHg">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_oVYp8LhLEe2uyMDTtZ4aHg" name="SchedulableObject" visibility="package" method="_ovTl0LhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oVYp8bhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oVZRALhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oVZRAbhLEe2uyMDTtZ4aHg" type="_oVWNsLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oVZ4ELhLEe2uyMDTtZ4aHg" name="SchedulableObject" visibility="package" method="_ovTl1rhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oVafJLhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oVafJbhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oVafILhLEe2uyMDTtZ4aHg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oVafIbhLEe2uyMDTtZ4aHg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oVafIrhLEe2uyMDTtZ4aHg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oVafI7hLEe2uyMDTtZ4aHg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oVafJrhLEe2uyMDTtZ4aHg" type="_oVWNsLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oVafJ7hLEe2uyMDTtZ4aHg" name="SchedulableObject" visibility="package" method="_ovUM4LhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oVbGNbhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oVbGNrhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_oVbGMLhLEe2uyMDTtZ4aHg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oVbGMbhLEe2uyMDTtZ4aHg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oVbGMrhLEe2uyMDTtZ4aHg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oVbGM7hLEe2uyMDTtZ4aHg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oVbGNLhLEe2uyMDTtZ4aHg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oVbGN7hLEe2uyMDTtZ4aHg" type="_oVWNsLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oVbtQLhLEe2uyMDTtZ4aHg" name="setDefaultParameters" visibility="private" method="_ovUM57hLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oVbtQbhLEe2uyMDTtZ4aHg" name="getAllEndTimes" method="_ovUM6LhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovkrkbhLEe2uyMDTtZ4aHg">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_oqL1RrhLEe2uyMDTtZ4aHg" type="_oSKW0bhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oVcUUbhLEe2uyMDTtZ4aHg" name="addToEndTimes" method="_ovUM6rhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oVcUUrhLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oVc7YLhLEe2uyMDTtZ4aHg" name="peekEndTimes" method="_ovUM7LhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oVc7YbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oVdicLhLEe2uyMDTtZ4aHg" name="pollEndTimes" method="_ovUM7rhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oVdicbhLEe2uyMDTtZ4aHg" name="getName" method="_ovUz8LhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovkrkrhLEe2uyMDTtZ4aHg">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_oVdicrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oVdic7hLEe2uyMDTtZ4aHg" name="setName" method="_ovUz8rhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovkrk7hLEe2uyMDTtZ4aHg">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_oVdidLhLEe2uyMDTtZ4aHg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oVeJgLhLEe2uyMDTtZ4aHg" name="getReleaseTime" method="_ovUz9LhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovkrlLhLEe2uyMDTtZ4aHg">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_oVeJgbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oVeJgrhLEe2uyMDTtZ4aHg" name="getPhase" method="_ovUz9rhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovkrlbhLEe2uyMDTtZ4aHg">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_oVeJg7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oVewkLhLEe2uyMDTtZ4aHg" name="getStartTime" method="_ovUz-LhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovkrlrhLEe2uyMDTtZ4aHg">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_oVewkbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oVewkrhLEe2uyMDTtZ4aHg" name="setEndTime" method="_ovUz-rhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovkrl7hLEe2uyMDTtZ4aHg">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_oVewk7hLEe2uyMDTtZ4aHg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oVfXoLhLEe2uyMDTtZ4aHg" name="setStartTime" method="_ovUz_LhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovkrmLhLEe2uyMDTtZ4aHg">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_oVfXobhLEe2uyMDTtZ4aHg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oVfXorhLEe2uyMDTtZ4aHg" name="setReleaseTime" method="_ovUz_rhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovkrmbhLEe2uyMDTtZ4aHg">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_oVfXo7hLEe2uyMDTtZ4aHg" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oVf-sLhLEe2uyMDTtZ4aHg" name="setPeriod" method="_ovVbALhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovkrmrhLEe2uyMDTtZ4aHg">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_oVf-sbhLEe2uyMDTtZ4aHg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oVglwLhLEe2uyMDTtZ4aHg" name="setPhase" method="_ovVbArhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovkrm7hLEe2uyMDTtZ4aHg">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_oVglwbhLEe2uyMDTtZ4aHg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oVglwrhLEe2uyMDTtZ4aHg" name="setNextReleaseTime" method="_ovVbBLhLEe2uyMDTtZ4aHg">
                <ownedComment xmi:id="_ovkrnLhLEe2uyMDTtZ4aHg">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_oVglw7hLEe2uyMDTtZ4aHg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oVjCALhLEe2uyMDTtZ4aHg" name="compareAscendingOrder" method="_ovWpNbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oVjCAbhLEe2uyMDTtZ4aHg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oVjCArhLEe2uyMDTtZ4aHg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oVjCA7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oVjpELhLEe2uyMDTtZ4aHg" name="compareDescendingOrder" method="_ovXQMLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oVjpEbhLEe2uyMDTtZ4aHg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oVjpErhLEe2uyMDTtZ4aHg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oVjpE7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oVjpFLhLEe2uyMDTtZ4aHg" name="print" method="_ovXQNLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oVjpFbhLEe2uyMDTtZ4aHg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oVkQILhLEe2uyMDTtZ4aHg" name="print" method="_ovXQNrhLEe2uyMDTtZ4aHg"/>
              <ownedOperation xmi:id="_oqL1QLhLEe2uyMDTtZ4aHg" name="SchedulableObject" visibility="package" method="_ovTl0rhLEe2uyMDTtZ4aHg">
                <eAnnotations xmi:id="_oqL1Q7hLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_oqL1RLhLEe2uyMDTtZ4aHg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ovkrkLhLEe2uyMDTtZ4aHg">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_oqL1QbhLEe2uyMDTtZ4aHg" name="obj" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oqL1QrhLEe2uyMDTtZ4aHg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_oqL1RbhLEe2uyMDTtZ4aHg" type="_oVWNsLhLEe2uyMDTtZ4aHg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oqMcULhLEe2uyMDTtZ4aHg" name="addSubObject" method="_ovUM77hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oqMcUbhLEe2uyMDTtZ4aHg" name="obj" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_oqMcUrhLEe2uyMDTtZ4aHg" name="maxPhaseComparison" method="_ovVbBrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oqMcU7hLEe2uyMDTtZ4aHg" name="obj2" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oqMcVLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oqMcVbhLEe2uyMDTtZ4aHg" name="maxPhaseComparison" method="_ovWCELhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oqMcVrhLEe2uyMDTtZ4aHg" name="obj1" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oqMcV7hLEe2uyMDTtZ4aHg" name="obj2" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oqNDYLhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oqNDYbhLEe2uyMDTtZ4aHg" name="deadlineComparison" method="_ovWCFLhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oqNDYrhLEe2uyMDTtZ4aHg" name="obj2" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oqNDY7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oqNDZLhLEe2uyMDTtZ4aHg" name="deadlineComparison" method="_ovWCF7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oqNDZbhLEe2uyMDTtZ4aHg" name="obj1" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oqNDZrhLEe2uyMDTtZ4aHg" name="obj2" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oqNDZ7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oqNqcLhLEe2uyMDTtZ4aHg" name="periodComparison" method="_ovWCG7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oqNqcbhLEe2uyMDTtZ4aHg" name="obj2" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oqNqcrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oqNqc7hLEe2uyMDTtZ4aHg" name="periodComparison" method="_ovWCHrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oqNqdLhLEe2uyMDTtZ4aHg" name="obj1" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oqNqdbhLEe2uyMDTtZ4aHg" name="obj2" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oqNqdrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oqORgLhLEe2uyMDTtZ4aHg" name="priorityComparison" method="_ovWpILhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oqORgbhLEe2uyMDTtZ4aHg" name="obj2" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oqORgrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oqORg7hLEe2uyMDTtZ4aHg" name="priorityComparison" method="_ovWpI7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oqORhLhLEe2uyMDTtZ4aHg" name="obj1" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oqORhbhLEe2uyMDTtZ4aHg" name="obj2" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oqORhrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oqO4kLhLEe2uyMDTtZ4aHg" name="releaseTimeComparison" method="_ovWpJ7hLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oqO4kbhLEe2uyMDTtZ4aHg" name="obj2" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oqO4krhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oqO4k7hLEe2uyMDTtZ4aHg" name="releaseTimeComparison" method="_ovWpKrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oqO4lLhLEe2uyMDTtZ4aHg" name="obj1" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oqO4lbhLEe2uyMDTtZ4aHg" name="obj2" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oqO4lrhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oqO4l7hLEe2uyMDTtZ4aHg" name="LatestReleaseTimeComparison" method="_ovWpLrhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oqO4mLhLEe2uyMDTtZ4aHg" name="obj2" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oqO4mbhLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_oqPfoLhLEe2uyMDTtZ4aHg" name="LatestReleaseTimeComparison" method="_ovWpMbhLEe2uyMDTtZ4aHg">
                <ownedParameter xmi:id="_oqPfobhLEe2uyMDTtZ4aHg" name="obj1" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oqPforhLEe2uyMDTtZ4aHg" name="obj2" type="_oVWNsLhLEe2uyMDTtZ4aHg"/>
                <ownedParameter xmi:id="_oqPfo7hLEe2uyMDTtZ4aHg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_oqsyobhLEe2uyMDTtZ4aHg" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_orZ9QLhLEe2uyMDTtZ4aHg" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ordnoLhLEe2uyMDTtZ4aHg" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ortfQLhLEe2uyMDTtZ4aHg" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_orutZ7hLEe2uyMDTtZ4aHg" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_ovcvwLhLEe2uyMDTtZ4aHg" name="" memberEnd="_oseUQLhLEe2uyMDTtZ4aHg _ovdW0LhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_ovdW0LhLEe2uyMDTtZ4aHg" name="" type="_oPrqkLhLEe2uyMDTtZ4aHg" association="_ovcvwLhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ovhoRbhLEe2uyMDTtZ4aHg" name="" memberEnd="_otdyw7hLEe2uyMDTtZ4aHg _oviPULhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_oviPULhLEe2uyMDTtZ4aHg" name="" type="_oUEbULhLEe2uyMDTtZ4aHg" association="_ovhoRbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oviPUbhLEe2uyMDTtZ4aHg" name="" memberEnd="_oteZ0LhLEe2uyMDTtZ4aHg _oviPUrhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_oviPUrhLEe2uyMDTtZ4aHg" name="" type="_oUEbULhLEe2uyMDTtZ4aHg" association="_oviPUbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ovkEibhLEe2uyMDTtZ4aHg" name="" memberEnd="_otwGorhLEe2uyMDTtZ4aHg _ovkEirhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_ovkEirhLEe2uyMDTtZ4aHg" name="" type="_oVWNsLhLEe2uyMDTtZ4aHg" association="_ovkEibhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owFB4LhLEe2uyMDTtZ4aHg" name="" memberEnd="_owFB4bhLEe2uyMDTtZ4aHg _osLZUbhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owFB4bhLEe2uyMDTtZ4aHg" name="" type="_oOHkULhLEe2uyMDTtZ4aHg" association="_owFB4LhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owFo8bhLEe2uyMDTtZ4aHg" name="" memberEnd="_owFo8rhLEe2uyMDTtZ4aHg _osMncLhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owFo8rhLEe2uyMDTtZ4aHg" name="" type="_oOHkULhLEe2uyMDTtZ4aHg" association="_owFo8bhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owGQAbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owGQArhLEe2uyMDTtZ4aHg _osNOgLhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owGQArhLEe2uyMDTtZ4aHg" name="" type="_oOHkULhLEe2uyMDTtZ4aHg" association="_owGQAbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owG3EbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owG3ErhLEe2uyMDTtZ4aHg _osPqwLhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owG3ErhLEe2uyMDTtZ4aHg" name="" type="_oOxEkLhLEe2uyMDTtZ4aHg" association="_owG3EbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owIFMLhLEe2uyMDTtZ4aHg" name="" memberEnd="_owIFMbhLEe2uyMDTtZ4aHg _osQR0LhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owIFMbhLEe2uyMDTtZ4aHg" name="" type="_oOxEkLhLEe2uyMDTtZ4aHg" association="_owIFMLhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owIsQLhLEe2uyMDTtZ4aHg" name="" memberEnd="_owIsQbhLEe2uyMDTtZ4aHg _osRf8rhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owIsQbhLEe2uyMDTtZ4aHg" name="" type="_oO0H4LhLEe2uyMDTtZ4aHg" association="_owIsQLhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owIsQ7hLEe2uyMDTtZ4aHg" name="" memberEnd="_owIsRLhLEe2uyMDTtZ4aHg _osSHAbhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owIsRLhLEe2uyMDTtZ4aHg" name="" type="_oO0H4LhLEe2uyMDTtZ4aHg" association="_owIsQ7hLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owJTUbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owJTUrhLEe2uyMDTtZ4aHg _osT8MLhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owJTUrhLEe2uyMDTtZ4aHg" name="" type="_oO2kILhLEe2uyMDTtZ4aHg" association="_owJTUbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owJ6YbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owJ6YrhLEe2uyMDTtZ4aHg _osVKUrhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owJ6YrhLEe2uyMDTtZ4aHg" name="" type="_oPD_gLhLEe2uyMDTtZ4aHg" association="_owJ6YbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owKhcbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owKhcrhLEe2uyMDTtZ4aHg _osWYcbhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owKhcrhLEe2uyMDTtZ4aHg" name="" type="_oPD_gLhLEe2uyMDTtZ4aHg" association="_owKhcbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owLIgLhLEe2uyMDTtZ4aHg" name="" memberEnd="_owLIgbhLEe2uyMDTtZ4aHg _osZbwLhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owLIgbhLEe2uyMDTtZ4aHg" name="" type="_oPYvoLhLEe2uyMDTtZ4aHg" association="_owLIgLhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owLvkLhLEe2uyMDTtZ4aHg" name="" memberEnd="_owLvkbhLEe2uyMDTtZ4aHg _osbQ8bhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owLvkbhLEe2uyMDTtZ4aHg" name="" type="_oPYvoLhLEe2uyMDTtZ4aHg" association="_owLvkLhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owMWoLhLEe2uyMDTtZ4aHg" name="" memberEnd="_owMWobhLEe2uyMDTtZ4aHg _oska4bhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owMWobhLEe2uyMDTtZ4aHg" name="" type="_oP_zoLhLEe2uyMDTtZ4aHg" association="_owMWoLhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owM9sLhLEe2uyMDTtZ4aHg" name="" memberEnd="_owM9sbhLEe2uyMDTtZ4aHg _oslpALhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owM9sbhLEe2uyMDTtZ4aHg" name="" type="_oP_zoLhLEe2uyMDTtZ4aHg" association="_owM9sLhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owM9s7hLEe2uyMDTtZ4aHg" name="" memberEnd="_owM9tLhLEe2uyMDTtZ4aHg _osmQEbhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owM9tLhLEe2uyMDTtZ4aHg" name="" type="_oP_zoLhLEe2uyMDTtZ4aHg" association="_owM9s7hLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owNkwbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owNkwrhLEe2uyMDTtZ4aHg _osm3IrhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owNkwrhLEe2uyMDTtZ4aHg" name="" type="_oP_zoLhLEe2uyMDTtZ4aHg" association="_owNkwbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owOL0bhLEe2uyMDTtZ4aHg" name="" memberEnd="_owOL0rhLEe2uyMDTtZ4aHg _osneMbhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owOL0rhLEe2uyMDTtZ4aHg" name="" type="_oP_zoLhLEe2uyMDTtZ4aHg" association="_owOL0bhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owOy4bhLEe2uyMDTtZ4aHg" name="" memberEnd="_owOy4rhLEe2uyMDTtZ4aHg _osrIkbhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owOy4rhLEe2uyMDTtZ4aHg" name="" type="_oQTVoLhLEe2uyMDTtZ4aHg" association="_owOy4bhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owOy5LhLEe2uyMDTtZ4aHg" name="" memberEnd="_owOy5bhLEe2uyMDTtZ4aHg _oss9wLhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owOy5bhLEe2uyMDTtZ4aHg" name="" type="_oQTVoLhLEe2uyMDTtZ4aHg" association="_owOy5LhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owPZ8bhLEe2uyMDTtZ4aHg" name="" memberEnd="_owPZ8rhLEe2uyMDTtZ4aHg _ostk0LhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owPZ8rhLEe2uyMDTtZ4aHg" name="" type="_oQb4gLhLEe2uyMDTtZ4aHg" association="_owPZ8bhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owQBALhLEe2uyMDTtZ4aHg" name="" memberEnd="_owQBAbhLEe2uyMDTtZ4aHg _osuL4bhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owQBAbhLEe2uyMDTtZ4aHg" name="" type="_oQe70LhLEe2uyMDTtZ4aHg" association="_owQBALhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owQBA7hLEe2uyMDTtZ4aHg" name="" memberEnd="_owQBBLhLEe2uyMDTtZ4aHg _osuy8bhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owQBBLhLEe2uyMDTtZ4aHg" name="" type="_oQe70LhLEe2uyMDTtZ4aHg" association="_owQBA7hLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owQoEbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owQoErhLEe2uyMDTtZ4aHg _osvaAbhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owQoErhLEe2uyMDTtZ4aHg" name="" type="_oQh_ILhLEe2uyMDTtZ4aHg" association="_owQoEbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owRPILhLEe2uyMDTtZ4aHg" name="" memberEnd="_owRPIbhLEe2uyMDTtZ4aHg _osx2QLhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owRPIbhLEe2uyMDTtZ4aHg" name="" type="_oQs-QLhLEe2uyMDTtZ4aHg" association="_owRPILhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owRPI7hLEe2uyMDTtZ4aHg" name="" memberEnd="_owRPJLhLEe2uyMDTtZ4aHg _osx2QrhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owRPJLhLEe2uyMDTtZ4aHg" name="" type="_oQs-QLhLEe2uyMDTtZ4aHg" association="_owRPI7hLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owR2MbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owSdQLhLEe2uyMDTtZ4aHg _osydUbhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owSdQLhLEe2uyMDTtZ4aHg" name="" type="_oQs-QLhLEe2uyMDTtZ4aHg" association="_owR2MbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owSdQrhLEe2uyMDTtZ4aHg" name="" memberEnd="_owSdQ7hLEe2uyMDTtZ4aHg _oszEYLhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owSdQ7hLEe2uyMDTtZ4aHg" name="" type="_oQs-QLhLEe2uyMDTtZ4aHg" association="_owSdQrhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owTEUbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owTEUrhLEe2uyMDTtZ4aHg _oszEYrhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owTEUrhLEe2uyMDTtZ4aHg" name="" type="_oQs-QLhLEe2uyMDTtZ4aHg" association="_owTEUbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owTrYbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owTrYrhLEe2uyMDTtZ4aHg _os05kLhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owTrYrhLEe2uyMDTtZ4aHg" name="" type="_oQx2wLhLEe2uyMDTtZ4aHg" association="_owTrYbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owUScbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owUScrhLEe2uyMDTtZ4aHg _os05krhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owUScrhLEe2uyMDTtZ4aHg" name="" type="_oQx2wLhLEe2uyMDTtZ4aHg" association="_owUScbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owU5gbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owU5grhLEe2uyMDTtZ4aHg _os2HsbhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owU5grhLEe2uyMDTtZ4aHg" name="" type="_oQ39YLhLEe2uyMDTtZ4aHg" association="_owU5gbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owVgkbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owVgkrhLEe2uyMDTtZ4aHg _os3847hLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owVgkrhLEe2uyMDTtZ4aHg" name="" type="_oRGm4LhLEe2uyMDTtZ4aHg" association="_owVgkbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owVglLhLEe2uyMDTtZ4aHg" name="" memberEnd="_owVglbhLEe2uyMDTtZ4aHg _os4j8bhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owVglbhLEe2uyMDTtZ4aHg" name="" type="_oRGm4LhLEe2uyMDTtZ4aHg" association="_owVglLhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owWHobhLEe2uyMDTtZ4aHg" name="" memberEnd="_owWHorhLEe2uyMDTtZ4aHg _os5LALhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owWHorhLEe2uyMDTtZ4aHg" name="" type="_oRGm4LhLEe2uyMDTtZ4aHg" association="_owWHobhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owWusbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owWusrhLEe2uyMDTtZ4aHg _os5LBbhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owWusrhLEe2uyMDTtZ4aHg" name="" type="_oRGm4LhLEe2uyMDTtZ4aHg" association="_owWusbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owWutLhLEe2uyMDTtZ4aHg" name="" memberEnd="_owWutbhLEe2uyMDTtZ4aHg _os5yFLhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owWutbhLEe2uyMDTtZ4aHg" name="" type="_oRGm4LhLEe2uyMDTtZ4aHg" association="_owWutLhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owXVwbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owXVwrhLEe2uyMDTtZ4aHg _os6ZIbhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owXVwrhLEe2uyMDTtZ4aHg" name="" type="_oRGm4LhLEe2uyMDTtZ4aHg" association="_owXVwbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owX80LhLEe2uyMDTtZ4aHg" name="" memberEnd="_owX80bhLEe2uyMDTtZ4aHg _os7AMbhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owX80bhLEe2uyMDTtZ4aHg" name="" type="_oRGm4LhLEe2uyMDTtZ4aHg" association="_owX80LhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owX807hLEe2uyMDTtZ4aHg" name="" memberEnd="_owX81LhLEe2uyMDTtZ4aHg _os7nQbhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owX81LhLEe2uyMDTtZ4aHg" name="" type="_oRGm4LhLEe2uyMDTtZ4aHg" association="_owX807hLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owYj4bhLEe2uyMDTtZ4aHg" name="" memberEnd="_owYj4rhLEe2uyMDTtZ4aHg _os9ccLhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owYj4rhLEe2uyMDTtZ4aHg" name="" type="_oReaULhLEe2uyMDTtZ4aHg" association="_owYj4bhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owZK8LhLEe2uyMDTtZ4aHg" name="" memberEnd="_owZK8bhLEe2uyMDTtZ4aHg _os9ccrhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owZK8bhLEe2uyMDTtZ4aHg" name="" type="_oReaULhLEe2uyMDTtZ4aHg" association="_owZK8LhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owZK87hLEe2uyMDTtZ4aHg" name="" memberEnd="_owZK9LhLEe2uyMDTtZ4aHg _os-DgbhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owZK9LhLEe2uyMDTtZ4aHg" name="" type="_oReaULhLEe2uyMDTtZ4aHg" association="_owZK87hLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owZyAbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owZyArhLEe2uyMDTtZ4aHg _os_4sbhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owZyArhLEe2uyMDTtZ4aHg" name="" type="_oReaULhLEe2uyMDTtZ4aHg" association="_owZyAbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owaZEbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owaZErhLEe2uyMDTtZ4aHg _otBt4bhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owaZErhLEe2uyMDTtZ4aHg" name="" type="_oReaULhLEe2uyMDTtZ4aHg" association="_owaZEbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owaZFLhLEe2uyMDTtZ4aHg" name="" memberEnd="_owaZFbhLEe2uyMDTtZ4aHg _otDjFLhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owaZFbhLEe2uyMDTtZ4aHg" name="" type="_oR8UYLhLEe2uyMDTtZ4aHg" association="_owaZFLhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owbAIbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owbAIrhLEe2uyMDTtZ4aHg _otEKIbhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owbAIrhLEe2uyMDTtZ4aHg" name="" type="_oR8UYLhLEe2uyMDTtZ4aHg" association="_owbAIbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owbnMbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owbnMrhLEe2uyMDTtZ4aHg _otF_VLhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owbnMrhLEe2uyMDTtZ4aHg" name="" type="_oSUu4LhLEe2uyMDTtZ4aHg" association="_owbnMbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owcOQLhLEe2uyMDTtZ4aHg" name="" memberEnd="_owcOQbhLEe2uyMDTtZ4aHg _otGmYbhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owcOQbhLEe2uyMDTtZ4aHg" name="" type="_oSUu4LhLEe2uyMDTtZ4aHg" association="_owcOQLhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owcOQ7hLEe2uyMDTtZ4aHg" name="" memberEnd="_owcORLhLEe2uyMDTtZ4aHg _otHNcbhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owcORLhLEe2uyMDTtZ4aHg" name="" type="_oSWkELhLEe2uyMDTtZ4aHg" association="_owcOQ7hLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owc1UbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owc1UrhLEe2uyMDTtZ4aHg _otJps7hLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owc1UrhLEe2uyMDTtZ4aHg" name="" type="_oSiKQLhLEe2uyMDTtZ4aHg" association="_owc1UbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owdcYbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owdcYrhLEe2uyMDTtZ4aHg _otKQwbhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owdcYrhLEe2uyMDTtZ4aHg" name="" type="_oSiKQLhLEe2uyMDTtZ4aHg" association="_owdcYbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owdcZLhLEe2uyMDTtZ4aHg" name="" memberEnd="_owdcZbhLEe2uyMDTtZ4aHg _otNUELhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owdcZbhLEe2uyMDTtZ4aHg" name="" type="_oTInMLhLEe2uyMDTtZ4aHg" association="_owdcZLhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oweDcbhLEe2uyMDTtZ4aHg" name="" memberEnd="_oweDcrhLEe2uyMDTtZ4aHg _otNUErhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_oweDcrhLEe2uyMDTtZ4aHg" name="" type="_oTInMLhLEe2uyMDTtZ4aHg" association="_oweDcbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oweqgLhLEe2uyMDTtZ4aHg" name="" memberEnd="_oweqgbhLEe2uyMDTtZ4aHg _otN7IbhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_oweqgbhLEe2uyMDTtZ4aHg" name="" type="_oTInMLhLEe2uyMDTtZ4aHg" association="_oweqgLhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_oweqg7hLEe2uyMDTtZ4aHg" name="" memberEnd="_oweqhLhLEe2uyMDTtZ4aHg _otPJQbhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_oweqhLhLEe2uyMDTtZ4aHg" name="" type="_oTInMLhLEe2uyMDTtZ4aHg" association="_oweqg7hLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owfRkbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owfRkrhLEe2uyMDTtZ4aHg _otPJRLhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owfRkrhLEe2uyMDTtZ4aHg" name="" type="_oTInMLhLEe2uyMDTtZ4aHg" association="_owfRkbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owf4oLhLEe2uyMDTtZ4aHg" name="" memberEnd="_owf4obhLEe2uyMDTtZ4aHg _otPwUrhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owf4obhLEe2uyMDTtZ4aHg" name="" type="_oTInMLhLEe2uyMDTtZ4aHg" association="_owf4oLhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owf4o7hLEe2uyMDTtZ4aHg" name="" memberEnd="_owf4pLhLEe2uyMDTtZ4aHg _otQXYbhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owf4pLhLEe2uyMDTtZ4aHg" name="" type="_oTInMLhLEe2uyMDTtZ4aHg" association="_owf4o7hLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owgfsbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owgfsrhLEe2uyMDTtZ4aHg _otQ-cLhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owgfsrhLEe2uyMDTtZ4aHg" name="" type="_oTRKELhLEe2uyMDTtZ4aHg" association="_owgfsbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owhGwLhLEe2uyMDTtZ4aHg" name="" memberEnd="_owhGwbhLEe2uyMDTtZ4aHg _otUo0LhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owhGwbhLEe2uyMDTtZ4aHg" name="" type="_oTdXULhLEe2uyMDTtZ4aHg" association="_owhGwLhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owhGw7hLEe2uyMDTtZ4aHg" name="" memberEnd="_owhGxLhLEe2uyMDTtZ4aHg _otWeALhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owhGxLhLEe2uyMDTtZ4aHg" name="" type="_oTiP0LhLEe2uyMDTtZ4aHg" association="_owhGw7hLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owht0bhLEe2uyMDTtZ4aHg" name="" memberEnd="_owht0rhLEe2uyMDTtZ4aHg _otXFEbhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owht0rhLEe2uyMDTtZ4aHg" name="" type="_oTiP0LhLEe2uyMDTtZ4aHg" association="_owht0bhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owiU4LhLEe2uyMDTtZ4aHg" name="" memberEnd="_owiU4bhLEe2uyMDTtZ4aHg _otXsILhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owiU4bhLEe2uyMDTtZ4aHg" name="" type="_oTwSQLhLEe2uyMDTtZ4aHg" association="_owiU4LhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owiU47hLEe2uyMDTtZ4aHg" name="" memberEnd="_owiU5LhLEe2uyMDTtZ4aHg _otYTMLhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owiU5LhLEe2uyMDTtZ4aHg" name="" type="_oTwSQLhLEe2uyMDTtZ4aHg" association="_owiU47hLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owi78bhLEe2uyMDTtZ4aHg" name="" memberEnd="_owi78rhLEe2uyMDTtZ4aHg _otYTMrhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owi78rhLEe2uyMDTtZ4aHg" name="" type="_oTwSQLhLEe2uyMDTtZ4aHg" association="_owi78bhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owi79LhLEe2uyMDTtZ4aHg" name="" memberEnd="_owi79bhLEe2uyMDTtZ4aHg _otY6QLhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owi79bhLEe2uyMDTtZ4aHg" name="" type="_oTwSQLhLEe2uyMDTtZ4aHg" association="_owi79LhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owjjAbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owjjArhLEe2uyMDTtZ4aHg _otY6QrhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owjjArhLEe2uyMDTtZ4aHg" name="" type="_oTwSQLhLEe2uyMDTtZ4aHg" association="_owjjAbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owkKEbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owkKErhLEe2uyMDTtZ4aHg _otfA4LhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owkKErhLEe2uyMDTtZ4aHg" name="" type="_oUEbULhLEe2uyMDTtZ4aHg" association="_owkKEbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owkxILhLEe2uyMDTtZ4aHg" name="" memberEnd="_owkxIbhLEe2uyMDTtZ4aHg _otfn8LhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owkxIbhLEe2uyMDTtZ4aHg" name="" type="_oUEbULhLEe2uyMDTtZ4aHg" association="_owkxILhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owlYMbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owlYMrhLEe2uyMDTtZ4aHg _otjSUrhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owlYMrhLEe2uyMDTtZ4aHg" name="" type="_oUt7kLhLEe2uyMDTtZ4aHg" association="_owlYMbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owl_QLhLEe2uyMDTtZ4aHg" name="" memberEnd="_owl_QbhLEe2uyMDTtZ4aHg _otj5YrhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owl_QbhLEe2uyMDTtZ4aHg" name="" type="_oUt7kLhLEe2uyMDTtZ4aHg" association="_owl_QLhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owl_Q7hLEe2uyMDTtZ4aHg" name="" memberEnd="_owl_RLhLEe2uyMDTtZ4aHg _otwGo7hLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owl_RLhLEe2uyMDTtZ4aHg" name="" type="_oVWNsLhLEe2uyMDTtZ4aHg" association="_owl_Q7hLEe2uyMDTtZ4aHg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_owmmUbhLEe2uyMDTtZ4aHg" name="" memberEnd="_owmmUrhLEe2uyMDTtZ4aHg _otxUwbhLEe2uyMDTtZ4aHg">
              <ownedEnd xmi:id="_owmmUrhLEe2uyMDTtZ4aHg" name="" type="_oVWNsLhLEe2uyMDTtZ4aHg" association="_owmmUbhLEe2uyMDTtZ4aHg"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_oIqckbhLEe2uyMDTtZ4aHg" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_ooYecbhLEe2uyMDTtZ4aHg" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ooZFgbhLEe2uyMDTtZ4aHg" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ooZskbhLEe2uyMDTtZ4aHg" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_or998LhLEe2uyMDTtZ4aHg" name="WARPdslBaseListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_oJYOQLhLEe2uyMDTtZ4aHg" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_oo-7YLhLEe2uyMDTtZ4aHg" name="Utilities"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_oHCr8LhLEe2uyMDTtZ4aHg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_oHDTALhLEe2uyMDTtZ4aHg" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_oH7cwLhLEe2uyMDTtZ4aHg" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_on-OwLhLEe2uyMDTtZ4aHg" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_oKjS8LhLEe2uyMDTtZ4aHg" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_opyzsbhLEe2uyMDTtZ4aHg" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_oSKW0bhLEe2uyMDTtZ4aHg" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ontwELhLEe2uyMDTtZ4aHg" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_onvlQLhLEe2uyMDTtZ4aHg" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_onwzYbhLEe2uyMDTtZ4aHg" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_onxacbhLEe2uyMDTtZ4aHg" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_onyokbhLEe2uyMDTtZ4aHg" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ooFjgLhLEe2uyMDTtZ4aHg" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_oo1KYLhLEe2uyMDTtZ4aHg" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oo_icbhLEe2uyMDTtZ4aHg" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_opxlkLhLEe2uyMDTtZ4aHg" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_opyMoLhLEe2uyMDTtZ4aHg" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_opyMorhLEe2uyMDTtZ4aHg" name="Vector"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oqKAELhLEe2uyMDTtZ4aHg" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_oqKnIbhLEe2uyMDTtZ4aHg" name="Queue"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_oIYIsbhLEe2uyMDTtZ4aHg" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_ooJN4bhLEe2uyMDTtZ4aHg" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ooKcALhLEe2uyMDTtZ4aHg" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oonH8LhLEe2uyMDTtZ4aHg" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oooWEbhLEe2uyMDTtZ4aHg" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_oIYIsrhLEe2uyMDTtZ4aHg" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_oIYIs7hLEe2uyMDTtZ4aHg" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_ooKcArhLEe2uyMDTtZ4aHg" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_ooLDEbhLEe2uyMDTtZ4aHg" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_ooMRMbhLEe2uyMDTtZ4aHg" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_oIzmgLhLEe2uyMDTtZ4aHg" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_ooi2gLhLEe2uyMDTtZ4aHg" name="Component"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_oqewMLhLEe2uyMDTtZ4aHg" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_oqewMbhLEe2uyMDTtZ4aHg" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oq2joLhLEe2uyMDTtZ4aHg" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_orgq8LhLEe2uyMDTtZ4aHg" name="Double"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_oIW6kLhLEe2uyMDTtZ4aHg" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_oIXhoLhLEe2uyMDTtZ4aHg" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_oIYIsLhLEe2uyMDTtZ4aHg" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_ooIm0LhLEe2uyMDTtZ4aHg" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_oIYvwLhLEe2uyMDTtZ4aHg" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_oIYvwbhLEe2uyMDTtZ4aHg" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_oI0NkLhLEe2uyMDTtZ4aHg" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_oolSwbhLEe2uyMDTtZ4aHg" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_ool50bhLEe2uyMDTtZ4aHg" name="TableColumnModel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ooM4QLhLEe2uyMDTtZ4aHg" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_oojdkbhLEe2uyMDTtZ4aHg" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ookEobhLEe2uyMDTtZ4aHg" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ookrsbhLEe2uyMDTtZ4aHg" name="JTable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_oIpOcLhLEe2uyMDTtZ4aHg" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_oIp1gLhLEe2uyMDTtZ4aHg" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_oIp1gbhLEe2uyMDTtZ4aHg" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_oIp1grhLEe2uyMDTtZ4aHg" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_oIqckLhLEe2uyMDTtZ4aHg" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_ooXQUbhLEe2uyMDTtZ4aHg" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_ooX3YbhLEe2uyMDTtZ4aHg" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_ooVbILhLEe2uyMDTtZ4aHg" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ooWCMbhLEe2uyMDTtZ4aHg" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ooWpQbhLEe2uyMDTtZ4aHg" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_oLJI0LhLEe2uyMDTtZ4aHg" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_oLJI0bhLEe2uyMDTtZ4aHg" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_oLJI0rhLEe2uyMDTtZ4aHg" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_oqIK4rhLEe2uyMDTtZ4aHg" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_oqIx8bhLEe2uyMDTtZ4aHg" name="Test"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_oqIK4LhLEe2uyMDTtZ4aHg" name="Assert"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_oIvVELhLEe2uyMDTtZ4aHg" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_ooa6srhLEe2uyMDTtZ4aHg" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_oocI07hLEe2uyMDTtZ4aHg" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_oodW8rhLEe2uyMDTtZ4aHg" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_ooelELhLEe2uyMDTtZ4aHg" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_oofMI7hLEe2uyMDTtZ4aHg" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_oohBUrhLEe2uyMDTtZ4aHg" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_opl_YrhLEe2uyMDTtZ4aHg" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_opnNgLhLEe2uyMDTtZ4aHg" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_opn0k7hLEe2uyMDTtZ4aHg" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_oppCs7hLEe2uyMDTtZ4aHg" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_oK4qILhLEe2uyMDTtZ4aHg" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_op5hYLhLEe2uyMDTtZ4aHg" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_op7WkrhLEe2uyMDTtZ4aHg" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_op8ksrhLEe2uyMDTtZ4aHg" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_op9y0LhLEe2uyMDTtZ4aHg" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_op-Z47hLEe2uyMDTtZ4aHg" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_op_oA7hLEe2uyMDTtZ4aHg" name="ChannelContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_oLBNALhLEe2uyMDTtZ4aHg" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_oqCEQLhLEe2uyMDTtZ4aHg" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_oqCrUbhLEe2uyMDTtZ4aHg" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_oqCrU7hLEe2uyMDTtZ4aHg" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_oqDSYbhLEe2uyMDTtZ4aHg" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_oqD5cbhLEe2uyMDTtZ4aHg" name="StringHolder"/>
    </packagedElement>
    <profileApplication xmi:id="_nG1MILhLEe2uyMDTtZ4aHg">
      <eAnnotations xmi:id="_nG6rsLhLEe2uyMDTtZ4aHg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_nG-9ILhLEe2uyMDTtZ4aHg" base_Package="_nAzcoLhLEe2uyMDTtZ4aHg">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_oOCEwLhLEe2uyMDTtZ4aHg" genericsValue="T,E" base_Element="_oNocILhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oOLOsLhLEe2uyMDTtZ4aHg" base_Element="_oOKnoLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oOMc0LhLEe2uyMDTtZ4aHg" base_Element="_oOKnoLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oOMc0bhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oOO5ELhLEe2uyMDTtZ4aHg" genericsValue="Edge" base_Element="_oOND4LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oOQuQLhLEe2uyMDTtZ4aHg" genericsValue="Edge" base_Element="_oOO5EbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oOSjcLhLEe2uyMDTtZ4aHg" genericsValue="Edge" base_Element="_oORVULhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oOU_sLhLEe2uyMDTtZ4aHg" genericsValue="Edge" base_Element="_oOTKgLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oOXb8LhLEe2uyMDTtZ4aHg" genericsValue="Edge" base_Element="_oOVmwLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oO944LhLEe2uyMDTtZ4aHg" genericsValue="String" base_Element="_oO8qwLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oPIQ8LhLEe2uyMDTtZ4aHg" genericsValue="String" base_Element="_oPHC0rhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oPby8LhLEe2uyMDTtZ4aHg" base_Element="_oPbL4LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oPcaALhLEe2uyMDTtZ4aHg" base_Element="_oPbL4LhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oPcaAbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oPdoILhLEe2uyMDTtZ4aHg" base_Element="_oPdBELhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oPePMLhLEe2uyMDTtZ4aHg" base_Element="_oPdBELhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oPePMbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oPe2QLhLEe2uyMDTtZ4aHg" base_Element="_oPePMrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oPfdULhLEe2uyMDTtZ4aHg" base_Element="_oPePMrhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oPfdUbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oPmLALhLEe2uyMDTtZ4aHg" genericsValue="T extends SchedulableObject" base_Element="_oPk84LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oPqccLhLEe2uyMDTtZ4aHg" base_Element="_oPp1Y7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oPqccbhLEe2uyMDTtZ4aHg" base_Element="_oPp1Y7hLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oPrDgLhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oPuG0LhLEe2uyMDTtZ4aHg" base_Element="_oPtfwLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oPxxMLhLEe2uyMDTtZ4aHg" base_Element="_oPxKILhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oPyYQLhLEe2uyMDTtZ4aHg" base_Element="_oPxKILhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oPyYQbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oPzmYLhLEe2uyMDTtZ4aHg" base_Element="_oPyYQrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oPzmYbhLEe2uyMDTtZ4aHg" base_Element="_oPyYQrhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oPzmYrhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oP0NcLhLEe2uyMDTtZ4aHg" base_Element="_oPzmY7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oP00gLhLEe2uyMDTtZ4aHg" base_Element="_oPzmY7hLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oP00gbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oQGhULhLEe2uyMDTtZ4aHg" genericsValue="Node" base_Element="_oQFTMrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oQHvcLhLEe2uyMDTtZ4aHg" genericsValue="Edge" base_Element="_oQHIYLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oQJkoLhLEe2uyMDTtZ4aHg" genericsValue="Integer" base_Element="_oQIWgLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oQMn8LhLEe2uyMDTtZ4aHg" base_Element="_oQMA4LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oQMn8bhLEe2uyMDTtZ4aHg" base_Element="_oQMA4LhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oQMn8rhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oQVx4LhLEe2uyMDTtZ4aHg" base_Element="_oQVK0LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oQWY8LhLEe2uyMDTtZ4aHg" base_Element="_oQVK0LhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oQWY8bhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_oQgxALhLEe2uyMDTtZ4aHg" dimensions="2" base_Element="_oQfi47hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oQ06ELhLEe2uyMDTtZ4aHg" genericsValue="T extends SchedulableObject" base_Element="_oQ0TALhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oQ2vQLhLEe2uyMDTtZ4aHg" genericsValue="T extends SchedulableObject" base_Element="_oQ2IMLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oQ6ZoLhLEe2uyMDTtZ4aHg" base_Element="_oQ5ykLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oQ6ZobhLEe2uyMDTtZ4aHg" base_Element="_oQ5ykLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oQ6ZorhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oQ7nwrhLEe2uyMDTtZ4aHg" base_Element="_oQ7nwLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oQ8O0LhLEe2uyMDTtZ4aHg" base_Element="_oQ7nwLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oQ8O0bhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oQ814LhLEe2uyMDTtZ4aHg" base_Element="_oQ8O0rhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oQ814bhLEe2uyMDTtZ4aHg" base_Element="_oQ8O0rhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oQ814rhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oRC8hLhLEe2uyMDTtZ4aHg" base_Element="_oRC8g7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oRDjkLhLEe2uyMDTtZ4aHg" base_Element="_oRC8g7hLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oRDjkbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oRFYwLhLEe2uyMDTtZ4aHg" genericsValue="T extends SchedulableObject" base_Element="_oREKoLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oRJDILhLEe2uyMDTtZ4aHg" genericsValue="String, Integer" base_Element="_oRIcELhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oRK4ULhLEe2uyMDTtZ4aHg" genericsValue="String" base_Element="_oRJqMLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Array xmi:id="_oRLfYLhLEe2uyMDTtZ4aHg" base_Element="_oRK4UbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oRXsobhLEe2uyMDTtZ4aHg" base_Element="_oRXsoLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oRYTsLhLEe2uyMDTtZ4aHg" base_Element="_oRXsoLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oRYTsbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oRdMMbhLEe2uyMDTtZ4aHg" genericsValue="T extends SchedulableObject" base_Element="_oRdMMLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oRoyYrhLEe2uyMDTtZ4aHg" base_Element="_oRoyYLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oRoyY7hLEe2uyMDTtZ4aHg" base_Element="_oRoyYLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oRoyZLhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oRqAgbhLEe2uyMDTtZ4aHg" base_Element="_oRpZcrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oRqAgrhLEe2uyMDTtZ4aHg" base_Element="_oRpZcrhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oRqnkLhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oRqnk7hLEe2uyMDTtZ4aHg" base_Element="_oRqnkbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oRqnlLhLEe2uyMDTtZ4aHg" base_Element="_oRqnkbhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oRrOoLhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oRscwLhLEe2uyMDTtZ4aHg" base_Element="_oRr1sLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oRtD0LhLEe2uyMDTtZ4aHg" base_Element="_oRr1sLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oRtD0bhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oRtD07hLEe2uyMDTtZ4aHg" base_Element="_oRtD0rhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oRtq4LhLEe2uyMDTtZ4aHg" base_Element="_oRtD0rhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oRtq4bhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oRuR8rhLEe2uyMDTtZ4aHg" base_Element="_oRuR8LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oRuR87hLEe2uyMDTtZ4aHg" base_Element="_oRuR8LhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oRuR9LhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oRvgELhLEe2uyMDTtZ4aHg" base_Element="_oRu5ALhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oRwHILhLEe2uyMDTtZ4aHg" base_Element="_oRu5ALhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oRwHIbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oRwuMbhLEe2uyMDTtZ4aHg" base_Element="_oRwHI7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oRxVQLhLEe2uyMDTtZ4aHg" base_Element="_oRwHI7hLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oRxVQbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oRx8ULhLEe2uyMDTtZ4aHg" genericsValue="String, Integer" base_Element="_oRxVQrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oR9igbhLEe2uyMDTtZ4aHg" base_Element="_oR9igLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oR-JkLhLEe2uyMDTtZ4aHg" base_Element="_oR9igLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oR-JkbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oR-woLhLEe2uyMDTtZ4aHg" base_Element="_oR-JkrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oR_XsLhLEe2uyMDTtZ4aHg" base_Element="_oR-JkrhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oR_XsbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oR_-wLhLEe2uyMDTtZ4aHg" base_Element="_oR_XsrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oSAl0LhLEe2uyMDTtZ4aHg" base_Element="_oR_XsrhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oSAl0bhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_oSBM4rhLEe2uyMDTtZ4aHg" dimensions="1" base_Element="_oSAl0rhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oSBM47hLEe2uyMDTtZ4aHg" base_Element="_oSAl0rhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oSBz8LhLEe2uyMDTtZ4aHg" base_Element="_oSAl0rhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oSBz8bhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_oSCbArhLEe2uyMDTtZ4aHg" dimensions="2" base_Element="_oSBz8rhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oSCbA7hLEe2uyMDTtZ4aHg" base_Element="_oSBz8rhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oSDCELhLEe2uyMDTtZ4aHg" base_Element="_oSBz8rhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oSDCEbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oSHTgLhLEe2uyMDTtZ4aHg" genericsValue="T extends SchedulableObject" base_Element="_oSGFYLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oSJvwLhLEe2uyMDTtZ4aHg" genericsValue="T extends SchedulableObject" base_Element="_oSIhoLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_oSK94LhLEe2uyMDTtZ4aHg" base_Element="_oSKW0bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oSMMALhLEe2uyMDTtZ4aHg" genericsValue="T" base_Element="_oSLk8LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oSYZQbhLEe2uyMDTtZ4aHg" base_Element="_oSYZQLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oSZAULhLEe2uyMDTtZ4aHg" base_Element="_oSYZQLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oSZAUbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oScDoLhLEe2uyMDTtZ4aHg" genericsValue="T" base_Element="_oSbckLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oSfuALhLEe2uyMDTtZ4aHg" genericsValue="T extends SchedulableObject" base_Element="_oSfG8LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oSg8ILhLEe2uyMDTtZ4aHg" genericsValue="T" base_Element="_oSgVELhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oS1sQLhLEe2uyMDTtZ4aHg" genericsValue="T extends SchedulableObject" base_Element="_oS1FMLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oS26YLhLEe2uyMDTtZ4aHg" genericsValue="T" base_Element="_oS2TULhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oS4vkbhLEe2uyMDTtZ4aHg" base_Element="_oS4vkLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oTAEULhLEe2uyMDTtZ4aHg" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_oS_dQLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTEVwbhLEe2uyMDTtZ4aHg" base_Element="_oTEVwLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTFj4bhLEe2uyMDTtZ4aHg" base_Element="_oTFj4LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTLDcLhLEe2uyMDTtZ4aHg" base_Element="_oTKcYLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oTLDcbhLEe2uyMDTtZ4aHg" base_Element="_oTKcYLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oTLDcrhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTLqgLhLEe2uyMDTtZ4aHg" base_Element="_oTLDc7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oTLqgbhLEe2uyMDTtZ4aHg" base_Element="_oTLDc7hLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oTLqgrhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTMRkbhLEe2uyMDTtZ4aHg" base_Element="_oTLqg7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oTMRkrhLEe2uyMDTtZ4aHg" base_Element="_oTLqg7hLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oTM4oLhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_oTX3wLhLEe2uyMDTtZ4aHg" base_Element="_oTXQsbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Array xmi:id="_oTZF4LhLEe2uyMDTtZ4aHg" dimensions="2" base_Element="_oTX3wbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTkFBLhLEe2uyMDTtZ4aHg" base_Element="_oTkFA7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oTksELhLEe2uyMDTtZ4aHg" base_Element="_oTkFA7hLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oTksEbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTlTILhLEe2uyMDTtZ4aHg" base_Element="_oTksErhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oTlTIbhLEe2uyMDTtZ4aHg" base_Element="_oTksErhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oTlTIrhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTl6MbhLEe2uyMDTtZ4aHg" base_Element="_oTlTI7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oTl6MrhLEe2uyMDTtZ4aHg" base_Element="_oTlTI7hLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oTl6M7hLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTyugLhLEe2uyMDTtZ4aHg" base_Element="_oTyHcLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oTzVkLhLEe2uyMDTtZ4aHg" base_Element="_oTyHcLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oTzVkbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oTz8obhLEe2uyMDTtZ4aHg" base_Element="_oTz8oLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oT0jsLhLEe2uyMDTtZ4aHg" base_Element="_oTz8oLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oT0jsbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oT1KwLhLEe2uyMDTtZ4aHg" base_Element="_oT0jsrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oT1KwbhLEe2uyMDTtZ4aHg" base_Element="_oT0jsrhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oT1KwrhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oT1x0bhLEe2uyMDTtZ4aHg" base_Element="_oT1x0LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oT2Y4LhLEe2uyMDTtZ4aHg" base_Element="_oT1x0LhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oT2Y4bhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oT2_8LhLEe2uyMDTtZ4aHg" base_Element="_oT2Y4rhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oT2_8bhLEe2uyMDTtZ4aHg" base_Element="_oT2Y4rhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oT2_8rhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oT3nALhLEe2uyMDTtZ4aHg" base_Element="_oT2_87hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oT3nAbhLEe2uyMDTtZ4aHg" base_Element="_oT2_87hLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oT4OELhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oT4OE7hLEe2uyMDTtZ4aHg" base_Element="_oT4OEbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oT41ILhLEe2uyMDTtZ4aHg" base_Element="_oT4OEbhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oT41IbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oT41JLhLEe2uyMDTtZ4aHg" base_Element="_oT41IrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oT5cMLhLEe2uyMDTtZ4aHg" base_Element="_oT41IrhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oT5cMbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oT6DQbhLEe2uyMDTtZ4aHg" base_Element="_oT5cMrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oT6DQrhLEe2uyMDTtZ4aHg" base_Element="_oT5cMrhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oT6DQ7hLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oT6qULhLEe2uyMDTtZ4aHg" base_Element="_oT6DRLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oT6qUbhLEe2uyMDTtZ4aHg" base_Element="_oT6DRLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oT7RYLhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oT7RYrhLEe2uyMDTtZ4aHg" base_Element="_oT7RYbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oT74cLhLEe2uyMDTtZ4aHg" base_Element="_oT7RYbhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oT74cbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oT8fgbhLEe2uyMDTtZ4aHg" base_Element="_oT74crhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oT8fgrhLEe2uyMDTtZ4aHg" base_Element="_oT74crhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oT8fg7hLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oT9GkbhLEe2uyMDTtZ4aHg" base_Element="_oT8fhLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oT9GkrhLEe2uyMDTtZ4aHg" base_Element="_oT8fhLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oT9Gk7hLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oT9tobhLEe2uyMDTtZ4aHg" base_Element="_oT9GlLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oT9torhLEe2uyMDTtZ4aHg" base_Element="_oT9GlLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oT9to7hLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oT-UsrhLEe2uyMDTtZ4aHg" base_Element="_oT-UsLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oT-7wLhLEe2uyMDTtZ4aHg" base_Element="_oT-UsLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oT-7wbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oT_i0LhLEe2uyMDTtZ4aHg" base_Element="_oT-7wrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oT_i0bhLEe2uyMDTtZ4aHg" base_Element="_oT-7wrhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oT_i0rhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_oUWIIrhLEe2uyMDTtZ4aHg" base_Element="_oUVhELhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Array xmi:id="_oUXWQbhLEe2uyMDTtZ4aHg" base_Element="_oUWvMrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Array xmi:id="_oUYkYbhLEe2uyMDTtZ4aHg" dimensions="1" base_Element="_oUX9UrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Array xmi:id="_oUbAoLhLEe2uyMDTtZ4aHg" base_Element="_oUaZkLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oUtUgLhLEe2uyMDTtZ4aHg" genericsValue="InstructionParameters" base_Element="_oUstcLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oUvJsbhLEe2uyMDTtZ4aHg" genericsValue="InstructionParameters" base_Element="_oUvJsLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Array xmi:id="_oU46srhLEe2uyMDTtZ4aHg" base_Element="_oU46sLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Array xmi:id="_oU6I0rhLEe2uyMDTtZ4aHg" base_Element="_oU6I0LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oVCrsbhLEe2uyMDTtZ4aHg" base_Element="_oVCrsLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oVDSwLhLEe2uyMDTtZ4aHg" base_Element="_oVCrsLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oVDSwbhLEe2uyMDTtZ4aHg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oVDSw7hLEe2uyMDTtZ4aHg" base_Element="_oVDSwrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oVDSxLhLEe2uyMDTtZ4aHg" base_Element="_oVDSwrhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oVDSxbhLEe2uyMDTtZ4aHg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oVD50bhLEe2uyMDTtZ4aHg" base_Element="_oVD50LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oVEg4LhLEe2uyMDTtZ4aHg" base_Element="_oVD50LhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oVEg4bhLEe2uyMDTtZ4aHg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oVFH8LhLEe2uyMDTtZ4aHg" base_Element="_oVEg4rhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oVFvALhLEe2uyMDTtZ4aHg" base_Element="_oVEg4rhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oVFvAbhLEe2uyMDTtZ4aHg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oVFvA7hLEe2uyMDTtZ4aHg" base_Element="_oVFvArhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oVGWELhLEe2uyMDTtZ4aHg" base_Element="_oVFvArhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oVGWEbhLEe2uyMDTtZ4aHg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oVG9ILhLEe2uyMDTtZ4aHg" base_Element="_oVGWErhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oVG9IbhLEe2uyMDTtZ4aHg" base_Element="_oVGWErhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oVG9IrhLEe2uyMDTtZ4aHg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oVHkMLhLEe2uyMDTtZ4aHg" base_Element="_oVG9I7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oVHkMbhLEe2uyMDTtZ4aHg" base_Element="_oVG9I7hLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oVHkMrhLEe2uyMDTtZ4aHg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oVIyULhLEe2uyMDTtZ4aHg" base_Element="_oVILQLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oVIyUbhLEe2uyMDTtZ4aHg" base_Element="_oVILQLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oVIyUrhLEe2uyMDTtZ4aHg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oVIyVLhLEe2uyMDTtZ4aHg" base_Element="_oVIyU7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oVJZYLhLEe2uyMDTtZ4aHg" base_Element="_oVIyU7hLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oVJZYbhLEe2uyMDTtZ4aHg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oVJZY7hLEe2uyMDTtZ4aHg" base_Element="_oVJZYrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oVKAcLhLEe2uyMDTtZ4aHg" base_Element="_oVJZYrhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oVKAcbhLEe2uyMDTtZ4aHg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oVKngLhLEe2uyMDTtZ4aHg" base_Element="_oVKAcrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oVKngbhLEe2uyMDTtZ4aHg" base_Element="_oVKAcrhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oVKngrhLEe2uyMDTtZ4aHg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oVLOkbhLEe2uyMDTtZ4aHg" base_Element="_oVLOkLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oVLOkrhLEe2uyMDTtZ4aHg" base_Element="_oVLOkLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oVLOk7hLEe2uyMDTtZ4aHg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oVL1obhLEe2uyMDTtZ4aHg" base_Element="_oVL1oLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oVL1orhLEe2uyMDTtZ4aHg" base_Element="_oVL1oLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oVMcsLhLEe2uyMDTtZ4aHg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oVMcsrhLEe2uyMDTtZ4aHg" base_Element="_oVMcsbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oVMcs7hLEe2uyMDTtZ4aHg" base_Element="_oVMcsbhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oVMctLhLEe2uyMDTtZ4aHg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oVNDwbhLEe2uyMDTtZ4aHg" base_Element="_oVNDwLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oVOR4LhLEe2uyMDTtZ4aHg" base_Element="_oVNDwLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oVOR4bhLEe2uyMDTtZ4aHg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oVO48LhLEe2uyMDTtZ4aHg" base_Element="_oVOR4rhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oVO48bhLEe2uyMDTtZ4aHg" base_Element="_oVOR4rhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oVO48rhLEe2uyMDTtZ4aHg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oVPgALhLEe2uyMDTtZ4aHg" base_Element="_oVO487hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oVPgAbhLEe2uyMDTtZ4aHg" base_Element="_oVO487hLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oVPgArhLEe2uyMDTtZ4aHg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oVQHELhLEe2uyMDTtZ4aHg" base_Element="_oVPgA7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oVQHEbhLEe2uyMDTtZ4aHg" base_Element="_oVPgA7hLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oVQHErhLEe2uyMDTtZ4aHg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oVQuIbhLEe2uyMDTtZ4aHg" base_Element="_oVQuILhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oVRVMLhLEe2uyMDTtZ4aHg" base_Element="_oVQuILhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oVRVMbhLEe2uyMDTtZ4aHg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oVR8QLhLEe2uyMDTtZ4aHg" base_Element="_oVRVMrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oVR8QbhLEe2uyMDTtZ4aHg" base_Element="_oVRVMrhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oVSjULhLEe2uyMDTtZ4aHg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oVTKYLhLEe2uyMDTtZ4aHg" base_Element="_oVSjUbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oVTKYbhLEe2uyMDTtZ4aHg" base_Element="_oVSjUbhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oVTKYrhLEe2uyMDTtZ4aHg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oVTxcLhLEe2uyMDTtZ4aHg" base_Element="_oVTKY7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oVTxcbhLEe2uyMDTtZ4aHg" base_Element="_oVTKY7hLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oVTxcrhLEe2uyMDTtZ4aHg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oVcUULhLEe2uyMDTtZ4aHg" genericsValue="Integer" base_Element="_oVbtQbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_onuXILhLEe2uyMDTtZ4aHg" base_Element="_ontwELhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_onwzYLhLEe2uyMDTtZ4aHg" base_Element="_onvlQLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_onxacLhLEe2uyMDTtZ4aHg" base_Element="_onwzYbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_onyokLhLEe2uyMDTtZ4aHg" base_Element="_onxacbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_onyokrhLEe2uyMDTtZ4aHg" base_Element="_onyokbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_on1E0rhLEe2uyMDTtZ4aHg" base_Element="_on0dxLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_on1E07hLEe2uyMDTtZ4aHg" base_Element="_on0dxLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_on1r4LhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_on3hELhLEe2uyMDTtZ4aHg" genericsValue="Edge" base_Element="_on26ArhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_on4IIrhLEe2uyMDTtZ4aHg" genericsValue="Edge" base_Element="_on4IIbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_on6kYbhLEe2uyMDTtZ4aHg" genericsValue="String, Activation" base_Element="_on6kYLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_on-10LhLEe2uyMDTtZ4aHg" base_Element="_on-OwLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ooCgMbhLEe2uyMDTtZ4aHg" base_Element="_ooB5JrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_ooCgMrhLEe2uyMDTtZ4aHg" base_Element="_ooB5JrhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_ooCgM7hLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ooGKkLhLEe2uyMDTtZ4aHg" base_Element="_ooFjgLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ooHYs7hLEe2uyMDTtZ4aHg" base_Element="_ooHYsLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_ooHYtLhLEe2uyMDTtZ4aHg" base_Element="_ooHYsLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_ooH_wLhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ooJN4LhLEe2uyMDTtZ4aHg" base_Element="_ooIm0LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_ooJ08LhLEe2uyMDTtZ4aHg" base_Element="_ooJN4bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_ooKcAbhLEe2uyMDTtZ4aHg" base_Element="_ooKcALhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_ooLDELhLEe2uyMDTtZ4aHg" base_Element="_ooKcArhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_ooMRMLhLEe2uyMDTtZ4aHg" base_Element="_ooLDEbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_ooMRMrhLEe2uyMDTtZ4aHg" base_Element="_ooMRMbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_ooM4QbhLEe2uyMDTtZ4aHg" base_Element="_ooM4QLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ooPUgbhLEe2uyMDTtZ4aHg" base_Element="_ooOtcrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_ooPUgrhLEe2uyMDTtZ4aHg" base_Element="_ooOtcrhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_ooPUg7hLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ooRwwbhLEe2uyMDTtZ4aHg" genericsValue="String, Flow" base_Element="_ooRwwLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_ooSX0bhLEe2uyMDTtZ4aHg" genericsValue="Node, Activation" base_Element="_ooSX0LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_ooWCMLhLEe2uyMDTtZ4aHg" base_Element="_ooVbILhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_ooWpQLhLEe2uyMDTtZ4aHg" base_Element="_ooWCMbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_ooXQULhLEe2uyMDTtZ4aHg" base_Element="_ooWpQbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_ooX3YLhLEe2uyMDTtZ4aHg" base_Element="_ooXQUbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_ooYecLhLEe2uyMDTtZ4aHg" base_Element="_ooX3YbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_ooZFgLhLEe2uyMDTtZ4aHg" base_Element="_ooYecbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_ooZskLhLEe2uyMDTtZ4aHg" base_Element="_ooZFgbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_ooaToLhLEe2uyMDTtZ4aHg" base_Element="_ooZskbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_oobhwLhLEe2uyMDTtZ4aHg" base_Element="_ooa6srhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oocI0LhLEe2uyMDTtZ4aHg" base_Element="_oobhwbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oocI0bhLEe2uyMDTtZ4aHg" base_Element="_oobhwbhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oocI0rhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_oocv4LhLEe2uyMDTtZ4aHg" base_Element="_oocI07hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oocv47hLEe2uyMDTtZ4aHg" base_Element="_oocv4bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oodW8LhLEe2uyMDTtZ4aHg" base_Element="_oocv4bhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oodW8bhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_oodW87hLEe2uyMDTtZ4aHg" base_Element="_oodW8rhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ood-AbhLEe2uyMDTtZ4aHg" base_Element="_oodW9LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_ood-ArhLEe2uyMDTtZ4aHg" base_Element="_oodW9LhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_ood-A7hLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ooelEbhLEe2uyMDTtZ4aHg" base_Element="_ooelELhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oofMILhLEe2uyMDTtZ4aHg" base_Element="_ooelErhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oofMIbhLEe2uyMDTtZ4aHg" base_Element="_ooelErhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oofMIrhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_oofzMLhLEe2uyMDTtZ4aHg" base_Element="_oofMI7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oogaQrhLEe2uyMDTtZ4aHg" base_Element="_oogaQLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oohBULhLEe2uyMDTtZ4aHg" base_Element="_oogaQLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oohBUbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_oohoYLhLEe2uyMDTtZ4aHg" base_Element="_oohBUrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oohoY7hLEe2uyMDTtZ4aHg" base_Element="_oohoYbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oohoZLhLEe2uyMDTtZ4aHg" base_Element="_oohoYbhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_ooiPcLhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_oojdkLhLEe2uyMDTtZ4aHg" base_Element="_ooi2gLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_ookEoLhLEe2uyMDTtZ4aHg" base_Element="_oojdkbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_ookrsLhLEe2uyMDTtZ4aHg" base_Element="_ookEobhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_oolSwLhLEe2uyMDTtZ4aHg" base_Element="_ookrsbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_ool50LhLEe2uyMDTtZ4aHg" base_Element="_oolSwbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_oomg4LhLEe2uyMDTtZ4aHg" base_Element="_ool50bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_oooWELhLEe2uyMDTtZ4aHg" base_Element="_oonH8LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_oooWErhLEe2uyMDTtZ4aHg" base_Element="_oooWEbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oorZYLhLEe2uyMDTtZ4aHg" genericsValue="String" base_Element="_ooqyULhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_oosAcLhLEe2uyMDTtZ4aHg" base_Element="_oorZYbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ooxgALhLEe2uyMDTtZ4aHg" base_Element="_oow48LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_ooxgAbhLEe2uyMDTtZ4aHg" base_Element="_oow48LhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_ooxgArhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oozVMLhLEe2uyMDTtZ4aHg" genericsValue="String, Node" base_Element="_ooyuILhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_oo1KYbhLEe2uyMDTtZ4aHg" base_Element="_oo1KYLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oo6C4LhLEe2uyMDTtZ4aHg" base_Element="_oo5b1bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oo6C4bhLEe2uyMDTtZ4aHg" base_Element="_oo5b1bhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oo6C4rhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oo74ELhLEe2uyMDTtZ4aHg" genericsValue="ScheduleTime" base_Element="_oo6p87hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oo9tQ7hLEe2uyMDTtZ4aHg" base_Element="_oo9tQLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oo9tRLhLEe2uyMDTtZ4aHg" base_Element="_oo9tQLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oo9tRbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_oo_icLhLEe2uyMDTtZ4aHg" base_Element="_oo-7YLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_oo_icrhLEe2uyMDTtZ4aHg" base_Element="_oo_icbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_opIFULhLEe2uyMDTtZ4aHg" genericsValue="String,InstructionTimeSlot" base_Element="_opHeQLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_opLIoLhLEe2uyMDTtZ4aHg" genericsValue="T" base_Element="_opKhkLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_opMWwbhLEe2uyMDTtZ4aHg" genericsValue="Double" base_Element="_opMWwLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_opNk4LhLEe2uyMDTtZ4aHg" genericsValue="Double,ReliabilityRow" base_Element="_opM90LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_opZLELhLEe2uyMDTtZ4aHg" genericsValue="Activation,Row&lt;Activation>" base_Element="_opYkALhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_opaZMLhLEe2uyMDTtZ4aHg" genericsValue="T" base_Element="_opZyIbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_opbnULhLEe2uyMDTtZ4aHg" base_Element="_opaZMrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_opc1cLhLEe2uyMDTtZ4aHg" base_Element="_opcOYLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_opdcgLhLEe2uyMDTtZ4aHg" base_Element="_opc1cbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oplYULhLEe2uyMDTtZ4aHg" base_Element="_opkxQrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oplYUbhLEe2uyMDTtZ4aHg" base_Element="_opkxQrhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oplYUrhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oplYVbhLEe2uyMDTtZ4aHg" base_Element="_oplYU7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_opl_YLhLEe2uyMDTtZ4aHg" base_Element="_oplYU7hLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_opl_YbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_opl_Y7hLEe2uyMDTtZ4aHg" base_Element="_opl_YrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_opmmcrhLEe2uyMDTtZ4aHg" base_Element="_opmmcLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_opmmc7hLEe2uyMDTtZ4aHg" base_Element="_opmmcLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_opmmdLhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_opnNgbhLEe2uyMDTtZ4aHg" base_Element="_opnNgLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_opn0kLhLEe2uyMDTtZ4aHg" base_Element="_opnNgrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_opn0kbhLEe2uyMDTtZ4aHg" base_Element="_opnNgrhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_opn0krhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_opoboLhLEe2uyMDTtZ4aHg" base_Element="_opn0k7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oppCsLhLEe2uyMDTtZ4aHg" base_Element="_opobobhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oppCsbhLEe2uyMDTtZ4aHg" base_Element="_opobobhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oppCsrhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_opppwLhLEe2uyMDTtZ4aHg" base_Element="_oppCs7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_opppw7hLEe2uyMDTtZ4aHg" base_Element="_opppwbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_opqQ0LhLEe2uyMDTtZ4aHg" base_Element="_opppwbhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_opqQ0bhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_opqQ1LhLEe2uyMDTtZ4aHg" base_Element="_opqQ0rhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_opq34LhLEe2uyMDTtZ4aHg" base_Element="_opqQ0rhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_opq34bhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_opre8LhLEe2uyMDTtZ4aHg" base_Element="_opq34rhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_opre8bhLEe2uyMDTtZ4aHg" base_Element="_opq34rhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_opre8rhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_opsGALhLEe2uyMDTtZ4aHg" base_Element="_opre87hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_opsGAbhLEe2uyMDTtZ4aHg" base_Element="_opre87hLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_opsGArhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_opxlkbhLEe2uyMDTtZ4aHg" base_Element="_opxlkLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_opyMobhLEe2uyMDTtZ4aHg" base_Element="_opyMoLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_opyzsLhLEe2uyMDTtZ4aHg" base_Element="_opyMorhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_opzawLhLEe2uyMDTtZ4aHg" base_Element="_opyzsbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_op0o4rhLEe2uyMDTtZ4aHg" genericsValue="Integer" base_Element="_op0o4LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_op6IcLhLEe2uyMDTtZ4aHg" base_Element="_op5hYLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_op6vgLhLEe2uyMDTtZ4aHg" base_Element="_op6IcbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_op6vgbhLEe2uyMDTtZ4aHg" base_Element="_op6IcbhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_op6vgrhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_op6vhbhLEe2uyMDTtZ4aHg" base_Element="_op6vg7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_op7WkLhLEe2uyMDTtZ4aHg" base_Element="_op6vg7hLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_op7WkbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_op79oLhLEe2uyMDTtZ4aHg" base_Element="_op7WkrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_op79o7hLEe2uyMDTtZ4aHg" base_Element="_op79obhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_op8ksLhLEe2uyMDTtZ4aHg" base_Element="_op79obhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_op8ksbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_op8ks7hLEe2uyMDTtZ4aHg" base_Element="_op8ksrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_op9LwrhLEe2uyMDTtZ4aHg" base_Element="_op9LwLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_op9Lw7hLEe2uyMDTtZ4aHg" base_Element="_op9LwLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_op9LxLhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_op9y0bhLEe2uyMDTtZ4aHg" base_Element="_op9y0LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_op-Z4LhLEe2uyMDTtZ4aHg" base_Element="_op9y0rhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_op-Z4bhLEe2uyMDTtZ4aHg" base_Element="_op9y0rhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_op-Z4rhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_op_A8LhLEe2uyMDTtZ4aHg" base_Element="_op-Z47hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_op_oALhLEe2uyMDTtZ4aHg" base_Element="_op_A8bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_op_oAbhLEe2uyMDTtZ4aHg" base_Element="_op_A8bhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_op_oArhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_oqAPELhLEe2uyMDTtZ4aHg" base_Element="_op_oA7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oqAPE7hLEe2uyMDTtZ4aHg" base_Element="_oqAPEbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oqA2ILhLEe2uyMDTtZ4aHg" base_Element="_oqAPEbhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oqA2IbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_oqCrULhLEe2uyMDTtZ4aHg" base_Element="_oqCEQLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_oqCrUrhLEe2uyMDTtZ4aHg" base_Element="_oqCrUbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_oqDSYLhLEe2uyMDTtZ4aHg" base_Element="_oqCrU7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_oqD5cLhLEe2uyMDTtZ4aHg" base_Element="_oqDSYbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_oqD5crhLEe2uyMDTtZ4aHg" base_Element="_oqD5cbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_oqIK4bhLEe2uyMDTtZ4aHg" base_Element="_oqIK4LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_oqIx8LhLEe2uyMDTtZ4aHg" base_Element="_oqIK4rhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_oqJZALhLEe2uyMDTtZ4aHg" base_Element="_oqIx8bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_oqKnILhLEe2uyMDTtZ4aHg" base_Element="_oqKAELhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_oqLOMLhLEe2uyMDTtZ4aHg" base_Element="_oqKnIbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oqeJILhLEe2uyMDTtZ4aHg" genericsValue="T, E" base_Element="_oqdiELhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_oqfXQLhLEe2uyMDTtZ4aHg" base_Element="_oqewMbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oqf-ULhLEe2uyMDTtZ4aHg" genericsValue="Activation" base_Element="_oqfXQbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oqhMcLhLEe2uyMDTtZ4aHg" genericsValue="Edge" base_Element="_oqglYbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oqiakLhLEe2uyMDTtZ4aHg" genericsValue="String" base_Element="_oqhzgbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oqjBoLhLEe2uyMDTtZ4aHg" genericsValue="String" base_Element="_oqiakrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oqjosLhLEe2uyMDTtZ4aHg" genericsValue="ScheduleTime" base_Element="_oqjBorhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oqld4LhLEe2uyMDTtZ4aHg" genericsValue="String" base_Element="_oqk20LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oqnTELhLEe2uyMDTtZ4aHg" genericsValue="Edge" base_Element="_oqmsArhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oqn6ILhLEe2uyMDTtZ4aHg" genericsValue="String" base_Element="_oqmsA7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oqohMbhLEe2uyMDTtZ4aHg" genericsValue="String" base_Element="_oqohMLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oqpIQ7hLEe2uyMDTtZ4aHg" genericsValue="String" base_Element="_oqpIQbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oqqWYLhLEe2uyMDTtZ4aHg" genericsValue="Activation" base_Element="_oqpvULhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oqrkgLhLEe2uyMDTtZ4aHg" base_Element="_oqq9cLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oqrkgbhLEe2uyMDTtZ4aHg" genericsValue="Node" base_Element="_oqq9cbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oqsLkLhLEe2uyMDTtZ4aHg" base_Element="_oqq9cLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oqsLkbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oqsyoLhLEe2uyMDTtZ4aHg" genericsValue="T" base_Element="_oqsLkrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_oqtZsLhLEe2uyMDTtZ4aHg" base_Element="_oqsyobhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oquAwrhLEe2uyMDTtZ4aHg" base_Element="_oqtZsbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_oquAw7hLEe2uyMDTtZ4aHg" base_Element="_oqtZsbhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_oquAxLhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_oqun0bhLEe2uyMDTtZ4aHg" genericsValue="String" base_Element="_oqun0LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oqv18LhLEe2uyMDTtZ4aHg" genericsValue="Edge" base_Element="_oqvO4LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oqxrILhLEe2uyMDTtZ4aHg" genericsValue="Flow" base_Element="_oqxEELhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oqy5QrhLEe2uyMDTtZ4aHg" genericsValue="Node" base_Element="_oqy5QbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oq0HYLhLEe2uyMDTtZ4aHg" genericsValue="Integer" base_Element="_oqzgUbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_oq2jobhLEe2uyMDTtZ4aHg" base_Element="_oq2joLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_orO-ILhLEe2uyMDTtZ4aHg" genericsValue="T" base_Element="_orOXELhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_orQMQbhLEe2uyMDTtZ4aHg" base_Element="_orO-IbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_orQMQrhLEe2uyMDTtZ4aHg" base_Element="_orO-IbhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_orQMQ7hLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_orQzULhLEe2uyMDTtZ4aHg" genericsValue="T" base_Element="_orQMRLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_orSBc7hLEe2uyMDTtZ4aHg" base_Element="_orRaYLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_orSBdLhLEe2uyMDTtZ4aHg" base_Element="_orRaYLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_orSBdbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_orSogbhLEe2uyMDTtZ4aHg" genericsValue="Node" base_Element="_orSogLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_orVEwLhLEe2uyMDTtZ4aHg" genericsValue="T" base_Element="_orUdsLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_orVr07hLEe2uyMDTtZ4aHg" base_Element="_orVEwbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_orWS4LhLEe2uyMDTtZ4aHg" base_Element="_orVEwbhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_orWS4bhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_orXhArhLEe2uyMDTtZ4aHg" genericsValue="Node" base_Element="_orXhALhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Array xmi:id="_orYIFLhLEe2uyMDTtZ4aHg" base_Element="_orYIELhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_orYvILhLEe2uyMDTtZ4aHg" genericsValue="Node" base_Element="_orYIEbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_orbLYLhLEe2uyMDTtZ4aHg" base_Element="_orZ9QLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_orbycbhLEe2uyMDTtZ4aHg" genericsValue="T" base_Element="_orbycLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ordAkLhLEe2uyMDTtZ4aHg" base_Element="_orcZgLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_ordAkbhLEe2uyMDTtZ4aHg" base_Element="_orcZgLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_ordAkrhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ordnobhLEe2uyMDTtZ4aHg" base_Element="_ordnoLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_orgq8bhLEe2uyMDTtZ4aHg" base_Element="_orgq8LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_orjHMbhLEe2uyMDTtZ4aHg" genericsValue="T" base_Element="_orjHMLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_orjuRLhLEe2uyMDTtZ4aHg" base_Element="_orjuQLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_orkVULhLEe2uyMDTtZ4aHg" base_Element="_orjuQLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_orkVUbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ornYorhLEe2uyMDTtZ4aHg" genericsValue="T" base_Element="_ornYobhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oromwLhLEe2uyMDTtZ4aHg" genericsValue="T" base_Element="_orn_sbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_orp04LhLEe2uyMDTtZ4aHg" genericsValue="T" base_Element="_orpN0bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_orp04bhLEe2uyMDTtZ4aHg" genericsValue="T" base_Element="_orpN0rhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_orsRIbhLEe2uyMDTtZ4aHg" genericsValue="E" base_Element="_orsRILhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_oruGULhLEe2uyMDTtZ4aHg" base_Element="_ortfQLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_orvUcLhLEe2uyMDTtZ4aHg" base_Element="_orutZ7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_orxJorhLEe2uyMDTtZ4aHg" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_orxJoLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_orxJo7hLEe2uyMDTtZ4aHg" base_Element="_orxJoLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_or00ArhLEe2uyMDTtZ4aHg" base_Element="_or0M8LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_or1bELhLEe2uyMDTtZ4aHg" genericsValue="Node" base_Element="_or00ALhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Annotations xmi:id="_or1bEbhLEe2uyMDTtZ4aHg" base_Element="_or0M8LhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_or1bErhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_or7hs7hLEe2uyMDTtZ4aHg" genericsValue="Integer" base_Element="_or66obhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_or-lALhLEe2uyMDTtZ4aHg" base_Element="_or998LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_osMAYLhLEe2uyMDTtZ4aHg" genericsValue="String" base_Element="_osLZUbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_osMncbhLEe2uyMDTtZ4aHg" genericsValue="Edge" base_Element="_osMncLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_osNOgbhLEe2uyMDTtZ4aHg" genericsValue="ScheduleTime" base_Element="_osNOgLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osPqwbhLEe2uyMDTtZ4aHg" base_Element="_osPqwLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osQR0bhLEe2uyMDTtZ4aHg" base_Element="_osQR0LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osQ44LhLEe2uyMDTtZ4aHg" base_Element="_osQR0rhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osSHALhLEe2uyMDTtZ4aHg" base_Element="_osRf8rhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osSHArhLEe2uyMDTtZ4aHg" base_Element="_osSHAbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osTVILhLEe2uyMDTtZ4aHg" base_Element="_osSuErhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osTVIrhLEe2uyMDTtZ4aHg" base_Element="_osTVIbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_osT8MbhLEe2uyMDTtZ4aHg" genericsValue="ChannelSet" base_Element="_osT8MLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osUjQLhLEe2uyMDTtZ4aHg" base_Element="_osT8MLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_osVKU7hLEe2uyMDTtZ4aHg" genericsValue="Edge" base_Element="_osVKUrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osVxYLhLEe2uyMDTtZ4aHg" base_Element="_osVKUrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osWYcLhLEe2uyMDTtZ4aHg" base_Element="_osVxYbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_osW_gLhLEe2uyMDTtZ4aHg" genericsValue="String" base_Element="_osWYcbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osW_gbhLEe2uyMDTtZ4aHg" base_Element="_osWYcbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osXmkbhLEe2uyMDTtZ4aHg" base_Element="_osXmkLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osYNoLhLEe2uyMDTtZ4aHg" base_Element="_osXmkrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osaC0LhLEe2uyMDTtZ4aHg" base_Element="_osZbwLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osap4LhLEe2uyMDTtZ4aHg" base_Element="_osaC0bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osbQ8LhLEe2uyMDTtZ4aHg" base_Element="_osap4bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osbQ8rhLEe2uyMDTtZ4aHg" base_Element="_osbQ8bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osgwgLhLEe2uyMDTtZ4aHg" base_Element="_osgJcbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osjMwrhLEe2uyMDTtZ4aHg" base_Element="_osjMwLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osjz0bhLEe2uyMDTtZ4aHg" base_Element="_osjz0LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oska4LhLEe2uyMDTtZ4aHg" base_Element="_osjz0rhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oslB8LhLEe2uyMDTtZ4aHg" genericsValue="Node" base_Element="_oska4bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oslB8bhLEe2uyMDTtZ4aHg" base_Element="_oska4bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oslpAbhLEe2uyMDTtZ4aHg" genericsValue="Integer" base_Element="_oslpALhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osmQELhLEe2uyMDTtZ4aHg" base_Element="_oslpALhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_osm3ILhLEe2uyMDTtZ4aHg" genericsValue="Edge" base_Element="_osmQEbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osm3IbhLEe2uyMDTtZ4aHg" base_Element="_osmQEbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osneMLhLEe2uyMDTtZ4aHg" base_Element="_osm3IrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osoFQLhLEe2uyMDTtZ4aHg" base_Element="_osneMbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osqhgrhLEe2uyMDTtZ4aHg" base_Element="_osqhgbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osrIkLhLEe2uyMDTtZ4aHg" base_Element="_osqhg7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osrvoLhLEe2uyMDTtZ4aHg" base_Element="_osrIkbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ossWsLhLEe2uyMDTtZ4aHg" base_Element="_osrvobhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ossWsrhLEe2uyMDTtZ4aHg" base_Element="_ossWsbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oss9wbhLEe2uyMDTtZ4aHg" base_Element="_oss9wLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osuL4LhLEe2uyMDTtZ4aHg" base_Element="_ostk0LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osuy8LhLEe2uyMDTtZ4aHg" base_Element="_osuL4bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osuy8rhLEe2uyMDTtZ4aHg" base_Element="_osuy8bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osvaArhLEe2uyMDTtZ4aHg" base_Element="_osvaAbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oswBELhLEe2uyMDTtZ4aHg" base_Element="_osvaBLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oswBE7hLEe2uyMDTtZ4aHg" base_Element="_oswBEbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osxPMLhLEe2uyMDTtZ4aHg" base_Element="_oswoIrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osxPMrhLEe2uyMDTtZ4aHg" base_Element="_osxPMbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osx2QbhLEe2uyMDTtZ4aHg" base_Element="_osx2QLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osydULhLEe2uyMDTtZ4aHg" base_Element="_osx2QrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_osydUrhLEe2uyMDTtZ4aHg" base_Element="_osydUbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oszEYbhLEe2uyMDTtZ4aHg" base_Element="_oszEYLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_oszrcLhLEe2uyMDTtZ4aHg" genericsValue="String, Integer" base_Element="_oszEYrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oszrcbhLEe2uyMDTtZ4aHg" base_Element="_oszEYrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_os05kbhLEe2uyMDTtZ4aHg" base_Element="_os05kLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_os1goLhLEe2uyMDTtZ4aHg" base_Element="_os05krhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_os2uwLhLEe2uyMDTtZ4aHg" genericsValue="Edge" base_Element="_os2HsbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_os4j8LhLEe2uyMDTtZ4aHg" base_Element="_os3847hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_os4j8rhLEe2uyMDTtZ4aHg" base_Element="_os4j8bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_os5LBLhLEe2uyMDTtZ4aHg" base_Element="_os5LALhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_os5yE7hLEe2uyMDTtZ4aHg" base_Element="_os5LBbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_os6ZILhLEe2uyMDTtZ4aHg" base_Element="_os5yFLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_os6ZIrhLEe2uyMDTtZ4aHg" genericsValue="Activation" base_Element="_os6ZIbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_os7AMLhLEe2uyMDTtZ4aHg" base_Element="_os6ZIbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_os7AMrhLEe2uyMDTtZ4aHg" genericsValue="String, Integer" base_Element="_os7AMbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_os7nQLhLEe2uyMDTtZ4aHg" base_Element="_os7AMbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_os7nQrhLEe2uyMDTtZ4aHg" base_Element="_os7nQbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_os9ccbhLEe2uyMDTtZ4aHg" base_Element="_os9ccLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_os-DgLhLEe2uyMDTtZ4aHg" base_Element="_os9ccrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_os-DgrhLEe2uyMDTtZ4aHg" base_Element="_os-DgbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_os-qkLhLEe2uyMDTtZ4aHg" base_Element="_os-Dg7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_os-qkrhLEe2uyMDTtZ4aHg" base_Element="_os-qkbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_os_RoLhLEe2uyMDTtZ4aHg" base_Element="_os-qk7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_os_RorhLEe2uyMDTtZ4aHg" base_Element="_os_RobhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_os_4sLhLEe2uyMDTtZ4aHg" base_Element="_os_Ro7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otAfwLhLEe2uyMDTtZ4aHg" base_Element="_os_4sbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otAfwrhLEe2uyMDTtZ4aHg" base_Element="_otAfwbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otBG0bhLEe2uyMDTtZ4aHg" base_Element="_otBG0LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otBt4LhLEe2uyMDTtZ4aHg" base_Element="_otBG0rhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otBt4rhLEe2uyMDTtZ4aHg" base_Element="_otBt4bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otEKILhLEe2uyMDTtZ4aHg" base_Element="_otDjFLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otEKIrhLEe2uyMDTtZ4aHg" base_Element="_otEKIbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otExMLhLEe2uyMDTtZ4aHg" base_Element="_otEKI7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otGmYLhLEe2uyMDTtZ4aHg" base_Element="_otF_VLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otGmYrhLEe2uyMDTtZ4aHg" base_Element="_otGmYbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otHNcrhLEe2uyMDTtZ4aHg" base_Element="_otHNcbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otHNdLhLEe2uyMDTtZ4aHg" base_Element="_otHNc7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otJCoLhLEe2uyMDTtZ4aHg" base_Element="_otIbkrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otJCorhLEe2uyMDTtZ4aHg" base_Element="_otJCobhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otJpsLhLEe2uyMDTtZ4aHg" base_Element="_otJCo7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otJpsrhLEe2uyMDTtZ4aHg" base_Element="_otJpsbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otKQwLhLEe2uyMDTtZ4aHg" base_Element="_otJps7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otKQwrhLEe2uyMDTtZ4aHg" base_Element="_otKQwbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otK30LhLEe2uyMDTtZ4aHg" base_Element="_otKQw7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otK30rhLEe2uyMDTtZ4aHg" base_Element="_otK30bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otNUEbhLEe2uyMDTtZ4aHg" base_Element="_otNUELhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otN7ILhLEe2uyMDTtZ4aHg" base_Element="_otNUErhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otN7IrhLEe2uyMDTtZ4aHg" base_Element="_otN7IbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otOiMLhLEe2uyMDTtZ4aHg" base_Element="_otN7I7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otOiMrhLEe2uyMDTtZ4aHg" base_Element="_otOiMbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otPJQLhLEe2uyMDTtZ4aHg" base_Element="_otOiM7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otPJQ7hLEe2uyMDTtZ4aHg" base_Element="_otPJQbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otPwUbhLEe2uyMDTtZ4aHg" base_Element="_otPJRLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otQXYLhLEe2uyMDTtZ4aHg" base_Element="_otPwUrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otQXYrhLEe2uyMDTtZ4aHg" base_Element="_otQXYbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otRlgLhLEe2uyMDTtZ4aHg" base_Element="_otQ-cLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otSMkLhLEe2uyMDTtZ4aHg" base_Element="_otRlgbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otSMkrhLEe2uyMDTtZ4aHg" base_Element="_otSMkbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Array xmi:id="_otTasbhLEe2uyMDTtZ4aHg" dimensions="2" base_Element="_otSzorhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otTasrhLEe2uyMDTtZ4aHg" base_Element="_otSzorhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otUo0bhLEe2uyMDTtZ4aHg" base_Element="_otUo0LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otVP4LhLEe2uyMDTtZ4aHg" base_Element="_otUo0rhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otWeAbhLEe2uyMDTtZ4aHg" base_Element="_otWeALhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otXFELhLEe2uyMDTtZ4aHg" base_Element="_otWeArhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otXFErhLEe2uyMDTtZ4aHg" base_Element="_otXFEbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otXsIbhLEe2uyMDTtZ4aHg" base_Element="_otXsILhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otYTMbhLEe2uyMDTtZ4aHg" base_Element="_otYTMLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otYTM7hLEe2uyMDTtZ4aHg" base_Element="_otYTMrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otY6QbhLEe2uyMDTtZ4aHg" base_Element="_otY6QLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otY6Q7hLEe2uyMDTtZ4aHg" base_Element="_otY6QrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otZhULhLEe2uyMDTtZ4aHg" base_Element="_otY6RLhLEe2uyMDTtZ4aHg">
    <associatedElement xmi:type="uml:Operation" xmi:id="_otaIYLhLEe2uyMDTtZ4aHg" name="getNumChannels" method="_ovHYk7hLEe2uyMDTtZ4aHg">
      <ownedParameter xmi:id="_otaIYbhLEe2uyMDTtZ4aHg" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_otavcLhLEe2uyMDTtZ4aHg" base_Element="_otaIYLhLEe2uyMDTtZ4aHg">
    <annotations xmi:id="_otavcbhLEe2uyMDTtZ4aHg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otavdLhLEe2uyMDTtZ4aHg" base_Element="_otavcrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otbWgbhLEe2uyMDTtZ4aHg" base_Element="_otavdbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otdLsrhLEe2uyMDTtZ4aHg" base_Element="_otdLsLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otdywrhLEe2uyMDTtZ4aHg" base_Element="_otdywLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_oteZ0rhLEe2uyMDTtZ4aHg" base_Element="_oteZ0bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_otfA4bhLEe2uyMDTtZ4aHg" genericsValue="String" base_Element="_otfA4LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_otfn8bhLEe2uyMDTtZ4aHg" genericsValue="String" base_Element="_otfn8LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otirQrhLEe2uyMDTtZ4aHg" base_Element="_otirQLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otjSUbhLEe2uyMDTtZ4aHg" base_Element="_otjSULhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_otj5YLhLEe2uyMDTtZ4aHg" genericsValue="InstructionParameters" base_Element="_otjSUrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otj5YbhLEe2uyMDTtZ4aHg" base_Element="_otjSUrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otkgcLhLEe2uyMDTtZ4aHg" base_Element="_otj5YrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otm8s7hLEe2uyMDTtZ4aHg" base_Element="_otm8srhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otnjwLhLEe2uyMDTtZ4aHg" base_Element="_otm8tLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otoK0LhLEe2uyMDTtZ4aHg" base_Element="_otnjwbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otoK0rhLEe2uyMDTtZ4aHg" base_Element="_otoK0bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otoK1LhLEe2uyMDTtZ4aHg" base_Element="_otoK07hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otox4bhLEe2uyMDTtZ4aHg" base_Element="_otox4LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otox47hLEe2uyMDTtZ4aHg" base_Element="_otox4rhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otpY8LhLEe2uyMDTtZ4aHg" base_Element="_otox5LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otpY8rhLEe2uyMDTtZ4aHg" base_Element="_otpY8bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otpY9LhLEe2uyMDTtZ4aHg" base_Element="_otpY87hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otqAAbhLEe2uyMDTtZ4aHg" base_Element="_otqAALhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otqAA7hLEe2uyMDTtZ4aHg" base_Element="_otqAArhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otqnEbhLEe2uyMDTtZ4aHg" base_Element="_otqnELhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otrOILhLEe2uyMDTtZ4aHg" base_Element="_otqnErhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otrOI7hLEe2uyMDTtZ4aHg" base_Element="_otrOIbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otr1MLhLEe2uyMDTtZ4aHg" base_Element="_otrOJLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otr1MrhLEe2uyMDTtZ4aHg" base_Element="_otr1MbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otscQLhLEe2uyMDTtZ4aHg" base_Element="_otr1M7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otuRcLhLEe2uyMDTtZ4aHg" base_Element="_ottqZ7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otu4gbhLEe2uyMDTtZ4aHg" base_Element="_otu4gLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otu4g7hLEe2uyMDTtZ4aHg" base_Element="_otu4grhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otvfkbhLEe2uyMDTtZ4aHg" base_Element="_otvfkLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_otwtsLhLEe2uyMDTtZ4aHg" genericsValue="Integer" base_Element="_otwGo7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_otxUwLhLEe2uyMDTtZ4aHg" base_Element="_otwGo7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Generics xmi:id="_otx70LhLEe2uyMDTtZ4aHg" genericsValue="SchedulableObject" base_Element="_otxUwbhLEe2uyMDTtZ4aHg"/>
  <uml:OpaqueBehavior xmi:id="_ovHYk7hLEe2uyMDTtZ4aHg" name="getNumChannels" specification="_otaIYLhLEe2uyMDTtZ4aHg">
    <ownedParameter xmi:id="_ovHYlLhLEe2uyMDTtZ4aHg" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_owFo8LhLEe2uyMDTtZ4aHg" base_Element="_owFB4LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owGQALhLEe2uyMDTtZ4aHg" base_Element="_owFo8bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owG3ELhLEe2uyMDTtZ4aHg" base_Element="_owGQAbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owHeILhLEe2uyMDTtZ4aHg" base_Element="_owG3EbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owIFMrhLEe2uyMDTtZ4aHg" base_Element="_owIFMLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owIsQrhLEe2uyMDTtZ4aHg" base_Element="_owIsQLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owJTULhLEe2uyMDTtZ4aHg" base_Element="_owIsQ7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owJ6YLhLEe2uyMDTtZ4aHg" base_Element="_owJTUbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owKhcLhLEe2uyMDTtZ4aHg" base_Element="_owJ6YbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owKhc7hLEe2uyMDTtZ4aHg" base_Element="_owKhcbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owLIgrhLEe2uyMDTtZ4aHg" base_Element="_owLIgLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owLvkrhLEe2uyMDTtZ4aHg" base_Element="_owLvkLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owMWorhLEe2uyMDTtZ4aHg" base_Element="_owMWoLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owM9srhLEe2uyMDTtZ4aHg" base_Element="_owM9sLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owNkwLhLEe2uyMDTtZ4aHg" base_Element="_owM9s7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owOL0LhLEe2uyMDTtZ4aHg" base_Element="_owNkwbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owOy4LhLEe2uyMDTtZ4aHg" base_Element="_owOL0bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owOy47hLEe2uyMDTtZ4aHg" base_Element="_owOy4bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owPZ8LhLEe2uyMDTtZ4aHg" base_Element="_owOy5LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owPZ87hLEe2uyMDTtZ4aHg" base_Element="_owPZ8bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owQBArhLEe2uyMDTtZ4aHg" base_Element="_owQBALhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owQoELhLEe2uyMDTtZ4aHg" base_Element="_owQBA7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owQoE7hLEe2uyMDTtZ4aHg" base_Element="_owQoEbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owRPIrhLEe2uyMDTtZ4aHg" base_Element="_owRPILhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owR2MLhLEe2uyMDTtZ4aHg" base_Element="_owRPI7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owSdQbhLEe2uyMDTtZ4aHg" base_Element="_owR2MbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owTEULhLEe2uyMDTtZ4aHg" base_Element="_owSdQrhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owTrYLhLEe2uyMDTtZ4aHg" base_Element="_owTEUbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owUScLhLEe2uyMDTtZ4aHg" base_Element="_owTrYbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owU5gLhLEe2uyMDTtZ4aHg" base_Element="_owUScbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owVgkLhLEe2uyMDTtZ4aHg" base_Element="_owU5gbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owVgk7hLEe2uyMDTtZ4aHg" base_Element="_owVgkbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owWHoLhLEe2uyMDTtZ4aHg" base_Element="_owVglLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owWusLhLEe2uyMDTtZ4aHg" base_Element="_owWHobhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owWus7hLEe2uyMDTtZ4aHg" base_Element="_owWusbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owXVwLhLEe2uyMDTtZ4aHg" base_Element="_owWutLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owXVw7hLEe2uyMDTtZ4aHg" base_Element="_owXVwbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owX80rhLEe2uyMDTtZ4aHg" base_Element="_owX80LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owYj4LhLEe2uyMDTtZ4aHg" base_Element="_owX807hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owYj47hLEe2uyMDTtZ4aHg" base_Element="_owYj4bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owZK8rhLEe2uyMDTtZ4aHg" base_Element="_owZK8LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owZyALhLEe2uyMDTtZ4aHg" base_Element="_owZK87hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owaZELhLEe2uyMDTtZ4aHg" base_Element="_owZyAbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owaZE7hLEe2uyMDTtZ4aHg" base_Element="_owaZEbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owbAILhLEe2uyMDTtZ4aHg" base_Element="_owaZFLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owbnMLhLEe2uyMDTtZ4aHg" base_Element="_owbAIbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owbnM7hLEe2uyMDTtZ4aHg" base_Element="_owbnMbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owcOQrhLEe2uyMDTtZ4aHg" base_Element="_owcOQLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owc1ULhLEe2uyMDTtZ4aHg" base_Element="_owcOQ7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owdcYLhLEe2uyMDTtZ4aHg" base_Element="_owc1UbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owdcY7hLEe2uyMDTtZ4aHg" base_Element="_owdcYbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_oweDcLhLEe2uyMDTtZ4aHg" base_Element="_owdcZLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_oweDc7hLEe2uyMDTtZ4aHg" base_Element="_oweDcbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_oweqgrhLEe2uyMDTtZ4aHg" base_Element="_oweqgLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owfRkLhLEe2uyMDTtZ4aHg" base_Element="_oweqg7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owfRk7hLEe2uyMDTtZ4aHg" base_Element="_owfRkbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owf4orhLEe2uyMDTtZ4aHg" base_Element="_owf4oLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owgfsLhLEe2uyMDTtZ4aHg" base_Element="_owf4o7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owgfs7hLEe2uyMDTtZ4aHg" base_Element="_owgfsbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owhGwrhLEe2uyMDTtZ4aHg" base_Element="_owhGwLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owht0LhLEe2uyMDTtZ4aHg" base_Element="_owhGw7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owht07hLEe2uyMDTtZ4aHg" base_Element="_owht0bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owiU4rhLEe2uyMDTtZ4aHg" base_Element="_owiU4LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owi78LhLEe2uyMDTtZ4aHg" base_Element="_owiU47hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owi787hLEe2uyMDTtZ4aHg" base_Element="_owi78bhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owjjALhLEe2uyMDTtZ4aHg" base_Element="_owi79LhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owkKELhLEe2uyMDTtZ4aHg" base_Element="_owjjAbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owkKE7hLEe2uyMDTtZ4aHg" base_Element="_owkKEbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owlYMLhLEe2uyMDTtZ4aHg" base_Element="_owkxILhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owlYM7hLEe2uyMDTtZ4aHg" base_Element="_owlYMbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owl_QrhLEe2uyMDTtZ4aHg" base_Element="_owl_QLhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owmmULhLEe2uyMDTtZ4aHg" base_Element="_owl_Q7hLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Reference xmi:id="_owmmU7hLEe2uyMDTtZ4aHg" base_Element="_owmmUbhLEe2uyMDTtZ4aHg"/>
  <UMLLabProfile:Patch xmi:id="_qTt-4LhLEe2uyMDTtZ4aHg" base_Element="_oPrqkLhLEe2uyMDTtZ4aHg" patchText="@@ -351,26 +351,24 @@&#xA; um EdgeState&#xA;-()&#xA;  %7B%0D%0A%09%09RELEAS&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_qTxCMLhLEe2uyMDTtZ4aHg" base_Element="_oQs-QLhLEe2uyMDTtZ4aHg" patchText="@@ -254,22 +254,25 @@&#xA; MISS%22;%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_qTyQULhLEe2uyMDTtZ4aHg" base_Element="_oS3hcLhLEe2uyMDTtZ4aHg" patchText="@@ -113,18 +113,16 @@&#xA; eChoices&#xA;-()&#xA;  %7B%0D%0A%09   &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_qTyQUbhLEe2uyMDTtZ4aHg" base_Element="_oTDusLhLEe2uyMDTtZ4aHg" patchText="@@ -145,26 +145,24 @@&#xA; ystemChoices&#xA;-()&#xA;  %7B%0D%0A    SOUR&#xA;@@ -284,18 +284,16 @@&#xA; dChoices&#xA;-()&#xA;  %7B%0D%0A    &#xA;" conflicting="false"/>
</xmi:XMI>
