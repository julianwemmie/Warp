<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_H0IWcLkVEe26eKBxVz0OTQ" name="WorkLoad">
    <eAnnotations xmi:id="_H77nkLkVEe26eKBxVz0OTQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_H78OoLkVEe26eKBxVz0OTQ" source="codegen">
        <details xmi:id="_H78OobkVEe26eKBxVz0OTQ" key="codegenDirectory" value="/cs2820-spring23/src"/>
        <details xmi:id="_Khc4ULkVEe26eKBxVz0OTQ" key="AssociatedSourceCode" value="/cs2820-spring23/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Activations.java;3305092594/1;/cs2820-spring23/src/edu/uiowa/cs/warp/BasicPoset.java;3238489715/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ChannelAnalysis.java;1217720653/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ChannelVisualization.java;2873127052/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Channels.java;3701064188/1;/cs2820-spring23/src/edu/uiowa/cs/warp/CodeFragment.java;1941462046/1;/cs2820-spring23/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820-spring23/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ConnectivityPoset.java;3754377617/1;/cs2820-spring23/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Description.java;2596849957/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Edge.java;1242144003/1;/cs2820-spring23/src/edu/uiowa/cs/warp/FileManager.java;1791012323/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Flow.java;1068535148/1;/cs2820-spring23/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820-spring23/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820-spring23/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820-spring23/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820-spring23/src/edu/uiowa/cs/warp/GuiVisualization.java;654882569/1;/cs2820-spring23/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820-spring23/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820-spring23/src/edu/uiowa/cs/warp/LatencyAnalysis.java;2064230864/1;/cs2820-spring23/src/edu/uiowa/cs/warp/LatencyVisualization.java;2426998793/1;/cs2820-spring23/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820-spring23/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Node.java;1243472081/1;/cs2820-spring23/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/cs2820-spring23/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820-spring23/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820-spring23/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;/cs2820-spring23/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820-spring23/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WorkLoadListener.java;195958787/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ProgramVisualization.java;108384050/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;3247324826/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityParameters.java;1976749484/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;4166646452/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Row.java;3413533457/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WorkLoadDescription.java;3097834434/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SystemFactory.java;4134708055/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/cs2820-spring23/src/edu/uiowa/cs/warp/VisualizationFactory.java;1134295780/1;/cs2820-spring23/src/edu/uiowa/cs/warp/VisualizationImplementation.java;1783231272/1;/cs2820-spring23/src/edu/uiowa/cs/warp/VisualizationObject.java;1022989847/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WarpSystem.java;1603794739/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WarpInterface.java;2926400465/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Warp.java;2175298915/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WorkLoad.java;3852900159/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Program.java;765069261/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WorkLoadTest.java;250494534/1;"/>
      </contents>
      <contents xmi:type="ecore:EAnnotation" xmi:id="_-03B0MqNEe2esKyal-zizw" source="preferences">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_-03o4MqNEe2esKyal-zizw" source="com.yattasolutions.codegen.reverse">
          <details xmi:id="_-04P8MqNEe2esKyal-zizw" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerNewFiles" value="true"/>
          <details xmi:id="_-043AMqNEe2esKyal-zizw" key="com.yattasolutions.codegen.reverse.roundtrip.RemoveDeletedFiles" value="true"/>
          <details xmi:id="_-05eEMqNEe2esKyal-zizw" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerChangedFiles" value="true"/>
        </contents>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_I6KxcLkVEe26eKBxVz0OTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_I6LYgLkVEe26eKBxVz0OTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_I6LYgbkVEe26eKBxVz0OTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_I6LYgrkVEe26eKBxVz0OTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_I6LYg7kVEe26eKBxVz0OTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_I6LYhLkVEe26eKBxVz0OTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_I6LYhbkVEe26eKBxVz0OTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_I6LYhrkVEe26eKBxVz0OTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_I6L_kLkVEe26eKBxVz0OTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_I4yRYLkVEe26eKBxVz0OTQ" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_I4y4cLkVEe26eKBxVz0OTQ" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_I4y4cbkVEe26eKBxVz0OTQ" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_I43w8LkVEe26eKBxVz0OTQ" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_I6aCALkVEe26eKBxVz0OTQ" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_JZ-58LkVEe26eKBxVz0OTQ" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_I7Sy0LkVEe26eKBxVz0OTQ" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_JaxkIbkVEe26eKBxVz0OTQ" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_I7V2ILkVEe26eKBxVz0OTQ" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_Ja0AYLkVEe26eKBxVz0OTQ" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_Ja0ncbkVEe26eKBxVz0OTQ" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_I-dbkLkVEe26eKBxVz0OTQ" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_JbxpsLkVEe26eKBxVz0OTQ" general="_JY5U0LkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jc_KoLkVEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Jc_KobkVEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jeip0LkVEe26eKBxVz0OTQ" name="AbstractMap" specification="_I-iUELkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jeip0bkVEe26eKBxVz0OTQ" type="_I-dbkLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_I-iUELkVEe26eKBxVz0OTQ" name="AbstractMap" method="_Jeip0LkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_I-i7ILkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_I-i7IbkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_I-i7IrkVEe26eKBxVz0OTQ" type="_I-dbkLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_I-kwULkVEe26eKBxVz0OTQ" name="Activation">
              <generalization xmi:id="_JZGJIbkVEe26eKBxVz0OTQ" general="_JEoVALkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jc_xsLkVEe26eKBxVz0OTQ" name="coordinators" type="_JY7KALkVEe26eKBxVz0OTQ" isReadOnly="true" association="_JgFh8LkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdAYwLkVEe26eKBxVz0OTQ" name="edges" type="_JY7KALkVEe26eKBxVz0OTQ" isReadOnly="true" association="_JgGJAbkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdAYwrkVEe26eKBxVz0OTQ" name="additionalScheduleTimes" type="_JY7KALkVEe26eKBxVz0OTQ" isReadOnly="true" association="_JgGwEbkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdA_0bkVEe26eKBxVz0OTQ" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdBm4LkVEe26eKBxVz0OTQ" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_Jbze4bkVEe26eKBxVz0OTQ" client="_I-kwULkVEe26eKBxVz0OTQ" supplier="_Jby30bkVEe26eKBxVz0OTQ" contract="_Jby30bkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JejQ4LkVEe26eKBxVz0OTQ" name="Activation" specification="_I-nMkLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JejQ4bkVEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JejQ4rkVEe26eKBxVz0OTQ" type="_I-kwULkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JejQ47kVEe26eKBxVz0OTQ" name="Activation" specification="_JY-NUbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JejQ5LkVEe26eKBxVz0OTQ" name="elem" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JejQ5bkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JejQ5rkVEe26eKBxVz0OTQ" type="_I-kwULkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JejQ57kVEe26eKBxVz0OTQ" name="clone" specification="_I-oasLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JejQ6LkVEe26eKBxVz0OTQ" type="_I-kwULkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jej38LkVEe26eKBxVz0OTQ" name="getEdgesByReleaseTime" specification="_I-reALkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jej38bkVEe26eKBxVz0OTQ" type="_JCV2ALkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jej38rkVEe26eKBxVz0OTQ" name="getEdgesByLatestReleaseTime" specification="_I-ssILkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jej387kVEe26eKBxVz0OTQ" type="_JCV2ALkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jej39LkVEe26eKBxVz0OTQ" name="getEdgesByPeriod" specification="_I-uhULkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jej39bkVEe26eKBxVz0OTQ" type="_JCV2ALkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jej39rkVEe26eKBxVz0OTQ" name="getEdgesByDeadline" specification="_I-vvcbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jej397kVEe26eKBxVz0OTQ" type="_JCV2ALkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jej3-LkVEe26eKBxVz0OTQ" name="getEdgesByPriority" specification="_I-yLsbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jej3-bkVEe26eKBxVz0OTQ" type="_JCV2ALkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jej3-rkVEe26eKBxVz0OTQ" name="addEdges" specification="_Jb0tALkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jej3-7kVEe26eKBxVz0OTQ" name="edges" type="_JY7KALkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JekfALkVEe26eKBxVz0OTQ" name="addEdge" specification="_JZACgbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JekfAbkVEe26eKBxVz0OTQ" name="edge" type="_JANvELkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JekfArkVEe26eKBxVz0OTQ" name="increaseEdgePhases" specification="_I-1PALkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JekfA7kVEe26eKBxVz0OTQ" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JekfBLkVEe26eKBxVz0OTQ" name="updatePriorityAndRelease" specification="_I-1PArkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JekfBbkVEe26eKBxVz0OTQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JekfBrkVEe26eKBxVz0OTQ" name="addConflict" specification="_I-2dILkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JekfB7kVEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JekfCLkVEe26eKBxVz0OTQ" name="addConflicts" specification="_Jb17IbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JekfCbkVEe26eKBxVz0OTQ" name="conflicts" type="_JY8_MbkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JelGELkVEe26eKBxVz0OTQ" name="addCoordinator" specification="_I-3EMLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JelGEbkVEe26eKBxVz0OTQ" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JelGErkVEe26eKBxVz0OTQ" name="addCoordinators" specification="_Jb2iMbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JelGE7kVEe26eKBxVz0OTQ" name="coordinators" type="_JY7KALkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JelGFLkVEe26eKBxVz0OTQ" name="addScheduleTimes" specification="_Jb3JQbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JelGFbkVEe26eKBxVz0OTQ" name="scheduleTime" type="_JY7KALkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JelGFrkVEe26eKBxVz0OTQ" name="getNextScheduleTime" specification="_I-3rQLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JelGF7kVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JelGGLkVEe26eKBxVz0OTQ" type="_JC9hFbkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JelGGbkVEe26eKBxVz0OTQ" name="getMatchingEndTime" specification="_I-45YLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JelGGrkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JelGG7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeltILkVEe26eKBxVz0OTQ" name="getNextStartTime" specification="_I-5gcLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeltIbkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JeltIrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeltI7kVEe26eKBxVz0OTQ" name="getNextEndTime" specification="_I-6ukLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeltJLkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JeltJbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeltJrkVEe26eKBxVz0OTQ" name="getNumEdges" specification="_I-6uk7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeltJ7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeltKLkVEe26eKBxVz0OTQ" name="compareTo" specification="_JZBQoLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeltKbkVEe26eKBxVz0OTQ" name="obj" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JeltKrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeltK7kVEe26eKBxVz0OTQ" name="conflictExists" specification="_JZB3srkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeltLLkVEe26eKBxVz0OTQ" name="obj" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JeltLbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JemUMLkVEe26eKBxVz0OTQ" name="canCombine" specification="_JZCewrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JemUMbkVEe26eKBxVz0OTQ" name="a2" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JemUMrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JemUM7kVEe26eKBxVz0OTQ" name="getDelta" specification="_I-8jwLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JemUNLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JemUNbkVEe26eKBxVz0OTQ" name="getExecutionDuration" specification="_I-9K0bkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JemUNrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JemUN7kVEe26eKBxVz0OTQ" name="getCombinedExecutionDuration" specification="_JZDF0LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JemUOLkVEe26eKBxVz0OTQ" name="a2" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JemUObkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JemUOrkVEe26eKBxVz0OTQ" name="printAll" specification="_I-9x4LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JemUO7kVEe26eKBxVz0OTQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jem7QLkVEe26eKBxVz0OTQ" name="printAll" specification="_I--Y8LkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jem7QbkVEe26eKBxVz0OTQ" name="printEdges" specification="_JZDs4LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jem7QrkVEe26eKBxVz0OTQ" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jem7Q7kVEe26eKBxVz0OTQ" name="edges" type="_JCUA0LkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jem7RLkVEe26eKBxVz0OTQ" name="printEdges" specification="_JZE7ALkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jem7RbkVEe26eKBxVz0OTQ" name="edges" type="_JCUA0LkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_I-nMkLkVEe26eKBxVz0OTQ" name="Activation" visibility="package" method="_JejQ4LkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_I-nzoLkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_I-nzobkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_I-nMkbkVEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I-nzorkVEe26eKBxVz0OTQ" type="_I-kwULkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_I-oasLkVEe26eKBxVz0OTQ" name="clone" method="_JejQ57kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JY_bcLkVEe26eKBxVz0OTQ" type="_I-kwULkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_I-reALkVEe26eKBxVz0OTQ" name="getEdgesByReleaseTime" method="_Jej38LkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfgTILkVEe26eKBxVz0OTQ">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_JY_bcbkVEe26eKBxVz0OTQ" type="_JCV2ALkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_I-ssILkVEe26eKBxVz0OTQ" name="getEdgesByLatestReleaseTime" method="_Jej38rkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfgTIbkVEe26eKBxVz0OTQ">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_JY_bcrkVEe26eKBxVz0OTQ" type="_JCV2ALkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_I-uhULkVEe26eKBxVz0OTQ" name="getEdgesByPeriod" method="_Jej39LkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfgTIrkVEe26eKBxVz0OTQ">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_JY_bc7kVEe26eKBxVz0OTQ" type="_JCV2ALkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_I-vvcbkVEe26eKBxVz0OTQ" name="getEdgesByDeadline" method="_Jej39rkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfgTI7kVEe26eKBxVz0OTQ">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_JY_bdLkVEe26eKBxVz0OTQ" type="_JCV2ALkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_I-yLsbkVEe26eKBxVz0OTQ" name="getEdgesByPriority" method="_Jej3-LkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfgTJLkVEe26eKBxVz0OTQ">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_JZACgLkVEe26eKBxVz0OTQ" type="_JCV2ALkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_I-1PALkVEe26eKBxVz0OTQ" name="increaseEdgePhases" method="_JekfArkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfgTJbkVEe26eKBxVz0OTQ">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_I-1PAbkVEe26eKBxVz0OTQ" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_I-1PArkVEe26eKBxVz0OTQ" name="updatePriorityAndRelease" method="_JekfBLkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfgTJrkVEe26eKBxVz0OTQ">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_I-12ELkVEe26eKBxVz0OTQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_I-2dILkVEe26eKBxVz0OTQ" name="addConflict" method="_JekfBrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_I-2dIbkVEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_I-3EMLkVEe26eKBxVz0OTQ" name="addCoordinator" method="_JelGELkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_I-3EMbkVEe26eKBxVz0OTQ" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_I-3rQLkVEe26eKBxVz0OTQ" name="getNextScheduleTime" method="_JelGFrkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfgTKLkVEe26eKBxVz0OTQ">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_I-4SULkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JZApkLkVEe26eKBxVz0OTQ" type="_JC9hFbkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_I-45YLkVEe26eKBxVz0OTQ" name="getMatchingEndTime" method="_JelGGbkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfgTKbkVEe26eKBxVz0OTQ">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_I-45YbkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I-45YrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_I-5gcLkVEe26eKBxVz0OTQ" name="getNextStartTime" method="_JeltILkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfgTKrkVEe26eKBxVz0OTQ">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_I-5gcbkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I-6HgLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_I-6ukLkVEe26eKBxVz0OTQ" name="getNextEndTime" method="_JeltI7kVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfgTK7kVEe26eKBxVz0OTQ">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_I-6ukbkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I-6ukrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_I-6uk7kVEe26eKBxVz0OTQ" name="getNumEdges" method="_JeltJrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_I-78sLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_I-8jwLkVEe26eKBxVz0OTQ" name="getDelta" method="_JemUM7kVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfgTLLkVEe26eKBxVz0OTQ">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_I-9K0LkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_I-9K0bkVEe26eKBxVz0OTQ" name="getExecutionDuration" method="_JemUNbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_I-9K0rkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_I-9x4LkVEe26eKBxVz0OTQ" name="printAll" method="_JemUOrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_I-9x4bkVEe26eKBxVz0OTQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_I--Y8LkVEe26eKBxVz0OTQ" name="printAll" method="_Jem7QLkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JY-NUbkVEe26eKBxVz0OTQ" name="Activation" visibility="package" method="_JejQ47kVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JY-0YbkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JY-0YrkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JY-NUrkVEe26eKBxVz0OTQ" name="elem" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JY-0YLkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JY-0Y7kVEe26eKBxVz0OTQ" type="_I-kwULkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JZACgbkVEe26eKBxVz0OTQ" name="addEdge" method="_JekfALkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JZACgrkVEe26eKBxVz0OTQ" name="edge" type="_JANvELkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JZBQoLkVEe26eKBxVz0OTQ" name="compareTo" method="_JeltKLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JZBQobkVEe26eKBxVz0OTQ" name="obj" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JZBQorkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JZB3srkVEe26eKBxVz0OTQ" name="conflictExists" method="_JeltK7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JZCewLkVEe26eKBxVz0OTQ" name="obj" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JZCewbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JZCewrkVEe26eKBxVz0OTQ" name="canCombine" method="_JemUMLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JZCew7kVEe26eKBxVz0OTQ" name="a2" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JZCexLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JZDF0LkVEe26eKBxVz0OTQ" name="getCombinedExecutionDuration" method="_JemUN7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JZDF0bkVEe26eKBxVz0OTQ" name="a2" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JZDF0rkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JZDs4LkVEe26eKBxVz0OTQ" name="printEdges" visibility="private" method="_Jem7QbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JZDs4bkVEe26eKBxVz0OTQ" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JZDs4rkVEe26eKBxVz0OTQ" name="edges" type="_JCUA0LkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JZE7ALkVEe26eKBxVz0OTQ" name="printEdges" visibility="private" method="_Jem7RLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JZE7AbkVEe26eKBxVz0OTQ" name="edges" type="_JCUA0LkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Jb0tALkVEe26eKBxVz0OTQ" name="addEdges" method="_Jej3-rkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jb1UELkVEe26eKBxVz0OTQ" name="edges" type="_JY7KALkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Jb17IbkVEe26eKBxVz0OTQ" name="addConflicts" method="_JekfCLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jb17IrkVEe26eKBxVz0OTQ" name="conflicts" type="_JY8_MbkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Jb2iMbkVEe26eKBxVz0OTQ" name="addCoordinators" method="_JelGErkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jb2iMrkVEe26eKBxVz0OTQ" name="coordinators" type="_JY7KALkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Jb3JQbkVEe26eKBxVz0OTQ" name="addScheduleTimes" method="_JelGFLkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfgTJ7kVEe26eKBxVz0OTQ">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_Jb3JQrkVEe26eKBxVz0OTQ" name="scheduleTime" type="_JY7KALkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_I_J_ILkVEe26eKBxVz0OTQ" name="Activations">
              <generalization xmi:id="_JZIlYLkVEe26eKBxVz0OTQ" general="_I-dbkLkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdC1ALkVEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdC1AbkVEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_I_LNQLkVEe26eKBxVz0OTQ" name="BasicPoset">
              <ownedComment xmi:id="_JfgTLbkVEe26eKBxVz0OTQ">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_JZKakbkVEe26eKBxVz0OTQ" general="_JBxOQLkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeniULkVEe26eKBxVz0OTQ" name="BasicPoset" specification="_JZJzgLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeniUbkVEe26eKBxVz0OTQ" name="workload" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JeniUrkVEe26eKBxVz0OTQ" type="_I_LNQLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JZJzgLkVEe26eKBxVz0OTQ" name="BasicPoset" visibility="package" method="_JeniULkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JZJzgrkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JZJzg7kVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JZJzgbkVEe26eKBxVz0OTQ" name="workload" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JZKakLkVEe26eKBxVz0OTQ" type="_I_LNQLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_I_MbYLkVEe26eKBxVz0OTQ" name="ChannelAnalysis">
              <ownedComment xmi:id="_Jfg6MLkVEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_JdC1ArkVEe26eKBxVz0OTQ" name="program" visibility="private" type="_JE8eELkVEe26eKBxVz0OTQ" association="_JgHXIbkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdDcEbkVEe26eKBxVz0OTQ" name="programTable" visibility="private" type="_JCJBsLkVEe26eKBxVz0OTQ" association="_JgH-MbkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdDcE7kVEe26eKBxVz0OTQ" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeniU7kVEe26eKBxVz0OTQ" name="ChannelAnalysis" specification="_JZLBoLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeniVLkVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JeniVbkVEe26eKBxVz0OTQ" type="_I_MbYLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.program = warp.toProgram();&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeniVrkVEe26eKBxVz0OTQ" name="ChannelAnalysis" specification="_JZLosbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeniV7kVEe26eKBxVz0OTQ" name="program" type="_JE8eELkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JeniWLkVEe26eKBxVz0OTQ" type="_I_MbYLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeniWbkVEe26eKBxVz0OTQ" name="isChannelConflict" specification="_I_O3oLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeniWrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_I_O3oLkVEe26eKBxVz0OTQ" name="isChannelConflict" method="_JeniWbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_I_PesLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JZLBoLkVEe26eKBxVz0OTQ" name="ChannelAnalysis" visibility="package" method="_JeniU7kVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JZLBorkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JZLBo7kVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JZLBobkVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JZLosLkVEe26eKBxVz0OTQ" type="_I_MbYLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JZLosbkVEe26eKBxVz0OTQ" name="ChannelAnalysis" visibility="package" method="_JeniVrkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JZLos7kVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JZLotLkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JZLosrkVEe26eKBxVz0OTQ" name="program" type="_JE8eELkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JZLotbkVEe26eKBxVz0OTQ" type="_I_MbYLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_I_R68LkVEe26eKBxVz0OTQ" name="ChannelVisualization">
              <ownedComment xmi:id="_Jfg6MbkVEe26eKBxVz0OTQ">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_JZM207kVEe26eKBxVz0OTQ" general="_JDWioLkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdEqMLkVEe26eKBxVz0OTQ" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdEqMbkVEe26eKBxVz0OTQ" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdEqMrkVEe26eKBxVz0OTQ" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdEqM7kVEe26eKBxVz0OTQ" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdFRQLkVEe26eKBxVz0OTQ" name="warp" visibility="private" type="_JDxZYLkVEe26eKBxVz0OTQ" association="_JgIlQbkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdFRQrkVEe26eKBxVz0OTQ" name="ca" visibility="private" type="_I_MbYLkVEe26eKBxVz0OTQ" association="_JgJMUbkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeoJYLkVEe26eKBxVz0OTQ" name="ChannelVisualization" specification="_JZMPwLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeoJYbkVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JeoJYrkVEe26eKBxVz0OTQ" type="_I_R68LkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JZMPwLkVEe26eKBxVz0OTQ" name="ChannelVisualization" visibility="package" method="_JeoJYLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JZM20LkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JZM20bkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JZMPwbkVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JZM20rkVEe26eKBxVz0OTQ" type="_I_R68LkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_I_WMYLkVEe26eKBxVz0OTQ" name="Channels">
              <ownedComment xmi:id="_Jfg6MrkVEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_JdGfYLkVEe26eKBxVz0OTQ" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdHGcLkVEe26eKBxVz0OTQ" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdHGcrkVEe26eKBxVz0OTQ" name="channelsAvailable" visibility="package" type="_JY7KALkVEe26eKBxVz0OTQ" association="_JgJzYbkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeowdLkVEe26eKBxVz0OTQ" name="Channels" specification="_I_cTALkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeowdbkVEe26eKBxVz0OTQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JeowdrkVEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jeowd7kVEe26eKBxVz0OTQ" type="_I_WMYLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeoweLkVEe26eKBxVz0OTQ" name="getChannelSet" specification="_I_dhILkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeowebkVEe26eKBxVz0OTQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JeowerkVEe26eKBxVz0OTQ" type="_JY7xEbkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>/* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JepXgLkVEe26eKBxVz0OTQ" name="addNewChannelSet" specification="_I_f9YLkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JepXgbkVEe26eKBxVz0OTQ" name="isEmpty" specification="_I_f9YbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JepXgrkVEe26eKBxVz0OTQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JepXg7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JepXhLkVEe26eKBxVz0OTQ" name="removeChannel" specification="_I_hLgLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JepXhbkVEe26eKBxVz0OTQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JepXhrkVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JepXh7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JepXiLkVEe26eKBxVz0OTQ" name="addChannel" specification="_I_hykLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JepXibkVEe26eKBxVz0OTQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JepXirkVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JepXi7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jep-kLkVEe26eKBxVz0OTQ" name="getNumChannels" specification="_I_kO0LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jep-kbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_I_cTALkVEe26eKBxVz0OTQ" name="Channels" visibility="package" method="_JeowdLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_I_c6ErkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_I_c6E7kVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_I_c6ELkVEe26eKBxVz0OTQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I_c6EbkVEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I_c6FLkVEe26eKBxVz0OTQ" type="_I_WMYLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_I_dhILkVEe26eKBxVz0OTQ" name="getChannelSet" method="_JeoweLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_I_dhIbkVEe26eKBxVz0OTQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jb5lgLkVEe26eKBxVz0OTQ" type="_JY7xEbkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_I_f9YLkVEe26eKBxVz0OTQ" name="addNewChannelSet" method="_JepXgLkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_I_f9YbkVEe26eKBxVz0OTQ" name="isEmpty" method="_JepXgbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_I_gkcLkVEe26eKBxVz0OTQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I_gkcbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_I_hLgLkVEe26eKBxVz0OTQ" name="removeChannel" method="_JepXhLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_I_hLgbkVEe26eKBxVz0OTQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I_hLgrkVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I_hLg7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_I_hykLkVEe26eKBxVz0OTQ" name="addChannel" method="_JepXiLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_I_hykbkVEe26eKBxVz0OTQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I_iZoLkVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I_jnwLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_I_kO0LkVEe26eKBxVz0OTQ" name="getNumChannels" method="_Jep-kLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_I_kO0bkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_I_YBkLkVEe26eKBxVz0OTQ" name="ChannelSet" visibility="private">
                <generalization xmi:id="_Jb4-cLkVEe26eKBxVz0OTQ" general="_JY7xEbkVEe26eKBxVz0OTQ"/>
                <ownedAttribute xmi:id="_JdF4UbkVEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdF4UrkVEe26eKBxVz0OTQ" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeoJY7kVEe26eKBxVz0OTQ" name="ChannelSet" specification="_I_YooLkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JeowcLkVEe26eKBxVz0OTQ" type="_I_YBkLkVEe26eKBxVz0OTQ" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeowcbkVEe26eKBxVz0OTQ" name="ChannelSet" specification="_I_Z2wLkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JeowcrkVEe26eKBxVz0OTQ" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Jeowc7kVEe26eKBxVz0OTQ" type="_I_YBkLkVEe26eKBxVz0OTQ" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_I_YooLkVEe26eKBxVz0OTQ" name="ChannelSet" visibility="private" method="_JeoJY7kVEe26eKBxVz0OTQ">
                  <eAnnotations xmi:id="_I_ZPsLkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_I_ZPsbkVEe26eKBxVz0OTQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_I_ZPsrkVEe26eKBxVz0OTQ" type="_I_YBkLkVEe26eKBxVz0OTQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_I_Z2wLkVEe26eKBxVz0OTQ" name="ChannelSet" visibility="private" method="_JeowcbkVEe26eKBxVz0OTQ">
                  <eAnnotations xmi:id="_I_ad0LkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_I_ad0bkVEe26eKBxVz0OTQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_I_Z2wbkVEe26eKBxVz0OTQ" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_I_ad0rkVEe26eKBxVz0OTQ" type="_I_YBkLkVEe26eKBxVz0OTQ" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_I_ogQLkVEe26eKBxVz0OTQ" name="CodeFragment">
              <ownedAttribute xmi:id="_JdI7oLkVEe26eKBxVz0OTQ" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdI7obkVEe26eKBxVz0OTQ" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdI7orkVEe26eKBxVz0OTQ" name="edges" visibility="package" type="_JY7KALkVEe26eKBxVz0OTQ" association="_JgKacbkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdKJwbkVEe26eKBxVz0OTQ" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdKw0bkVEe26eKBxVz0OTQ" name="codeFragment" visibility="package" type="_JY7KALkVEe26eKBxVz0OTQ" association="_JgLBgLkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdL-8LkVEe26eKBxVz0OTQ" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdMmALkVEe26eKBxVz0OTQ" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jep-krkVEe26eKBxVz0OTQ" name="CodeFragment" specification="_I_q8gLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeqloLkVEe26eKBxVz0OTQ" type="_I_ogQLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeqlobkVEe26eKBxVz0OTQ" name="CodeFragment" specification="_Jb6MkLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeqlorkVEe26eKBxVz0OTQ" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jeqlo7kVEe26eKBxVz0OTQ" name="edges" type="_JY7KALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JeqlpLkVEe26eKBxVz0OTQ" name="coordinators" type="_JY7KALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JeqlpbkVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JeqlprkVEe26eKBxVz0OTQ" type="_I_ogQLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jeqlp7kVEe26eKBxVz0OTQ" name="getCoordinator" specification="_I_sKoLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeqlqLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeqlqbkVEe26eKBxVz0OTQ" name="instructions" specification="_I_sKorkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeqlqrkVEe26eKBxVz0OTQ" type="_JY7KALkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JerMsLkVEe26eKBxVz0OTQ" name="size" specification="_I_t_0bkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JerMsbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JerMsrkVEe26eKBxVz0OTQ" name="generateCodeFragment" specification="_I_t_07kVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JerMs7kVEe26eKBxVz0OTQ" name="getBaseInstruction" specification="_I_um4LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JerMtLkVEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JerMtbkVEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JerMtrkVEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JerMt7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JerMuLkVEe26eKBxVz0OTQ" name="push" specification="_I_vN8rkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JerMubkVEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JerMurkVEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JerMu7kVEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JerMvLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JerMvbkVEe26eKBxVz0OTQ" name="pull" specification="_I_wcELkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JerMvrkVEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JerMv7kVEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JerMwLkVEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JerMwbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JerzwLkVEe26eKBxVz0OTQ" name="ifHas" specification="_I_xDJLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JerzwbkVEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JerzwrkVEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jerzw7kVEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JerzxLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JerzxbkVEe26eKBxVz0OTQ" name="ifNotHas" specification="_I_yRQLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JerzxrkVEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jerzx7kVEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JerzyLkVEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JerzybkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JerzyrkVEe26eKBxVz0OTQ" name="wait" specification="_I_zfYLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jerzy7kVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JerzzLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jesa0LkVEe26eKBxVz0OTQ" name="sleep" specification="_I_0GcbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jesa0bkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jesa0rkVEe26eKBxVz0OTQ" name="reportIfDifferentCoordinators" specification="_Jb8BwbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jesa07kVEe26eKBxVz0OTQ" name="coordinators" type="_JY7KALkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jesa1LkVEe26eKBxVz0OTQ" name="multipleCoordinators" specification="_Jb8o0LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jesa1bkVEe26eKBxVz0OTQ" name="coordinators" type="_JY7KALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jesa1rkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_I_q8gLkVEe26eKBxVz0OTQ" name="CodeFragment" visibility="package" method="_Jep-krkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_I_rjkLkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_I_rjkbkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Jfg6M7kVEe26eKBxVz0OTQ">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_I_rjkrkVEe26eKBxVz0OTQ" type="_I_ogQLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_I_sKoLkVEe26eKBxVz0OTQ" name="getCoordinator" method="_Jeqlp7kVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_Jfg6NbkVEe26eKBxVz0OTQ">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_I_sKobkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_I_sKorkVEe26eKBxVz0OTQ" name="instructions" method="_JeqlqbkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_Jfg6NrkVEe26eKBxVz0OTQ">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_Jb8BwLkVEe26eKBxVz0OTQ" type="_JY7KALkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_I_t_0bkVEe26eKBxVz0OTQ" name="size" method="_JerMsLkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_Jfg6N7kVEe26eKBxVz0OTQ">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_I_t_0rkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_I_t_07kVEe26eKBxVz0OTQ" name="generateCodeFragment" visibility="private" method="_JerMsrkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_I_um4LkVEe26eKBxVz0OTQ" name="getBaseInstruction" visibility="private" method="_JerMs7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_I_um4bkVEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I_um4rkVEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I_vN8LkVEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I_vN8bkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_I_vN8rkVEe26eKBxVz0OTQ" name="push" visibility="private" method="_JerMuLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_I_v1ALkVEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I_v1AbkVEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I_v1ArkVEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I_v1A7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_I_wcELkVEe26eKBxVz0OTQ" name="pull" visibility="private" method="_JerMvbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_I_xDILkVEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I_xDIbkVEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I_xDIrkVEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I_xDI7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_I_xDJLkVEe26eKBxVz0OTQ" name="ifHas" visibility="private" method="_JerzwLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_I_xqMLkVEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I_xqMbkVEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I_xqMrkVEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I_xqM7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_I_yRQLkVEe26eKBxVz0OTQ" name="ifNotHas" visibility="private" method="_JerzxbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_I_yRQbkVEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I_y4ULkVEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I_y4UbkVEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I_y4UrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_I_zfYLkVEe26eKBxVz0OTQ" name="wait" method="_JerzyrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_I_zfYbkVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I_0GcLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_I_0GcbkVEe26eKBxVz0OTQ" name="sleep" isStatic="true" method="_Jesa0LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_I_0GcrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Jb6MkLkVEe26eKBxVz0OTQ" name="CodeFragment" visibility="package" method="_JeqlobkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_Jb6zpLkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Jb6zpbkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Jfg6NLkVEe26eKBxVz0OTQ">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_Jb6zoLkVEe26eKBxVz0OTQ" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jb6zobkVEe26eKBxVz0OTQ" name="edges" type="_JY7KALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jb6zorkVEe26eKBxVz0OTQ" name="coordinators" type="_JY7KALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jb6zo7kVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jb6zprkVEe26eKBxVz0OTQ" type="_I_ogQLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Jb8BwbkVEe26eKBxVz0OTQ" name="reportIfDifferentCoordinators" visibility="private" method="_Jesa0rkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jb8BwrkVEe26eKBxVz0OTQ" name="coordinators" type="_JY7KALkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Jb8o0LkVEe26eKBxVz0OTQ" name="multipleCoordinators" visibility="private" method="_Jesa1LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jb8o0bkVEe26eKBxVz0OTQ" name="coordinators" type="_JY7KALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jb8o0rkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_I_4-8LkVEe26eKBxVz0OTQ" name="CombinedActivation">
              <generalization xmi:id="_JZWAw7kVEe26eKBxVz0OTQ" general="_I-kwULkVEe26eKBxVz0OTQ"/>
              <interfaceRealization xmi:id="_Jb928LkVEe26eKBxVz0OTQ" client="_I_4-8LkVEe26eKBxVz0OTQ" supplier="_Jby30bkVEe26eKBxVz0OTQ" contract="_Jby30bkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JetB4LkVEe26eKBxVz0OTQ" name="CombinedActivation" specification="_I_5mALkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JetB4bkVEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JetB4rkVEe26eKBxVz0OTQ" type="_I_4-8LkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JetB47kVEe26eKBxVz0OTQ" name="CombinedActivation" specification="_JZULkLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JetB5LkVEe26eKBxVz0OTQ" name="elem" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JetB5bkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JetB5rkVEe26eKBxVz0OTQ" type="_I_4-8LkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JetB57kVEe26eKBxVz0OTQ" name="CombinedActivation" specification="_JZUyoLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JetB6LkVEe26eKBxVz0OTQ" name="priorEntry" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JetB6bkVEe26eKBxVz0OTQ" name="next" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JetB6rkVEe26eKBxVz0OTQ" type="_I_4-8LkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jeto8LkVEe26eKBxVz0OTQ" name="canCombine" specification="_JZVZsbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jeto8bkVEe26eKBxVz0OTQ" name="a2" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jeto8rkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_I_5mALkVEe26eKBxVz0OTQ" name="CombinedActivation" visibility="package" method="_JetB4LkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_I_6NELkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_I_6NEbkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_I_5mAbkVEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_I_6NErkVEe26eKBxVz0OTQ" type="_I_4-8LkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JZULkLkVEe26eKBxVz0OTQ" name="CombinedActivation" visibility="package" method="_JetB47kVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JZULk7kVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JZULlLkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JZULkbkVEe26eKBxVz0OTQ" name="elem" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JZULkrkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JZULlbkVEe26eKBxVz0OTQ" type="_I_4-8LkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JZUyoLkVEe26eKBxVz0OTQ" name="CombinedActivation" visibility="package" method="_JetB57kVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JZUyo7kVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JZUypLkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JZUyobkVEe26eKBxVz0OTQ" name="priorEntry" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JZUyorkVEe26eKBxVz0OTQ" name="next" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JZVZsLkVEe26eKBxVz0OTQ" type="_I_4-8LkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JZVZsbkVEe26eKBxVz0OTQ" name="canCombine" method="_Jeto8LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JZVZsrkVEe26eKBxVz0OTQ" name="a2" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JZVZs7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_I_9QYLkVEe26eKBxVz0OTQ" name="CommunicationGraph">
              <ownedComment xmi:id="_Jfg6OLkVEe26eKBxVz0OTQ">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_JZXO6LkVEe26eKBxVz0OTQ" general="_JDWioLkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdN0ILkVEe26eKBxVz0OTQ" name="wfm" visibility="package" type="_JAbxgLkVEe26eKBxVz0OTQ" association="_JgLBg7kVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdObMLkVEe26eKBxVz0OTQ" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdPCQLkVEe26eKBxVz0OTQ" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdPpULkVEe26eKBxVz0OTQ" name="workLoad" visibility="package" type="_JEMQILkVEe26eKBxVz0OTQ" association="_JgLokbkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jeto87kVEe26eKBxVz0OTQ" name="CommunicationGraph" specification="_JZWn0LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jeto9LkVEe26eKBxVz0OTQ" name="fm" type="_JAbxgLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jeto9bkVEe26eKBxVz0OTQ" name="workLoad" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jeto9rkVEe26eKBxVz0OTQ" type="_I_9QYLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeuQALkVEe26eKBxVz0OTQ" name="CommunicationGraph" specification="_JZWn1rkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeuQAbkVEe26eKBxVz0OTQ" name="fm" type="_JAbxgLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JeuQArkVEe26eKBxVz0OTQ" name="workLoad" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JeuQA7kVEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JeuQBLkVEe26eKBxVz0OTQ" type="_I_9QYLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeuQBbkVEe26eKBxVz0OTQ" name="createHeader" specification="_I__FkLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeuQBrkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeuQB7kVEe26eKBxVz0OTQ" name="createFooter" specification="_JAATsrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeuQCLkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeuQCbkVEe26eKBxVz0OTQ" name="visualization" specification="_JACI4LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeuQCrkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jeu3ELkVEe26eKBxVz0OTQ" name="createWarpFileContent" specification="_JADXArkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jeu3EbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_I__FkLkVEe26eKBxVz0OTQ" name="createHeader" method="_JeuQBbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JZXO5bkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JAATsrkVEe26eKBxVz0OTQ" name="createFooter" method="_JeuQB7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JZXO5rkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JACI4LkVEe26eKBxVz0OTQ" name="visualization" method="_JeuQCbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JZXO57kVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JADXArkVEe26eKBxVz0OTQ" name="createWarpFileContent" method="_Jeu3ELkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JAD-ELkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JZWn0LkVEe26eKBxVz0OTQ" name="CommunicationGraph" method="_Jeto87kVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JZWn07kVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JZWn1LkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JZWn0bkVEe26eKBxVz0OTQ" name="fm" type="_JAbxgLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JZWn0rkVEe26eKBxVz0OTQ" name="workLoad" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JZWn1bkVEe26eKBxVz0OTQ" type="_I_9QYLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JZWn1rkVEe26eKBxVz0OTQ" name="CommunicationGraph" method="_JeuQALkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JZXO4rkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JZXO47kVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JZWn17kVEe26eKBxVz0OTQ" name="fm" type="_JAbxgLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JZXO4LkVEe26eKBxVz0OTQ" name="workLoad" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JZXO4bkVEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JZXO5LkVEe26eKBxVz0OTQ" type="_I_9QYLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JAGaULkVEe26eKBxVz0OTQ" name="ConnectivityPoset">
              <ownedComment xmi:id="_Jfg6ObkVEe26eKBxVz0OTQ">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_JZYdALkVEe26eKBxVz0OTQ" general="_JBxOQLkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jeu3ErkVEe26eKBxVz0OTQ" name="ConnectivityPoset" specification="_JZX18LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jeu3E7kVEe26eKBxVz0OTQ" name="workload" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jeu3FLkVEe26eKBxVz0OTQ" type="_JAGaULkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jeu3FbkVEe26eKBxVz0OTQ" name="findCoordinator" specification="_Jb_FELkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jeu3FrkVEe26eKBxVz0OTQ" name="nodesInFlow" type="_JY7KALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jeu3F7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JZX18LkVEe26eKBxVz0OTQ" name="ConnectivityPoset" visibility="package" method="_Jeu3ErkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JZX18rkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JZX187kVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JZX18bkVEe26eKBxVz0OTQ" name="workload" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JZX19LkVEe26eKBxVz0OTQ" type="_JAGaULkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Jb_FELkVEe26eKBxVz0OTQ" name="findCoordinator" visibility="protected" method="_Jeu3FbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jb_FEbkVEe26eKBxVz0OTQ" name="nodesInFlow" type="_JY7KALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jb_FErkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JAHocLkVEe26eKBxVz0OTQ" name="DeadlineComparator">
              <interfaceRealization xmi:id="_JcATMrkVEe26eKBxVz0OTQ" client="_JAHocLkVEe26eKBxVz0OTQ" supplier="_JZYdAbkVEe26eKBxVz0OTQ" contract="_JZYdAbkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jeu3GLkVEe26eKBxVz0OTQ" name="compare" specification="_JcBhULkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jeu3GbkVEe26eKBxVz0OTQ" name="obj1" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jeu3GrkVEe26eKBxVz0OTQ" name="obj2" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jeu3G7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JcBhULkVEe26eKBxVz0OTQ" name="compare" method="_Jeu3GLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JcCIYLkVEe26eKBxVz0OTQ" name="obj1" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JcCIYbkVEe26eKBxVz0OTQ" name="obj2" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JcCIYrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JAKEsLkVEe26eKBxVz0OTQ" name="Description">
              <ownedComment xmi:id="_Jfg6OrkVEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_JcCvcLkVEe26eKBxVz0OTQ" general="_JY7KALkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdQQYLkVEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdQ3cLkVEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeveILkVEe26eKBxVz0OTQ" name="Description" specification="_JAKrwLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeveIbkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeveIrkVEe26eKBxVz0OTQ" name="Description" specification="_JALS07kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeveI7kVEe26eKBxVz0OTQ" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JeveJLkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JewFMLkVEe26eKBxVz0OTQ" name="toString" specification="_JAMg8LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JewFMbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JAKrwLkVEe26eKBxVz0OTQ" name="Description" method="_JeveILkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JALS0LkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JALS0bkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JALS0rkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JALS07kVEe26eKBxVz0OTQ" name="Description" method="_JeveIrkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JAL54bkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JAL54rkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JAL54LkVEe26eKBxVz0OTQ" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JAL547kVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JAMg8LkVEe26eKBxVz0OTQ" name="toString" method="_JewFMLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JAMg8bkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JANvELkVEe26eKBxVz0OTQ" name="Edge">
              <generalization xmi:id="_JZbgULkVEe26eKBxVz0OTQ" general="_JEoVALkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdQ3cbkVEe26eKBxVz0OTQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdQ3crkVEe26eKBxVz0OTQ" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdSFkLkVEe26eKBxVz0OTQ" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdSsoLkVEe26eKBxVz0OTQ" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdSsobkVEe26eKBxVz0OTQ" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdSsorkVEe26eKBxVz0OTQ" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdTTsLkVEe26eKBxVz0OTQ" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdTTsbkVEe26eKBxVz0OTQ" name="state" type="_JAQLULkVEe26eKBxVz0OTQ" association="_JfiIULkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdTTsrkVEe26eKBxVz0OTQ" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_JcCvcrkVEe26eKBxVz0OTQ" client="_JANvELkVEe26eKBxVz0OTQ" supplier="_Jby30bkVEe26eKBxVz0OTQ" contract="_Jby30bkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JewFMrkVEe26eKBxVz0OTQ" name="Edge" specification="_JARZcrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JewFM7kVEe26eKBxVz0OTQ" type="_JANvELkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JewFNLkVEe26eKBxVz0OTQ" name="Edge" specification="_JASnkLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JewFNbkVEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JewFNrkVEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JewFN7kVEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JewFOLkVEe26eKBxVz0OTQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JewFObkVEe26eKBxVz0OTQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JewFOrkVEe26eKBxVz0OTQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JewFO7kVEe26eKBxVz0OTQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JewFPLkVEe26eKBxVz0OTQ" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JewFPbkVEe26eKBxVz0OTQ" type="_JANvELkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JewFPrkVEe26eKBxVz0OTQ" name="compareTo" specification="_JZaSMLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JewFP7kVEe26eKBxVz0OTQ" name="edge" type="_JANvELkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JewFQLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JewFQbkVEe26eKBxVz0OTQ" name="toString" specification="_JAUcwLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JewsQLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JewsQbkVEe26eKBxVz0OTQ" name="print" specification="_JAVq4LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JewsQrkVEe26eKBxVz0OTQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JewsQ7kVEe26eKBxVz0OTQ" name="print" specification="_JAW5ArkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JARZcrkVEe26eKBxVz0OTQ" name="Edge" visibility="package" method="_JewFMrkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JASAgLkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JASAgbkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JASAgrkVEe26eKBxVz0OTQ" type="_JANvELkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JASnkLkVEe26eKBxVz0OTQ" name="Edge" visibility="package" method="_JewFNLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JATOqLkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JATOqbkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JATOoLkVEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JATOobkVEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JATOorkVEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JATOo7kVEe26eKBxVz0OTQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JATOpLkVEe26eKBxVz0OTQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JATOpbkVEe26eKBxVz0OTQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JATOprkVEe26eKBxVz0OTQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JATOp7kVEe26eKBxVz0OTQ" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JAT1sLkVEe26eKBxVz0OTQ" type="_JANvELkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JAUcwLkVEe26eKBxVz0OTQ" name="toString" method="_JewFQbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JAUcwbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JAVq4LkVEe26eKBxVz0OTQ" name="print" method="_JewsQbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JAVq4bkVEe26eKBxVz0OTQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JAW5ArkVEe26eKBxVz0OTQ" name="print" method="_JewsQ7kVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JZaSMLkVEe26eKBxVz0OTQ" name="compareTo" method="_JewFPrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JZaSMbkVEe26eKBxVz0OTQ" name="edge" type="_JANvELkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JZaSMrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_JAQLULkVEe26eKBxVz0OTQ" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_JAQyYbkVEe26eKBxVz0OTQ" name="RELEASED"/>
                <ownedLiteral xmi:id="_JARZcLkVEe26eKBxVz0OTQ" name="EXECUTING"/>
                <ownedLiteral xmi:id="_JARZcbkVEe26eKBxVz0OTQ" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JAbxgLkVEe26eKBxVz0OTQ" name="FileManager">
              <ownedComment xmi:id="_JfivYLkVEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_JdT6wLkVEe26eKBxVz0OTQ" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdT6wbkVEe26eKBxVz0OTQ" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JewsRLkVEe26eKBxVz0OTQ" name="FileManager" specification="_JAc_oLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JewsRbkVEe26eKBxVz0OTQ" type="_JAbxgLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 verbose = false; // initialize verbose to false&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JewsRrkVEe26eKBxVz0OTQ" name="FileManager" specification="_JAdms7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JewsR7kVEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JewsSLkVEe26eKBxVz0OTQ" type="_JAbxgLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JewsSbkVEe26eKBxVz0OTQ" name="getDocumentsDirectory" specification="_JAeNw7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JewsSrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
 String documentsDirectory;&#xD;
 if (OSValidator.isWindows()) {&#xD;
   documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
 } else if (OSValidator.isMac()) {&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;) + File.separator + &quot;Documents&quot;;&#xD;
 } else { // for all other Unix systems&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not&#xD;
                                                         // MACOS)&#xD;
 }&#xD;
 return documentsDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JexTULkVEe26eKBxVz0OTQ" name="getCurrentDirectory" specification="_JAe00bkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JexTUbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JexTUrkVEe26eKBxVz0OTQ" name="createFile" specification="_JAfb4LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JexTU7kVEe26eKBxVz0OTQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JexTVLkVEe26eKBxVz0OTQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JexTVbkVEe26eKBxVz0OTQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JexTVrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * we don't actually create the file...it will be created when written to this routine really&#xD;
  * just creates the file name ;-)&#xD;
  */&#xD;
 Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex); // get the file string sans the suffix&#xD;
 }&#xD;
 /*&#xD;
  * fileString has no suffix at this point (removed if it existed) Now add file name extension&#xD;
  * and suffix&#xD;
  */&#xD;
 fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JexTV7kVEe26eKBxVz0OTQ" name="createFile" specification="_JAgqALkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JexTWLkVEe26eKBxVz0OTQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JexTWbkVEe26eKBxVz0OTQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JexTWrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex - 1); // get the file string sans the suffix&#xD;
 }&#xD;
 // fileString has no suffix at this point (removed if it existed)&#xD;
 // Now add file name extension and suffix&#xD;
 fileString = fileString + suffix;&#xD;
 // we don't actually create the file...it will be created when written to&#xD;
 // this routine really just creates the file name ;-)&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JexTW7kVEe26eKBxVz0OTQ" name="createDirectory" specification="_JAhRELkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JexTXLkVEe26eKBxVz0OTQ" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JexTXbkVEe26eKBxVz0OTQ" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JexTXrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory;&#xD;
 if (subDirectory.startsWith(&quot;/&quot;)) { // check if full path provided&#xD;
   newDirectory = subDirectory; // if subDirectory is a full path, use it.&#xD;
 } else { // subDirectory has relative path, so just append&#xD;
   newDirectory = directory + File.separator + subDirectory;&#xD;
 }&#xD;
 try {&#xD;
   Path path = Paths.get(newDirectory);&#xD;
   Files.createDirectories(path);&#xD;
   if (verbose) {&#xD;
     System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
   }&#xD;
 } catch (IOException e) {&#xD;
   System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
   newDirectory = directory; // in case of error, just use the initial directory&#xD;
 }&#xD;
 return newDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JexTX7kVEe26eKBxVz0OTQ" name="writeFile" specification="_JAifMLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JexTYLkVEe26eKBxVz0OTQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JexTYbkVEe26eKBxVz0OTQ" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Authentication tag = new Authentication(COURSE_TAG);&#xD;
 Path fileName = Path.of(file);&#xD;
 try {&#xD;
   // Files.writeString(fileName, tag.sign(fileContents)); // uncomment to tag course file&#xD;
   Files.writeString(fileName, fileContents); // comment out if tag is being used (line above)&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JexTYrkVEe26eKBxVz0OTQ" name="readFile" specification="_JAjGQLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JexTY7kVEe26eKBxVz0OTQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JexTZLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
 Path fileName = Path.of(file);&#xD;
 String contents = null;&#xD;
 try {&#xD;
   contents = Files.readString(fileName);&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on reading file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
 return contents;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JAc_oLkVEe26eKBxVz0OTQ" name="FileManager" method="_JewsRLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JAdmsLkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JAdmsbkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_JfivYbkVEe26eKBxVz0OTQ">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_JAdmsrkVEe26eKBxVz0OTQ" type="_JAbxgLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JAdms7kVEe26eKBxVz0OTQ" name="FileManager" method="_JewsRrkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JAeNwLkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JAeNwbkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JAdmtLkVEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JAeNwrkVEe26eKBxVz0OTQ" type="_JAbxgLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JAeNw7kVEe26eKBxVz0OTQ" name="getDocumentsDirectory" method="_JewsSbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JAe00LkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JAe00bkVEe26eKBxVz0OTQ" name="getCurrentDirectory" method="_JexTULkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JAe00rkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JAfb4LkVEe26eKBxVz0OTQ" name="createFile" method="_JexTUrkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfivYrkVEe26eKBxVz0OTQ">
                  <body>Build the name extension used for all files created by this tool. The nameExtension will be&#xD;
   * added to the base input file name so that all of the output files can be associated with the&#xD;
   * input file The file naming pattern is: baseFileNameFileType-NonDefaultParameterList where&#xD;
   * FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray Default parameters are&#xD;
   * not identified in the NameExtension All parameters used to create the file, should be listed&#xD;
   * near the top of the file in the Parameter Section, followed by the file contents.&#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_JAfb4bkVEe26eKBxVz0OTQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JAgC8LkVEe26eKBxVz0OTQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JAgC8bkVEe26eKBxVz0OTQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JAgC8rkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JAgqALkVEe26eKBxVz0OTQ" name="createFile" method="_JexTV7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JAgqAbkVEe26eKBxVz0OTQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JAgqArkVEe26eKBxVz0OTQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JAgqA7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JAhRELkVEe26eKBxVz0OTQ" name="createDirectory" method="_JexTW7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JAh4ILkVEe26eKBxVz0OTQ" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JAh4IbkVEe26eKBxVz0OTQ" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JAh4IrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JAifMLkVEe26eKBxVz0OTQ" name="writeFile" method="_JexTX7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JAifMbkVEe26eKBxVz0OTQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JAifMrkVEe26eKBxVz0OTQ" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JAjGQLkVEe26eKBxVz0OTQ" name="readFile" method="_JexTYrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JAjGQbkVEe26eKBxVz0OTQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JAjGQrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JAkUYLkVEe26eKBxVz0OTQ" name="Flow">
              <ownedComment xmi:id="_JfivY7kVEe26eKBxVz0OTQ">
                <body>Flow is a java class in which the user creates a flow object based on the graph file provided.&#xD;
The flows, edges, link transmission and total cost are all added to separate ArrayLists which are stored and can&#xD;
be accessed if needed. Methods inside the class allow the user to manipulate certain aspects of the flow and return&#xD;
certain values.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_JZi1ErkVEe26eKBxVz0OTQ" general="_JEoVALkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdUh0bkVEe26eKBxVz0OTQ" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdUh0rkVEe26eKBxVz0OTQ" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdUh07kVEe26eKBxVz0OTQ" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdVI4LkVEe26eKBxVz0OTQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdVI4bkVEe26eKBxVz0OTQ" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdVI4rkVEe26eKBxVz0OTQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdVI47kVEe26eKBxVz0OTQ" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdVI5LkVEe26eKBxVz0OTQ" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdVI5bkVEe26eKBxVz0OTQ" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdVI5rkVEe26eKBxVz0OTQ" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdVv8LkVEe26eKBxVz0OTQ" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdVv8bkVEe26eKBxVz0OTQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdVv8rkVEe26eKBxVz0OTQ" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdVv87kVEe26eKBxVz0OTQ" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdWXAbkVEe26eKBxVz0OTQ" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdW-ELkVEe26eKBxVz0OTQ" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdW-ErkVEe26eKBxVz0OTQ" name="nodes" visibility="package" type="_JY7KALkVEe26eKBxVz0OTQ" association="_JgMPobkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdYMMbkVEe26eKBxVz0OTQ" name="linkTxAndTotalCost" visibility="package" type="_JY7KALkVEe26eKBxVz0OTQ" association="_JgMPpLkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdYzQbkVEe26eKBxVz0OTQ" name="edges" visibility="package" type="_JY7KALkVEe26eKBxVz0OTQ" association="_JgM2sbkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdZaUbkVEe26eKBxVz0OTQ" name="nodePredecessor" visibility="package" type="_JBgvkLkVEe26eKBxVz0OTQ" association="_JgM2tLkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdZaU7kVEe26eKBxVz0OTQ" name="edgePredecessor" visibility="package" type="_JANvELkVEe26eKBxVz0OTQ" association="_JgNdwbkVEe26eKBxVz0OTQ"/>
              <interfaceRealization xmi:id="_JcEkoLkVEe26eKBxVz0OTQ" client="_JAkUYLkVEe26eKBxVz0OTQ" supplier="_Jby30bkVEe26eKBxVz0OTQ" contract="_Jby30bkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jex6YLkVEe26eKBxVz0OTQ" name="Flow" specification="_JAnXsLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jex6YbkVEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jex6YrkVEe26eKBxVz0OTQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jex6Y7kVEe26eKBxVz0OTQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jex6ZLkVEe26eKBxVz0OTQ" type="_JAkUYLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 	this.index = index;&#xD;
     /*&#xD;
      *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
      *  on flow updated based on flow length and reliability parameters&#xD;
      */&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges  = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();	&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jex6ZbkVEe26eKBxVz0OTQ" name="Flow" specification="_JAn-w7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jex6ZrkVEe26eKBxVz0OTQ" type="_JAkUYLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	this.index = DEFAULT_INDEX;&#xD;
 	/*&#xD;
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
 	 *  on flow updated based on flow length and reliability parameters&#xD;
 	 */&#xD;
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 	this.nodes = new ArrayList&lt;>();&#xD;
 	this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 	this.edges = new ArrayList&lt;>();&#xD;
 	this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jex6Z7kVEe26eKBxVz0OTQ" name="getInitialPriority" specification="_JAol07kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jex6aLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jex6abkVEe26eKBxVz0OTQ" name="getIndex" specification="_JApM4LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jex6arkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jex6a7kVEe26eKBxVz0OTQ" name="getNumTxPerLink" specification="_JApM4rkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jex6bLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeyhcLkVEe26eKBxVz0OTQ" name="getNodes" specification="_JApz8bkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeyhcbkVEe26eKBxVz0OTQ" type="_JY7KALkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeyhcrkVEe26eKBxVz0OTQ" name="getEdges" specification="_JArCEbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jeyhc7kVEe26eKBxVz0OTQ" type="_JY7KALkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeyhdLkVEe26eKBxVz0OTQ" name="addEdge" specification="_JZg_4LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeyhdbkVEe26eKBxVz0OTQ" name="edge" type="_JANvELkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeyhdrkVEe26eKBxVz0OTQ" name="addNode" specification="_JZhm8LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jeyhd7kVEe26eKBxVz0OTQ" name="node" type="_JBgvkLkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeyheLkVEe26eKBxVz0OTQ" name="getLinkTxAndTotalCost" specification="_JAteULkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeyhebkVEe26eKBxVz0OTQ" type="_JY7KALkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeyherkVEe26eKBxVz0OTQ" name="setInitialPriority" specification="_JAvTgLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jeyhe7kVEe26eKBxVz0OTQ" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JeyhfLkVEe26eKBxVz0OTQ" name="setIndex" specification="_JAv6kLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JeyhfbkVEe26eKBxVz0OTQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JezIgLkVEe26eKBxVz0OTQ" name="setNumTxPerLink" specification="_JAwhoLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JezIgbkVEe26eKBxVz0OTQ" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JezIgrkVEe26eKBxVz0OTQ" name="setNodes" specification="_JcGZ0LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JezIg7kVEe26eKBxVz0OTQ" name="nodes" type="_JY7KALkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JezIhLkVEe26eKBxVz0OTQ" name="setLinkTxAndTotalCost" specification="_JcHA4bkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JezIhbkVEe26eKBxVz0OTQ" name="linkTxAndTotalCost" type="_JY7KALkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JezIhrkVEe26eKBxVz0OTQ" name="compareTo" specification="_JZhm8rkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JezIh7kVEe26eKBxVz0OTQ" name="flow" type="_JAkUYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JezIiLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JezIibkVEe26eKBxVz0OTQ" name="toString" specification="_JAxIsLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JezIirkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JAnXsLkVEe26eKBxVz0OTQ" name="Flow" visibility="package" method="_Jex6YLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JAn-wLkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JAn-wbkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_JfivZLkVEe26eKBxVz0OTQ">
                  <body>Constructor that sets name, priority, and index of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_JAnXsbkVEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JAnXsrkVEe26eKBxVz0OTQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JAnXs7kVEe26eKBxVz0OTQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JAn-wrkVEe26eKBxVz0OTQ" type="_JAkUYLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JAn-w7kVEe26eKBxVz0OTQ" name="Flow" visibility="package" method="_Jex6ZbkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JAol0LkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JAol0bkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_JfjWcLkVEe26eKBxVz0OTQ">
                  <body>Constructor</body>
                </ownedComment>
                <ownedParameter xmi:id="_JAol0rkVEe26eKBxVz0OTQ" type="_JAkUYLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JAol07kVEe26eKBxVz0OTQ" name="getInitialPriority" method="_Jex6Z7kVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfjWcbkVEe26eKBxVz0OTQ">
                  <body>Gets the initial priority of the flow.&#xD;
	 * &#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_JAol1LkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JApM4LkVEe26eKBxVz0OTQ" name="getIndex" method="_Jex6abkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfjWcrkVEe26eKBxVz0OTQ">
                  <body>Gets the index of the flow. The order in which the node was read from the &#xD;
	 * graph file.&#xD;
	 *  &#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_JApM4bkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JApM4rkVEe26eKBxVz0OTQ" name="getNumTxPerLink" method="_Jex6a7kVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfjWc7kVEe26eKBxVz0OTQ">
                  <body>Gets the number of transmissions per link of the flow.&#xD;
	 * Defaulted to 1.&#xD;
	 * &#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_JApz8LkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JApz8bkVEe26eKBxVz0OTQ" name="getNodes" method="_JeyhcLkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfjWdLkVEe26eKBxVz0OTQ">
                  <body>Gets an ArrayList of nodes in the flow.&#xD;
	 * &#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_JcFywLkVEe26eKBxVz0OTQ" type="_JY7KALkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JArCEbkVEe26eKBxVz0OTQ" name="getEdges" method="_JeyhcrkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfjWdbkVEe26eKBxVz0OTQ">
                  <body>Gets and ArrayList of edges in the flow.&#xD;
	 * &#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_JcFywbkVEe26eKBxVz0OTQ" type="_JY7KALkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JAteULkVEe26eKBxVz0OTQ" name="getLinkTxAndTotalCost" method="_JeyheLkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfjWeLkVEe26eKBxVz0OTQ">
                  <body>Gets the link transmission and total cost of the flow.&#xD;
	 * &#xD;
	 * @return ArrayList of link transmission and total cost values.</body>
                </ownedComment>
                <ownedParameter xmi:id="_JcFywrkVEe26eKBxVz0OTQ" type="_JY7KALkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JAvTgLkVEe26eKBxVz0OTQ" name="setInitialPriority" method="_JeyherkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfjWebkVEe26eKBxVz0OTQ">
                  <body>Sets the initial priority of the flow. Default is -1.&#xD;
	 * &#xD;
	 * @param initialPriority the initial priority to be set</body>
                </ownedComment>
                <ownedParameter xmi:id="_JAvTgbkVEe26eKBxVz0OTQ" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JAv6kLkVEe26eKBxVz0OTQ" name="setIndex" method="_JeyhfLkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfjWerkVEe26eKBxVz0OTQ">
                  <body>Sets the index of a node in the flow. Default is 0.&#xD;
	 * &#xD;
	 * @param index the index to be set</body>
                </ownedComment>
                <ownedParameter xmi:id="_JAv6kbkVEe26eKBxVz0OTQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JAwhoLkVEe26eKBxVz0OTQ" name="setNumTxPerLink" method="_JezIgLkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfjWe7kVEe26eKBxVz0OTQ">
                  <body>Sets the number of transmissions per link. Determined by the fault model.&#xD;
	 * &#xD;
	 * @param numTxPerLink the number of transmissions per link to be set.</body>
                </ownedComment>
                <ownedParameter xmi:id="_JAwhobkVEe26eKBxVz0OTQ" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JAxIsLkVEe26eKBxVz0OTQ" name="toString" method="_JezIibkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JAxvwLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JZg_4LkVEe26eKBxVz0OTQ" name="addEdge" method="_JeyhdLkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfjWdrkVEe26eKBxVz0OTQ">
                  <body>Add an edge to the flow by first setting the edge predecessor, adding the edge, then&#xD;
	 * updating the predecessor for the next node.&#xD;
	 * &#xD;
	 * @param edge the edge to added</body>
                </ownedComment>
                <ownedParameter xmi:id="_JZg_4bkVEe26eKBxVz0OTQ" name="edge" type="_JANvELkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JZhm8LkVEe26eKBxVz0OTQ" name="addNode" method="_JeyhdrkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfjWd7kVEe26eKBxVz0OTQ">
                  <body>Add a node to the flow by first setting its predecessor, adding the node, then &#xD;
	 * updating the predecessor for the next node.&#xD;
	 * &#xD;
	 * @param node the node to be added</body>
                </ownedComment>
                <ownedParameter xmi:id="_JZhm8bkVEe26eKBxVz0OTQ" name="node" type="_JBgvkLkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JZhm8rkVEe26eKBxVz0OTQ" name="compareTo" method="_JezIhrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JZiOALkVEe26eKBxVz0OTQ" name="flow" type="_JAkUYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JZiOAbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JcGZ0LkVEe26eKBxVz0OTQ" name="setNodes" method="_JezIgrkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfjWfLkVEe26eKBxVz0OTQ">
                  <body>Sets a list of nodes to the flow.&#xD;
	 * &#xD;
	 * @param nodes the ArrayList of nodes to be set.</body>
                </ownedComment>
                <ownedParameter xmi:id="_JcGZ0bkVEe26eKBxVz0OTQ" name="nodes" type="_JY7KALkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JcHA4bkVEe26eKBxVz0OTQ" name="setLinkTxAndTotalCost" method="_JezIhLkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfjWfbkVEe26eKBxVz0OTQ">
                  <body>Sets a list of link transmission and total cost to the flow.&#xD;
	 * &#xD;
	 * @param linkTxAndTotalCost the ArrayList of values to set.</body>
                </ownedComment>
                <ownedParameter xmi:id="_JcHA4rkVEe26eKBxVz0OTQ" name="linkTxAndTotalCost" type="_JY7KALkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JA2oQLkVEe26eKBxVz0OTQ" name="FlowMap">
              <ownedComment xmi:id="_JfjWfrkVEe26eKBxVz0OTQ">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_JZlRULkVEe26eKBxVz0OTQ" general="_I-dbkLkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdaocLkVEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdaocbkVEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JA32YLkVEe26eKBxVz0OTQ" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_JfjWf7kVEe26eKBxVz0OTQ">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_JZl4YLkVEe26eKBxVz0OTQ" general="_I-dbkLkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdaocrkVEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdbPgLkVEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JA4dcLkVEe26eKBxVz0OTQ" name="GraphViz">
              <ownedComment xmi:id="_JfjWgLkVEe26eKBxVz0OTQ">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_JZntkbkVEe26eKBxVz0OTQ" general="_JDWioLkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdbPgbkVEe26eKBxVz0OTQ" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdbPgrkVEe26eKBxVz0OTQ" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdbPg7kVEe26eKBxVz0OTQ" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdbPhLkVEe26eKBxVz0OTQ" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdbPhbkVEe26eKBxVz0OTQ" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jdb2kbkVEe26eKBxVz0OTQ" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jdb2k7kVEe26eKBxVz0OTQ" name="wfm" visibility="package" type="_JAbxgLkVEe26eKBxVz0OTQ" association="_JgOE0LkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdcdobkVEe26eKBxVz0OTQ" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jdcdo7kVEe26eKBxVz0OTQ" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JddEsbkVEe26eKBxVz0OTQ" name="gv" visibility="package" type="_JA4dcLkVEe26eKBxVz0OTQ" association="_JgOE07kVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JezvkLkVEe26eKBxVz0OTQ" name="GraphViz" specification="_JZmfcLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JezvkbkVEe26eKBxVz0OTQ" name="wfm" type="_JAbxgLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JezvkrkVEe26eKBxVz0OTQ" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jezvk7kVEe26eKBxVz0OTQ" type="_JA4dcLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JezvlLkVEe26eKBxVz0OTQ" name="GraphViz" specification="_JZnGhLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JezvlbkVEe26eKBxVz0OTQ" name="wfm" type="_JAbxgLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JezvlrkVEe26eKBxVz0OTQ" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jezvl7kVEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JezvmLkVEe26eKBxVz0OTQ" type="_JA4dcLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JezvmbkVEe26eKBxVz0OTQ" name="visualization" specification="_JA6SoLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JezvmrkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jezvm7kVEe26eKBxVz0OTQ" name="initializeGraphVizContent" specification="_JA65srkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JezvnLkVEe26eKBxVz0OTQ" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JezvnbkVEe26eKBxVz0OTQ" name="finalizeGraphVizContent" specification="_JA7gwLkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JezvnrkVEe26eKBxVz0OTQ" name="getGraphVizContent" specification="_JA7gwbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jezvn7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je0WoLkVEe26eKBxVz0OTQ" name="createGraphVizContent" specification="_JA8H0LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je0WobkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je0WorkVEe26eKBxVz0OTQ" name="addFlowToGraphViz" specification="_JA8H0rkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je0Wo7kVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je0WpLkVEe26eKBxVz0OTQ" name="addSrcNodeToGraphViz" specification="_JA8u4LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je0WpbkVEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je0WprkVEe26eKBxVz0OTQ" name="addSnkNodeToGraphViz" specification="_JA9V8LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je0Wp7kVEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je0WqLkVEe26eKBxVz0OTQ" name="finalizeCurrentFlowInGraphViz" specification="_JA9V8rkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je0WqbkVEe26eKBxVz0OTQ" name="addNodeName" specification="_JA99ALkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je0WqrkVEe26eKBxVz0OTQ" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je0Wq7kVEe26eKBxVz0OTQ" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JA6SoLkVEe26eKBxVz0OTQ" name="visualization" method="_JezvmbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JZntkLkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JA65srkVEe26eKBxVz0OTQ" name="initializeGraphVizContent" method="_Jezvm7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JA65s7kVEe26eKBxVz0OTQ" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JA7gwLkVEe26eKBxVz0OTQ" name="finalizeGraphVizContent" method="_JezvnbkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JA7gwbkVEe26eKBxVz0OTQ" name="getGraphVizContent" method="_JezvnrkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfjWgbkVEe26eKBxVz0OTQ">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_JA7gwrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JA8H0LkVEe26eKBxVz0OTQ" name="createGraphVizContent" method="_Je0WoLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JA8H0bkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JA8H0rkVEe26eKBxVz0OTQ" name="addFlowToGraphViz" method="_Je0WorkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JA8H07kVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JA8u4LkVEe26eKBxVz0OTQ" name="addSrcNodeToGraphViz" method="_Je0WpLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JA8u4bkVEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JA9V8LkVEe26eKBxVz0OTQ" name="addSnkNodeToGraphViz" method="_Je0WprkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JA9V8bkVEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JA9V8rkVEe26eKBxVz0OTQ" name="finalizeCurrentFlowInGraphViz" method="_Je0WqLkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JA99ALkVEe26eKBxVz0OTQ" name="addNodeName" visibility="private" method="_Je0WqbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JA99AbkVEe26eKBxVz0OTQ" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JA99ArkVEe26eKBxVz0OTQ" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JZmfcLkVEe26eKBxVz0OTQ" name="GraphViz" visibility="package" method="_JezvkLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JZnGgbkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JZnGgrkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JZmfcbkVEe26eKBxVz0OTQ" name="wfm" type="_JAbxgLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JZnGgLkVEe26eKBxVz0OTQ" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JZnGg7kVEe26eKBxVz0OTQ" type="_JA4dcLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JZnGhLkVEe26eKBxVz0OTQ" name="GraphViz" visibility="package" method="_JezvlLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JZnGiLkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JZnGibkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JZnGhbkVEe26eKBxVz0OTQ" name="wfm" type="_JAbxgLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JZnGhrkVEe26eKBxVz0OTQ" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JZnGh7kVEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JZnGirkVEe26eKBxVz0OTQ" type="_JA4dcLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JBAZQLkVEe26eKBxVz0OTQ" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_JfjWgrkVEe26eKBxVz0OTQ">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_JcJdILkVEe26eKBxVz0OTQ" general="_JZqw4bkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JddrwLkVEe26eKBxVz0OTQ" name="gv" visibility="package" type="_JA4dcLkVEe26eKBxVz0OTQ" association="_JgOr4bkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je09sLkVEe26eKBxVz0OTQ" name="GraphVizListener" specification="_JZr_A7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je09sbkVEe26eKBxVz0OTQ" name="gv" type="_JA4dcLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je09srkVEe26eKBxVz0OTQ" type="_JBAZQLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je09s7kVEe26eKBxVz0OTQ" name="buildGraphViz" specification="_JZsmELkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je09tLkVEe26eKBxVz0OTQ" name="gv" type="_JA4dcLkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je09tbkVEe26eKBxVz0OTQ" name="enterWarpName" specification="_JZtNIbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je09trkVEe26eKBxVz0OTQ" name="ctx" type="_JZsmErkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je09t7kVEe26eKBxVz0OTQ" name="exitWarp" specification="_JZubQbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je09uLkVEe26eKBxVz0OTQ" name="ctx" type="_JZt0NLkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je1kwLkVEe26eKBxVz0OTQ" name="enterFlowName" specification="_JZvpY7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je1kwbkVEe26eKBxVz0OTQ" name="ctx" type="_JZvpYbkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je1kwrkVEe26eKBxVz0OTQ" name="exitSrcNode" specification="_JZxekLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je1kw7kVEe26eKBxVz0OTQ" name="ctx" type="_JZwQc7kVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je1kxLkVEe26eKBxVz0OTQ" name="exitSnkNode" specification="_JZyssbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je1kxbkVEe26eKBxVz0OTQ" name="ctx" type="_JZyForkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je1kxrkVEe26eKBxVz0OTQ" name="exitFlow" specification="_JZ0h4bkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je1kx7kVEe26eKBxVz0OTQ" name="ctx" type="_JZz60LkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JZr_A7kVEe26eKBxVz0OTQ" name="GraphVizListener" visibility="private" method="_Je09sLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JZr_BbkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JZr_BrkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JZr_BLkVEe26eKBxVz0OTQ" name="gv" type="_JA4dcLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JZr_B7kVEe26eKBxVz0OTQ" type="_JBAZQLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JZsmELkVEe26eKBxVz0OTQ" name="buildGraphViz" isStatic="true" method="_Je09s7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JZsmEbkVEe26eKBxVz0OTQ" name="gv" type="_JA4dcLkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JZtNIbkVEe26eKBxVz0OTQ" name="enterWarpName" method="_Je09tbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JZt0MLkVEe26eKBxVz0OTQ" name="ctx" type="_JZsmErkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JZubQbkVEe26eKBxVz0OTQ" name="exitWarp" method="_Je09t7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JZvCULkVEe26eKBxVz0OTQ" name="ctx" type="_JZt0NLkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JZvpY7kVEe26eKBxVz0OTQ" name="enterFlowName" method="_Je1kwLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JZvpZLkVEe26eKBxVz0OTQ" name="ctx" type="_JZvpYbkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JZxekLkVEe26eKBxVz0OTQ" name="exitSrcNode" method="_Je1kwrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JZxekbkVEe26eKBxVz0OTQ" name="ctx" type="_JZwQc7kVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JZyssbkVEe26eKBxVz0OTQ" name="exitSnkNode" method="_Je1kxLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JZyssrkVEe26eKBxVz0OTQ" name="ctx" type="_JZyForkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JZ0h4bkVEe26eKBxVz0OTQ" name="exitFlow" method="_Je1kxrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JZ0h4rkVEe26eKBxVz0OTQ" name="ctx" type="_JZz60LkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JBDckLkVEe26eKBxVz0OTQ" name="GuiVisualization">
              <ownedComment xmi:id="_JfjWg7kVEe26eKBxVz0OTQ">
                <body>GuiVisualization Class to create a Java Swing window that displays a table of data with column&#xD;
headings.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_JdeS0LkVEe26eKBxVz0OTQ" name="frame" visibility="package" type="_JZ2-ILkVEe26eKBxVz0OTQ" association="_JgOr5LkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jde54bkVEe26eKBxVz0OTQ" name="jtable" visibility="package" type="_JZ3lMbkVEe26eKBxVz0OTQ" association="_JgPS8bkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je2L0LkVEe26eKBxVz0OTQ" name="GuiVisualization" specification="_JBEqsLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je2L0bkVEe26eKBxVz0OTQ" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je2L0rkVEe26eKBxVz0OTQ" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Je2L07kVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je2L1LkVEe26eKBxVz0OTQ" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Je2L1bkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je2L1rkVEe26eKBxVz0OTQ" type="_JBDckLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>// Frame initialization&#xD;
 frame = new JFrame();&#xD;
&#xD;
 // Frame Title&#xD;
 frame.setTitle(title);&#xD;
&#xD;
 // Initializing the JTable with input parameters&#xD;
 jtable = new JTable(table, columnNames);&#xD;
 jtable.setBounds(30, 40, 200, 300); // default size&#xD;
 // resizeColumnWidth(jtable); // uncomment to auto size column widths&#xD;
&#xD;
 // attached the table to a JScrollPane and then add both to the frame&#xD;
 JScrollPane sp = new JScrollPane(jtable); // gives table a vertical scrollbar&#xD;
 frame.add(sp);&#xD;
 // Frame Size&#xD;
 frame.setSize(500, 200);&#xD;
 jtable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); // creates horizontal scrollbar&#xD;
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
 // Frame Visible = false&#xD;
 frame.setVisible(false);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je2L17kVEe26eKBxVz0OTQ" name="setVisible" specification="_JBF40LkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>frame.setVisible(true);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je2L2LkVEe26eKBxVz0OTQ" name="resizeColumnWidth" specification="_JcKEMLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je2L2bkVEe26eKBxVz0OTQ" name="table" type="_JZ3lMbkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>final TableColumnModel columnModel = table.getColumnModel();&#xD;
 for (int column = 0; column &lt; table.getColumnCount(); column++) {&#xD;
   int width = 70; // Min width&#xD;
   for (int row = 0; row &lt; table.getRowCount(); row++) {&#xD;
     TableCellRenderer renderer = table.getCellRenderer(row, column);&#xD;
     Component comp = table.prepareRenderer(renderer, row, column);&#xD;
     width = Math.max(comp.getPreferredSize().width + 5, width);&#xD;
   }&#xD;
   if (width > 300)&#xD;
     width = 300;&#xD;
   columnModel.getColumn(column).setPreferredWidth(width);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JBEqsLkVEe26eKBxVz0OTQ" name="GuiVisualization" method="_Je2L0LkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JBEqtLkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JBEqtbkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_JfjWhLkVEe26eKBxVz0OTQ">
                  <body>Constructor to create a Java Swing Window for a table of data with column headings. The window&#xD;
   * is initially not visible, and is made visible by a call to setVisible().&#xD;
   * &#xD;
   * @param title Window title&#xD;
   * @param columnNames Column heading names&#xD;
   * @param table table of strings representing the data</body>
                </ownedComment>
                <ownedParameter xmi:id="_JBEqsbkVEe26eKBxVz0OTQ" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JBEqsrkVEe26eKBxVz0OTQ" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JBEqt7kVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JBEqs7kVEe26eKBxVz0OTQ" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JBFRwLkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JBEqtrkVEe26eKBxVz0OTQ" type="_JBDckLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JBF40LkVEe26eKBxVz0OTQ" name="setVisible" method="_Je2L17kVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfjWhbkVEe26eKBxVz0OTQ">
                  <body>Make the table visible.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_JcKEMLkVEe26eKBxVz0OTQ" name="resizeColumnWidth" visibility="private" method="_Je2L2LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JcKEMbkVEe26eKBxVz0OTQ" name="table" type="_JZ3lMbkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JBHG8LkVEe26eKBxVz0OTQ" name="InputGraphFile">
              <ownedComment xmi:id="_JfjWhrkVEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Jdfg8LkVEe26eKBxVz0OTQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Jdfg8bkVEe26eKBxVz0OTQ" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdgIALkVEe26eKBxVz0OTQ" name="wfm" visibility="private" type="_JAbxgLkVEe26eKBxVz0OTQ" association="_JgP6AbkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdgIArkVEe26eKBxVz0OTQ" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdgvELkVEe26eKBxVz0OTQ" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdgvErkVEe26eKBxVz0OTQ" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdgvE7kVEe26eKBxVz0OTQ" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je2L2rkVEe26eKBxVz0OTQ" name="InputGraphFile" specification="_JZ72obkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je2L27kVEe26eKBxVz0OTQ" name="fm" type="_JAbxgLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je2L3LkVEe26eKBxVz0OTQ" type="_JBHG8LkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je2L3bkVEe26eKBxVz0OTQ" name="InputGraphFile" specification="_JZ8ds7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je2L3rkVEe26eKBxVz0OTQ" name="fm" type="_JAbxgLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je2L37kVEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je2L4LkVEe26eKBxVz0OTQ" type="_JBHG8LkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je2L4bkVEe26eKBxVz0OTQ" name="setGraphFileName" specification="_JBI8ILkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je2L4rkVEe26eKBxVz0OTQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je2L47kVEe26eKBxVz0OTQ" name="verifyGraphFileName" specification="_JBJjMLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je2L5LkVEe26eKBxVz0OTQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je2L5bkVEe26eKBxVz0OTQ" name="readGraphFile" specification="_JBJjMrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je2L5rkVEe26eKBxVz0OTQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je2L57kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je2L6LkVEe26eKBxVz0OTQ" name="getInputGraphFileName" specification="_JBKKQbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je2L6bkVEe26eKBxVz0OTQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je2L6rkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je2L67kVEe26eKBxVz0OTQ" name="readGraphFileContents" specification="_JBLYYLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je2L7LkVEe26eKBxVz0OTQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je2L7bkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je2L7rkVEe26eKBxVz0OTQ" name="printVerboseMessage" specification="_JBL_cLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je2L77kVEe26eKBxVz0OTQ" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je2L8LkVEe26eKBxVz0OTQ" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je2L8bkVEe26eKBxVz0OTQ" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JBI8ILkVEe26eKBxVz0OTQ" name="setGraphFileName" visibility="private" method="_Je2L4bkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JBI8IbkVEe26eKBxVz0OTQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JBJjMLkVEe26eKBxVz0OTQ" name="verifyGraphFileName" visibility="private" method="_Je2L47kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JBJjMbkVEe26eKBxVz0OTQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JBJjMrkVEe26eKBxVz0OTQ" name="readGraphFile" method="_Je2L5bkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JBJjM7kVEe26eKBxVz0OTQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JBKKQLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JBKKQbkVEe26eKBxVz0OTQ" name="getInputGraphFileName" visibility="private" method="_Je2L6LkVEe26eKBxVz0OTQ" raisedException="_JcKrQLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JBKKQrkVEe26eKBxVz0OTQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JBKxULkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JBLYYLkVEe26eKBxVz0OTQ" name="readGraphFileContents" visibility="private" method="_Je2L67kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JBLYYbkVEe26eKBxVz0OTQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JBLYYrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JBL_cLkVEe26eKBxVz0OTQ" name="printVerboseMessage" visibility="private" method="_Je2L7rkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JBL_cbkVEe26eKBxVz0OTQ" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JBL_crkVEe26eKBxVz0OTQ" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JBL_c7kVEe26eKBxVz0OTQ" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JZ72obkVEe26eKBxVz0OTQ" name="InputGraphFile" method="_Je2L2rkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JZ8dsLkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JZ8dsbkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JZ72orkVEe26eKBxVz0OTQ" name="fm" type="_JAbxgLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JZ8dsrkVEe26eKBxVz0OTQ" type="_JBHG8LkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JZ8ds7kVEe26eKBxVz0OTQ" name="InputGraphFile" method="_Je2L3bkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JZ9EwLkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JZ9EwbkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JZ8dtLkVEe26eKBxVz0OTQ" name="fm" type="_JAbxgLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JZ8dtbkVEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JZ9EwrkVEe26eKBxVz0OTQ" type="_JBHG8LkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JBPp0LkVEe26eKBxVz0OTQ" name="InstructionTimeSlot">
              <generalization xmi:id="_JZ9r0LkVEe26eKBxVz0OTQ" general="_JCjRYLkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdhWILkVEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdhWIbkVEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je2y4LkVEe26eKBxVz0OTQ" name="InstructionTimeSlot" specification="_JBQ38LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je2y4bkVEe26eKBxVz0OTQ" type="_JBPp0LkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je2y4rkVEe26eKBxVz0OTQ" name="InstructionTimeSlot" specification="_JBRfALkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je2y47kVEe26eKBxVz0OTQ" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je2y5LkVEe26eKBxVz0OTQ" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je2y5bkVEe26eKBxVz0OTQ" type="_JBPp0LkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je2y5rkVEe26eKBxVz0OTQ" name="InstructionTimeSlot" specification="_JBStILkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je2y57kVEe26eKBxVz0OTQ" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Je2y6LkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je2y6bkVEe26eKBxVz0OTQ" type="_JBPp0LkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JBQ38LkVEe26eKBxVz0OTQ" name="InstructionTimeSlot" method="_Je2y4LkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JBQ38bkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JBQ38rkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JBQ387kVEe26eKBxVz0OTQ" type="_JBPp0LkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JBRfALkVEe26eKBxVz0OTQ" name="InstructionTimeSlot" visibility="package" method="_Je2y4rkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JBSGErkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JBSGE7kVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JBSGELkVEe26eKBxVz0OTQ" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JBSGEbkVEe26eKBxVz0OTQ" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JBSGFLkVEe26eKBxVz0OTQ" type="_JBPp0LkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JBStILkVEe26eKBxVz0OTQ" name="InstructionTimeSlot" visibility="package" method="_Je2y5rkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JBStIrkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JBStI7kVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JBStIbkVEe26eKBxVz0OTQ" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JBTUMLkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JBStJLkVEe26eKBxVz0OTQ" type="_JBPp0LkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JBT7QLkVEe26eKBxVz0OTQ" name="LatencyAnalysis">
              <ownedComment xmi:id="_Jfj9gLkVEe26eKBxVz0OTQ">
                <body>@author sgoddard2&#xD;
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_JdhWIrkVEe26eKBxVz0OTQ" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Jdh9MLkVEe26eKBxVz0OTQ" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jdh9MrkVEe26eKBxVz0OTQ" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdikQLkVEe26eKBxVz0OTQ" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdikQbkVEe26eKBxVz0OTQ" name="latencyReport" visibility="private" type="_JAKEsLkVEe26eKBxVz0OTQ" association="_JgQhELkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdjLUbkVEe26eKBxVz0OTQ" name="program" visibility="private" type="_JE8eELkVEe26eKBxVz0OTQ" association="_JgQhE7kVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdjLU7kVEe26eKBxVz0OTQ" name="workload" visibility="private" type="_JEMQILkVEe26eKBxVz0OTQ" association="_JgRIIbkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdjyYbkVEe26eKBxVz0OTQ" name="programTable" visibility="private" type="_JCJBsLkVEe26eKBxVz0OTQ" association="_JgRvMLkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdkZcLkVEe26eKBxVz0OTQ" name="nodeIndex" visibility="private" type="_JY5U0LkVEe26eKBxVz0OTQ" association="_JgRvM7kVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je2y6rkVEe26eKBxVz0OTQ" name="LatencyAnalysis" specification="_JaAIELkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je2y67kVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je2y7LkVEe26eKBxVz0OTQ" type="_JBT7QLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = warp.toProgram();&#xD;
 this.workload = warp.toWorkload();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je3Z8LkVEe26eKBxVz0OTQ" name="LatencyAnalysis" specification="_JaAIFbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je3Z8bkVEe26eKBxVz0OTQ" name="program" type="_JE8eELkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je3Z8rkVEe26eKBxVz0OTQ" type="_JBT7QLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je3Z87kVEe26eKBxVz0OTQ" name="latencyReport" specification="_JBWXgLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je3Z9LkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>/*&#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
&#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {&#xD;
   var time = 0;&#xD;
&#xD;
   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   /* get snk of last link in the flow, which is also the Flow snk node */&#xD;
   String snk = nodes[flowSnkIndex];&#xD;
   /* get the src of last link in the flow */&#xD;
   String src = nodes[flowSnkIndex - 1];&#xD;
   /* get (column) indexes into programTable of these nodes */&#xD;
   var snkIndex = nodeIndex.get(snk);&#xD;
   var srcIndex = nodeIndex.get(src);&#xD;
   /* get the array containing the number of transmissions required for each link in the flow */&#xD;
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
   /* get the number of transmission required for the last link in the flow */&#xD;
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
   var instance = 0;&#xD;
   while (time &lt; workload.getHyperPeriod()) {&#xD;
     /* get next release time and absolute deadline of the flow */&#xD;
     var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
     // var latency = 0;&#xD;
     time = releaseTime;&#xD;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
     while (time &lt; nextReleaseTime) {&#xD;
       /* get instruction strings at these to locations */&#xD;
       String instr1 = programTable.get(time, srcIndex);&#xD;
       String instr2 = programTable.get(time, snkIndex);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
       if (numTxProcessed == numTxRequired) {&#xD;
         /*&#xD;
          * all required Tx attempts have been made compute and record latency&#xD;
          */&#xD;
         var latency = time - releaseTime + 1;&#xD;
         // report latency&#xD;
         String latencyMsg =&#xD;
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
         if (latency > deadline) {&#xD;
           /* deadline missed, so color the text red */&#xD;
           latencyMsg += DEADLINE_MISS;&#xD;
         }&#xD;
         latencyMsg += &quot;\n&quot;;&#xD;
         latencyReport.add(latencyMsg);&#xD;
         time = nextReleaseTime;&#xD;
       } else {&#xD;
         time++;&#xD;
       }&#xD;
&#xD;
     }&#xD;
     if (numTxProcessed &lt; numTxRequired) {&#xD;
       /*&#xD;
        * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
        * printed with the schedulers built&#xD;
        */&#xD;
       String latencyMsg =&#xD;
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
               flowName, instance);&#xD;
       latencyReport.add(latencyMsg);&#xD;
     }&#xD;
     instance++;&#xD;
   }&#xD;
   String flowSeparator = FLOW_SEPARATOR;&#xD;
   latencyReport.add(flowSeparator);&#xD;
 }&#xD;
 return latencyReport;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je3Z9bkVEe26eKBxVz0OTQ" name="numMatchingTx" specification="_JBW-kLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je3Z9rkVEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je3Z97kVEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je3Z-LkVEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je3Z-bkVEe26eKBxVz0OTQ" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je3Z-rkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var dsl = new WarpDSL();&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JBWXgLkVEe26eKBxVz0OTQ" name="latencyReport" method="_Je3Z87kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaAvI7kVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JBW-kLkVEe26eKBxVz0OTQ" name="numMatchingTx" method="_Je3Z9bkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JBW-kbkVEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JBW-krkVEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JBW-k7kVEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JBW-lLkVEe26eKBxVz0OTQ" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JBXloLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JaAIELkVEe26eKBxVz0OTQ" name="LatencyAnalysis" visibility="package" method="_Je2y6rkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JaAIErkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JaAIE7kVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JaAIEbkVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JaAIFLkVEe26eKBxVz0OTQ" type="_JBT7QLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JaAIFbkVEe26eKBxVz0OTQ" name="LatencyAnalysis" visibility="package" method="_Je3Z8LkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JaAvILkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JaAvIbkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JaAIFrkVEe26eKBxVz0OTQ" name="program" type="_JE8eELkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JaAvIrkVEe26eKBxVz0OTQ" type="_JBT7QLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JBao8LkVEe26eKBxVz0OTQ" name="LatencyVisualization">
              <ownedComment xmi:id="_Jfj9gbkVEe26eKBxVz0OTQ">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2022 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.3&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_JaCkULkVEe26eKBxVz0OTQ" general="_JDWioLkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdlAgbkVEe26eKBxVz0OTQ" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdlAgrkVEe26eKBxVz0OTQ" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdlnkLkVEe26eKBxVz0OTQ" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdlnkbkVEe26eKBxVz0OTQ" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdlnkrkVEe26eKBxVz0OTQ" name="warp" visibility="private" type="_JDxZYLkVEe26eKBxVz0OTQ" association="_JgSWQbkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdmOoLkVEe26eKBxVz0OTQ" name="la" visibility="private" type="_JBT7QLkVEe26eKBxVz0OTQ" association="_JgSWRLkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je3Z-7kVEe26eKBxVz0OTQ" name="LatencyVisualization" specification="_JaB9QLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je3Z_LkVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je3Z_bkVEe26eKBxVz0OTQ" type="_JBao8LkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JaB9QLkVEe26eKBxVz0OTQ" name="LatencyVisualization" visibility="package" method="_Je3Z-7kVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JaB9QrkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JaB9Q7kVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JaB9QbkVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JaB9RLkVEe26eKBxVz0OTQ" type="_JBao8LkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JBceILkVEe26eKBxVz0OTQ" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_JcMgcLkVEe26eKBxVz0OTQ" client="_JBceILkVEe26eKBxVz0OTQ" supplier="_JZYdAbkVEe26eKBxVz0OTQ" contract="_JZYdAbkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je3Z_rkVEe26eKBxVz0OTQ" name="compare" specification="_JcNHgbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je3Z_7kVEe26eKBxVz0OTQ" name="obj1" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je3aALkVEe26eKBxVz0OTQ" name="obj2" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je3aAbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JcNHgbkVEe26eKBxVz0OTQ" name="compare" method="_Je3Z_rkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JcNHgrkVEe26eKBxVz0OTQ" name="obj1" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JcNHg7kVEe26eKBxVz0OTQ" name="obj2" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JcNukLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JBe6YLkVEe26eKBxVz0OTQ" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_JcOVoLkVEe26eKBxVz0OTQ" client="_JBe6YLkVEe26eKBxVz0OTQ" supplier="_JZYdAbkVEe26eKBxVz0OTQ" contract="_JZYdAbkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je3aArkVEe26eKBxVz0OTQ" name="compare" specification="_JcO8sLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je3aA7kVEe26eKBxVz0OTQ" name="obj1" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je3aBLkVEe26eKBxVz0OTQ" name="obj2" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je3aBbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JcO8sLkVEe26eKBxVz0OTQ" name="compare" method="_Je3aArkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JcPjwLkVEe26eKBxVz0OTQ" name="obj1" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JcPjwbkVEe26eKBxVz0OTQ" name="obj2" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JcPjwrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JBgvkLkVEe26eKBxVz0OTQ" name="Node">
              <generalization xmi:id="_JaFAlLkVEe26eKBxVz0OTQ" general="_JEoVALkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdmOorkVEe26eKBxVz0OTQ" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Jdm1sLkVEe26eKBxVz0OTQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jdm1sbkVEe26eKBxVz0OTQ" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jdm1srkVEe26eKBxVz0OTQ" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jdm1s7kVEe26eKBxVz0OTQ" name="edges" type="_JY7KALkVEe26eKBxVz0OTQ" isReadOnly="true" association="_JgS9UbkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdncwbkVEe26eKBxVz0OTQ" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdncwrkVEe26eKBxVz0OTQ" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_JcPjxrkVEe26eKBxVz0OTQ" client="_JBgvkLkVEe26eKBxVz0OTQ" supplier="_Jby30bkVEe26eKBxVz0OTQ" contract="_Jby30bkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je4BALkVEe26eKBxVz0OTQ" name="Node" specification="_JBh9sLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je4BAbkVEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je4BArkVEe26eKBxVz0OTQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je4BA7kVEe26eKBxVz0OTQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je4BBLkVEe26eKBxVz0OTQ" type="_JBgvkLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je4BBbkVEe26eKBxVz0OTQ" name="compareTo" specification="_JaDycLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je4BBrkVEe26eKBxVz0OTQ" name="node" type="_JBgvkLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je4BB7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je4BCLkVEe26eKBxVz0OTQ" name="toString" specification="_JBikw7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je4BCbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je4BCrkVEe26eKBxVz0OTQ" name="addEdge" specification="_JaFAkrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je4BC7kVEe26eKBxVz0OTQ" name="edge" type="_JANvELkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je4BDLkVEe26eKBxVz0OTQ" name="addConflict" specification="_JBkZ8LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je4BDbkVEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je4BDrkVEe26eKBxVz0OTQ" name="numEdges" specification="_JBkZ8rkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je4BD7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je4BELkVEe26eKBxVz0OTQ" name="print" specification="_JBlBAbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je4BEbkVEe26eKBxVz0OTQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je5PILkVEe26eKBxVz0OTQ" name="print" specification="_JBmPIrkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JBh9sLkVEe26eKBxVz0OTQ" name="Node" visibility="package" method="_Je4BALkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JBikwLkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JBikwbkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JBh9sbkVEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JBh9srkVEe26eKBxVz0OTQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JBh9s7kVEe26eKBxVz0OTQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JBikwrkVEe26eKBxVz0OTQ" type="_JBgvkLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JBikw7kVEe26eKBxVz0OTQ" name="toString" method="_Je4BCLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JBjL0LkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JBkZ8LkVEe26eKBxVz0OTQ" name="addConflict" method="_Je4BDLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JBkZ8bkVEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JBkZ8rkVEe26eKBxVz0OTQ" name="numEdges" method="_Je4BDrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JBlBALkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JBlBAbkVEe26eKBxVz0OTQ" name="print" method="_Je4BELkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JBlBArkVEe26eKBxVz0OTQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JBmPIrkVEe26eKBxVz0OTQ" name="print" method="_Je5PILkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JaDycLkVEe26eKBxVz0OTQ" name="compareTo" method="_Je4BBbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaEZgLkVEe26eKBxVz0OTQ" name="node" type="_JBgvkLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JaEZgbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JaFAkrkVEe26eKBxVz0OTQ" name="addEdge" method="_Je4BCrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaFAk7kVEe26eKBxVz0OTQ" name="edge" type="_JANvELkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JBp5gLkVEe26eKBxVz0OTQ" name="NodeMap">
              <ownedComment xmi:id="_Jfj9grkVEe26eKBxVz0OTQ">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_JaGOsLkVEe26eKBxVz0OTQ" general="_I-dbkLkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdoD0LkVEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdoD0bkVEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JBqgkLkVEe26eKBxVz0OTQ" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_Jfj9g7kVEe26eKBxVz0OTQ">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_JaHc0bkVEe26eKBxVz0OTQ" general="_JCveoLkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je5PIbkVEe26eKBxVz0OTQ" name="NonPreemptiveSchedule" specification="_JaG1wbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je5PIrkVEe26eKBxVz0OTQ" name="poset" type="_JBxOQLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je5PI7kVEe26eKBxVz0OTQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je5PJLkVEe26eKBxVz0OTQ" type="_JBqgkLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JaG1wbkVEe26eKBxVz0OTQ" name="NonPreemptiveSchedule" visibility="package" method="_Je5PIbkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JaG1xLkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JaG1xbkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JaG1wrkVEe26eKBxVz0OTQ" name="poset" type="_JBxOQLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JaG1w7kVEe26eKBxVz0OTQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JaHc0LkVEe26eKBxVz0OTQ" type="_JBqgkLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JBrusLkVEe26eKBxVz0OTQ" name="NotImplentedVisualization">
              <generalization xmi:id="_JaHc07kVEe26eKBxVz0OTQ" general="_JDWioLkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdoD0rkVEe26eKBxVz0OTQ" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdoD07kVEe26eKBxVz0OTQ" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jdoq4LkVEe26eKBxVz0OTQ" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Jdoq4bkVEe26eKBxVz0OTQ" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jdoq4rkVEe26eKBxVz0OTQ" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Jdoq47kVEe26eKBxVz0OTQ" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je5PJbkVEe26eKBxVz0OTQ" name="NotImplentedVisualization" specification="_JBs80LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je5PJrkVEe26eKBxVz0OTQ" type="_JBrusLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je5PJ7kVEe26eKBxVz0OTQ" name="NotImplentedVisualization" specification="_JBtj4LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je5PKLkVEe26eKBxVz0OTQ" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je5PKbkVEe26eKBxVz0OTQ" type="_JBrusLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je5PKrkVEe26eKBxVz0OTQ" name="visualization" specification="_JBtj5bkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je5PK7kVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JBs80LkVEe26eKBxVz0OTQ" name="NotImplentedVisualization" visibility="package" method="_Je5PJbkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JBs80bkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JBs80rkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JBs807kVEe26eKBxVz0OTQ" type="_JBrusLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JBtj4LkVEe26eKBxVz0OTQ" name="NotImplentedVisualization" visibility="package" method="_Je5PJ7kVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JBtj4rkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JBtj47kVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JBtj4bkVEe26eKBxVz0OTQ" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JBtj5LkVEe26eKBxVz0OTQ" type="_JBrusLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JBtj5bkVEe26eKBxVz0OTQ" name="visualization" method="_Je5PKrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaHc0rkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JBvZELkVEe26eKBxVz0OTQ" name="PeriodComparator">
              <interfaceRealization xmi:id="_JcRY8LkVEe26eKBxVz0OTQ" client="_JBvZELkVEe26eKBxVz0OTQ" supplier="_JZYdAbkVEe26eKBxVz0OTQ" contract="_JZYdAbkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je5PLLkVEe26eKBxVz0OTQ" name="compare" specification="_JcSAALkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je5PLbkVEe26eKBxVz0OTQ" name="obj1" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je5PLrkVEe26eKBxVz0OTQ" name="obj2" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je5PL7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JcSAALkVEe26eKBxVz0OTQ" name="compare" method="_Je5PLLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JcSAAbkVEe26eKBxVz0OTQ" name="obj1" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JcSAArkVEe26eKBxVz0OTQ" name="obj2" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JcSAA7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JBxOQLkVEe26eKBxVz0OTQ" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_Jfj9hLkVEe26eKBxVz0OTQ">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Jdoq5LkVEe26eKBxVz0OTQ" name="activations" visibility="private" type="_I_J_ILkVEe26eKBxVz0OTQ" association="_JgTkYbkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdpR8bkVEe26eKBxVz0OTQ" name="workload" visibility="private" type="_JEMQILkVEe26eKBxVz0OTQ" association="_JgTkZLkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdpR87kVEe26eKBxVz0OTQ" name="flows" visibility="protected" type="_JAkUYLkVEe26eKBxVz0OTQ" association="_JgULcbkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_Jdp5AbkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Jdp5ArkVEe26eKBxVz0OTQ" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jdp5ALkVEe26eKBxVz0OTQ" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdqgELkVEe26eKBxVz0OTQ" name="nodes" visibility="private" type="_JBgvkLkVEe26eKBxVz0OTQ" association="_JgUygLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JdqgErkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JdqgE7kVEe26eKBxVz0OTQ" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdqgEbkVEe26eKBxVz0OTQ" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdqgFbkVEe26eKBxVz0OTQ" name="nodeMap" visibility="private" type="_JBp5gLkVEe26eKBxVz0OTQ" association="_JgUyg7kVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdrHILkVEe26eKBxVz0OTQ" name="priorityQueue" visibility="private" type="_JCV2ALkVEe26eKBxVz0OTQ" association="_JgVZkbkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdrHI7kVEe26eKBxVz0OTQ" name="nodeConnectivityMap" visibility="protected" type="_JY5U0LkVEe26eKBxVz0OTQ" association="_JgWAoLkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdruMrkVEe26eKBxVz0OTQ" name="activationMap" visibility="package" type="_JA32YLkVEe26eKBxVz0OTQ" association="_JgWAo7kVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je52MLkVEe26eKBxVz0OTQ" name="Poset" specification="_JaKgILkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je52MbkVEe26eKBxVz0OTQ" name="workload" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je52MrkVEe26eKBxVz0OTQ" type="_JBxOQLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je52M7kVEe26eKBxVz0OTQ" name="getNodeConnectivity" specification="_JBycYLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je52NLkVEe26eKBxVz0OTQ" type="_JY5U0LkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je52NbkVEe26eKBxVz0OTQ" name="getNodeNames" specification="_JB0RkLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je52NrkVEe26eKBxVz0OTQ" type="_JY7KALkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je52N7kVEe26eKBxVz0OTQ" name="getNodesNamesOrderedAlphabetically" specification="_JB1fsLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je52OLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Je52ObkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je52OrkVEe26eKBxVz0OTQ" name="buildPosetOfActivations" specification="_JB2GwbkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je52O7kVEe26eKBxVz0OTQ" name="createEdgeLists" specification="_JB2t0LkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je52PLkVEe26eKBxVz0OTQ" name="createConflictLists" specification="_JB2t0bkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je52PbkVEe26eKBxVz0OTQ" name="createGlobalConflictLists" specification="_JB2t0rkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je52PrkVEe26eKBxVz0OTQ" name="createLocalConflictLists" specification="_JB2t07kVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je52P7kVEe26eKBxVz0OTQ" name="findCoordinator" specification="_JcTOIbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je52QLkVEe26eKBxVz0OTQ" name="nodesInFlow" type="_JY7KALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je52QbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je6dQLkVEe26eKBxVz0OTQ" name="buildTxArray" specification="_JcT1MbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je6dQbkVEe26eKBxVz0OTQ" name="nodesInFlow" type="_JY7KALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je6dQrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Je6dQ7kVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je6dRLkVEe26eKBxVz0OTQ" name="createInitialActivations" specification="_JB3U4LkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je6dRbkVEe26eKBxVz0OTQ" name="getMaxTx" specification="_JaLHMLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je6dRrkVEe26eKBxVz0OTQ" name="node" type="_JBgvkLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je6dR7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je6dSLkVEe26eKBxVz0OTQ" name="getActivation" specification="_JaLuQLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je6dSbkVEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je6dSrkVEe26eKBxVz0OTQ" name="node" type="_JBgvkLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je6dS7kVEe26eKBxVz0OTQ" type="_I-kwULkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je6dTLkVEe26eKBxVz0OTQ" name="getHyperPeriod" specification="_JB378LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je6dTbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je6dTrkVEe26eKBxVz0OTQ" name="getMaxPhase" specification="_JB378rkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je6dT7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je6dULkVEe26eKBxVz0OTQ" name="orderActivations" specification="_JB4jALkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je6dUbkVEe26eKBxVz0OTQ" name="getNextActivation" specification="_JB4jAbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je6dUrkVEe26eKBxVz0OTQ" type="_I-kwULkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je6dU7kVEe26eKBxVz0OTQ" name="addActivation" specification="_JaMVULkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je6dVLkVEe26eKBxVz0OTQ" name="activation" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je6dVbkVEe26eKBxVz0OTQ" name="findBaseStation" specification="_JB5KELkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je6dVrkVEe26eKBxVz0OTQ" type="_JBgvkLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JBycYLkVEe26eKBxVz0OTQ" name="getNodeConnectivity" visibility="private" method="_Je52M7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JcSnErkVEe26eKBxVz0OTQ" type="_JY5U0LkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JB0RkLkVEe26eKBxVz0OTQ" name="getNodeNames" method="_Je52NbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JcTOILkVEe26eKBxVz0OTQ" type="_JY7KALkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JB1fsLkVEe26eKBxVz0OTQ" name="getNodesNamesOrderedAlphabetically" method="_Je52N7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JB1fsbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JB1fsrkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JB2GwbkVEe26eKBxVz0OTQ" name="buildPosetOfActivations" method="_Je52OrkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JB2t0LkVEe26eKBxVz0OTQ" name="createEdgeLists" visibility="private" method="_Je52O7kVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JB2t0bkVEe26eKBxVz0OTQ" name="createConflictLists" visibility="private" method="_Je52PLkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JB2t0rkVEe26eKBxVz0OTQ" name="createGlobalConflictLists" visibility="private" method="_Je52PbkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JB2t07kVEe26eKBxVz0OTQ" name="createLocalConflictLists" visibility="private" method="_Je52PrkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JB3U4LkVEe26eKBxVz0OTQ" name="createInitialActivations" visibility="private" method="_Je6dRLkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JB378LkVEe26eKBxVz0OTQ" name="getHyperPeriod" method="_Je6dTLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JB378bkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JB378rkVEe26eKBxVz0OTQ" name="getMaxPhase" method="_Je6dTrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JB3787kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JB4jALkVEe26eKBxVz0OTQ" name="orderActivations" method="_Je6dULkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JB4jAbkVEe26eKBxVz0OTQ" name="getNextActivation" method="_Je6dUbkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_Jfj9h7kVEe26eKBxVz0OTQ">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_JaLuRLkVEe26eKBxVz0OTQ" type="_I-kwULkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JB5KELkVEe26eKBxVz0OTQ" name="findBaseStation" visibility="protected" method="_Je6dVbkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfkkkbkVEe26eKBxVz0OTQ">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_JaMVUrkVEe26eKBxVz0OTQ" type="_JBgvkLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JaKgILkVEe26eKBxVz0OTQ" name="Poset" visibility="package" method="_Je52MLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JaKgIrkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JaKgI7kVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Jfj9hbkVEe26eKBxVz0OTQ">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_JaKgIbkVEe26eKBxVz0OTQ" name="workload" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JaKgJLkVEe26eKBxVz0OTQ" type="_JBxOQLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JaLHMLkVEe26eKBxVz0OTQ" name="getMaxTx" visibility="private" method="_Je6dRbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaLHMbkVEe26eKBxVz0OTQ" name="node" type="_JBgvkLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JaLHMrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JaLuQLkVEe26eKBxVz0OTQ" name="getActivation" visibility="private" method="_Je6dSLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaLuQbkVEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JaLuQrkVEe26eKBxVz0OTQ" name="node" type="_JBgvkLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JaLuQ7kVEe26eKBxVz0OTQ" type="_I-kwULkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JaMVULkVEe26eKBxVz0OTQ" name="addActivation" method="_Je6dU7kVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfkkkLkVEe26eKBxVz0OTQ">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_JaMVUbkVEe26eKBxVz0OTQ" name="activation" type="_I-kwULkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JcTOIbkVEe26eKBxVz0OTQ" name="findCoordinator" visibility="protected" method="_Je52P7kVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_Jfj9hrkVEe26eKBxVz0OTQ">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_JcTOIrkVEe26eKBxVz0OTQ" name="nodesInFlow" type="_JY7KALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JcTOI7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JcT1MbkVEe26eKBxVz0OTQ" name="buildTxArray" visibility="private" method="_Je6dQLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JcT1MrkVEe26eKBxVz0OTQ" name="nodesInFlow" type="_JY7KALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JcT1M7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JcT1NLkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JB-CkLkVEe26eKBxVz0OTQ" name="PreemptiveSchedule">
              <ownedComment xmi:id="_JfkkkrkVEe26eKBxVz0OTQ">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_JaTqErkVEe26eKBxVz0OTQ" general="_JCveoLkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je6dV7kVEe26eKBxVz0OTQ" name="PreemptiveSchedule" specification="_JaOKgLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je6dWLkVEe26eKBxVz0OTQ" name="poset" type="_JBxOQLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je6dWbkVEe26eKBxVz0OTQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je6dWrkVEe26eKBxVz0OTQ" type="_JB-CkLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je6dW7kVEe26eKBxVz0OTQ" name="continueSearch" specification="_JaOxkLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je6dXLkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je6dXbkVEe26eKBxVz0OTQ" name="activation" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je6dXrkVEe26eKBxVz0OTQ" type="_JcVDULkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je7EULkVEe26eKBxVz0OTQ" name="toProgram" specification="_JB-poLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je7EUbkVEe26eKBxVz0OTQ" type="_JCJBsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je7EUrkVEe26eKBxVz0OTQ" name="findPreeptiveChannelAndTime" specification="_JaP_sLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je7EU7kVEe26eKBxVz0OTQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je7EVLkVEe26eKBxVz0OTQ" name="schedulableObject" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je7EVbkVEe26eKBxVz0OTQ" type="_JcVDULkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je7EVrkVEe26eKBxVz0OTQ" name="findAdditionalTime" specification="_JaP_s7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je7EV7kVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je7EWLkVEe26eKBxVz0OTQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je7EWbkVEe26eKBxVz0OTQ" name="a1" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je7EWrkVEe26eKBxVz0OTQ" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je7EW7kVEe26eKBxVz0OTQ" type="_JY7KALkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je7rYLkVEe26eKBxVz0OTQ" name="findMaxTimeAvailable" specification="_JaRN0bkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je7rYbkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je7rYrkVEe26eKBxVz0OTQ" name="schedulableObject" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je7rY7kVEe26eKBxVz0OTQ" type="_JcVDULkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je7rZLkVEe26eKBxVz0OTQ" name="availableTime" specification="_JaR04rkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je7rZbkVEe26eKBxVz0OTQ" name="a1" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je7rZrkVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je7rZ7kVEe26eKBxVz0OTQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je7raLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je7rabkVEe26eKBxVz0OTQ" name="addToSchedule" specification="_JaSb8bkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je7rarkVEe26eKBxVz0OTQ" name="next" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je7ra7kVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je7rbLkVEe26eKBxVz0OTQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je7rbbkVEe26eKBxVz0OTQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je7rbrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je7rb7kVEe26eKBxVz0OTQ" name="addToSchedule" specification="_JaTDALkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je7rcLkVEe26eKBxVz0OTQ" name="next" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je7rcbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JB-poLkVEe26eKBxVz0OTQ" name="toProgram" method="_Je7EULkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaPYo7kVEe26eKBxVz0OTQ" type="_JCJBsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JaOKgLkVEe26eKBxVz0OTQ" name="PreemptiveSchedule" visibility="package" method="_Je6dV7kVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JaOKg7kVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JaOKhLkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JaOKgbkVEe26eKBxVz0OTQ" name="poset" type="_JBxOQLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JaOKgrkVEe26eKBxVz0OTQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JaOKhbkVEe26eKBxVz0OTQ" type="_JB-CkLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JaOxkLkVEe26eKBxVz0OTQ" name="continueSearch" visibility="protected" method="_Je6dW7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaOxkbkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JaOxkrkVEe26eKBxVz0OTQ" name="activation" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JcVqYbkVEe26eKBxVz0OTQ" type="_JcVDULkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JaP_sLkVEe26eKBxVz0OTQ" name="findPreeptiveChannelAndTime" visibility="private" method="_Je7EUrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaP_sbkVEe26eKBxVz0OTQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JaP_srkVEe26eKBxVz0OTQ" name="schedulableObject" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JcVqYrkVEe26eKBxVz0OTQ" type="_JcVDULkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JaP_s7kVEe26eKBxVz0OTQ" name="findAdditionalTime" visibility="private" method="_Je7EVrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaQmwLkVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JaQmwbkVEe26eKBxVz0OTQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JaQmwrkVEe26eKBxVz0OTQ" name="a1" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JaQmw7kVEe26eKBxVz0OTQ" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JcWRcLkVEe26eKBxVz0OTQ" type="_JY7KALkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JaRN0bkVEe26eKBxVz0OTQ" name="findMaxTimeAvailable" visibility="private" method="_Je7rYLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaR04LkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JaR04bkVEe26eKBxVz0OTQ" name="schedulableObject" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JcWRcbkVEe26eKBxVz0OTQ" type="_JcVDULkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JaR04rkVEe26eKBxVz0OTQ" name="availableTime" visibility="private" method="_Je7rZLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaR047kVEe26eKBxVz0OTQ" name="a1" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JaR05LkVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JaR05bkVEe26eKBxVz0OTQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JaSb8LkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JaSb8bkVEe26eKBxVz0OTQ" name="addToSchedule" visibility="private" method="_Je7rabkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaSb8rkVEe26eKBxVz0OTQ" name="next" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JaSb87kVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JaSb9LkVEe26eKBxVz0OTQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JaSb9bkVEe26eKBxVz0OTQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JaSb9rkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JaTDALkVEe26eKBxVz0OTQ" name="addToSchedule" visibility="protected" method="_Je7rb7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaTDAbkVEe26eKBxVz0OTQ" name="next" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JaTDArkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JCDiILkVEe26eKBxVz0OTQ" name="PriorityComparator">
              <interfaceRealization xmi:id="_JcWRcrkVEe26eKBxVz0OTQ" client="_JCDiILkVEe26eKBxVz0OTQ" supplier="_JZYdAbkVEe26eKBxVz0OTQ" contract="_JZYdAbkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je7rcrkVEe26eKBxVz0OTQ" name="compare" specification="_JcXfkLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je7rc7kVEe26eKBxVz0OTQ" name="obj1" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je7rdLkVEe26eKBxVz0OTQ" name="obj2" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je7rdbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JcXfkLkVEe26eKBxVz0OTQ" name="compare" method="_Je7rcrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JcXfkbkVEe26eKBxVz0OTQ" name="obj1" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JcXfkrkVEe26eKBxVz0OTQ" name="obj2" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JcXfk7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JCFXULkVEe26eKBxVz0OTQ" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_Jfkkk7kVEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_JcYGoLkVEe26eKBxVz0OTQ" general="_JZqw4bkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jds8ULkVEe26eKBxVz0OTQ" name="workLoad" visibility="package" type="_JEMQILkVEe26eKBxVz0OTQ" association="_JgWnsbkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jds8UrkVEe26eKBxVz0OTQ" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je8ScLkVEe26eKBxVz0OTQ" name="WorkLoadListener" specification="_JaU4MLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je8ScbkVEe26eKBxVz0OTQ" name="workLoad" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je8ScrkVEe26eKBxVz0OTQ" type="_JCFXULkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je8Sc7kVEe26eKBxVz0OTQ" name="buildNodesAndFlows" specification="_JaVfRLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je8SdLkVEe26eKBxVz0OTQ" name="workLoad" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je8SdbkVEe26eKBxVz0OTQ" name="testPrintStdOut" specification="_JCGlcLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je8SdrkVEe26eKBxVz0OTQ" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je8Sd7kVEe26eKBxVz0OTQ" name="enterWarpName" specification="_JaVfRrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je8SeLkVEe26eKBxVz0OTQ" name="ctx" type="_JZsmErkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je8SebkVEe26eKBxVz0OTQ" name="enterFlowName" specification="_JaWGU7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je8SerkVEe26eKBxVz0OTQ" name="ctx" type="_JZvpYbkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je8Se7kVEe26eKBxVz0OTQ" name="exitPriority" specification="_JaXUcbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je8SfLkVEe26eKBxVz0OTQ" name="ctx" type="_JaWtY7kVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je8SfbkVEe26eKBxVz0OTQ" name="exitPeriod" specification="_JaX7grkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je8SfrkVEe26eKBxVz0OTQ" name="ctx" type="_JaX7gLkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je8Sf7kVEe26eKBxVz0OTQ" name="exitDeadline" specification="_JaZJobkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je8SgLkVEe26eKBxVz0OTQ" name="ctx" type="_JaYik7kVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je85gLkVEe26eKBxVz0OTQ" name="exitPhase" specification="_JaaXwLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je85gbkVEe26eKBxVz0OTQ" name="ctx" type="_JaZwsrkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je85grkVEe26eKBxVz0OTQ" name="exitSrcNode" specification="_JaaXxbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je85g7kVEe26eKBxVz0OTQ" name="ctx" type="_JZwQc7kVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je85hLkVEe26eKBxVz0OTQ" name="exitSnkNode" specification="_Jaa-07kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je85hbkVEe26eKBxVz0OTQ" name="ctx" type="_JZyForkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je85hrkVEe26eKBxVz0OTQ" name="exitFlow" specification="_Jabl47kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je85h7kVEe26eKBxVz0OTQ" name="ctx" type="_JZz60LkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JCGlcLkVEe26eKBxVz0OTQ" name="testPrintStdOut" method="_Je8SdbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JCGlcbkVEe26eKBxVz0OTQ" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JaU4MLkVEe26eKBxVz0OTQ" name="WorkLoadListener" visibility="private" method="_Je8ScLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JaVfQbkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JaVfQrkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JaVfQLkVEe26eKBxVz0OTQ" name="workLoad" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JaVfQ7kVEe26eKBxVz0OTQ" type="_JCFXULkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JaVfRLkVEe26eKBxVz0OTQ" name="buildNodesAndFlows" isStatic="true" method="_Je8Sc7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaVfRbkVEe26eKBxVz0OTQ" name="workLoad" type="_JEMQILkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JaVfRrkVEe26eKBxVz0OTQ" name="enterWarpName" method="_Je8Sd7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaVfR7kVEe26eKBxVz0OTQ" name="ctx" type="_JZsmErkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JaWGU7kVEe26eKBxVz0OTQ" name="enterFlowName" method="_Je8SebkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaWGVLkVEe26eKBxVz0OTQ" name="ctx" type="_JZvpYbkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JaXUcbkVEe26eKBxVz0OTQ" name="exitPriority" method="_Je8Se7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaXUcrkVEe26eKBxVz0OTQ" name="ctx" type="_JaWtY7kVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JaX7grkVEe26eKBxVz0OTQ" name="exitPeriod" method="_Je8SfbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaX7g7kVEe26eKBxVz0OTQ" name="ctx" type="_JaX7gLkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JaZJobkVEe26eKBxVz0OTQ" name="exitDeadline" method="_Je8Sf7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaZJorkVEe26eKBxVz0OTQ" name="ctx" type="_JaYik7kVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JaaXwLkVEe26eKBxVz0OTQ" name="exitPhase" method="_Je85gLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaaXwbkVEe26eKBxVz0OTQ" name="ctx" type="_JaZwsrkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JaaXxbkVEe26eKBxVz0OTQ" name="exitSrcNode" method="_Je85grkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaaXxrkVEe26eKBxVz0OTQ" name="ctx" type="_JZwQc7kVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Jaa-07kVEe26eKBxVz0OTQ" name="exitSnkNode" method="_Je85hLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jaa-1LkVEe26eKBxVz0OTQ" name="ctx" type="_JZyForkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Jabl47kVEe26eKBxVz0OTQ" name="exitFlow" method="_Je85hrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jabl5LkVEe26eKBxVz0OTQ" name="ctx" type="_JZz60LkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JCJBsLkVEe26eKBxVz0OTQ" name="ProgramSchedule">
              <generalization xmi:id="_Jac0ALkVEe26eKBxVz0OTQ" general="_JDGrALkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JduKcLkVEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JduKcbkVEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je85iLkVEe26eKBxVz0OTQ" name="ProgramSchedule" specification="_JCJowLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je85ibkVEe26eKBxVz0OTQ" type="_JCJBsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je85irkVEe26eKBxVz0OTQ" name="ProgramSchedule" specification="_JCKP0LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je85i7kVEe26eKBxVz0OTQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je85jLkVEe26eKBxVz0OTQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je85jbkVEe26eKBxVz0OTQ" type="_JCJBsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JCJowLkVEe26eKBxVz0OTQ" name="ProgramSchedule" method="_Je85iLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JCJowbkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JCJowrkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JCJow7kVEe26eKBxVz0OTQ" type="_JCJBsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JCKP0LkVEe26eKBxVz0OTQ" name="ProgramSchedule" visibility="package" method="_Je85irkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JCKP07kVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JCKP1LkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JCKP0bkVEe26eKBxVz0OTQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JCKP0rkVEe26eKBxVz0OTQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JCKP1bkVEe26eKBxVz0OTQ" type="_JCJBsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JCK24LkVEe26eKBxVz0OTQ" name="ProgramVisualization">
              <ownedComment xmi:id="_JfkklLkVEe26eKBxVz0OTQ">
                <body>Allows the user to generate a GUI to visualize WARP data given by .dsl files.&#xD;
If applicable, the GUI will contain minimum packet reception rate, End-to-End transmission reliability, &#xD;
and number of channels.&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_JaeCI7kVEe26eKBxVz0OTQ" general="_JDWioLkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JduKcrkVEe26eKBxVz0OTQ" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JduKc7kVEe26eKBxVz0OTQ" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JduKdLkVEe26eKBxVz0OTQ" name="sourceCode" visibility="private" type="_JCJBsLkVEe26eKBxVz0OTQ" association="_JgWntLkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JduxgLkVEe26eKBxVz0OTQ" name="program" visibility="private" type="_JE8eELkVEe26eKBxVz0OTQ" association="_JgXOwbkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JduxgrkVEe26eKBxVz0OTQ" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je85jrkVEe26eKBxVz0OTQ" name="ProgramVisualization" specification="_JadbELkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je85j7kVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je85kLkVEe26eKBxVz0OTQ" type="_JCK24LkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je9gkLkVEe26eKBxVz0OTQ" name="displayVisualization" specification="_JCLd8LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je9gkbkVEe26eKBxVz0OTQ" type="_JBDckLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je9gkrkVEe26eKBxVz0OTQ" name="createHeader" specification="_JCMsErkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je9gk7kVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(createTitle());&#xD;
 header.add(String.format(&quot;Scheduler Name: %s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumFaults() > 0) { // only specify when deterministic fault model is assumed&#xD;
   header.add(String.format(&quot;numFaults: %d\n&quot;, program.getNumFaults()));&#xD;
 }&#xD;
 header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
 header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(program.getE2e())));&#xD;
 header.add(String.format(&quot;nChannels: %d\n&quot;, program.getNumChannels()));&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je9glLkVEe26eKBxVz0OTQ" name="createFooter" specification="_JCNTIrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je9glbkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je9glrkVEe26eKBxVz0OTQ" name="createColumnHeader" specification="_JCN6M7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je9gl7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Je9gmLkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
 String[] columnNames = new String[orderedNodes.length + 1];&#xD;
 columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first&#xD;
 /* loop through the node names, adding each to the header */&#xD;
 for (int i = 0; i &lt; orderedNodes.length; i++) {&#xD;
   columnNames[i + 1] = orderedNodes[i];&#xD;
 }&#xD;
 return columnNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je9gmbkVEe26eKBxVz0OTQ" name="createVisualizationData" specification="_JCPIUrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je9gmrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Je9gm7kVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
   int numRows = sourceCode.getNumRows();&#xD;
   int numColumns = sourceCode.getNumColumns();&#xD;
   visualizationData = new String[numRows][numColumns + 1];&#xD;
&#xD;
   for (int row = 0; row &lt; numRows; row++) {&#xD;
     visualizationData[row][0] = String.format(&quot;%s&quot;, row);&#xD;
     for (int column = 0; column &lt; numColumns; column++) {&#xD;
       visualizationData[row][column + 1] = sourceCode.get(row, column);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return visualizationData;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je9gnLkVEe26eKBxVz0OTQ" name="createTitle" specification="_JCPvY7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je9gnbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;WARP program for graph %s\n&quot;, program.getName());&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JCLd8LkVEe26eKBxVz0OTQ" name="displayVisualization" method="_Je9gkLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaeCILkVEe26eKBxVz0OTQ" type="_JBDckLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JCMsErkVEe26eKBxVz0OTQ" name="createHeader" visibility="protected" method="_Je9gkrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaeCIbkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JCNTIrkVEe26eKBxVz0OTQ" name="createFooter" visibility="protected" method="_Je9glLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaeCIrkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JCN6M7kVEe26eKBxVz0OTQ" name="createColumnHeader" visibility="protected" method="_Je9glrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JCOhQLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JCOhQbkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JCPIUrkVEe26eKBxVz0OTQ" name="createVisualizationData" visibility="protected" method="_Je9gmbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JCPIU7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JCPIVLkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JCPvY7kVEe26eKBxVz0OTQ" name="createTitle" visibility="private" method="_Je9gnLkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfkklrkVEe26eKBxVz0OTQ">
                  <body>Creates a title for the GUI using the name from the program.&#xD;
   * &#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_JCQWcLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JadbELkVEe26eKBxVz0OTQ" name="ProgramVisualization" visibility="package" method="_Je85jrkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JadbErkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JadbE7kVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_JfkklbkVEe26eKBxVz0OTQ">
                  <body>Constructor for new ProgramVisualization. Used WARP file as input changes it to&#xD;
   * a program and gets the schedule and deadlines met.&#xD;
   * &#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_JadbEbkVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JadbFLkVEe26eKBxVz0OTQ" type="_JCK24LkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JCSLoLkVEe26eKBxVz0OTQ" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_JcYtsLkVEe26eKBxVz0OTQ" client="_JCSLoLkVEe26eKBxVz0OTQ" supplier="_JZYdAbkVEe26eKBxVz0OTQ" contract="_JZYdAbkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je9gnrkVEe26eKBxVz0OTQ" name="compare" specification="_JcZUwLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je9gn7kVEe26eKBxVz0OTQ" name="obj1" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je9goLkVEe26eKBxVz0OTQ" name="obj2" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je9gobkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JcZUwLkVEe26eKBxVz0OTQ" name="compare" method="_Je9gnrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JcZ70LkVEe26eKBxVz0OTQ" name="obj1" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JcZ70bkVEe26eKBxVz0OTQ" name="obj2" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JcZ70rkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JCUA0LkVEe26eKBxVz0OTQ" name="ReleaseTimeQueue">
              <generalization xmi:id="_JCWdELkVEe26eKBxVz0OTQ" general="_JCV2ALkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jdv_oLkVEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Jdv_obkVEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je-HoLkVEe26eKBxVz0OTQ" name="ReleaseTimeQueue" specification="_JCVO8LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je-HobkVEe26eKBxVz0OTQ" type="_JCUA0LkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je-HorkVEe26eKBxVz0OTQ" name="ReleaseTimeQueue" specification="_JaepMLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je-Ho7kVEe26eKBxVz0OTQ" name="schedulableObjects" type="_JaIq8LkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je-HpLkVEe26eKBxVz0OTQ" type="_JCUA0LkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JCVO8LkVEe26eKBxVz0OTQ" name="ReleaseTimeQueue" visibility="package" method="_Je-HoLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JCVO8bkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JCVO8rkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JCVO87kVEe26eKBxVz0OTQ" type="_JCUA0LkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JaepMLkVEe26eKBxVz0OTQ" name="ReleaseTimeQueue" visibility="package" method="_Je-HorkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JafQQbkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JafQQrkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JafQQLkVEe26eKBxVz0OTQ" name="schedulableObjects" type="_JaIq8LkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JafQQ7kVEe26eKBxVz0OTQ" type="_JCUA0LkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JCXEIbkVEe26eKBxVz0OTQ" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_ASCKcMqOEe2esKyal-zizw">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages&#xD;
transmitted in flows for the WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The&#xD;
end-to-end reliability for each flow, flow:src->sink, is computed iteratively&#xD;
as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released.&#xD;
All other initial probabilities are 0.0. (That is, the reset of the nodes in&#xD;
the flow have an initial probability value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState =&#xD;
(1-M)*PrevSnkNodeState + M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by&#xD;
the node SinkNode. Thus, the NewSinkNodeState probability will increase each&#xD;
time a push or pull is executed with SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the&#xD;
message reaching that node, and the end-to-end reliability of a flow is the&#xD;
value of the last Flow:SinkNode probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to compute the probabilities&#xD;
the comprise the ReliablityMatrix, which is the core of the file&#xD;
visualization that is requested in Warp.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the&#xD;
instructions for each node, in each time slot, to extract the src and snk&#xD;
nodes in the instruction and then apply the message success probability&#xD;
equation defined above.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to&#xD;
extract the src and snk nodes from the instruction string in a program&#xD;
schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ARv2kMqOEe2esKyal-zizw" name="E2E_M_CONSTRUCTOR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ARxEsMqOEe2esKyal-zizw" value="&quot;E2E_M_CONSTRUCTOR&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ARxEscqOEe2esKyal-zizw" name="NUM_FAULTS_CONSTRUCTOR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ARxEssqOEe2esKyal-zizw" value="&quot;NUM_FAULTS_CONSTRUCTOR&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ARxrwMqOEe2esKyal-zizw" name="e2e" visibility="private" type="_JcZ71rkVEe26eKBxVz0OTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ARxrwcqOEe2esKyal-zizw" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ARxrw8qOEe2esKyal-zizw" name="minPacketReceptionRate" visibility="private" type="_JcZ71rkVEe26eKBxVz0OTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ARy54MqOEe2esKyal-zizw" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ARy54sqOEe2esKyal-zizw" name="numFaults" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ARy548qOEe2esKyal-zizw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AR0IAMqOEe2esKyal-zizw" name="program" visibility="private" type="_JE8eELkVEe26eKBxVz0OTQ" association="_ASLUYMqOEe2esKyal-zizw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_AR0IAcqOEe2esKyal-zizw" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AR1WIMqOEe2esKyal-zizw" name="constructorUsed" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_AR1WIcqOEe2esKyal-zizw" value="null"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je-HpbkVEe26eKBxVz0OTQ" name="ReliabilityAnalysis" specification="_JageYLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je-HprkVEe26eKBxVz0OTQ" name="program" type="_JE8eELkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je-Hp7kVEe26eKBxVz0OTQ" type="_JCXEIbkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.program = program;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je-HqLkVEe26eKBxVz0OTQ" name="verifyReliabilities" specification="_JCXrMLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je-HqbkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AR5AgMqOEe2esKyal-zizw" name="ReliabilityAnalysis" specification="_AQ0pgMqOEe2esKyal-zizw">
                <ownedParameter xmi:id="_AR5AgcqOEe2esKyal-zizw" name="e2e" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_AR5AgsqOEe2esKyal-zizw" name="minPacketReceptionRate" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_AR5Ag8qOEe2esKyal-zizw" type="_JCXEIbkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
		this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
		this.constructorUsed = E2E_M_CONSTRUCTOR;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AR5nkMqOEe2esKyal-zizw" name="ReliabilityAnalysis" specification="_ARjCQMqOEe2esKyal-zizw">
                <ownedParameter xmi:id="_AR5nkcqOEe2esKyal-zizw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AR5nksqOEe2esKyal-zizw" type="_JCXEIbkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.numFaults = numFaults;&#xD;
		this.constructorUsed = NUM_FAULTS_CONSTRUCTOR;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AR6OoMqOEe2esKyal-zizw" name="numTxAttemptsPerLinkAndTotalTxAttempts" specification="_ARjpUMqOEe2esKyal-zizw">
                <ownedParameter xmi:id="_AR6OocqOEe2esKyal-zizw" name="flow" type="_JAkUYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_AR6OosqOEe2esKyal-zizw" name="e2e" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_AR6Oo8qOEe2esKyal-zizw" name="M" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_AR6OpMqOEe2esKyal-zizw" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AR6OpcqOEe2esKyal-zizw" type="_JY7KALkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
		    var nNodesInFlow = nodesInFlow.size(); // The last entry will contain the worst-case cost of&#xD;
		                                           // transmitting E2E in isolation&#xD;
		    // ArrayList&lt;Integer> nPushes = Array(repeating: 0, count: nNodesInFlow+1);&#xD;
		    ArrayList&lt;Integer> nPushes = new ArrayList&lt;Integer>();// Array to track nPushes for each node in this&#xD;
		    for (int i = 0; i &lt; nNodesInFlow + 1; i++) {&#xD;
		    	// initialize to all 0 values&#xD;
		    	nPushes.add(0);    }&#xD;
		                                                 // flow (same as nTx per link)&#xD;
		    &#xD;
		    var nHops = nNodesInFlow - 1;&#xD;
		    // minLinkReliablityNeded is the minimum reliability needed per link in a flow to hit E2E&#xD;
		    // reliability for the flow&#xD;
		    Double minLinkReliablityNeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops))); // use max&#xD;
		                                                                                          // to&#xD;
		                                                                                          // handle&#xD;
		                                                                                          // rounding&#xD;
		                                                                                          // error&#xD;
		                                                                                          // when&#xD;
		                                                                                          // e2e ==&#xD;
		                                                                                          // 1.0&#xD;
		    // Now compute reliability of packet reaching each node in the given time slot&#xD;
		    // Start with a 2-D reliability window that is a 2-D matrix of no size&#xD;
		    // each row is a time slot, stating at time 0&#xD;
		    // each column represents the reliability of the packet reaching that node at the&#xD;
		    // current time slot (i.e., the row it is in)&#xD;
		    // will add rows as we compute reliabilities until the final reliability is reached&#xD;
		    // for all nodes.&#xD;
		   ReliabilityTable reliabilityWindow = new ReliabilityTable();&#xD;
		   ReliabilityRow newReliabilityRow = new ReliabilityRow();&#xD;
		    for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
		      newReliabilityRow.add(0.0); // create the the row initialized with 0.0 values&#xD;
		    }&#xD;
		    reliabilityWindow.add(newReliabilityRow); // now add row to the reliability window, Time 0&#xD;
		    ReliabilityRow tmpVector = reliabilityWindow.get(0);&#xD;
		    ArrayList&lt;Double> currentReliabilityRow = new ArrayList&lt;Double>();&#xD;
		    for (int i = 0; i &lt; tmpVector.size(); i++) {&#xD;
		    	currentReliabilityRow.add(tmpVector.get(i));&#xD;
		    }&#xD;
		    // var currentReliabilityRow = (Double[]) reliabilityWindow.get(0).toArray();&#xD;
		    // Want reliabilityWindow[0][0] = 1.0 (i.e., P(packet@FlowSrc) = 1&#xD;
		    // but I din't want to mess with the newReliablityRow vector I use below&#xD;
		    // So, we initialize this first entry to 1.0, which is reliabilityWindow[0][0]&#xD;
		    // We will then update this row with computed values for each node and put it&#xD;
		    // back in the matrix&#xD;
		    currentReliabilityRow.set(0, 1.0); // initialize (i.e., P(packet@FlowSrc) = 1&#xD;
		    Double e2eReliabilityState = currentReliabilityRow.get(nNodesInFlow - 1); // the analysis will end&#xD;
		                                                                          // when the 2e2&#xD;
		                                                                          // reliability metrix is&#xD;
		                                                                          // met, initially the&#xD;
		                                                                          // state is not met and&#xD;
		                                                                          // will be 0 with this&#xD;
		                                                                          // statement&#xD;
		    var timeSlot = 0; // start time at 0&#xD;
		    while (e2eReliabilityState &lt; e2e) { // change to while and increment increment timeSlot becuase&#xD;
		                                        // we don't know how long this schedule window will last&#xD;
		      ArrayList&lt;Double> prevReliabilityRow = new ArrayList&lt;Double>(currentReliabilityRow);&#xD;
		      currentReliabilityRow.clear(); // would&#xD;
			    for (int i = 0; i &lt; newReliabilityRow.size(); i++) {&#xD;
			    	currentReliabilityRow.add(newReliabilityRow.get(i));&#xD;
			    }&#xD;
		       &#xD;
		      &#xD;
		      &#xD;
		      &#xD;
		      // be&#xD;
		                                                                                         // reliabilityWindow[timeSlot]&#xD;
		                                                                                               // if&#xD;
		                                                                                               // working&#xD;
		                                                                                               // through&#xD;
		                                                                                               // a&#xD;
		                                                                                               // schedule&#xD;
		      // Now use each flow:src->sink to update reliability computations&#xD;
		      // this is the update formula for the state probabilities&#xD;
		      // nextState = (1 - M) * prevState + M*NextHighestFlowState&#xD;
		      // use MinLQ for M in above equation&#xD;
		      // NewSinkNodeState = (1-M)*PrevSnkNodeState + M*PrevSrcNodeState&#xD;
&#xD;
		      for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) { // loop through each&#xD;
		                                                                             // node in the flow and&#xD;
		                                                                             // update the sates for&#xD;
		                                                                             // each link (i.e.,&#xD;
		                                                                             // sink->src pair)&#xD;
		        var flowSrcNodeindex = nodeIndex;&#xD;
		        var flowSnkNodeindex = nodeIndex + 1;&#xD;
		        var prevSrcNodeState = prevReliabilityRow.get(flowSrcNodeindex);&#xD;
		        var prevSnkNodeState = prevReliabilityRow.get(flowSnkNodeindex);&#xD;
		        Double nextSnkState;&#xD;
		        if ((prevSnkNodeState &lt; minLinkReliablityNeded) &amp;&amp; prevSrcNodeState > 0) { // do a push&#xD;
		                                                                                   // until PrevSnk&#xD;
		                                                                                   // state > e2e to&#xD;
		                                                                                   // ensure next&#xD;
		                                                                                   // node reaches&#xD;
		                                                                                   // target E2E BUT&#xD;
		                                                                                   // skip if no&#xD;
		                                                                                   // chance of&#xD;
		                                                                                   // success (i.e.,&#xD;
		                                                                                   // source doesn't&#xD;
		                                                                                   // have packet)&#xD;
		          nextSnkState = ((1.0 - M) * prevSnkNodeState) + (M * prevSrcNodeState); // need to&#xD;
		                                                                                  // continue&#xD;
		                                                                                  // attempting to&#xD;
		                                                                                  // Tx, so update&#xD;
		                                                                                  // current state&#xD;
		          nPushes.set(nodeIndex, nPushes.get(nodeIndex) + 1); // increment the number of pushes for for this node to snk node&#xD;
		        } else {&#xD;
		          nextSnkState = prevSnkNodeState; // snkNode has met its reliability. Thus move on to the&#xD;
		                                           // next node and record the reliability met&#xD;
		        }&#xD;
&#xD;
		        if (currentReliabilityRow.get(flowSrcNodeindex) &lt; prevReliabilityRow.get(flowSrcNodeindex)) { // probabilities&#xD;
		                                                                                              // are&#xD;
		                                                                                              // non-decreasing&#xD;
		                                                                                              // so&#xD;
		                                                                                              // update&#xD;
		                                                                                              // if&#xD;
		                                                                                              // we&#xD;
		                                                                                              // were&#xD;
		                                                                                              // higher&#xD;
		                                                                                              // by&#xD;
		                                                                                              // carring&#xD;
		                                                                                              // old&#xD;
		                                                                                              // value&#xD;
		                                                                                              // forward&#xD;
		          currentReliabilityRow.set(flowSrcNodeindex, prevReliabilityRow.get(flowSrcNodeindex)); // carry&#xD;
		                                                                                          // forward&#xD;
		                                                                                          // the&#xD;
		                                                                                          // previous&#xD;
		                                                                                          // state&#xD;
		                                                                                          // for the&#xD;
		                                                                                          // src&#xD;
		                                                                                          // node,&#xD;
		                                                                                          // which&#xD;
		                                                                                          // may get&#xD;
		                                                                                          // over&#xD;
		                                                                                          // written&#xD;
		                                                                                          // later&#xD;
		                                                                                          // by&#xD;
		                                                                                          // another&#xD;
		                                                                                          // instruction&#xD;
		                                                                                          // in this&#xD;
		                                                                                          // slot&#xD;
		        }&#xD;
		        currentReliabilityRow.set(flowSnkNodeindex, nextSnkState);&#xD;
		      }&#xD;
&#xD;
		      e2eReliabilityState = currentReliabilityRow.get(nNodesInFlow - 1);&#xD;
		      ReliabilityRow currentReliabilityVector = new ReliabilityRow();&#xD;
		      // convert the row to a vector so we can add it to the reliability window&#xD;
		      Collections.addAll(currentReliabilityVector, currentReliabilityRow.toArray(new Double [0]));&#xD;
		      if (timeSlot &lt; reliabilityWindow.size()) {&#xD;
		        reliabilityWindow.set(timeSlot, (currentReliabilityVector));&#xD;
		      } else {&#xD;
		        reliabilityWindow.add(currentReliabilityVector);&#xD;
		      }&#xD;
		      timeSlot += 1; // increase to next time slot&#xD;
		    }&#xD;
		    var size = reliabilityWindow.size();&#xD;
		    nPushes.set(nNodesInFlow, size); // The total (worst-case) cost to transmit E2E in isolation with&#xD;
		                                  // specified reliability target is the number of rows in the&#xD;
		                                  // reliabilityWindow&#xD;
		    return nPushes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AR6OpsqOEe2esKyal-zizw" name="getFixedTxPerLinkAndTotalTxCost" specification="_AQ13ocqOEe2esKyal-zizw">
                <ownedParameter xmi:id="_AR6Op8qOEe2esKyal-zizw" name="flow" type="_JAkUYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_AR6OqMqOEe2esKyal-zizw" type="_JY7KALkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
		    var nNodesInFlow = nodesInFlow.size();&#xD;
		    ArrayList&lt;Integer> txArrayList = new ArrayList&lt;Integer>();&#xD;
		    /*&#xD;
		     * Each node will have at most numFaults+1 transmissions. Because we don't know which nodes will&#xD;
		     * send the message over an edge, we give the cost to each node.&#xD;
		     */&#xD;
		    for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
		      txArrayList.add(numFaults + 1);&#xD;
		    }&#xD;
		    /*&#xD;
		     * now compute the maximum # of TX, assuming at most numFaults occur on an edge per period, and&#xD;
		     * each edge requires at least one successful TX.&#xD;
		     */&#xD;
		    var numEdgesInFlow = nNodesInFlow - 1;&#xD;
		    var maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
		    txArrayList.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
		    return txArrayList;&#xD;
		  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AR61sMqOEe2esKyal-zizw" name="numTxPerLinkAndTotalTxCost" specification="_AQ4T4MqOEe2esKyal-zizw">
                <ownedParameter xmi:id="_AR61scqOEe2esKyal-zizw" name="flow" type="_JAkUYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_AR61ssqOEe2esKyal-zizw" type="_JY7KALkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>if (this.constructorUsed.equals(E2E_M_CONSTRUCTOR)) {&#xD;
			return this.numTxAttemptsPerLinkAndTotalTxAttempts(flow, this.e2e, this.minPacketReceptionRate, true);&#xD;
		}&#xD;
		return this.getFixedTxPerLinkAndTotalTxCost(flow);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JCXrMLkVEe26eKBxVz0OTQ" name="verifyReliabilities" method="_Je-HqLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JCYSQLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JageYLkVEe26eKBxVz0OTQ" name="ReliabilityAnalysis" method="_Je-HpbkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JageYrkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JageY7kVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JageYbkVEe26eKBxVz0OTQ" name="program" type="_JE8eELkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JageZLkVEe26eKBxVz0OTQ" type="_JCXEIbkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AQ0pgMqOEe2esKyal-zizw" name="ReliabilityAnalysis" method="_AR5AgMqOEe2esKyal-zizw">
                <eAnnotations xmi:id="_AQ1Qk8qOEe2esKyal-zizw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AQ13oMqOEe2esKyal-zizw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ASCKccqOEe2esKyal-zizw">
                  <body>Creates a ReliabilityAnalysis object and sets the current constructor used to E2E_M_CONSTRUCTOR.&#xD;
	 * @param e2e&#xD;
	 * @param minPacketReceptionRate</body>
                </ownedComment>
                <ownedParameter xmi:id="_AQ1QkMqOEe2esKyal-zizw" name="e2e" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_AQ1QkcqOEe2esKyal-zizw" name="minPacketReceptionRate" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_AQ1QksqOEe2esKyal-zizw" type="_JCXEIbkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AQ13ocqOEe2esKyal-zizw" name="getFixedTxPerLinkAndTotalTxCost" method="_AR6OpsqOEe2esKyal-zizw">
                <ownedComment xmi:id="_ASCKdMqOEe2esKyal-zizw">
                  <body>Calculates the fixed transmission per link, the total transmission cost, and returns it.&#xD;
	   * &#xD;
	   * @param flow &#xD;
	   * @return txArrayList</body>
                </ownedComment>
                <ownedParameter xmi:id="_AQ13osqOEe2esKyal-zizw" name="flow" type="_JAkUYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_AQ13o8qOEe2esKyal-zizw" type="_JY7KALkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AQ4T4MqOEe2esKyal-zizw" name="numTxPerLinkAndTotalTxCost" method="_AR61sMqOEe2esKyal-zizw">
                <ownedComment xmi:id="_ASCKdcqOEe2esKyal-zizw">
                  <body>Calculates the number of transmissions per link and total cost based on which constructor was used.&#xD;
	  * @param flow&#xD;
	  * @return ArrayList&lt;Integer></body>
                </ownedComment>
                <ownedParameter xmi:id="_AQ4T4cqOEe2esKyal-zizw" name="flow" type="_JAkUYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_AQ4T4sqOEe2esKyal-zizw" type="_JY7KALkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AQ6wIMqOEe2esKyal-zizw" name="getReliabilities">
                <ownedParameter xmi:id="_AQ6wIcqOEe2esKyal-zizw" type="_JCcjsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ARjCQMqOEe2esKyal-zizw" name="ReliabilityAnalysis" method="_AR5nkMqOEe2esKyal-zizw">
                <eAnnotations xmi:id="_ARjCQ8qOEe2esKyal-zizw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ARjCRMqOEe2esKyal-zizw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ASCKcsqOEe2esKyal-zizw">
                  <body>Creates a ReliabilityAnalysis object and sets the current constructor used to NUM_FAULTS_CONSTRUCTOR.&#xD;
	 * @param numFaults&#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_ARjCQcqOEe2esKyal-zizw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ARjCQsqOEe2esKyal-zizw" type="_JCXEIbkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ARjpUMqOEe2esKyal-zizw" name="numTxAttemptsPerLinkAndTotalTxAttempts" method="_AR6OoMqOEe2esKyal-zizw">
                <ownedComment xmi:id="_ASCKc8qOEe2esKyal-zizw">
                  <body>Creates an array list of the number of transmission attempts per link and the total&#xD;
	   * transmission attempts.&#xD;
	   * &#xD;
	   * @param flow&#xD;
	   * @param e2e&#xD;
	   * @param M&#xD;
	   * @param optimizationRequested&#xD;
	   * @return nPushesArrayList</body>
                </ownedComment>
                <ownedParameter xmi:id="_ARjpUcqOEe2esKyal-zizw" name="flow" type="_JAkUYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_ARjpUsqOEe2esKyal-zizw" name="e2e" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_ARjpU8qOEe2esKyal-zizw" name="M" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_ARjpVMqOEe2esKyal-zizw" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ARkQYMqOEe2esKyal-zizw" type="_JY7KALkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_JCY5ULkVEe26eKBxVz0OTQ" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_JfkkmLkVEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_JCY5UbkVEe26eKBxVz0OTQ" name="minPacketReceptionRate" type="_JcZ71rkVEe26eKBxVz0OTQ" isReadOnly="true"/>
              <ownedAttribute xmi:id="_JCZgYLkVEe26eKBxVz0OTQ" name="e2e" type="_JcZ71rkVEe26eKBxVz0OTQ" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JCaHcLkVEe26eKBxVz0OTQ" name="ReliabilityRow">
              <generalization xmi:id="_JahFcLkVEe26eKBxVz0OTQ" general="_JCjRYLkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jdv_orkVEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Jdv_o7kVEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je-HqrkVEe26eKBxVz0OTQ" name="ReliabilityRow" specification="_JCaugLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je-Hq7kVEe26eKBxVz0OTQ" type="_JCaHcLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je-HrLkVEe26eKBxVz0OTQ" name="ReliabilityRow" specification="_Jcai4bkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je-HrbkVEe26eKBxVz0OTQ" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je-HrrkVEe26eKBxVz0OTQ" name="element" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je-Hr7kVEe26eKBxVz0OTQ" type="_JCaHcLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je-usLkVEe26eKBxVz0OTQ" name="ReliabilityRow" specification="_JcbJ8LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je-usbkVEe26eKBxVz0OTQ" name="rowArray" type="_JcZ71rkVEe26eKBxVz0OTQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Je-usrkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je-us7kVEe26eKBxVz0OTQ" type="_JCaHcLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JCaugLkVEe26eKBxVz0OTQ" name="ReliabilityRow" method="_Je-HqrkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JCaugbkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JCaugrkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JCaug7kVEe26eKBxVz0OTQ" type="_JCaHcLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Jcai4bkVEe26eKBxVz0OTQ" name="ReliabilityRow" visibility="package" method="_Je-HrLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_Jcai5LkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Jcai5bkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Jcai4rkVEe26eKBxVz0OTQ" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jcai47kVEe26eKBxVz0OTQ" name="element" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jcai5rkVEe26eKBxVz0OTQ" type="_JCaHcLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JcbJ8LkVEe26eKBxVz0OTQ" name="ReliabilityRow" visibility="package" method="_Je-usLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JcbJ8rkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JcbJ87kVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JcbJ8bkVEe26eKBxVz0OTQ" name="rowArray" type="_JcZ71rkVEe26eKBxVz0OTQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JcbJ9bkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JcbJ9LkVEe26eKBxVz0OTQ" type="_JCaHcLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JCcjsLkVEe26eKBxVz0OTQ" name="ReliabilityTable">
              <generalization xmi:id="_JaiTkLkVEe26eKBxVz0OTQ" general="_JDGrALkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdwmsLkVEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdwmsbkVEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je-utLkVEe26eKBxVz0OTQ" name="ReliabilityTable" specification="_JCdKwLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je-utbkVEe26eKBxVz0OTQ" type="_JCcjsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je-utrkVEe26eKBxVz0OTQ" name="ReliabilityTable" specification="_JCdx0LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je-ut7kVEe26eKBxVz0OTQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je-uuLkVEe26eKBxVz0OTQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je-uubkVEe26eKBxVz0OTQ" type="_JCcjsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JCdKwLkVEe26eKBxVz0OTQ" name="ReliabilityTable" method="_Je-utLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JCdKwbkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JCdKwrkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JCdKw7kVEe26eKBxVz0OTQ" type="_JCcjsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JCdx0LkVEe26eKBxVz0OTQ" name="ReliabilityTable" visibility="package" method="_Je-utrkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JCdx07kVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JCdx1LkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JCdx0bkVEe26eKBxVz0OTQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JCdx0rkVEe26eKBxVz0OTQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JCdx1bkVEe26eKBxVz0OTQ" type="_JCcjsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JCeY4LkVEe26eKBxVz0OTQ" name="ReliabilityVisualization">
              <ownedComment xmi:id="_JfkkmbkVEe26eKBxVz0OTQ">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to create&#xD;
the file visualization that is requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_JakIwLkVEe26eKBxVz0OTQ" general="_JDWioLkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdwmsrkVEe26eKBxVz0OTQ" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Jdwms7kVEe26eKBxVz0OTQ" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdxNwLkVEe26eKBxVz0OTQ" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdxNwbkVEe26eKBxVz0OTQ" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdxNwrkVEe26eKBxVz0OTQ" name="warp" visibility="private" type="_JDxZYLkVEe26eKBxVz0OTQ" association="_JgX10LkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jdx00bkVEe26eKBxVz0OTQ" name="ra" visibility="private" type="_JCXEIbkVEe26eKBxVz0OTQ" association="_JgX107kVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je-uurkVEe26eKBxVz0OTQ" name="ReliabilityVisualization" specification="_JajhsLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je-uu7kVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je-uvLkVEe26eKBxVz0OTQ" type="_JCeY4LkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JajhsLkVEe26eKBxVz0OTQ" name="ReliabilityVisualization" visibility="package" method="_Je-uurkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JajhsrkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Jajhs7kVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JajhsbkVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JajhtLkVEe26eKBxVz0OTQ" type="_JCeY4LkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JCgOELkVEe26eKBxVz0OTQ" name="ReportVisualization">
              <generalization xmi:id="_Jakv2LkVEe26eKBxVz0OTQ" general="_JDWioLkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jdyb4LkVEe26eKBxVz0OTQ" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Jdyb4bkVEe26eKBxVz0OTQ" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jdyb4rkVEe26eKBxVz0OTQ" name="content" visibility="private" type="_JAKEsLkVEe26eKBxVz0OTQ" association="_JgYc4bkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jdyb5LkVEe26eKBxVz0OTQ" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je-uvbkVEe26eKBxVz0OTQ" name="ReportVisualization" specification="_JakIwbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je-uvrkVEe26eKBxVz0OTQ" name="fm" type="_JAbxgLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je-uv7kVEe26eKBxVz0OTQ" name="warp" type="_JDBLcrkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je-uwLkVEe26eKBxVz0OTQ" name="content" type="_JAKEsLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je-uwbkVEe26eKBxVz0OTQ" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je-uwrkVEe26eKBxVz0OTQ" type="_JCgOELkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je-uw7kVEe26eKBxVz0OTQ" name="visualization" specification="_JChcMLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je-uxLkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je_VwLkVEe26eKBxVz0OTQ" name="createReport" specification="_JCiDQrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je_VwbkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JChcMLkVEe26eKBxVz0OTQ" name="visualization" method="_Je-uw7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jakv1rkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JCiDQrkVEe26eKBxVz0OTQ" name="createReport" visibility="private" method="_Je_VwLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jakv17kVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JakIwbkVEe26eKBxVz0OTQ" name="ReportVisualization" visibility="package" method="_Je-uvbkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_Jakv07kVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Jakv1LkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JakIwrkVEe26eKBxVz0OTQ" name="fm" type="_JAbxgLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jakv0LkVEe26eKBxVz0OTQ" name="warp" type="_JDBLcrkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jakv0bkVEe26eKBxVz0OTQ" name="content" type="_JAKEsLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jakv0rkVEe26eKBxVz0OTQ" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jakv1bkVEe26eKBxVz0OTQ" type="_JCgOELkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JCjRYLkVEe26eKBxVz0OTQ" name="Row">
              <generalization xmi:id="_Jcc_IbkVEe26eKBxVz0OTQ" general="_JY7KALkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdzC8bkVEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdzC8rkVEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je_VwrkVEe26eKBxVz0OTQ" name="Row" specification="_JCkfgLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je_Vw7kVEe26eKBxVz0OTQ" type="_JCjRYLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je_VxLkVEe26eKBxVz0OTQ" name="Row" specification="_JcbxALkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je_VxbkVEe26eKBxVz0OTQ" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je_VxrkVEe26eKBxVz0OTQ" name="element" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je_Vx7kVEe26eKBxVz0OTQ" type="_JCjRYLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je_VyLkVEe26eKBxVz0OTQ" name="Row" specification="_JccYE7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je_VybkVEe26eKBxVz0OTQ" name="rowArray" type="_JcA6QLkVEe26eKBxVz0OTQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Je_VyrkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je_Vy7kVEe26eKBxVz0OTQ" type="_JCjRYLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je_VzLkVEe26eKBxVz0OTQ" name="Row" specification="_JClGkLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je_VzbkVEe26eKBxVz0OTQ" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je_VzrkVEe26eKBxVz0OTQ" type="_JCjRYLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JCkfgLkVEe26eKBxVz0OTQ" name="Row" method="_Je_VwrkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JCkfgbkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JCkfgrkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JCkfg7kVEe26eKBxVz0OTQ" type="_JCjRYLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JClGkLkVEe26eKBxVz0OTQ" name="Row" visibility="package" method="_Je_VzLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JCltoLkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JCltobkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JClGkbkVEe26eKBxVz0OTQ" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JCltorkVEe26eKBxVz0OTQ" type="_JCjRYLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JcbxALkVEe26eKBxVz0OTQ" name="Row" visibility="package" method="_Je_VxLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JccYELkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JccYEbkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JcbxAbkVEe26eKBxVz0OTQ" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JcbxArkVEe26eKBxVz0OTQ" name="element" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JccYErkVEe26eKBxVz0OTQ" type="_JCjRYLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JccYE7kVEe26eKBxVz0OTQ" name="Row" visibility="package" method="_Je_VyLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JccYFbkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JccYFrkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JccYFLkVEe26eKBxVz0OTQ" name="rowArray" type="_JcA6QLkVEe26eKBxVz0OTQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jcc_ILkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JccYF7kVEe26eKBxVz0OTQ" type="_JCjRYLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JCmUsLkVEe26eKBxVz0OTQ" name="WorkLoadDescription">
              <ownedComment xmi:id="_JfkkmrkVEe26eKBxVz0OTQ">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4 Fall 2022</body>
              </ownedComment>
              <generalization xmi:id="_JamlAbkVEe26eKBxVz0OTQ" general="_JDWioLkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JdzC87kVEe26eKBxVz0OTQ" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdzqALkVEe26eKBxVz0OTQ" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdzqAbkVEe26eKBxVz0OTQ" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdzqArkVEe26eKBxVz0OTQ" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdzqA7kVEe26eKBxVz0OTQ" name="FILE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JdzqBLkVEe26eKBxVz0OTQ" value="&quot;StressTest.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JdzqBbkVEe26eKBxVz0OTQ" name="description" visibility="private" type="_JAKEsLkVEe26eKBxVz0OTQ" association="_JgYc5LkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jd0RELkVEe26eKBxVz0OTQ" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jd0RErkVEe26eKBxVz0OTQ" name="fm" visibility="private" type="_JAbxgLkVEe26eKBxVz0OTQ" association="_JgZD8bkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jd0RFLkVEe26eKBxVz0OTQ" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je_Vz7kVEe26eKBxVz0OTQ" name="WorkLoadDescription" specification="_JCni0LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je_V0LkVEe26eKBxVz0OTQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Je_V0bkVEe26eKBxVz0OTQ" type="_JCmUsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
 this.fm = this.getFileManager();&#xD;
 initialize(inputFileName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je_80LkVEe26eKBxVz0OTQ" name="visualization" specification="_JCoJ5LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je_80bkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je_80rkVEe26eKBxVz0OTQ" name="fileVisualization" specification="_JCow87kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je_807kVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je_81LkVEe26eKBxVz0OTQ" name="toString" specification="_JCpYArkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je_81bkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je_81rkVEe26eKBxVz0OTQ" name="initialize" specification="_JCqmI7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je_817kVEe26eKBxVz0OTQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
 InputGraphFile gf = new InputGraphFile(fm);&#xD;
 inputGraphString = gf.readGraphFile(inputFile);&#xD;
 this.inputFileName = gf.getGraphFileName();&#xD;
 description = new Description(inputGraphString);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je_82LkVEe26eKBxVz0OTQ" name="main" specification="_JCqmJbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je_82bkVEe26eKBxVz0OTQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Je_82rkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>//Initiating new WorkLoadDescription w/ FILE&#xD;
	  //FILE is a static final variable initialized at the beginning of the file&#xD;
	  //allowing for quick swap of files&#xD;
	   WorkLoadDescription wldTest = new WorkLoadDescription(FILE);&#xD;
	   //Initializing new array list for which elements of the file will be stored&#xD;
	   ArrayList&lt;String> testFile = new ArrayList&lt;String>();&#xD;
	   //for loop to add elements from wldTest to Array list skipping the title line&#xD;
	   for(int i = 1 ; i &lt; wldTest.visualization().size(); i++) {&#xD;
		   testFile.add(wldTest.visualization().get(i));&#xD;
	   }&#xD;
	   //Sorting the new ArrayList&#xD;
	   Collections.sort(testFile);&#xD;
	   //Print out the input file name without suffix&#xD;
	   System.out.println(wldTest.getInputFileName().replace(&quot;.txt&quot;, &quot;&quot;));&#xD;
	   //for loop goes through the new ArrayList skipping the final &quot;}&quot;&#xD;
	   for(int i = 0 ; i &lt; testFile.size() - 1; i++ ) {&#xD;
		   //if condition skips blank lines&#xD;
		   if (testFile.get(i).isBlank()) {&#xD;
			   continue;&#xD;
		   }&#xD;
		   //Printing out results formatted to example, trimming leading or ending blank space&#xD;
		   System.out.println(&quot;Flow &quot; + (i + 1) +&quot;: &quot; + testFile.get(i).trim() );&#xD;
		   &#xD;
	   }&#xD;
	   &#xD;
	   &#xD;
	  &#xD;
	   &#xD;
	   &#xD;
	  &#xD;
&#xD;
	   	   &#xD;
	   &#xD;
	   </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JCni0LkVEe26eKBxVz0OTQ" name="WorkLoadDescription" visibility="package" method="_Je_Vz7kVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JCoJ4bkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JCoJ4rkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JCoJ4LkVEe26eKBxVz0OTQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JCoJ47kVEe26eKBxVz0OTQ" type="_JCmUsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JCoJ5LkVEe26eKBxVz0OTQ" name="visualization" method="_Je_80LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jal98LkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JCow87kVEe26eKBxVz0OTQ" name="fileVisualization" method="_Je_80rkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JamlALkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JCpYArkVEe26eKBxVz0OTQ" name="toString" method="_Je_81LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JCpYA7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JCqmI7kVEe26eKBxVz0OTQ" name="initialize" visibility="private" method="_Je_81rkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JCqmJLkVEe26eKBxVz0OTQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JCqmJbkVEe26eKBxVz0OTQ" name="main" isStatic="true" method="_Je_82LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JCqmJrkVEe26eKBxVz0OTQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JCqmJ7kVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JCsbULkVEe26eKBxVz0OTQ" name="SchedulableObjectQueue">
              <generalization xmi:id="_JCuQgLkVEe26eKBxVz0OTQ" general="_JCV2ALkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jd04ILkVEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Jd04IbkVEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Je_827kVEe26eKBxVz0OTQ" name="SchedulableObjectQueue" specification="_JcdmMLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Je_83LkVEe26eKBxVz0OTQ" name="comparitor" type="_JZYdAbkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Je_83bkVEe26eKBxVz0OTQ" type="_JCsbULkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfAj4LkVEe26eKBxVz0OTQ" name="SchedulableObjectQueue" specification="_JceNQbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfAj4bkVEe26eKBxVz0OTQ" name="comparitor" type="_JZYdAbkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfAj4rkVEe26eKBxVz0OTQ" name="schedulableObjects" type="_JaIq8LkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfAj47kVEe26eKBxVz0OTQ" type="_JCsbULkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JcdmMLkVEe26eKBxVz0OTQ" name="SchedulableObjectQueue" visibility="package" method="_Je_827kVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JcdmMrkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JcdmM7kVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JcdmMbkVEe26eKBxVz0OTQ" name="comparitor" type="_JZYdAbkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JcdmNLkVEe26eKBxVz0OTQ" type="_JCsbULkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JceNQbkVEe26eKBxVz0OTQ" name="SchedulableObjectQueue" visibility="package" method="_JfAj4LkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_Jce0UbkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Jce0UrkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JceNQrkVEe26eKBxVz0OTQ" name="comparitor" type="_JZYdAbkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jce0ULkVEe26eKBxVz0OTQ" name="schedulableObjects" type="_JaIq8LkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jce0U7kVEe26eKBxVz0OTQ" type="_JCsbULkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JCveoLkVEe26eKBxVz0OTQ" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_Jfkkm7kVEe26eKBxVz0OTQ">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Jd04IrkVEe26eKBxVz0OTQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Jd04I7kVEe26eKBxVz0OTQ" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jd1fMLkVEe26eKBxVz0OTQ" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jd1fMrkVEe26eKBxVz0OTQ" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jd1fNLkVEe26eKBxVz0OTQ" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Jd2GQLkVEe26eKBxVz0OTQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jd2GQrkVEe26eKBxVz0OTQ" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jd2GRLkVEe26eKBxVz0OTQ" name="schedule" visibility="protected" type="_JC7r4LkVEe26eKBxVz0OTQ" association="_JgZrAbkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jd2tUbkVEe26eKBxVz0OTQ" name="poset" visibility="protected" type="_JBxOQLkVEe26eKBxVz0OTQ" association="_JgZrBLkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfAj5LkVEe26eKBxVz0OTQ" name="Schedule" specification="_JaoaMLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfAj5bkVEe26eKBxVz0OTQ" name="poset" type="_JBxOQLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfAj5rkVEe26eKBxVz0OTQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfAj57kVEe26eKBxVz0OTQ" type="_JCveoLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfBK8LkVEe26eKBxVz0OTQ" name="getSchedule" specification="_JCzwELkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfBK8bkVEe26eKBxVz0OTQ" type="_JC7r4LkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfBK8rkVEe26eKBxVz0OTQ" name="buildSchedule" specification="_JCzwEbkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfBK87kVEe26eKBxVz0OTQ" name="toProgram" specification="_JCzwErkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfBK9LkVEe26eKBxVz0OTQ" type="_JCJBsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfBK9bkVEe26eKBxVz0OTQ" name="replaceNullWithSleep" specification="_JapBQrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfBK9rkVEe26eKBxVz0OTQ" name="program" type="_JCJBsLkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfBK97kVEe26eKBxVz0OTQ" name="fakeSchedulingToTestRest" specification="_JapBRLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfBK-LkVEe26eKBxVz0OTQ" name="next" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfBK-bkVEe26eKBxVz0OTQ" name="getChannelAndSetStartTime" specification="_JapoUbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfBK-rkVEe26eKBxVz0OTQ" name="schedulableObject" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfBK-7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfBK_LkVEe26eKBxVz0OTQ" name="findChannelAndTime" specification="_JaqPYLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfBK_bkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfBK_rkVEe26eKBxVz0OTQ" name="schedulableObject" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfBK_7kVEe26eKBxVz0OTQ" type="_JCxT0LkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfByALkVEe26eKBxVz0OTQ" name="continueSearch" specification="_Jaq2cLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfByAbkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfByArkVEe26eKBxVz0OTQ" name="activation" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfByA7kVEe26eKBxVz0OTQ" type="_JCxT0LkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfCZELkVEe26eKBxVz0OTQ" name="noOtherChannelConflicts" specification="_Jaq2dLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfCZEbkVEe26eKBxVz0OTQ" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfCZErkVEe26eKBxVz0OTQ" name="schedulableObject" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfCZE7kVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfCZFLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfCZFbkVEe26eKBxVz0OTQ" name="conflictsExist" specification="_JardgLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfCZFrkVEe26eKBxVz0OTQ" name="obj" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfCZF7kVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfCZGLkVEe26eKBxVz0OTQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfCZGbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfCZGrkVEe26eKBxVz0OTQ" name="freeOfCoordinatorConflicts" specification="_JardhbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfCZG7kVEe26eKBxVz0OTQ" name="obj" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfCZHLkVEe26eKBxVz0OTQ" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfCZHbkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfCZHrkVEe26eKBxVz0OTQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfCZH7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfCZILkVEe26eKBxVz0OTQ" name="isAvailable" specification="_JasEk7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfCZIbkVEe26eKBxVz0OTQ" name="a1" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfCZIrkVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfCZI7kVEe26eKBxVz0OTQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfCZJLkVEe26eKBxVz0OTQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfCZJbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfDAILkVEe26eKBxVz0OTQ" name="isAvailable" specification="_JasroLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfDAIbkVEe26eKBxVz0OTQ" name="a1" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfDAIrkVEe26eKBxVz0OTQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfDAI7kVEe26eKBxVz0OTQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfDAJLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfDAJbkVEe26eKBxVz0OTQ" name="timeRemaining" specification="_JC1lQLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfDAJrkVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfDAJ7kVEe26eKBxVz0OTQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfDAKLkVEe26eKBxVz0OTQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfDAKbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfDAKrkVEe26eKBxVz0OTQ" name="canCombineEntriesInPlace" specification="_JasrpbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfDAK7kVEe26eKBxVz0OTQ" name="a1" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfDALLkVEe26eKBxVz0OTQ" name="a2" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfDALbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfDnMLkVEe26eKBxVz0OTQ" name="combinedEntriesInPlace" specification="_JatSsrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfDnMbkVEe26eKBxVz0OTQ" name="a1" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfDnMrkVEe26eKBxVz0OTQ" name="a2" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfDnM7kVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfDnNLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfDnNbkVEe26eKBxVz0OTQ" name="addToSchedule" specification="_Jat5wLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfDnNrkVEe26eKBxVz0OTQ" name="next" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfDnN7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfDnOLkVEe26eKBxVz0OTQ" name="reportNotSchedulable" specification="_Jat5w7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfDnObkVEe26eKBxVz0OTQ" name="object" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfDnOrkVEe26eKBxVz0OTQ" name="printVerbose" specification="_JC2zYLkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfDnO7kVEe26eKBxVz0OTQ" name="print" specification="_JC2zYbkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JCzwELkVEe26eKBxVz0OTQ" name="getSchedule" method="_JfBK8LkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JflLorkVEe26eKBxVz0OTQ">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_JapBQLkVEe26eKBxVz0OTQ" type="_JC7r4LkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JCzwEbkVEe26eKBxVz0OTQ" name="buildSchedule" visibility="private" method="_JfBK8rkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JCzwErkVEe26eKBxVz0OTQ" name="toProgram" method="_JfBK87kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JapBQbkVEe26eKBxVz0OTQ" type="_JCJBsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JC1lQLkVEe26eKBxVz0OTQ" name="timeRemaining" visibility="protected" method="_JfDAJbkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JflLqLkVEe26eKBxVz0OTQ">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_JC1lQbkVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JC2MULkVEe26eKBxVz0OTQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JC2MUbkVEe26eKBxVz0OTQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JC2MUrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JC2zYLkVEe26eKBxVz0OTQ" name="printVerbose" method="_JfDnOrkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JC2zYbkVEe26eKBxVz0OTQ" name="print" method="_JfDnO7kVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JaoaMLkVEe26eKBxVz0OTQ" name="Schedule" visibility="package" method="_JfAj5LkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JaoaM7kVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JaoaNLkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JaoaMbkVEe26eKBxVz0OTQ" name="poset" type="_JBxOQLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JaoaMrkVEe26eKBxVz0OTQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JaoaNbkVEe26eKBxVz0OTQ" type="_JCveoLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JapBQrkVEe26eKBxVz0OTQ" name="replaceNullWithSleep" visibility="private" method="_JfBK9bkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JflLo7kVEe26eKBxVz0OTQ">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_JapBQ7kVEe26eKBxVz0OTQ" name="program" type="_JCJBsLkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JapBRLkVEe26eKBxVz0OTQ" name="fakeSchedulingToTestRest" visibility="private" method="_JfBK97kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JapoULkVEe26eKBxVz0OTQ" name="next" type="_I-kwULkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JapoUbkVEe26eKBxVz0OTQ" name="getChannelAndSetStartTime" visibility="protected" method="_JfBK-bkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JflLpLkVEe26eKBxVz0OTQ">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_JapoUrkVEe26eKBxVz0OTQ" name="schedulableObject" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JapoU7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JaqPYLkVEe26eKBxVz0OTQ" name="findChannelAndTime" visibility="protected" method="_JfBK_LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JaqPYbkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JaqPYrkVEe26eKBxVz0OTQ" name="schedulableObject" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JaqPY7kVEe26eKBxVz0OTQ" type="_JCxT0LkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Jaq2cLkVEe26eKBxVz0OTQ" name="continueSearch" visibility="protected" method="_JfByALkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JflLpbkVEe26eKBxVz0OTQ">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_Jaq2cbkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jaq2crkVEe26eKBxVz0OTQ" name="activation" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jaq2c7kVEe26eKBxVz0OTQ" type="_JCxT0LkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Jaq2dLkVEe26eKBxVz0OTQ" name="noOtherChannelConflicts" visibility="protected" method="_JfCZELkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jaq2dbkVEe26eKBxVz0OTQ" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jaq2drkVEe26eKBxVz0OTQ" name="schedulableObject" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jaq2d7kVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jaq2eLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JardgLkVEe26eKBxVz0OTQ" name="conflictsExist" visibility="protected" method="_JfCZFbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JardgbkVEe26eKBxVz0OTQ" name="obj" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JardgrkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jardg7kVEe26eKBxVz0OTQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JardhLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JardhbkVEe26eKBxVz0OTQ" name="freeOfCoordinatorConflicts" visibility="protected" method="_JfCZGrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JardhrkVEe26eKBxVz0OTQ" name="obj" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jardh7kVEe26eKBxVz0OTQ" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JasEkLkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JasEkbkVEe26eKBxVz0OTQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JasEkrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JasEk7kVEe26eKBxVz0OTQ" name="isAvailable" visibility="protected" method="_JfCZILkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JflLprkVEe26eKBxVz0OTQ">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_JasElLkVEe26eKBxVz0OTQ" name="a1" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JasElbkVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JasElrkVEe26eKBxVz0OTQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JasEl7kVEe26eKBxVz0OTQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JasEmLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JasroLkVEe26eKBxVz0OTQ" name="isAvailable" visibility="protected" method="_JfDAILkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JflLp7kVEe26eKBxVz0OTQ">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_JasrobkVEe26eKBxVz0OTQ" name="a1" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JasrorkVEe26eKBxVz0OTQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jasro7kVEe26eKBxVz0OTQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JasrpLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JasrpbkVEe26eKBxVz0OTQ" name="canCombineEntriesInPlace" visibility="private" method="_JfDAKrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JasrprkVEe26eKBxVz0OTQ" name="a1" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JatSsLkVEe26eKBxVz0OTQ" name="a2" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JatSsbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JatSsrkVEe26eKBxVz0OTQ" name="combinedEntriesInPlace" visibility="private" method="_JfDnMLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JatSs7kVEe26eKBxVz0OTQ" name="a1" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JatStLkVEe26eKBxVz0OTQ" name="a2" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JatStbkVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JatStrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Jat5wLkVEe26eKBxVz0OTQ" name="addToSchedule" visibility="protected" method="_JfDnNbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jat5wbkVEe26eKBxVz0OTQ" name="next" type="_I-kwULkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jat5wrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Jat5w7kVEe26eKBxVz0OTQ" name="reportNotSchedulable" visibility="private" method="_JfDnOLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jat5xLkVEe26eKBxVz0OTQ" name="object" type="_I-kwULkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_JCxT0LkVEe26eKBxVz0OTQ" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_Jd2tU7kVEe26eKBxVz0OTQ" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_Jd3UYLkVEe26eKBxVz0OTQ" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfAj6LkVEe26eKBxVz0OTQ" name="ScheduleLocation" specification="_JCx64LkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JfAj6bkVEe26eKBxVz0OTQ" type="_JCxT0LkVEe26eKBxVz0OTQ" direction="return"/>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfAj6rkVEe26eKBxVz0OTQ" name="ScheduleLocation" specification="_JCx65LkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JfAj67kVEe26eKBxVz0OTQ" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_JfAj7LkVEe26eKBxVz0OTQ" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_JfAj7bkVEe26eKBxVz0OTQ" type="_JCxT0LkVEe26eKBxVz0OTQ" direction="return"/>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfAj7rkVEe26eKBxVz0OTQ" name="getChannel" specification="_JCyh9bkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JfAj77kVEe26eKBxVz0OTQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfAj8LkVEe26eKBxVz0OTQ" name="getTime" specification="_JCyh97kVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JfAj8bkVEe26eKBxVz0OTQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_JCx64LkVEe26eKBxVz0OTQ" name="ScheduleLocation" visibility="package" method="_JfAj6LkVEe26eKBxVz0OTQ">
                  <eAnnotations xmi:id="_JCx64bkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_JCx64rkVEe26eKBxVz0OTQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_JCx647kVEe26eKBxVz0OTQ" type="_JCxT0LkVEe26eKBxVz0OTQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_JCx65LkVEe26eKBxVz0OTQ" name="ScheduleLocation" visibility="package" method="_JfAj6rkVEe26eKBxVz0OTQ">
                  <eAnnotations xmi:id="_JCyh8rkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_JCyh87kVEe26eKBxVz0OTQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_JCyh8LkVEe26eKBxVz0OTQ" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_JCyh8bkVEe26eKBxVz0OTQ" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_JCyh9LkVEe26eKBxVz0OTQ" type="_JCxT0LkVEe26eKBxVz0OTQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_JCyh9bkVEe26eKBxVz0OTQ" name="getChannel" visibility="protected" method="_JfAj7rkVEe26eKBxVz0OTQ">
                  <ownedComment xmi:id="_JflLoLkVEe26eKBxVz0OTQ">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_JCyh9rkVEe26eKBxVz0OTQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_JCyh97kVEe26eKBxVz0OTQ" name="getTime" visibility="protected" method="_JfAj8LkVEe26eKBxVz0OTQ">
                  <ownedComment xmi:id="_JflLobkVEe26eKBxVz0OTQ">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_JCzJALkVEe26eKBxVz0OTQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JC7r4LkVEe26eKBxVz0OTQ" name="ScheduleTable">
              <generalization xmi:id="_JavH4LkVEe26eKBxVz0OTQ" general="_JDGrALkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jd37cLkVEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Jd37cbkVEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfDnPLkVEe26eKBxVz0OTQ" name="ScheduleTable" specification="_JC8S8LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfDnPbkVEe26eKBxVz0OTQ" type="_JC7r4LkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfEOQLkVEe26eKBxVz0OTQ" name="ScheduleTable" specification="_JC86ALkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfEOQbkVEe26eKBxVz0OTQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfEOQrkVEe26eKBxVz0OTQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfEOQ7kVEe26eKBxVz0OTQ" type="_JC7r4LkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JC8S8LkVEe26eKBxVz0OTQ" name="ScheduleTable" visibility="package" method="_JfDnPLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JC8S8bkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JC8S8rkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JC8S87kVEe26eKBxVz0OTQ" type="_JC7r4LkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JC86ALkVEe26eKBxVz0OTQ" name="ScheduleTable" visibility="package" method="_JfEOQLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JC9hErkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JC9hE7kVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JC9hELkVEe26eKBxVz0OTQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JC9hEbkVEe26eKBxVz0OTQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JC9hFLkVEe26eKBxVz0OTQ" type="_JC7r4LkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JC9hFbkVEe26eKBxVz0OTQ" name="ScheduleTime">
              <ownedAttribute xmi:id="_Jd37crkVEe26eKBxVz0OTQ" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jd4igLkVEe26eKBxVz0OTQ" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfEORLkVEe26eKBxVz0OTQ" name="ScheduleTime" specification="_JC-IILkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfEORbkVEe26eKBxVz0OTQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfEORrkVEe26eKBxVz0OTQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfEOR7kVEe26eKBxVz0OTQ" type="_JC9hFbkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JC-IILkVEe26eKBxVz0OTQ" name="ScheduleTime" visibility="package" method="_JfEORLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JC-II7kVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JC-IJLkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JC-IIbkVEe26eKBxVz0OTQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JC-IIrkVEe26eKBxVz0OTQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JC-IJbkVEe26eKBxVz0OTQ" type="_JC9hFbkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JC-vMLkVEe26eKBxVz0OTQ" name="SimulatorInput">
              <ownedComment xmi:id="_JflLqbkVEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JC_WQLkVEe26eKBxVz0OTQ" name="SortedPeriodQueue">
              <generalization xmi:id="_JDBLcLkVEe26eKBxVz0OTQ" general="_JCV2ALkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jd4igbkVEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Jd4igrkVEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfEOSLkVEe26eKBxVz0OTQ" name="SortedPeriodQueue" specification="_JDAkYLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfEOSbkVEe26eKBxVz0OTQ" type="_JC_WQLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfEOSrkVEe26eKBxVz0OTQ" name="SortedPeriodQueue" specification="_JawWALkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfEOS7kVEe26eKBxVz0OTQ" name="schedulableObjects" type="_JaIq8LkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfEOTLkVEe26eKBxVz0OTQ" type="_JC_WQLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JDAkYLkVEe26eKBxVz0OTQ" name="SortedPeriodQueue" visibility="package" method="_JfEOSLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JDAkYbkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JDAkYrkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JDAkY7kVEe26eKBxVz0OTQ" type="_JC_WQLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JawWALkVEe26eKBxVz0OTQ" name="SortedPeriodQueue" visibility="package" method="_JfEOSrkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JawWArkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JawWA7kVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JawWAbkVEe26eKBxVz0OTQ" name="schedulableObjects" type="_JaIq8LkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JawWBLkVEe26eKBxVz0OTQ" type="_JC_WQLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_JDBLcrkVEe26eKBxVz0OTQ" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_JaxkILkVEe26eKBxVz0OTQ" general="_JCY5ULkVEe26eKBxVz0OTQ"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_JDCZkLkVEe26eKBxVz0OTQ" name="ScheduleChoices">
                <ownedLiteral xmi:id="_JDCZkrkVEe26eKBxVz0OTQ" name="PRIORITY"/>
                <ownedLiteral xmi:id="_JDCZk7kVEe26eKBxVz0OTQ" name="RM"/>
                <ownedLiteral xmi:id="_JDCZlLkVEe26eKBxVz0OTQ" name="DM"/>
                <ownedLiteral xmi:id="_JDDAoLkVEe26eKBxVz0OTQ" name="RTHART"/>
                <ownedLiteral xmi:id="_JDDAobkVEe26eKBxVz0OTQ" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_JDDAorkVEe26eKBxVz0OTQ" name="POSET_RM"/>
                <ownedLiteral xmi:id="_JDDAo7kVEe26eKBxVz0OTQ" name="POSET_DM"/>
                <ownedLiteral xmi:id="_JDDApLkVEe26eKBxVz0OTQ" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_JDDApbkVEe26eKBxVz0OTQ" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_JDDAprkVEe26eKBxVz0OTQ" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_JDDnsLkVEe26eKBxVz0OTQ" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_JDDnsbkVEe26eKBxVz0OTQ" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_JDDnsrkVEe26eKBxVz0OTQ" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_JDDns7kVEe26eKBxVz0OTQ" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JDDntLkVEe26eKBxVz0OTQ" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JDE10LkVEe26eKBxVz0OTQ" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JDE10bkVEe26eKBxVz0OTQ" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JDE10rkVEe26eKBxVz0OTQ" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JDE107kVEe26eKBxVz0OTQ" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JDFc4LkVEe26eKBxVz0OTQ" name="SystemFactory">
              <ownedComment xmi:id="_JflLqrkVEe26eKBxVz0OTQ">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfEOTbkVEe26eKBxVz0OTQ" name="create" specification="_JayyQLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfEOTrkVEe26eKBxVz0OTQ" name="workload" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfEOT7kVEe26eKBxVz0OTQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfEOULkVEe26eKBxVz0OTQ" name="choice" type="_JDCZkLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfEOUbkVEe26eKBxVz0OTQ" type="_JDxZYLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JayyQLkVEe26eKBxVz0OTQ" name="create" isStatic="true" method="_JfEOTbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JayyQbkVEe26eKBxVz0OTQ" name="workload" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JayyQrkVEe26eKBxVz0OTQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JayyQ7kVEe26eKBxVz0OTQ" name="choice" type="_JDCZkLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JayyRLkVEe26eKBxVz0OTQ" type="_JDxZYLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JDGrALkVEe26eKBxVz0OTQ" name="Table">
              <generalization xmi:id="_JchQkbkVEe26eKBxVz0OTQ" general="_JY7KALkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jd4ig7kVEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Jd4ihLkVEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfE1ULkVEe26eKBxVz0OTQ" name="Table" specification="_JDH5ILkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfE1UbkVEe26eKBxVz0OTQ" type="_JDGrALkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfE1UrkVEe26eKBxVz0OTQ" name="Table" specification="_JDH5JLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfE1U7kVEe26eKBxVz0OTQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfE1VLkVEe26eKBxVz0OTQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfE1VbkVEe26eKBxVz0OTQ" type="_JDGrALkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfE1VrkVEe26eKBxVz0OTQ" name="getNumRows" specification="_JDIgNLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfE1V7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfE1WLkVEe26eKBxVz0OTQ" name="getNumColumns" specification="_JDJHQLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfE1WbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfE1WrkVEe26eKBxVz0OTQ" name="set" specification="_JcgpgLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfE1W7kVEe26eKBxVz0OTQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfE1XLkVEe26eKBxVz0OTQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfE1XbkVEe26eKBxVz0OTQ" name="element" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfFcYLkVEe26eKBxVz0OTQ" name="get" specification="_JDJuULkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfFcYbkVEe26eKBxVz0OTQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfFcYrkVEe26eKBxVz0OTQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfFcY7kVEe26eKBxVz0OTQ" type="_JcA6QLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JDH5ILkVEe26eKBxVz0OTQ" name="Table" method="_JfE1ULkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JDH5IbkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JDH5IrkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JDH5I7kVEe26eKBxVz0OTQ" type="_JDGrALkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JDH5JLkVEe26eKBxVz0OTQ" name="Table" method="_JfE1UrkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JDIgMbkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JDIgMrkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JDH5JbkVEe26eKBxVz0OTQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JDIgMLkVEe26eKBxVz0OTQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JDIgM7kVEe26eKBxVz0OTQ" type="_JDGrALkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JDIgNLkVEe26eKBxVz0OTQ" name="getNumRows" method="_JfE1VrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JDIgNbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JDJHQLkVEe26eKBxVz0OTQ" name="getNumColumns" method="_JfE1WLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JDJHQbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JDJuULkVEe26eKBxVz0OTQ" name="get" method="_JfFcYLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JDJuUbkVEe26eKBxVz0OTQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JDJuUrkVEe26eKBxVz0OTQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JchQkLkVEe26eKBxVz0OTQ" type="_JcA6QLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JcgpgLkVEe26eKBxVz0OTQ" name="set" method="_JfE1WrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JcgpgbkVEe26eKBxVz0OTQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JcgpgrkVEe26eKBxVz0OTQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jcgpg7kVEe26eKBxVz0OTQ" name="element" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_JDK8cLkVEe26eKBxVz0OTQ" name="Visualization">
              <ownedComment xmi:id="_JflLq7kVEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_JDLjgLkVEe26eKBxVz0OTQ" name="SystemChoices">
                <ownedLiteral xmi:id="_JDLjgrkVEe26eKBxVz0OTQ" name="SOURCE"/>
                <ownedLiteral xmi:id="_JDLjg7kVEe26eKBxVz0OTQ" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_JDLjhLkVEe26eKBxVz0OTQ" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_JDLjhbkVEe26eKBxVz0OTQ" name="LATENCY"/>
                <ownedLiteral xmi:id="_JDMKkLkVEe26eKBxVz0OTQ" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_JDMKkbkVEe26eKBxVz0OTQ" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_JDMKkrkVEe26eKBxVz0OTQ" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_JDMKk7kVEe26eKBxVz0OTQ" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_JDMxobkVEe26eKBxVz0OTQ" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_JDMxorkVEe26eKBxVz0OTQ" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_JDMxo7kVEe26eKBxVz0OTQ" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_JDNYsLkVEe26eKBxVz0OTQ" name="toDisplay"/>
              <ownedOperation xmi:id="_JDNYsbkVEe26eKBxVz0OTQ" name="toFile"/>
              <ownedOperation xmi:id="_JDNYsrkVEe26eKBxVz0OTQ" name="toString">
                <ownedParameter xmi:id="_JDNYs7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JDNYtLkVEe26eKBxVz0OTQ" name="VisualizationFactory">
              <ownedComment xmi:id="_JflLrLkVEe26eKBxVz0OTQ">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfGDcLkVEe26eKBxVz0OTQ" name="createProgramVisualization" specification="_Ja1OgbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfGDcbkVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfGDcrkVEe26eKBxVz0OTQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfGDc7kVEe26eKBxVz0OTQ" name="choice" type="_JDLjgLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfGDdLkVEe26eKBxVz0OTQ" type="_JDK8cLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfGDdbkVEe26eKBxVz0OTQ" name="createWorkLoadVisualization" specification="_Ja11kLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfGDdrkVEe26eKBxVz0OTQ" name="workload" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfGDd7kVEe26eKBxVz0OTQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfGDeLkVEe26eKBxVz0OTQ" name="choice" type="_JDMKk7kVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfGDebkVEe26eKBxVz0OTQ" type="_JDK8cLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Ja1OgbkVEe26eKBxVz0OTQ" name="createProgramVisualization" isStatic="true" method="_JfGDcLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Ja1OgrkVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Ja1Og7kVEe26eKBxVz0OTQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ja1OhLkVEe26eKBxVz0OTQ" name="choice" type="_JDLjgLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Ja1OhbkVEe26eKBxVz0OTQ" type="_JDK8cLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ja11kLkVEe26eKBxVz0OTQ" name="createWorkLoadVisualization" isStatic="true" method="_JfGDdbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Ja11kbkVEe26eKBxVz0OTQ" name="workload" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Ja11krkVEe26eKBxVz0OTQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ja11k7kVEe26eKBxVz0OTQ" name="choice" type="_JDMKk7kVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Ja11lLkVEe26eKBxVz0OTQ" type="_JDK8cLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JDPN4LkVEe26eKBxVz0OTQ" name="VisualizationImplementation">
              <ownedComment xmi:id="_JflLrbkVEe26eKBxVz0OTQ">
                <body>Handles visualizations for Warp program outputs.&#xD;
This includes creating either GraphViz files (.gv) or WARP files (.wf) and &#xD;
displaying graphs in a new window.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Jd5JkLkVEe26eKBxVz0OTQ" name="visualization" visibility="private" type="_JAKEsLkVEe26eKBxVz0OTQ" association="_JgaSEbkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jd5JkrkVEe26eKBxVz0OTQ" name="fileContent" visibility="private" type="_JAKEsLkVEe26eKBxVz0OTQ" association="_Jga5IbkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jd5wobkVEe26eKBxVz0OTQ" name="window" visibility="private" type="_JBDckLkVEe26eKBxVz0OTQ" association="_JgbgMbkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jd5wo7kVEe26eKBxVz0OTQ" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jd6XsbkVEe26eKBxVz0OTQ" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jd6Xs7kVEe26eKBxVz0OTQ" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jd6XtbkVEe26eKBxVz0OTQ" name="fm" visibility="private" type="_JAbxgLkVEe26eKBxVz0OTQ" association="_JgcHQLkVEe26eKBxVz0OTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Jd6XtrkVEe26eKBxVz0OTQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jd6-wbkVEe26eKBxVz0OTQ" name="warp" visibility="private" type="_JDxZYLkVEe26eKBxVz0OTQ" association="_JgcHQ7kVEe26eKBxVz0OTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Jd6-wrkVEe26eKBxVz0OTQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jd6-xLkVEe26eKBxVz0OTQ" name="workLoad" visibility="private" type="_JEMQILkVEe26eKBxVz0OTQ" association="_JgcuUbkVEe26eKBxVz0OTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Jd6-xbkVEe26eKBxVz0OTQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jd7l0bkVEe26eKBxVz0OTQ" name="visualizationObject" visibility="private" type="_JDWioLkVEe26eKBxVz0OTQ" association="_JgdVYbkVEe26eKBxVz0OTQ"/>
              <interfaceRealization xmi:id="_Ja2coLkVEe26eKBxVz0OTQ" client="_JDPN4LkVEe26eKBxVz0OTQ" supplier="_JDK8cLkVEe26eKBxVz0OTQ" contract="_JDK8cLkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfGDerkVEe26eKBxVz0OTQ" name="VisualizationImplementation" specification="_JciesbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfGDe7kVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfGDfLkVEe26eKBxVz0OTQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfGDfbkVEe26eKBxVz0OTQ" name="choice" type="_Jch3oLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfGDfrkVEe26eKBxVz0OTQ" type="_JDPN4LkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfGDf7kVEe26eKBxVz0OTQ" name="VisualizationImplementation" specification="_Jcjs0bkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfGDgLkVEe26eKBxVz0OTQ" name="workLoad" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfGDgbkVEe26eKBxVz0OTQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfGDgrkVEe26eKBxVz0OTQ" name="choice" type="_JcjFwrkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfGDg7kVEe26eKBxVz0OTQ" type="_JDPN4LkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfGDhLkVEe26eKBxVz0OTQ" name="toDisplay" specification="_JDRDELkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>window = visualizationObject.displayVisualization();&#xD;
 if (window != null) {&#xD;
   window.setVisible();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfGqgLkVEe26eKBxVz0OTQ" name="toFile" specification="_JDRqI7kVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfGqgbkVEe26eKBxVz0OTQ" name="toString" specification="_JDSRM7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfGqgrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfGqg7kVEe26eKBxVz0OTQ" name="createVisualization" specification="_JckT4LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfGqhLkVEe26eKBxVz0OTQ" name="choice" type="_Jch3oLkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case RELIABILITIES:&#xD;
     // TODO Implement Reliability Analysis Visualization&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case SIMULATOR_INPUT:&#xD;
     // TODO Implement Simulator Input Visualization&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
&#xD;
   case LATENCY:&#xD;
     // TODO Implement Latency Analysis Visualization&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case CHANNEL:&#xD;
     // TODO Implement Channel Analysis Visualization&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp,&#xD;
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(&#xD;
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfGqhbkVEe26eKBxVz0OTQ" name="createVisualization" specification="_JckT4rkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfGqhrkVEe26eKBxVz0OTQ" name="choice" type="_JcjFwrkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case COMUNICATION_GRAPH:&#xD;
     // createWarpVisualization();&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfGqh7kVEe26eKBxVz0OTQ" name="createVisualization" specification="_JckT5LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfGqiLkVEe26eKBxVz0OTQ" name="obj" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 /* display is file content printed to console */&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
 visualizationObject = obj;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfGqibkVEe26eKBxVz0OTQ" name="createFileNameTemplate" specification="_JDS4QrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfGqirkVEe26eKBxVz0OTQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfGqi7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 // Now create the fileNameTemplate using full output path and input filename&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JDRDELkVEe26eKBxVz0OTQ" name="toDisplay" method="_JfGDhLkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JDRqI7kVEe26eKBxVz0OTQ" name="toFile" method="_JfGqgLkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JDSRM7kVEe26eKBxVz0OTQ" name="toString" method="_JfGqgbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JDSRNLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JDS4QrkVEe26eKBxVz0OTQ" name="createFileNameTemplate" visibility="private" method="_JfGqibkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_Jflys7kVEe26eKBxVz0OTQ">
                  <body>Generates full path to output file.&#xD;
   * &#xD;
   * @param outputDirectory&#xD;
   * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_JDS4Q7kVEe26eKBxVz0OTQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JDS4RLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JciesbkVEe26eKBxVz0OTQ" name="VisualizationImplementation" method="_JfGDerkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JcietbkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JcjFwLkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_JflysLkVEe26eKBxVz0OTQ">
                  <body>Creates visualization from warp program output.&#xD;
   * &#xD;
   * @param warp WarpInterface object. &#xD;
   * @param outputDirectory Where to save the visualization&#xD;
   * @param choice Type of visualization to create. @see Visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_JciesrkVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jcies7kVEe26eKBxVz0OTQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JcietLkVEe26eKBxVz0OTQ" name="choice" type="_Jch3oLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JcjFwbkVEe26eKBxVz0OTQ" type="_JDPN4LkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Jcjs0bkVEe26eKBxVz0OTQ" name="VisualizationImplementation" method="_JfGDf7kVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_Jcjs1bkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Jcjs1rkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_JflysbkVEe26eKBxVz0OTQ">
                  <body>Creates visualization from given workload.&#xD;
   * &#xD;
   * @param workLoad WorkLoad object&#xD;
   * @param outputDirectory Where to save the visualization&#xD;
   * @param choice Type of visualization to create. @see Visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_Jcjs0rkVEe26eKBxVz0OTQ" name="workLoad" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jcjs07kVEe26eKBxVz0OTQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jcjs1LkVEe26eKBxVz0OTQ" name="choice" type="_JcjFwrkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jcjs17kVEe26eKBxVz0OTQ" type="_JDPN4LkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JckT4LkVEe26eKBxVz0OTQ" name="createVisualization" visibility="private" method="_JfGqg7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JckT4bkVEe26eKBxVz0OTQ" name="choice" type="_Jch3oLkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JckT4rkVEe26eKBxVz0OTQ" name="createVisualization" visibility="private" method="_JfGqhbkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JflysrkVEe26eKBxVz0OTQ">
                  <body>Generates visualization from workload choice.&#xD;
   * Either communication graph, graphviz, or input graph.&#xD;
   * &#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_JckT47kVEe26eKBxVz0OTQ" name="choice" type="_JcjFwrkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JckT5LkVEe26eKBxVz0OTQ" name="createVisualization" visibility="private" method="_JfGqh7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jck68LkVEe26eKBxVz0OTQ" name="obj" type="_JcA6QLkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JDWioLkVEe26eKBxVz0OTQ" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_JflytLkVEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Jd8M4LkVEe26eKBxVz0OTQ" name="fm" visibility="private" type="_JAbxgLkVEe26eKBxVz0OTQ" association="_Jgd8cbkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jd8M4rkVEe26eKBxVz0OTQ" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jd8z8bkVEe26eKBxVz0OTQ" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jd8z87kVEe26eKBxVz0OTQ" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Jd8z9LkVEe26eKBxVz0OTQ" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jd9bALkVEe26eKBxVz0OTQ" name="visualizationData" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jd9bAbkVEe26eKBxVz0OTQ" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfGqjLkVEe26eKBxVz0OTQ" name="VisualizationObject" specification="_Ja444LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfGqjbkVEe26eKBxVz0OTQ" name="fm" type="_JAbxgLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfGqjrkVEe26eKBxVz0OTQ" name="workLoad" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfGqj7kVEe26eKBxVz0OTQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfGqkLkVEe26eKBxVz0OTQ" type="_JDWioLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,&#xD;
     String.valueOf(workLoad.getMinPacketReceptionRate()), String.valueOf(workLoad.getE2e()));&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfHRkLkVEe26eKBxVz0OTQ" name="VisualizationObject" specification="_Ja4457kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfHRkbkVEe26eKBxVz0OTQ" name="fm" type="_JAbxgLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfHRkrkVEe26eKBxVz0OTQ" name="warp" type="_JDBLcrkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfHRk7kVEe26eKBxVz0OTQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfHRlLkVEe26eKBxVz0OTQ" type="_JDWioLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults());&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e());&#xD;
 }&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfHRlbkVEe26eKBxVz0OTQ" name="VisualizationObject" specification="_Ja5f9bkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfHRlrkVEe26eKBxVz0OTQ" name="fm" type="_JAbxgLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfHRl7kVEe26eKBxVz0OTQ" name="warp" type="_JDBLcrkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfHRmLkVEe26eKBxVz0OTQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfHRmbkVEe26eKBxVz0OTQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfHRmrkVEe26eKBxVz0OTQ" type="_JDWioLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getNumFaults()) + nameExtension;&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e())&#xD;
           + nameExtension;&#xD;
 }&#xD;
&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfHRm7kVEe26eKBxVz0OTQ" name="VisualizationObject" specification="_Ja6HALkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfHRnLkVEe26eKBxVz0OTQ" name="fm" type="_JAbxgLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfHRnbkVEe26eKBxVz0OTQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfHRnrkVEe26eKBxVz0OTQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfHRn7kVEe26eKBxVz0OTQ" type="_JDWioLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = nameExtension;&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfH4oLkVEe26eKBxVz0OTQ" name="nameExtension" specification="_JcliALkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfH4obkVEe26eKBxVz0OTQ" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfH4orkVEe26eKBxVz0OTQ" name="m" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfH4o7kVEe26eKBxVz0OTQ" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfH4pLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension =&#xD;
     String.format(&quot;%s-%sM-%sE2E&quot;, schName, String.valueOf(m), String.valueOf(e2e));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfH4pbkVEe26eKBxVz0OTQ" name="nameExtension" specification="_JDYX0LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfH4prkVEe26eKBxVz0OTQ" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfH4p7kVEe26eKBxVz0OTQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfH4qLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;, schName, String.valueOf(numFaults));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfH4qbkVEe26eKBxVz0OTQ" name="getFileManager" specification="_JDY-47kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfH4qrkVEe26eKBxVz0OTQ" type="_JAbxgLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return fm;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfIfsLkVEe26eKBxVz0OTQ" name="visualization" specification="_JDZl8LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfIfsbkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 var data = createVisualizationData();&#xD;
&#xD;
 if (data != null) {&#xD;
   String nodeString = String.join(&quot;\t&quot;, createColumnHeader()) + &quot;\n&quot;;&#xD;
   content.add(nodeString);&#xD;
&#xD;
   for (int rowIndex = 0; rowIndex &lt; data.length; rowIndex++) {&#xD;
     var row = data[rowIndex];&#xD;
     String rowString = String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
     content.add(rowString);&#xD;
   }&#xD;
 } else {&#xD;
   content.add(NOT_IMPLEMENTED);&#xD;
 }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfIfsrkVEe26eKBxVz0OTQ" name="createFile" specification="_JDaNALkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfIfs7kVEe26eKBxVz0OTQ" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfIftLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfIftbkVEe26eKBxVz0OTQ" name="fileVisualization" specification="_JDaNA7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfIftrkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 fileContent.addAll(visualization());&#xD;
 fileContent.addAll(createFooter());&#xD;
 return fileContent;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfIft7kVEe26eKBxVz0OTQ" name="displayVisualization" specification="_JDa0ELkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfIfuLkVEe26eKBxVz0OTQ" type="_JBDckLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return null; // not implemented&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfIfubkVEe26eKBxVz0OTQ" name="createHeader" specification="_JDa0EbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfIfurkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfJGwLkVEe26eKBxVz0OTQ" name="createFooter" specification="_JDa0ErkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfJGwbkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfJGwrkVEe26eKBxVz0OTQ" name="createColumnHeader" specification="_JDa0E7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfJGw7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JfJGxLkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new String[] {NOT_IMPLEMENTED};&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfJGxbkVEe26eKBxVz0OTQ" name="createVisualizationData" specification="_JDcCMLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfJGxrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JfJGx7kVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualizationData; // not implemented--returns null&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JDYX0LkVEe26eKBxVz0OTQ" name="nameExtension" visibility="private" method="_JfH4pbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JDY-4LkVEe26eKBxVz0OTQ" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JDY-4bkVEe26eKBxVz0OTQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JDY-4rkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JDY-47kVEe26eKBxVz0OTQ" name="getFileManager" method="_JfH4qbkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JflytbkVEe26eKBxVz0OTQ">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ja6uELkVEe26eKBxVz0OTQ" type="_JAbxgLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JDZl8LkVEe26eKBxVz0OTQ" name="visualization" method="_JfIfsLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Ja6uEbkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JDaNALkVEe26eKBxVz0OTQ" name="createFile" method="_JfIfsrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JDaNAbkVEe26eKBxVz0OTQ" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JDaNArkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JDaNA7kVEe26eKBxVz0OTQ" name="fileVisualization" method="_JfIftbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Ja6uErkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JDa0ELkVEe26eKBxVz0OTQ" name="displayVisualization" method="_JfIft7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Ja6uE7kVEe26eKBxVz0OTQ" type="_JBDckLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JDa0EbkVEe26eKBxVz0OTQ" name="createHeader" visibility="protected" method="_JfIfubkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Ja6uFLkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JDa0ErkVEe26eKBxVz0OTQ" name="createFooter" visibility="protected" method="_JfJGwLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Ja6uFbkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JDa0E7kVEe26eKBxVz0OTQ" name="createColumnHeader" visibility="protected" method="_JfJGwrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JDa0FLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JDa0FbkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JDcCMLkVEe26eKBxVz0OTQ" name="createVisualizationData" visibility="protected" method="_JfJGxbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JDcCMbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JDcCMrkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ja444LkVEe26eKBxVz0OTQ" name="VisualizationObject" visibility="package" method="_JfGqjLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_Ja445LkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Ja445bkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Ja444bkVEe26eKBxVz0OTQ" name="fm" type="_JAbxgLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Ja444rkVEe26eKBxVz0OTQ" name="workLoad" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Ja4447kVEe26eKBxVz0OTQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ja445rkVEe26eKBxVz0OTQ" type="_JDWioLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ja4457kVEe26eKBxVz0OTQ" name="VisualizationObject" visibility="package" method="_JfHRkLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_Ja5f8rkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Ja5f87kVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Ja446LkVEe26eKBxVz0OTQ" name="fm" type="_JAbxgLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Ja5f8LkVEe26eKBxVz0OTQ" name="warp" type="_JDBLcrkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Ja5f8bkVEe26eKBxVz0OTQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ja5f9LkVEe26eKBxVz0OTQ" type="_JDWioLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ja5f9bkVEe26eKBxVz0OTQ" name="VisualizationObject" visibility="package" method="_JfHRlbkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_Ja5f-rkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Ja5f-7kVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Ja5f9rkVEe26eKBxVz0OTQ" name="fm" type="_JAbxgLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Ja5f97kVEe26eKBxVz0OTQ" name="warp" type="_JDBLcrkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Ja5f-LkVEe26eKBxVz0OTQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ja5f-bkVEe26eKBxVz0OTQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ja5f_LkVEe26eKBxVz0OTQ" type="_JDWioLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ja6HALkVEe26eKBxVz0OTQ" name="VisualizationObject" visibility="package" method="_JfHRm7kVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_Ja6HBLkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Ja6HBbkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Ja6HAbkVEe26eKBxVz0OTQ" name="fm" type="_JAbxgLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Ja6HArkVEe26eKBxVz0OTQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ja6HA7kVEe26eKBxVz0OTQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ja6HBrkVEe26eKBxVz0OTQ" type="_JDWioLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JcliALkVEe26eKBxVz0OTQ" name="nameExtension" visibility="private" method="_JfH4oLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JcliAbkVEe26eKBxVz0OTQ" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JcmJELkVEe26eKBxVz0OTQ" name="m" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JcmJEbkVEe26eKBxVz0OTQ" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JcmJErkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JDfFgLkVEe26eKBxVz0OTQ" name="WarpSystem">
              <ownedComment xmi:id="_JflytrkVEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Jd-CELkVEe26eKBxVz0OTQ" name="program" visibility="private" type="_JE8eELkVEe26eKBxVz0OTQ" association="_JgejgLkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jd-CErkVEe26eKBxVz0OTQ" name="workLoad" visibility="private" type="_JEMQILkVEe26eKBxVz0OTQ" association="_Jgejg7kVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jd-pIbkVEe26eKBxVz0OTQ" name="ra" visibility="private" type="_JCXEIbkVEe26eKBxVz0OTQ" association="_JgfKkbkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jd-pI7kVEe26eKBxVz0OTQ" name="la" visibility="private" type="_JBT7QLkVEe26eKBxVz0OTQ" association="_JgfxobkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jd_QMbkVEe26eKBxVz0OTQ" name="ca" visibility="private" type="_I_MbYLkVEe26eKBxVz0OTQ" association="_JggYsbkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_Jd_QM7kVEe26eKBxVz0OTQ" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeAeVLkVEe26eKBxVz0OTQ" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeBFYLkVEe26eKBxVz0OTQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeBFYrkVEe26eKBxVz0OTQ" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeBFY7kVEe26eKBxVz0OTQ" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_Ja7VILkVEe26eKBxVz0OTQ" client="_JDfFgLkVEe26eKBxVz0OTQ" supplier="_JDxZYLkVEe26eKBxVz0OTQ" contract="_JDxZYLkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfKU4LkVEe26eKBxVz0OTQ" name="WarpSystem" specification="_JcnXMbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfKU4bkVEe26eKBxVz0OTQ" name="workLoad" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfKU4rkVEe26eKBxVz0OTQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfKU47kVEe26eKBxVz0OTQ" name="choice" type="_JcmwILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfKU5LkVEe26eKBxVz0OTQ" type="_JDfFgLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
 this.numChannels = numChannels;&#xD;
 createProgram(workLoad, numChannels, choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfKU5bkVEe26eKBxVz0OTQ" name="toWorkload" specification="_JDgToLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfKU5rkVEe26eKBxVz0OTQ" type="_JEMQILkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfKU57kVEe26eKBxVz0OTQ" name="toProgram" specification="_JDhhwLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfKU6LkVEe26eKBxVz0OTQ" type="_JE8eELkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return program;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfKU6bkVEe26eKBxVz0OTQ" name="toReliabilityAnalysis" specification="_JDiI0rkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfKU6rkVEe26eKBxVz0OTQ" type="_JCXEIbkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);&#xD;
 return ra;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfKU67kVEe26eKBxVz0OTQ" name="toSimulator" specification="_JDiv4rkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfKU7LkVEe26eKBxVz0OTQ" type="_JC-vMLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfKU7bkVEe26eKBxVz0OTQ" name="toLatencyAnalysis" specification="_JDjW87kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfKU7rkVEe26eKBxVz0OTQ" type="_JBT7QLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
 return la;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfKU77kVEe26eKBxVz0OTQ" name="toChannelAnalysis" specification="_JDklELkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfKU8LkVEe26eKBxVz0OTQ" type="_I_MbYLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
 return ca;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfK78LkVEe26eKBxVz0OTQ" name="reliabilitiesMet" specification="_JDlMIbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfK78bkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
   ra = new ReliabilityAnalysis(program);&#xD;
 }&#xD;
 return ra.verifyReliabilities();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfK78rkVEe26eKBxVz0OTQ" name="deadlinesMet" specification="_JDlzNLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfK787kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
 if (program.deadlineMisses().size() > 0) {&#xD;
   result = false;&#xD;
 }&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfK79LkVEe26eKBxVz0OTQ" name="createProgram" specification="_Jcn-QLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfK79bkVEe26eKBxVz0OTQ" name="workLoad" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfK79rkVEe26eKBxVz0OTQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfK797kVEe26eKBxVz0OTQ" name="choice" type="_JcmwILkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfK7-LkVEe26eKBxVz0OTQ" name="getNumFaults" specification="_JDmaQrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfK7-bkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfK7-rkVEe26eKBxVz0OTQ" name="getMinPacketReceptionRate" specification="_JDnBVLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfK7-7kVEe26eKBxVz0OTQ" type="_JcZ71rkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfK7_LkVEe26eKBxVz0OTQ" name="getE2e" specification="_JDnoY7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfK7_bkVEe26eKBxVz0OTQ" type="_JcZ71rkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfK7_rkVEe26eKBxVz0OTQ" name="getName" specification="_JDoPc7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfK7_7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfLjALkVEe26eKBxVz0OTQ" name="getSchedulerName" specification="_JDpdkLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfLjAbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfLjArkVEe26eKBxVz0OTQ" name="getNumTransmissions" specification="_JDqEorkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfLjA7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfLjBLkVEe26eKBxVz0OTQ" name="getOptimizationFlag" specification="_JDqrsrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfLjBbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JDgToLkVEe26eKBxVz0OTQ" name="toWorkload" method="_JfKU5bkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Ja78MLkVEe26eKBxVz0OTQ" type="_JEMQILkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JDhhwLkVEe26eKBxVz0OTQ" name="toProgram" method="_JfKU57kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Ja78MbkVEe26eKBxVz0OTQ" type="_JE8eELkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JDiI0rkVEe26eKBxVz0OTQ" name="toReliabilityAnalysis" method="_JfKU6bkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Ja78MrkVEe26eKBxVz0OTQ" type="_JCXEIbkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JDiv4rkVEe26eKBxVz0OTQ" name="toSimulator" method="_JfKU67kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Ja8jQLkVEe26eKBxVz0OTQ" type="_JC-vMLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JDjW87kVEe26eKBxVz0OTQ" name="toLatencyAnalysis" method="_JfKU7bkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Ja8jQbkVEe26eKBxVz0OTQ" type="_JBT7QLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JDklELkVEe26eKBxVz0OTQ" name="toChannelAnalysis" method="_JfKU77kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Ja8jQrkVEe26eKBxVz0OTQ" type="_I_MbYLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JDlMIbkVEe26eKBxVz0OTQ" name="reliabilitiesMet" method="_JfK78LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JDlzMLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JDlzNLkVEe26eKBxVz0OTQ" name="deadlinesMet" method="_JfK78rkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JDlzNbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JDmaQrkVEe26eKBxVz0OTQ" name="getNumFaults" method="_JfK7-LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JDnBULkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JDnBVLkVEe26eKBxVz0OTQ" name="getMinPacketReceptionRate" method="_JfK7-rkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jcn-RLkVEe26eKBxVz0OTQ" type="_JcZ71rkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JDnoY7kVEe26eKBxVz0OTQ" name="getE2e" method="_JfK7_LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jcn-RbkVEe26eKBxVz0OTQ" type="_JcZ71rkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JDoPc7kVEe26eKBxVz0OTQ" name="getName" method="_JfK7_rkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JDo2gLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JDpdkLkVEe26eKBxVz0OTQ" name="getSchedulerName" method="_JfLjALkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JDpdkbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JDqEorkVEe26eKBxVz0OTQ" name="getNumTransmissions" method="_JfLjArkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JDqEo7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JDqrsrkVEe26eKBxVz0OTQ" name="getOptimizationFlag" method="_JfLjBLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JDqrs7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JDrSwbkVEe26eKBxVz0OTQ" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_JcnXMbkVEe26eKBxVz0OTQ" name="WarpSystem" method="_JfKU4LkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JcnXNbkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JcnXNrkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JcnXMrkVEe26eKBxVz0OTQ" name="workLoad" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JcnXM7kVEe26eKBxVz0OTQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JcnXNLkVEe26eKBxVz0OTQ" name="choice" type="_JcmwILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JcnXN7kVEe26eKBxVz0OTQ" type="_JDfFgLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Jcn-QLkVEe26eKBxVz0OTQ" name="createProgram" visibility="private" method="_JfK79LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jcn-QbkVEe26eKBxVz0OTQ" name="workLoad" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jcn-QrkVEe26eKBxVz0OTQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jcn-Q7kVEe26eKBxVz0OTQ" name="choice" type="_JcmwILkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JDwLQLkVEe26eKBxVz0OTQ" name="WarpPoset">
              <ownedComment xmi:id="_Jflyt7kVEe26eKBxVz0OTQ">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_Ja-_gLkVEe26eKBxVz0OTQ" general="_JBxOQLkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfMKELkVEe26eKBxVz0OTQ" name="WarpPoset" specification="_Ja-YcLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfMKEbkVEe26eKBxVz0OTQ" name="workload" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfMKErkVEe26eKBxVz0OTQ" type="_JDwLQLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfMxILkVEe26eKBxVz0OTQ" name="findCoordinator" specification="_JcolULkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfMxIbkVEe26eKBxVz0OTQ" name="nodesInFlow" type="_JY7KALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfMxIrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Ja-YcLkVEe26eKBxVz0OTQ" name="WarpPoset" visibility="package" method="_JfMKELkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_Ja-YcrkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Ja-Yc7kVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Ja-YcbkVEe26eKBxVz0OTQ" name="workload" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Ja-YdLkVEe26eKBxVz0OTQ" type="_JDwLQLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JcolULkVEe26eKBxVz0OTQ" name="findCoordinator" visibility="protected" method="_JfMxILkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JcpMYLkVEe26eKBxVz0OTQ" name="nodesInFlow" type="_JY7KALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JcpMYbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_JDxZYLkVEe26eKBxVz0OTQ" name="WarpInterface">
              <ownedComment xmi:id="_JflyuLkVEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_Ja-_gbkVEe26eKBxVz0OTQ" general="_JDBLcrkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JDyngLkVEe26eKBxVz0OTQ" name="toWorkload">
                <ownedParameter xmi:id="_Ja-_grkVEe26eKBxVz0OTQ" type="_JEMQILkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JDyngbkVEe26eKBxVz0OTQ" name="toProgram">
                <ownedParameter xmi:id="_Ja-_g7kVEe26eKBxVz0OTQ" type="_JE8eELkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JDzOkLkVEe26eKBxVz0OTQ" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_Ja-_hLkVEe26eKBxVz0OTQ" type="_JCXEIbkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JDzOkbkVEe26eKBxVz0OTQ" name="toSimulator">
                <ownedParameter xmi:id="_Ja-_hbkVEe26eKBxVz0OTQ" type="_JC-vMLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JDz1oLkVEe26eKBxVz0OTQ" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_Ja_mkLkVEe26eKBxVz0OTQ" type="_JBT7QLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JDz1obkVEe26eKBxVz0OTQ" name="toChannelAnalysis">
                <ownedParameter xmi:id="_Ja_mkbkVEe26eKBxVz0OTQ" type="_I_MbYLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JDz1orkVEe26eKBxVz0OTQ" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_JDz1o7kVEe26eKBxVz0OTQ" name="reliabilitiesMet">
                <ownedParameter xmi:id="_JD0csLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JD0csbkVEe26eKBxVz0OTQ" name="deadlinesMet">
                <ownedParameter xmi:id="_JD0csrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JD1q0LkVEe26eKBxVz0OTQ" name="WarpDSL">
              <ownedComment xmi:id="_JflyubkVEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_JeBscLkVEe26eKBxVz0OTQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeCTgLkVEe26eKBxVz0OTQ" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeCTgbkVEe26eKBxVz0OTQ" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeCTgrkVEe26eKBxVz0OTQ" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeCTg7kVEe26eKBxVz0OTQ" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeCThLkVEe26eKBxVz0OTQ" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfNYNrkVEe26eKBxVz0OTQ" name="getInstructionParameters" specification="_JD6jULkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfNYN7kVEe26eKBxVz0OTQ" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfNYOLkVEe26eKBxVz0OTQ" type="_JY7KALkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JD6jULkVEe26eKBxVz0OTQ" name="getInstructionParameters" method="_JfNYNrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JD6jUbkVEe26eKBxVz0OTQ" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JcqagLkVEe26eKBxVz0OTQ" type="_JY7KALkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_JD2R4LkVEe26eKBxVz0OTQ" name="InstructionParameters">
                <ownedAttribute xmi:id="_JeCThbkVEe26eKBxVz0OTQ" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeC6kLkVEe26eKBxVz0OTQ" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_JeC6kbkVEe26eKBxVz0OTQ" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeC6krkVEe26eKBxVz0OTQ" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_JeC6k7kVEe26eKBxVz0OTQ" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeC6lLkVEe26eKBxVz0OTQ" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_JeDhoLkVEe26eKBxVz0OTQ" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeDhobkVEe26eKBxVz0OTQ" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_JeDhorkVEe26eKBxVz0OTQ" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeDho7kVEe26eKBxVz0OTQ" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_JeDhpLkVEe26eKBxVz0OTQ" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeDhpbkVEe26eKBxVz0OTQ" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_JeEIsLkVEe26eKBxVz0OTQ" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeEIsbkVEe26eKBxVz0OTQ" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfMxI7kVEe26eKBxVz0OTQ" name="getCoordinator" specification="_JD3gALkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JfMxJLkVEe26eKBxVz0OTQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfMxJbkVEe26eKBxVz0OTQ" name="setCoordinator" specification="_JD3gArkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JfMxJrkVEe26eKBxVz0OTQ" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfMxJ7kVEe26eKBxVz0OTQ" name="setName" specification="_JD4HELkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JfMxKLkVEe26eKBxVz0OTQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfMxKbkVEe26eKBxVz0OTQ" name="setFlow" specification="_JD4uILkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JfMxKrkVEe26eKBxVz0OTQ" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfMxK7kVEe26eKBxVz0OTQ" name="setSrc" specification="_JD4uIrkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JfMxLLkVEe26eKBxVz0OTQ" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfNYMLkVEe26eKBxVz0OTQ" name="setSnk" specification="_JD4uJLkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JfNYMbkVEe26eKBxVz0OTQ" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfNYMrkVEe26eKBxVz0OTQ" name="setChannel" specification="_JD5VMbkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JfNYM7kVEe26eKBxVz0OTQ" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfNYNLkVEe26eKBxVz0OTQ" name="unused" specification="_JD5VM7kVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JfNYNbkVEe26eKBxVz0OTQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_JD3gALkVEe26eKBxVz0OTQ" name="getCoordinator" method="_JfMxI7kVEe26eKBxVz0OTQ">
                  <ownedComment xmi:id="_JfmZwLkVEe26eKBxVz0OTQ">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_JD3gAbkVEe26eKBxVz0OTQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_JD3gArkVEe26eKBxVz0OTQ" name="setCoordinator" method="_JfMxJbkVEe26eKBxVz0OTQ">
                  <ownedComment xmi:id="_JfmZwbkVEe26eKBxVz0OTQ">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_JD3gA7kVEe26eKBxVz0OTQ" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_JD4HELkVEe26eKBxVz0OTQ" name="setName" visibility="private" method="_JfMxJ7kVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JD4HEbkVEe26eKBxVz0OTQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_JD4uILkVEe26eKBxVz0OTQ" name="setFlow" visibility="private" method="_JfMxKbkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JD4uIbkVEe26eKBxVz0OTQ" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_JD4uIrkVEe26eKBxVz0OTQ" name="setSrc" visibility="private" method="_JfMxK7kVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JD4uI7kVEe26eKBxVz0OTQ" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_JD4uJLkVEe26eKBxVz0OTQ" name="setSnk" visibility="private" method="_JfNYMLkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JD5VMLkVEe26eKBxVz0OTQ" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_JD5VMbkVEe26eKBxVz0OTQ" name="setChannel" visibility="private" method="_JfNYMrkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JD5VMrkVEe26eKBxVz0OTQ" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_JD5VM7kVEe26eKBxVz0OTQ" name="unused" method="_JfNYNLkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JD5VNLkVEe26eKBxVz0OTQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_JD7xcLkVEe26eKBxVz0OTQ" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_JcrBkbkVEe26eKBxVz0OTQ" general="_JcqagbkVEe26eKBxVz0OTQ"/>
                <ownedAttribute xmi:id="_JeEIsrkVEe26eKBxVz0OTQ" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_JeEvwbkVEe26eKBxVz0OTQ" name="instructionParametersArrayList" visibility="package" type="_JY7KALkVEe26eKBxVz0OTQ" association="_Jgg_wbkVEe26eKBxVz0OTQ"/>
                <ownedAttribute xmi:id="_JeFW0rkVEe26eKBxVz0OTQ" name="instructionParameters" visibility="package" type="_JD2R4LkVEe26eKBxVz0OTQ" association="_Jghm0bkVEe26eKBxVz0OTQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfNYObkVEe26eKBxVz0OTQ" name="ListenerDsl" specification="_JD8YgLkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JfNYOrkVEe26eKBxVz0OTQ" type="_JD7xcLkVEe26eKBxVz0OTQ" direction="return"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfNYO7kVEe26eKBxVz0OTQ" name="getInstructionParameters" specification="_JD8YhLkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JfNYPLkVEe26eKBxVz0OTQ" type="_JY7KALkVEe26eKBxVz0OTQ" direction="return"/>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfNYPbkVEe26eKBxVz0OTQ" name="enterAction" specification="_JbA0sLkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JfNYPrkVEe26eKBxVz0OTQ" name="ctx" type="_JbANoLkVEe26eKBxVz0OTQ"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfNYP7kVEe26eKBxVz0OTQ" name="exitAction" specification="_JbA0tbkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JfNYQLkVEe26eKBxVz0OTQ" name="ctx" type="_JbANoLkVEe26eKBxVz0OTQ"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfNYQbkVEe26eKBxVz0OTQ" name="exitFlowName" specification="_JbCC0bkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JfNYQrkVEe26eKBxVz0OTQ" name="ctx" type="_JbBbxLkVEe26eKBxVz0OTQ"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfNYQ7kVEe26eKBxVz0OTQ" name="exitCmd" specification="_JbDQ8LkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JfNYRLkVEe26eKBxVz0OTQ" name="ctx" type="_JbCp4rkVEe26eKBxVz0OTQ"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfN_QLkVEe26eKBxVz0OTQ" name="exitSrcNode" specification="_JbD4ArkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JfN_QbkVEe26eKBxVz0OTQ" name="ctx" type="_JbD4ALkVEe26eKBxVz0OTQ"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfN_QrkVEe26eKBxVz0OTQ" name="exitSnkNode" specification="_JbFGIbkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JfN_Q7kVEe26eKBxVz0OTQ" name="ctx" type="_JbEfE7kVEe26eKBxVz0OTQ"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfN_RLkVEe26eKBxVz0OTQ" name="exitChannel" specification="_JbGUQbkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JfN_RbkVEe26eKBxVz0OTQ" name="ctx" type="_JbFtMrkVEe26eKBxVz0OTQ"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_JD8YgLkVEe26eKBxVz0OTQ" name="ListenerDsl" visibility="package" method="_JfNYObkVEe26eKBxVz0OTQ">
                  <eAnnotations xmi:id="_JD8YgbkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_JD8YgrkVEe26eKBxVz0OTQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_JD8Yg7kVEe26eKBxVz0OTQ" type="_JD7xcLkVEe26eKBxVz0OTQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_JD8YhLkVEe26eKBxVz0OTQ" name="getInstructionParameters" method="_JfNYO7kVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JcrBkLkVEe26eKBxVz0OTQ" type="_JY7KALkVEe26eKBxVz0OTQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_JbA0sLkVEe26eKBxVz0OTQ" name="enterAction" method="_JfNYPbkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JbA0sbkVEe26eKBxVz0OTQ" name="ctx" type="_JbANoLkVEe26eKBxVz0OTQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_JbA0tbkVEe26eKBxVz0OTQ" name="exitAction" method="_JfNYP7kVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JbBbwLkVEe26eKBxVz0OTQ" name="ctx" type="_JbANoLkVEe26eKBxVz0OTQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_JbCC0bkVEe26eKBxVz0OTQ" name="exitFlowName" method="_JfNYQbkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JbCC0rkVEe26eKBxVz0OTQ" name="ctx" type="_JbBbxLkVEe26eKBxVz0OTQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_JbDQ8LkVEe26eKBxVz0OTQ" name="exitCmd" method="_JfNYQ7kVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JbDQ8bkVEe26eKBxVz0OTQ" name="ctx" type="_JbCp4rkVEe26eKBxVz0OTQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_JbD4ArkVEe26eKBxVz0OTQ" name="exitSrcNode" method="_JfN_QLkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JbD4A7kVEe26eKBxVz0OTQ" name="ctx" type="_JbD4ALkVEe26eKBxVz0OTQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_JbFGIbkVEe26eKBxVz0OTQ" name="exitSnkNode" method="_JfN_QrkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JbFGIrkVEe26eKBxVz0OTQ" name="ctx" type="_JbEfE7kVEe26eKBxVz0OTQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_JbGUQbkVEe26eKBxVz0OTQ" name="exitChannel" method="_JfN_RLkVEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_JbGUQrkVEe26eKBxVz0OTQ" name="ctx" type="_JbFtMrkVEe26eKBxVz0OTQ"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JECfILkVEe26eKBxVz0OTQ" name="Warp">
              <ownedComment xmi:id="_JfmZwrkVEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_JeGk8LkVEe26eKBxVz0OTQ" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeGk8bkVEe26eKBxVz0OTQ" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeGk8rkVEe26eKBxVz0OTQ" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_JcZ71rkVEe26eKBxVz0OTQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeGk87kVEe26eKBxVz0OTQ" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeGk9LkVEe26eKBxVz0OTQ" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_JcZ71rkVEe26eKBxVz0OTQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeGk9bkVEe26eKBxVz0OTQ" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeHMALkVEe26eKBxVz0OTQ" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeHMAbkVEe26eKBxVz0OTQ" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeHMArkVEe26eKBxVz0OTQ" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_JDCZkLkVEe26eKBxVz0OTQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeHMA7kVEe26eKBxVz0OTQ" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeHMBLkVEe26eKBxVz0OTQ" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeHMBbkVEe26eKBxVz0OTQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeHMBrkVEe26eKBxVz0OTQ" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeHzEbkVEe26eKBxVz0OTQ" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeHzE7kVEe26eKBxVz0OTQ" name="minLQ" visibility="private" isStatic="true" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JeIaILkVEe26eKBxVz0OTQ" name="e2e" visibility="private" isStatic="true" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JeIaIrkVEe26eKBxVz0OTQ" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeJBMLkVEe26eKBxVz0OTQ" name="guiRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeJBMrkVEe26eKBxVz0OTQ" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeJBNLkVEe26eKBxVz0OTQ" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeJoQbkVEe26eKBxVz0OTQ" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeJoQ7kVEe26eKBxVz0OTQ" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeKPULkVEe26eKBxVz0OTQ" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeKPUrkVEe26eKBxVz0OTQ" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeKPVLkVEe26eKBxVz0OTQ" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeK2YbkVEe26eKBxVz0OTQ" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeK2Y7kVEe26eKBxVz0OTQ" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeK2ZLkVEe26eKBxVz0OTQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeLdcbkVEe26eKBxVz0OTQ" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeLdc7kVEe26eKBxVz0OTQ" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeMEgbkVEe26eKBxVz0OTQ" name="schedulerSelected" visibility="private" isStatic="true" type="_JDCZkLkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfN_RrkVEe26eKBxVz0OTQ" name="main" specification="_JEEUULkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfN_R7kVEe26eKBxVz0OTQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JfN_SLkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
 setWarpParameters(args);&#xD;
&#xD;
 // and print out the values if in verbose mode&#xD;
 if (verboseMode) {&#xD;
   printWarpParameters();&#xD;
 }&#xD;
&#xD;
 // Create and visualize the workload&#xD;
 // inputFile string, which may be null,&#xD;
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
 if (allRequested) {&#xD;
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
     visualize(workLoad, choice); // visualize all Program choices&#xD;
   }&#xD;
   // Create and visualize the Warp System&#xD;
   if (schedulerRequested) {&#xD;
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
     verifyPerformanceRequirements(warp);&#xD;
     for (SystemChoices choice : SystemChoices.values()) {&#xD;
       visualize(warp, choice); // visualize all System choices&#xD;
     }&#xD;
   } else { // create a system for all scheduler choices&#xD;
     for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
       schedulerSelected = sch;&#xD;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
       verifyPerformanceRequirements(warp);&#xD;
       for (SystemChoices choice : SystemChoices.values()) {&#xD;
         visualize(warp, choice); // visualize all System choices&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 } else { // visualize warp workload, source program and other requested items&#xD;
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
   if (wfRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
   }&#xD;
   if (gvRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
   }&#xD;
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
   verifyPerformanceRequirements(warp);&#xD;
   visualize(warp, SystemChoices.SOURCE);&#xD;
   if (caRequested) {&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
   if (laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY);&#xD;
   }&#xD;
   if (latencyRequested || laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
   }&#xD;
   if (raRequested) {&#xD;
     visualize(warp, SystemChoices.RELIABILITIES);&#xD;
   }&#xD;
 }&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfOmULkVEe26eKBxVz0OTQ" name="visualize" specification="_JbMa4LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfOmUbkVEe26eKBxVz0OTQ" name="workLoad" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfOmUrkVEe26eKBxVz0OTQ" name="choice" type="_JDMKk7kVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var viz =&#xD;
     VisualizationFactory.createWorkLoadVisualization(workLoad, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   if (verboseMode) {&#xD;
     System.out.println(viz.toString());&#xD;
   }&#xD;
   viz.toFile();&#xD;
   if (guiRequested) {&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfOmU7kVEe26eKBxVz0OTQ" name="visualize" specification="_JbNB8LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfOmVLkVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfOmVbkVEe26eKBxVz0OTQ" name="choice" type="_JDLjgLkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createProgramVisualization(warp, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   viz.toFile();&#xD;
   if (guiRequested &amp;&amp; schedulerRequested) {&#xD;
     /* Only display window when a specific scheduler has been requested */&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfOmVrkVEe26eKBxVz0OTQ" name="verifyPerformanceRequirements" specification="_JbNB87kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfOmV7kVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
 verifyReliabilities(warp);&#xD;
 verifyNoChannelConflicts(warp);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfOmWLkVEe26eKBxVz0OTQ" name="verifyReliabilities" specification="_JbNB9bkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfOmWbkVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
   /* RealTime HART doesn't adhere to reliability targets */&#xD;
   if (!warp.reliabilitiesMet()) {&#xD;
     System.err.printf(&#xD;
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
             + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   } else if (verboseMode) {&#xD;
     System.out.printf(&#xD;
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfOmWrkVEe26eKBxVz0OTQ" name="verifyDeadlines" specification="_JbNpALkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfOmW7kVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
   visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfOmXLkVEe26eKBxVz0OTQ" name="verifyNoChannelConflicts" specification="_JbNpArkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfOmXbkVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
   System.err&#xD;
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
   if (!caRequested) { // only need to create the visualization if not already requested&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfOmXrkVEe26eKBxVz0OTQ" name="setWarpParameters" specification="_JEGwkLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfOmX7kVEe26eKBxVz0OTQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JfOmYLkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this&#xD;
                                                      // function--need to set up globals?&#xD;
&#xD;
 // create holder objects for storing results ...&#xD;
 // BooleanHolder debug = new BooleanHolder();&#xD;
 StringHolder schedulerSelected = new StringHolder();&#xD;
 IntHolder channels = new IntHolder();&#xD;
 IntHolder faults = new IntHolder();&#xD;
 DoubleHolder m = new DoubleHolder();&#xD;
 DoubleHolder end2end = new DoubleHolder();&#xD;
 BooleanHolder gui = new BooleanHolder();&#xD;
 BooleanHolder gv = new BooleanHolder();&#xD;
 BooleanHolder wf = new BooleanHolder();&#xD;
 BooleanHolder ra = new BooleanHolder();&#xD;
 BooleanHolder la = new BooleanHolder();&#xD;
 BooleanHolder ca = new BooleanHolder();&#xD;
 BooleanHolder s = new BooleanHolder();&#xD;
 BooleanHolder all = new BooleanHolder();&#xD;
 BooleanHolder latency = new BooleanHolder();&#xD;
 BooleanHolder verbose = new BooleanHolder();&#xD;
 StringHolder input = new StringHolder();&#xD;
 StringHolder output = new StringHolder();&#xD;
&#xD;
 // create the parser and specify the allowed options ...&#xD;
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,&#xD;
     schedulerSelected);&#xD;
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
 parser.addOption(&#xD;
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,&#xD;
     end2end);&#xD;
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,&#xD;
     faults);&#xD;
 parser.addOption(&quot;-gui %v #create a gui visualizations&quot;, gui);&#xD;
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
 parser.addOption(&#xD;
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
     wf);&#xD;
 parser.addOption(&#xD;
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,&#xD;
     ra);&#xD;
 parser.addOption(&#xD;
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
 parser.addOption(&#xD;
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,&#xD;
     output);&#xD;
 parser.addOption(&#xD;
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
     verbose);&#xD;
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
 // $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
&#xD;
 // match the arguments ...&#xD;
 parser.matchAllArgs(args);&#xD;
&#xD;
 // Set WARP system configuration options&#xD;
 if (channels.value > 0) {&#xD;
   nChannels = channels.value; // set option specified&#xD;
 } else {&#xD;
   nChannels = NUM_CHANNELS; // set to default&#xD;
 }&#xD;
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
   numFaults = faults.value; // set option specified&#xD;
 } else {&#xD;
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
 }&#xD;
 if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   minLQ = m.value; // set option specified&#xD;
 } else {&#xD;
   minLQ = MIN_LQ; // set to default&#xD;
 }&#xD;
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   e2e = end2end.value; // set option specified&#xD;
 } else {&#xD;
   e2e = E2E; // set to default&#xD;
 }&#xD;
 if (output.value != null) { // default output subdirectory (from working directory)&#xD;
   outputSubDirectory = output.value; // set option specified&#xD;
 } else {&#xD;
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
 }&#xD;
&#xD;
 guiRequested = gui.value; // GraphVis file requested flag&#xD;
 gvRequested = gv.value; // GraphVis file requested flag&#xD;
 wfRequested = wf.value; // WARP file requested flag&#xD;
 raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
 laRequested = la.value; // Latency Analysis file requested flag&#xD;
 caRequested = ca.value; // Latency Analysis file requested flag&#xD;
 simRequested = s.value; // Simulation file requested flag&#xD;
 allRequested = all.value; // all out files requested flag&#xD;
 latencyRequested = latency.value; // latency report requested flag&#xD;
 verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
 inputFile = input.value; // input file specified&#xD;
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
   schedulerRequested = true;&#xD;
   switch (schedulerSelected.value) {&#xD;
     case &quot;priority&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
&#xD;
     case &quot;rm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
       break;&#xD;
&#xD;
     case &quot;dm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
       break;&#xD;
&#xD;
     case &quot;rtHart&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
       break;&#xD;
&#xD;
     case &quot;poset&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
       break;&#xD;
&#xD;
     default:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
   }&#xD;
 } else { // null value when no scheduler specified; so use default&#xD;
   Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfOmYbkVEe26eKBxVz0OTQ" name="printWarpParameters" specification="_JEHXoLkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>// print all system configuration parameters&#xD;
 // Print out each of the system configuration values&#xD;
 System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
 System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
 System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
 System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
 System.out.println(&quot;\tguiRequest flag=&quot; + guiRequested);&#xD;
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
 if (inputFile != null) {&#xD;
   System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
 } else {&#xD;
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
 }&#xD;
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JEEUULkVEe26eKBxVz0OTQ" name="main" isStatic="true" method="_JfN_RrkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfmZw7kVEe26eKBxVz0OTQ">
                  <body>The main entry point for the application.&#xD;
   * Run with -help argument for more information about commands.&#xD;
   * @param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEE7YLkVEe26eKBxVz0OTQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JEE7YbkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEGwkLkVEe26eKBxVz0OTQ" name="setWarpParameters" visibility="private" isStatic="true" method="_JfOmXrkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfmZyrkVEe26eKBxVz0OTQ">
                  <body>Parses program arguments and assigns each attribute.&#xD;
   * &#xD;
   * @param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEGwkbkVEe26eKBxVz0OTQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JEGwkrkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEHXoLkVEe26eKBxVz0OTQ" name="printWarpParameters" visibility="private" isStatic="true" method="_JfOmYbkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfmZy7kVEe26eKBxVz0OTQ">
                  <body>Displays warp parameters to console.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_JbMa4LkVEe26eKBxVz0OTQ" name="visualize" visibility="private" isStatic="true" method="_JfOmULkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfmZxLkVEe26eKBxVz0OTQ">
                  <body>Visualizes workload by creating visualization object from workload object.&#xD;
   * Either prints to console or displays GUI depending on workload choice.&#xD;
   * &#xD;
   * @param workLoad&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_JbMa4bkVEe26eKBxVz0OTQ" name="workLoad" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JbMa4rkVEe26eKBxVz0OTQ" name="choice" type="_JDMKk7kVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JbNB8LkVEe26eKBxVz0OTQ" name="visualize" visibility="private" isStatic="true" method="_JfOmU7kVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfmZxbkVEe26eKBxVz0OTQ">
                  <body>Visualizes workload by creating visualization object from WarpInterface object.&#xD;
   * Saves visualization to file.&#xD;
   * &#xD;
   * @param workLoad&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_JbNB8bkVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JbNB8rkVEe26eKBxVz0OTQ" name="choice" type="_JDLjgLkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JbNB87kVEe26eKBxVz0OTQ" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_JfOmVrkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfmZxrkVEe26eKBxVz0OTQ">
                  <body>Verifies deadlines, reliabilities, and channel conflicts.&#xD;
   * &#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_JbNB9LkVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JbNB9bkVEe26eKBxVz0OTQ" name="verifyReliabilities" visibility="private" isStatic="true" method="_JfOmWLkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfmZx7kVEe26eKBxVz0OTQ">
                  <body>Verifies end to end reliabilities and displays to console.&#xD;
   * &#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_JbNB9rkVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JbNpALkVEe26eKBxVz0OTQ" name="verifyDeadlines" visibility="private" isStatic="true" method="_JfOmWrkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfmZyLkVEe26eKBxVz0OTQ">
                  <body>Verifies that all flows meet their deadlines.&#xD;
   * &#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_JbNpAbkVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JbNpArkVEe26eKBxVz0OTQ" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_JfOmXLkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfmZybkVEe26eKBxVz0OTQ">
                  <body>Checks for conflicts between channels and prints to console.&#xD;
   * &#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_JbNpA7kVEe26eKBxVz0OTQ" name="warp" type="_JDxZYLkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JEMQILkVEe26eKBxVz0OTQ" name="WorkLoad">
              <ownedComment xmi:id="_ASCxgMqOEe2esKyal-zizw">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_JbU9w7kVEe26eKBxVz0OTQ" general="_JCmUsLkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JeNSoLkVEe26eKBxVz0OTQ" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeNSobkVEe26eKBxVz0OTQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeNSorkVEe26eKBxVz0OTQ" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeNSo7kVEe26eKBxVz0OTQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeNSpLkVEe26eKBxVz0OTQ" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeN5sLkVEe26eKBxVz0OTQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeN5sbkVEe26eKBxVz0OTQ" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeN5srkVEe26eKBxVz0OTQ" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeN5s7kVEe26eKBxVz0OTQ" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeN5tLkVEe26eKBxVz0OTQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeN5tbkVEe26eKBxVz0OTQ" name="minPacketReceptionRate" type="_JcZ71rkVEe26eKBxVz0OTQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeOgwLkVEe26eKBxVz0OTQ" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeOgwbkVEe26eKBxVz0OTQ" name="e2e" visibility="private" type="_JcZ71rkVEe26eKBxVz0OTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeOgwrkVEe26eKBxVz0OTQ" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JePH0LkVEe26eKBxVz0OTQ" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JePH0bkVEe26eKBxVz0OTQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JePH0rkVEe26eKBxVz0OTQ" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JePH07kVEe26eKBxVz0OTQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JePu4LkVEe26eKBxVz0OTQ" name="flows" type="_JA2oQLkVEe26eKBxVz0OTQ" association="_JfnA0LkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JePu4bkVEe26eKBxVz0OTQ" name="nodes" type="_JBp5gLkVEe26eKBxVz0OTQ" association="_JfnA0rkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JeQV8LkVEe26eKBxVz0OTQ" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeQV8rkVEe26eKBxVz0OTQ" name="flowNamesInOriginalOrder" type="_JY7KALkVEe26eKBxVz0OTQ" association="_JgiN4bkVEe26eKBxVz0OTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeQ9AbkVEe26eKBxVz0OTQ" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeQ9ArkVEe26eKBxVz0OTQ" name="flowNamesInPriorityOrder" type="_JY7KALkVEe26eKBxVz0OTQ" association="_Jgi08bkVEe26eKBxVz0OTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeRkEbkVEe26eKBxVz0OTQ" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_JbTIk7kVEe26eKBxVz0OTQ" client="_JEMQILkVEe26eKBxVz0OTQ" supplier="_JCY5ULkVEe26eKBxVz0OTQ" contract="_JCY5ULkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfPNYLkVEe26eKBxVz0OTQ" name="WorkLoad" specification="_JcuE4LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfPNYbkVEe26eKBxVz0OTQ" name="m" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfPNYrkVEe26eKBxVz0OTQ" name="e2e" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfPNY7kVEe26eKBxVz0OTQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfPNZLkVEe26eKBxVz0OTQ" type="_JEMQILkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfP0cLkVEe26eKBxVz0OTQ" name="WorkLoad" specification="_Jcur9bkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfP0cbkVEe26eKBxVz0OTQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfP0crkVEe26eKBxVz0OTQ" name="m" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfP0c7kVEe26eKBxVz0OTQ" name="e2e" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfP0dLkVEe26eKBxVz0OTQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfP0dbkVEe26eKBxVz0OTQ" type="_JEMQILkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(inputFileName);&#xD;
	&#xD;
 setDefaultParameters();&#xD;
	&#xD;
 this.numFaults = numFaults;&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
	&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfP0drkVEe26eKBxVz0OTQ" name="setDefaultParameters" specification="_JEOsYLkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfP0d7kVEe26eKBxVz0OTQ" name="getE2e" specification="_JEPTcLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfP0eLkVEe26eKBxVz0OTQ" type="_JcZ71rkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfP0ebkVEe26eKBxVz0OTQ" name="getIntForFlowNames" specification="_JEPTcbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfP0erkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfP0e7kVEe26eKBxVz0OTQ" name="getName" specification="_JEP6gLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfP0fLkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfP0fbkVEe26eKBxVz0OTQ" name="setMinPacketReceptionRate" specification="_JcvTAbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfP0frkVEe26eKBxVz0OTQ" name="minPacketReceptionRate" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfP0f7kVEe26eKBxVz0OTQ" name="getMaxPhase" specification="_JEP6grkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfP0gLkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfP0gbkVEe26eKBxVz0OTQ" name="getMinPeriod" specification="_JEQhkLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfP0grkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfQbgLkVEe26eKBxVz0OTQ" name="setE2e" specification="_Jcv6ELkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfQbgbkVEe26eKBxVz0OTQ" name="e2e" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfQbgrkVEe26eKBxVz0OTQ" name="setIntForFlowNames" specification="_JEQhkrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfQbg7kVEe26eKBxVz0OTQ" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfQbhLkVEe26eKBxVz0OTQ" name="setName" specification="_JERIoLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfQbhbkVEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfQbhrkVEe26eKBxVz0OTQ" name="setNodeChannel" specification="_JERIorkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfQbh7kVEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfQbiLkVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfQbibkVEe26eKBxVz0OTQ" name="getNodeChannel" specification="_JERvsbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfQbirkVEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfQbi7kVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfQbjLkVEe26eKBxVz0OTQ" name="addFlow" specification="_JESWwbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfQbjbkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
  * default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
  * This will create a default priority equal to the order listed in the input graph file. We&#xD;
  * also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
  * initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
  * optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
  * over written&#xD;
  */&#xD;
 if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfQbjrkVEe26eKBxVz0OTQ" name="isIntForNodeNames" specification="_JESWw7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfQbj7kVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints&#xD;
 return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfQbkLkVEe26eKBxVz0OTQ" name="isIntForFlowNames" specification="_JESWxbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfQbkbkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfQbkrkVEe26eKBxVz0OTQ" name="addNodeToFlow" specification="_JES90bkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfQbk7kVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfQblLkVEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfRCkLkVEe26eKBxVz0OTQ" name="getFlowPriority" specification="_JETk4LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfRCkbkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfRCkrkVEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfRCk7kVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfRClLkVEe26eKBxVz0OTQ" name="setFlowPriority" specification="_JEUL8LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfRClbkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfRClrkVEe26eKBxVz0OTQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfRCl7kVEe26eKBxVz0OTQ" name="setFlowPeriod" specification="_JEUL87kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfRCmLkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfRCmbkVEe26eKBxVz0OTQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfRCmrkVEe26eKBxVz0OTQ" name="setFlowDeadline" specification="_JEUzALkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfRCm7kVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfRCnLkVEe26eKBxVz0OTQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfRCnbkVEe26eKBxVz0OTQ" name="setFlowPhase" specification="_JEVaELkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfRCnrkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfRCn7kVEe26eKBxVz0OTQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfRCoLkVEe26eKBxVz0OTQ" name="getFlowIndex" specification="_JEVaE7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfRCobkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfRCorkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfRCo7kVEe26eKBxVz0OTQ" name="getFlowPriority" specification="_JEWBILkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfRCpLkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfRCpbkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfRCprkVEe26eKBxVz0OTQ" name="getFlowPeriod" specification="_JEWBI7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfRCp7kVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfRCqLkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfRpoLkVEe26eKBxVz0OTQ" name="getFlowDeadline" specification="_JEWoMbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfRpobkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfRporkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfRpo7kVEe26eKBxVz0OTQ" name="getFlowPhase" specification="_JEXPQLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfRppLkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfRppbkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfRpprkVEe26eKBxVz0OTQ" name="getFlowTxAttemptsPerLink" specification="_JEXPQ7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfRpp7kVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfRpqLkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfRpqbkVEe26eKBxVz0OTQ" name="setFlowsInPriorityOrder" specification="_JEX2UrkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfRpqrkVEe26eKBxVz0OTQ" name="setFlowsInDMorder" specification="_JEYdYLkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfRpq7kVEe26eKBxVz0OTQ" name="setFlowsInRMorder" specification="_JEYdYbkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfRprLkVEe26eKBxVz0OTQ" name="setFlowsInRealTimeHARTorder" specification="_JEYdYrkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfRprbkVEe26eKBxVz0OTQ" name="finalizeCurrentFlow" specification="_JEYdY7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfRprrkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfRpr7kVEe26eKBxVz0OTQ" name="nextReleaseTime" specification="_JEZEcLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfRpsLkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfRpsbkVEe26eKBxVz0OTQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfRpsrkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfRps7kVEe26eKBxVz0OTQ" name="nextAbsoluteDeadline" specification="_JEZEdLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfRptLkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfRptbkVEe26eKBxVz0OTQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfRptrkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfSQsLkVEe26eKBxVz0OTQ" name="finalizeFlowWithE2eParameters" specification="_JEZrg7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfSQsbkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 var m = minPacketReceptionRate; // shorten the name :-)&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
                     // and when m == 1.0&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ReliabilityAnalysis linkTxAndTotalCost =&#xD;
       new ReliabilityAnalysis(e2e, m);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost.numTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfSQsrkVEe26eKBxVz0OTQ" name="finalizeFlowWithFixedFaultTolerance" specification="_JEaSkLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfSQs7kVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ReliabilityAnalysis linkTxAndTotalCost = new ReliabilityAnalysis(numFaults); &#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost.numTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfSQvbkVEe26eKBxVz0OTQ" name="getNodeNamesOrderedAlphabetically" specification="_JEbgsLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfSQvrkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JfSQv7kVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfSQwLkVEe26eKBxVz0OTQ" name="getFlow" specification="_JEcu0LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfSQwbkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfSQwrkVEe26eKBxVz0OTQ" type="_JAkUYLkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfS3wLkVEe26eKBxVz0OTQ" name="getFlowNames" specification="_JEdV4LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfS3wbkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JfS3wrkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfTe0LkVEe26eKBxVz0OTQ" name="getNodeIndex" specification="_JEd88LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfTe0bkVEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfTe0rkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfTe07kVEe26eKBxVz0OTQ" name="getNodesInFlow" specification="_JEekALkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfTe1LkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfTe1bkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JfTe1rkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfTe17kVEe26eKBxVz0OTQ" name="getHyperPeriod" specification="_JEekBbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfTe2LkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
   // var dm = new Utlitities();&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod&#xD;
                                                                      // so far and the current&#xD;
                                                                      // period, then update the&#xD;
                                                                      // hyperPeriod with that&#xD;
                                                                      // value&#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfTe2bkVEe26eKBxVz0OTQ" name="getTotalTxAttemptsInFlow" specification="_JEfLEbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfTe2rkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfTe27kVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfTe3LkVEe26eKBxVz0OTQ" name="getNumTxAttemptsPerLink" specification="_JEfyILkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfTe3bkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfTe3rkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JfTe37kVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of&#xD;
                                         // others&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfTe4LkVEe26eKBxVz0OTQ" name="addEdge" specification="_JbU9wLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfTe4bkVEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfTe4rkVEe26eKBxVz0OTQ" name="edge" type="_JANvELkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfTe47kVEe26eKBxVz0OTQ" name="maxFlowLength" specification="_JEgZMLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfTe5LkVEe26eKBxVz0OTQ" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JEOsYLkVEe26eKBxVz0OTQ" name="setDefaultParameters" visibility="private" method="_JfP0drkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASDYkMqOEe2esKyal-zizw">
                  <body>Sets the default parameters for the nodes and flows.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_JEPTcLkVEe26eKBxVz0OTQ" name="getE2e" method="_JfP0d7kVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASDYkcqOEe2esKyal-zizw">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_JcvTALkVEe26eKBxVz0OTQ" type="_JcZ71rkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JEPTcbkVEe26eKBxVz0OTQ" name="getIntForFlowNames" method="_JfP0ebkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASDYksqOEe2esKyal-zizw">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEPTcrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEP6gLkVEe26eKBxVz0OTQ" name="getName" method="_JfP0e7kVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASDYk8qOEe2esKyal-zizw">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEP6gbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEP6grkVEe26eKBxVz0OTQ" name="getMaxPhase" method="_JfP0f7kVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASDYlcqOEe2esKyal-zizw">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEP6g7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEQhkLkVEe26eKBxVz0OTQ" name="getMinPeriod" method="_JfP0gbkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASDYlsqOEe2esKyal-zizw">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEQhkbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEQhkrkVEe26eKBxVz0OTQ" name="setIntForFlowNames" method="_JfQbgrkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASD_ocqOEe2esKyal-zizw">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEQhk7kVEe26eKBxVz0OTQ" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JERIoLkVEe26eKBxVz0OTQ" name="setName" method="_JfQbhLkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASEmsMqOEe2esKyal-zizw">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_JERIobkVEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JERIorkVEe26eKBxVz0OTQ" name="setNodeChannel" method="_JfQbhrkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASEmscqOEe2esKyal-zizw">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_JERIo7kVEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JERvsLkVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JERvsbkVEe26eKBxVz0OTQ" name="getNodeChannel" method="_JfQbibkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASEmssqOEe2esKyal-zizw">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_JERvsrkVEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JESWwLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JESWwbkVEe26eKBxVz0OTQ" name="addFlow" method="_JfQbjLkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASEms8qOEe2esKyal-zizw">
                  <body>Adds a new flow to the Flows dictionary.&#xD;
   * &#xD;
   * @param flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_JESWwrkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JESWw7kVEe26eKBxVz0OTQ" name="isIntForNodeNames" method="_JfQbjrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JESWxLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JESWxbkVEe26eKBxVz0OTQ" name="isIntForFlowNames" method="_JfQbkLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JES90LkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JES90bkVEe26eKBxVz0OTQ" name="addNodeToFlow" method="_JfQbkrkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASEmtMqOEe2esKyal-zizw">
                  <body>Adds a node to the specified flow. If the node is not in the flow, it will create &#xD;
   * a new Node.&#xD;
   * &#xD;
   * @param flowName the name of the flow to be added to&#xD;
   * @param nodeName the name of the node to be added</body>
                </ownedComment>
                <ownedParameter xmi:id="_JES90rkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JES907kVEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JETk4LkVEe26eKBxVz0OTQ" name="getFlowPriority" method="_JfRCkLkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASEmtcqOEe2esKyal-zizw">
                  <body>Gets the flow priority of the node by finding the source node and setting its index.&#xD;
   * &#xD;
   * @param flowName the name of the flow to be searched&#xD;
   * @param nodeName the name of the node to be found&#xD;
   * @return priority the priority of the node</body>
                </ownedComment>
                <ownedParameter xmi:id="_JETk4bkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JETk4rkVEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JETk47kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEUL8LkVEe26eKBxVz0OTQ" name="setFlowPriority" method="_JfRClLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JEUL8bkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEUL8rkVEe26eKBxVz0OTQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEUL87kVEe26eKBxVz0OTQ" name="setFlowPeriod" method="_JfRCl7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JEUL9LkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEUL9bkVEe26eKBxVz0OTQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEUzALkVEe26eKBxVz0OTQ" name="setFlowDeadline" method="_JfRCmrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JEUzAbkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEUzArkVEe26eKBxVz0OTQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEVaELkVEe26eKBxVz0OTQ" name="setFlowPhase" method="_JfRCnbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JEVaEbkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEVaErkVEe26eKBxVz0OTQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEVaE7kVEe26eKBxVz0OTQ" name="getFlowIndex" method="_JfRCoLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JEVaFLkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEVaFbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEWBILkVEe26eKBxVz0OTQ" name="getFlowPriority" method="_JfRCo7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JEWBIbkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEWBIrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEWBI7kVEe26eKBxVz0OTQ" name="getFlowPeriod" method="_JfRCprkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASEmtsqOEe2esKyal-zizw">
                  <body>Gets the period of the given flow.&#xD;
   *  &#xD;
   * @param flowName&#xD;
   * @return the period of the given flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEWBJLkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEWoMLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEWoMbkVEe26eKBxVz0OTQ" name="getFlowDeadline" method="_JfRpoLkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASEmt8qOEe2esKyal-zizw">
                  <body>Gets the deadline of the given flow.&#xD;
   * &#xD;
   * @param flowName &#xD;
   * @return the deadline of the given flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEWoMrkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEWoM7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEXPQLkVEe26eKBxVz0OTQ" name="getFlowPhase" method="_JfRpo7kVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASFNwMqOEe2esKyal-zizw">
                  <body>Gets the phase of the given flow.&#xD;
   * &#xD;
   * @param flowName&#xD;
   * @return the phase of the given flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEXPQbkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEXPQrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEXPQ7kVEe26eKBxVz0OTQ" name="getFlowTxAttemptsPerLink" method="_JfRpprkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASFNwcqOEe2esKyal-zizw">
                  <body>Gets the number of flow transmissions attempts per link.&#xD;
   * &#xD;
   * @param flowName&#xD;
   * @return numTxPerLink the value of transmission attempts per link</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEX2ULkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEX2UbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEX2UrkVEe26eKBxVz0OTQ" name="setFlowsInPriorityOrder" method="_JfRpqbkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASFNwsqOEe2esKyal-zizw">
                  <body>Sorts the flows in order based on priority, then puts the ordered flow names into an ArrayList.&#xD;
   *</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_JEYdYLkVEe26eKBxVz0OTQ" name="setFlowsInDMorder" method="_JfRpqrkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASFNw8qOEe2esKyal-zizw">
                  <body>Sorts the flows based on deadline, putting ordered flow into an ArrayList.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_JEYdYbkVEe26eKBxVz0OTQ" name="setFlowsInRMorder" method="_JfRpq7kVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASFNxMqOEe2esKyal-zizw">
                  <body>Sorts the flows in order based on period, putting ordered flow names into an ArrayList.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_JEYdYrkVEe26eKBxVz0OTQ" name="setFlowsInRealTimeHARTorder" method="_JfRprLkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JEYdY7kVEe26eKBxVz0OTQ" name="finalizeCurrentFlow" method="_JfRprbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JEYdZLkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEZEcLkVEe26eKBxVz0OTQ" name="nextReleaseTime" method="_JfRpr7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JEZEcbkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEZEcrkVEe26eKBxVz0OTQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEZEc7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEZEdLkVEe26eKBxVz0OTQ" name="nextAbsoluteDeadline" method="_JfRps7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JEZrgLkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEZrgbkVEe26eKBxVz0OTQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEZrgrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEZrg7kVEe26eKBxVz0OTQ" name="finalizeFlowWithE2eParameters" visibility="private" method="_JfSQsLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JEZrhLkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEaSkLkVEe26eKBxVz0OTQ" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_JfSQsrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JEaSkbkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEbgsLkVEe26eKBxVz0OTQ" name="getNodeNamesOrderedAlphabetically" method="_JfSQvbkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASF00MqOEe2esKyal-zizw">
                  <body>Calculates the fixed transmission per link, the total transmission cost, and returns it.&#xD;
   * &#xD;
   * @param flow the flow to be calculated&#xD;
   * @return txArrayList the ArrayList of fixed transmissions per link and total transmission cost values</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEbgsbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JEbgsrkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEcu0LkVEe26eKBxVz0OTQ" name="getFlow" visibility="private" method="_JfSQwLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JEcu0bkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JbUWsrkVEe26eKBxVz0OTQ" type="_JAkUYLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JEdV4LkVEe26eKBxVz0OTQ" name="getFlowNames" method="_JfS3wLkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASF00cqOEe2esKyal-zizw">
                  <body>Gets an array of flow names in the order they were read from&#xD;
   * the graph file.&#xD;
   * &#xD;
   * @return the name of the flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEdV4bkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JEdV4rkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEd88LkVEe26eKBxVz0OTQ" name="getNodeIndex" method="_JfTe0LkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASF00sqOEe2esKyal-zizw">
                  <body>Returns the index of the node from the dictionary of nodes&#xD;
   * &#xD;
   * @param nodeName the name of the node to be found&#xD;
   * @return index the index of the found node</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEd88bkVEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEd88rkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEekALkVEe26eKBxVz0OTQ" name="getNodesInFlow" method="_JfTe07kVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASF008qOEe2esKyal-zizw">
                  <body>Gets node names in order they appear in flow specification.&#xD;
   * &#xD;
   * @param flowName &#xD;
   * @return nodes array of node names in flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEekAbkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEekArkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JEekA7kVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEekBbkVEe26eKBxVz0OTQ" name="getHyperPeriod" method="_JfTe17kVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASF01MqOEe2esKyal-zizw">
                  <body>Gets the hyper period, the least common multiple of all the periods.&#xD;
   * &#xD;
   * @return hyperPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEfLELkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEfLEbkVEe26eKBxVz0OTQ" name="getTotalTxAttemptsInFlow" method="_JfTe2bkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASF01cqOEe2esKyal-zizw">
                  <body>Gets the total transmission attempts in the flow.&#xD;
   * &#xD;
   * @param flowName &#xD;
   * @return totalCost total transmission attempts</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEfLErkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEfLE7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEfyILkVEe26eKBxVz0OTQ" name="getNumTxAttemptsPerLink" method="_JfTe3LkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASGb4MqOEe2esKyal-zizw">
                  <body>Gets an array of the number of transmissions needed for each link&#xD;
   * to meet E2E target. &#xD;
   * &#xD;
   * @param flowName&#xD;
   * @return Integer value of the number of transmission attempts per link</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEfyIbkVEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEfyIrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JEfyI7kVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEgZMLkVEe26eKBxVz0OTQ" name="maxFlowLength" method="_JfTe47kVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASHC8MqOEe2esKyal-zizw">
                  <body>Gets the max length of the flow. &#xD;
   * &#xD;
   * @return maxLength</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEgZMbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JbU9wLkVEe26eKBxVz0OTQ" name="addEdge" method="_JfTe4LkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASGb4cqOEe2esKyal-zizw">
                  <body>Adds an edge to a node.&#xD;
&#xD;
@param nodeName&#xD;
@param edge</body>
                </ownedComment>
                <ownedParameter xmi:id="_JbU9wbkVEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JbU9wrkVEe26eKBxVz0OTQ" name="edge" type="_JANvELkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JcuE4LkVEe26eKBxVz0OTQ" name="WorkLoad" visibility="package" method="_JfPNYLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_Jcur8rkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Jcur87kVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ASCxgcqOEe2esKyal-zizw">
                  <body>&#xD;
   * Creates a Workload object using the parameters minimum packet reception rate, End-to-End, and the file name. &#xD;
   * Then builds nodes and flows.&#xD;
   * &#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_JcuE4bkVEe26eKBxVz0OTQ" name="m" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jcur8LkVEe26eKBxVz0OTQ" name="e2e" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jcur8bkVEe26eKBxVz0OTQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jcur9LkVEe26eKBxVz0OTQ" type="_JEMQILkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Jcur9bkVEe26eKBxVz0OTQ" name="WorkLoad" visibility="package" method="_JfP0cLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_Jcur-rkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Jcur-7kVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ASCxgsqOEe2esKyal-zizw">
                  <body>&#xD;
   * Then builds the nodes and flows.&#xD;
   * &#xD;
   * @param numFaults&#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_Jcur9rkVEe26eKBxVz0OTQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jcur97kVEe26eKBxVz0OTQ" name="m" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jcur-LkVEe26eKBxVz0OTQ" name="e2e" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jcur-bkVEe26eKBxVz0OTQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jcur_LkVEe26eKBxVz0OTQ" type="_JEMQILkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JcvTAbkVEe26eKBxVz0OTQ" name="setMinPacketReceptionRate" method="_JfP0fbkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASDYlMqOEe2esKyal-zizw">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_JcvTArkVEe26eKBxVz0OTQ" name="minPacketReceptionRate" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Jcv6ELkVEe26eKBxVz0OTQ" name="setE2e" method="_JfQbgLkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_ASD_oMqOEe2esKyal-zizw">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Jcv6EbkVEe26eKBxVz0OTQ" name="e2e" type="_JcZ71rkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JEoVALkVEe26eKBxVz0OTQ" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_JeSyMLkVEe26eKBxVz0OTQ" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeSyMbkVEe26eKBxVz0OTQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeSyMrkVEe26eKBxVz0OTQ" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeSyM7kVEe26eKBxVz0OTQ" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeTZQLkVEe26eKBxVz0OTQ" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeTZQbkVEe26eKBxVz0OTQ" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeTZQrkVEe26eKBxVz0OTQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeTZQ7kVEe26eKBxVz0OTQ" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeTZRLkVEe26eKBxVz0OTQ" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeTZRbkVEe26eKBxVz0OTQ" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeUAULkVEe26eKBxVz0OTQ" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeUAUrkVEe26eKBxVz0OTQ" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeUAU7kVEe26eKBxVz0OTQ" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeUnYLkVEe26eKBxVz0OTQ" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeUnYbkVEe26eKBxVz0OTQ" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeVOcLkVEe26eKBxVz0OTQ" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeVOcrkVEe26eKBxVz0OTQ" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeV1gbkVEe26eKBxVz0OTQ" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeV1grkVEe26eKBxVz0OTQ" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeV1g7kVEe26eKBxVz0OTQ" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeWckLkVEe26eKBxVz0OTQ" name="predecessor" type="_JEoVALkVEe26eKBxVz0OTQ" association="_Jfo2ALkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JeWckbkVEe26eKBxVz0OTQ" name="endTimes" visibility="private" type="_JCV2ALkVEe26eKBxVz0OTQ" association="_JgjcAbkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JeXDorkVEe26eKBxVz0OTQ" name="subObjects" type="_JbZPMLkVEe26eKBxVz0OTQ" isReadOnly="true" association="_JgkDEbkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfTe5bkVEe26eKBxVz0OTQ" name="SchedulableObject" specification="_JEqxQLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfTe5rkVEe26eKBxVz0OTQ" type="_JEoVALkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfTe57kVEe26eKBxVz0OTQ" name="SchedulableObject" specification="_JbZ2QLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfTe6LkVEe26eKBxVz0OTQ" name="obj" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfTe6bkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfTe6rkVEe26eKBxVz0OTQ" type="_JEoVALkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfUF4LkVEe26eKBxVz0OTQ" name="SchedulableObject" specification="_JEr_YLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfUF4bkVEe26eKBxVz0OTQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfUF4rkVEe26eKBxVz0OTQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfUF47kVEe26eKBxVz0OTQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfUF5LkVEe26eKBxVz0OTQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfUF5bkVEe26eKBxVz0OTQ" type="_JEoVALkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfUF5rkVEe26eKBxVz0OTQ" name="SchedulableObject" specification="_JEsmcLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfUF57kVEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfUF6LkVEe26eKBxVz0OTQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfUF6bkVEe26eKBxVz0OTQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfUF6rkVEe26eKBxVz0OTQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfUF67kVEe26eKBxVz0OTQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfUF7LkVEe26eKBxVz0OTQ" type="_JEoVALkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfUF7bkVEe26eKBxVz0OTQ" name="setDefaultParameters" specification="_JEtNh7kVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfUF7rkVEe26eKBxVz0OTQ" name="getAllEndTimes" specification="_JEtNiLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfUF77kVEe26eKBxVz0OTQ" type="_JCV2ALkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfUF8LkVEe26eKBxVz0OTQ" name="addToEndTimes" specification="_JEuboLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfUF8bkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfUF8rkVEe26eKBxVz0OTQ" name="peekEndTimes" specification="_JEuborkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfUF87kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfUF9LkVEe26eKBxVz0OTQ" name="pollEndTimes" specification="_JEvCsbkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfUF9bkVEe26eKBxVz0OTQ" name="addSubObject" specification="_JbadUbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfUF9rkVEe26eKBxVz0OTQ" name="obj" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfUs8LkVEe26eKBxVz0OTQ" name="getName" specification="_JEvCsrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfUs8bkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfUs8rkVEe26eKBxVz0OTQ" name="setName" specification="_JEvpwLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfUs87kVEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfUs9LkVEe26eKBxVz0OTQ" name="getReleaseTime" specification="_JEvpwrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfUs9bkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfUs9rkVEe26eKBxVz0OTQ" name="getPhase" specification="_JEwQ0LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfUs97kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfUs-LkVEe26eKBxVz0OTQ" name="getStartTime" specification="_JEwQ0rkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfUs-bkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfUs-rkVEe26eKBxVz0OTQ" name="setEndTime" specification="_JEw34bkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfUs-7kVEe26eKBxVz0OTQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfUs_LkVEe26eKBxVz0OTQ" name="setStartTime" specification="_JEw347kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfUs_bkVEe26eKBxVz0OTQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfUs_rkVEe26eKBxVz0OTQ" name="setReleaseTime" specification="_JExe8LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfUs_7kVEe26eKBxVz0OTQ" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfUtALkVEe26eKBxVz0OTQ" name="setPeriod" specification="_JExe8rkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfUtAbkVEe26eKBxVz0OTQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfVUALkVEe26eKBxVz0OTQ" name="setPhase" specification="_JExe9LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfVUAbkVEe26eKBxVz0OTQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfVUArkVEe26eKBxVz0OTQ" name="setNextReleaseTime" specification="_JEyGALkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfVUA7kVEe26eKBxVz0OTQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfVUBLkVEe26eKBxVz0OTQ" name="maxPhaseComparison" specification="_JbadU7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfVUBbkVEe26eKBxVz0OTQ" name="obj2" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfVUBrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfVUB7kVEe26eKBxVz0OTQ" name="maxPhaseComparison" specification="_JbadVrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfVUCLkVEe26eKBxVz0OTQ" name="obj1" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfVUCbkVEe26eKBxVz0OTQ" name="obj2" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfVUCrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfVUC7kVEe26eKBxVz0OTQ" name="deadlineComparison" specification="_JbbEYrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfVUDLkVEe26eKBxVz0OTQ" name="obj2" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfVUDbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfVUDrkVEe26eKBxVz0OTQ" name="deadlineComparison" specification="_JbbEZbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfVUD7kVEe26eKBxVz0OTQ" name="obj1" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfVUELkVEe26eKBxVz0OTQ" name="obj2" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfVUEbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfVUErkVEe26eKBxVz0OTQ" name="periodComparison" specification="_JbbEabkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfVUE7kVEe26eKBxVz0OTQ" name="obj2" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfVUFLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfV7ELkVEe26eKBxVz0OTQ" name="periodComparison" specification="_JbbrcbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfV7EbkVEe26eKBxVz0OTQ" name="obj1" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfV7ErkVEe26eKBxVz0OTQ" name="obj2" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfV7E7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfV7FLkVEe26eKBxVz0OTQ" name="priorityComparison" specification="_JbbrdbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfV7FbkVEe26eKBxVz0OTQ" name="obj2" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfV7FrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfWiILkVEe26eKBxVz0OTQ" name="priorityComparison" specification="_JbbreLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfWiIbkVEe26eKBxVz0OTQ" name="obj1" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfWiIrkVEe26eKBxVz0OTQ" name="obj2" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfWiI7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfWiJLkVEe26eKBxVz0OTQ" name="releaseTimeComparison" specification="_JbcSgbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfWiJbkVEe26eKBxVz0OTQ" name="obj2" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfWiJrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfWiJ7kVEe26eKBxVz0OTQ" name="releaseTimeComparison" specification="_JbcShLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfWiKLkVEe26eKBxVz0OTQ" name="obj1" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfWiKbkVEe26eKBxVz0OTQ" name="obj2" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfWiKrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfWiK7kVEe26eKBxVz0OTQ" name="LatestReleaseTimeComparison" specification="_JbcSiLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfWiLLkVEe26eKBxVz0OTQ" name="obj2" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfWiLbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfWiLrkVEe26eKBxVz0OTQ" name="LatestReleaseTimeComparison" specification="_Jbc5kLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfWiL7kVEe26eKBxVz0OTQ" name="obj1" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfWiMLkVEe26eKBxVz0OTQ" name="obj2" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfWiMbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfWiMrkVEe26eKBxVz0OTQ" name="compareAscendingOrder" specification="_JEz7MLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfWiM7kVEe26eKBxVz0OTQ" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfWiNLkVEe26eKBxVz0OTQ" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfWiNbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfWiNrkVEe26eKBxVz0OTQ" name="compareDescendingOrder" specification="_JEz7NLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfWiN7kVEe26eKBxVz0OTQ" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfWiOLkVEe26eKBxVz0OTQ" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfWiObkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfXJMLkVEe26eKBxVz0OTQ" name="print" specification="_JE0iQbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfXJMbkVEe26eKBxVz0OTQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfXJMrkVEe26eKBxVz0OTQ" name="print" specification="_JE0iQ7kVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JEqxQLkVEe26eKBxVz0OTQ" name="SchedulableObject" visibility="package" method="_JfTe5bkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JErYULkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JErYUbkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JErYUrkVEe26eKBxVz0OTQ" type="_JEoVALkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JEr_YLkVEe26eKBxVz0OTQ" name="SchedulableObject" visibility="package" method="_JfUF4LkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JEr_ZbkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JEr_ZrkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JEr_YbkVEe26eKBxVz0OTQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEr_YrkVEe26eKBxVz0OTQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEr_Y7kVEe26eKBxVz0OTQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEr_ZLkVEe26eKBxVz0OTQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEr_Z7kVEe26eKBxVz0OTQ" type="_JEoVALkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JEsmcLkVEe26eKBxVz0OTQ" name="SchedulableObject" visibility="package" method="_JfUF5rkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JEtNhLkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JEtNhbkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_JEsmcbkVEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEtNgLkVEe26eKBxVz0OTQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEtNgbkVEe26eKBxVz0OTQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEtNgrkVEe26eKBxVz0OTQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEtNg7kVEe26eKBxVz0OTQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEtNhrkVEe26eKBxVz0OTQ" type="_JEoVALkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JEtNh7kVEe26eKBxVz0OTQ" name="setDefaultParameters" visibility="private" method="_JfUF7bkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JEtNiLkVEe26eKBxVz0OTQ" name="getAllEndTimes" method="_JfUF7rkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_Jfo2A7kVEe26eKBxVz0OTQ">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_JbadULkVEe26eKBxVz0OTQ" type="_JCV2ALkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JEuboLkVEe26eKBxVz0OTQ" name="addToEndTimes" method="_JfUF8LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JEubobkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEuborkVEe26eKBxVz0OTQ" name="peekEndTimes" method="_JfUF8rkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JEvCsLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEvCsbkVEe26eKBxVz0OTQ" name="pollEndTimes" method="_JfUF9LkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JEvCsrkVEe26eKBxVz0OTQ" name="getName" method="_JfUs8LkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_Jfo2BLkVEe26eKBxVz0OTQ">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEvCs7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEvpwLkVEe26eKBxVz0OTQ" name="setName" method="_JfUs8rkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_Jfo2BbkVEe26eKBxVz0OTQ">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEvpwbkVEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEvpwrkVEe26eKBxVz0OTQ" name="getReleaseTime" method="_JfUs9LkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_Jfo2BrkVEe26eKBxVz0OTQ">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEvpw7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEwQ0LkVEe26eKBxVz0OTQ" name="getPhase" method="_JfUs9rkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_Jfo2B7kVEe26eKBxVz0OTQ">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEwQ0bkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEwQ0rkVEe26eKBxVz0OTQ" name="getStartTime" method="_JfUs-LkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_Jfo2CLkVEe26eKBxVz0OTQ">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEw34LkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEw34bkVEe26eKBxVz0OTQ" name="setEndTime" method="_JfUs-rkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_Jfo2CbkVEe26eKBxVz0OTQ">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEw34rkVEe26eKBxVz0OTQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEw347kVEe26eKBxVz0OTQ" name="setStartTime" method="_JfUs_LkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_Jfo2CrkVEe26eKBxVz0OTQ">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEw35LkVEe26eKBxVz0OTQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JExe8LkVEe26eKBxVz0OTQ" name="setReleaseTime" method="_JfUs_rkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_Jfo2C7kVEe26eKBxVz0OTQ">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_JExe8bkVEe26eKBxVz0OTQ" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JExe8rkVEe26eKBxVz0OTQ" name="setPeriod" method="_JfUtALkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_Jfo2DLkVEe26eKBxVz0OTQ">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_JExe87kVEe26eKBxVz0OTQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JExe9LkVEe26eKBxVz0OTQ" name="setPhase" method="_JfVUALkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_Jfo2DbkVEe26eKBxVz0OTQ">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_JExe9bkVEe26eKBxVz0OTQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEyGALkVEe26eKBxVz0OTQ" name="setNextReleaseTime" method="_JfVUArkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfpdELkVEe26eKBxVz0OTQ">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_JEyGAbkVEe26eKBxVz0OTQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEz7MLkVEe26eKBxVz0OTQ" name="compareAscendingOrder" method="_JfWiMrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JEz7MbkVEe26eKBxVz0OTQ" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEz7MrkVEe26eKBxVz0OTQ" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEz7M7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JEz7NLkVEe26eKBxVz0OTQ" name="compareDescendingOrder" method="_JfWiNrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JEz7NbkVEe26eKBxVz0OTQ" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JEz7NrkVEe26eKBxVz0OTQ" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JE0iQLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JE0iQbkVEe26eKBxVz0OTQ" name="print" method="_JfXJMLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JE0iQrkVEe26eKBxVz0OTQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JE0iQ7kVEe26eKBxVz0OTQ" name="print" method="_JfXJMrkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JbZ2QLkVEe26eKBxVz0OTQ" name="SchedulableObject" visibility="package" method="_JfTe57kVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_JbZ2Q7kVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JbZ2RLkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Jfo2ArkVEe26eKBxVz0OTQ">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_JbZ2QbkVEe26eKBxVz0OTQ" name="obj" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JbZ2QrkVEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JbZ2RbkVEe26eKBxVz0OTQ" type="_JEoVALkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JbadUbkVEe26eKBxVz0OTQ" name="addSubObject" method="_JfUF9bkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JbadUrkVEe26eKBxVz0OTQ" name="obj" type="_JEoVALkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JbadU7kVEe26eKBxVz0OTQ" name="maxPhaseComparison" method="_JfVUBLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JbadVLkVEe26eKBxVz0OTQ" name="obj2" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JbadVbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JbadVrkVEe26eKBxVz0OTQ" name="maxPhaseComparison" method="_JfVUB7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JbadV7kVEe26eKBxVz0OTQ" name="obj1" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JbbEYLkVEe26eKBxVz0OTQ" name="obj2" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JbbEYbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JbbEYrkVEe26eKBxVz0OTQ" name="deadlineComparison" method="_JfVUC7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JbbEY7kVEe26eKBxVz0OTQ" name="obj2" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JbbEZLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JbbEZbkVEe26eKBxVz0OTQ" name="deadlineComparison" method="_JfVUDrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JbbEZrkVEe26eKBxVz0OTQ" name="obj1" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JbbEZ7kVEe26eKBxVz0OTQ" name="obj2" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JbbEaLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JbbEabkVEe26eKBxVz0OTQ" name="periodComparison" method="_JfVUErkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JbbEarkVEe26eKBxVz0OTQ" name="obj2" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JbbrcLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JbbrcbkVEe26eKBxVz0OTQ" name="periodComparison" method="_JfV7ELkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JbbrcrkVEe26eKBxVz0OTQ" name="obj1" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jbbrc7kVEe26eKBxVz0OTQ" name="obj2" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JbbrdLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JbbrdbkVEe26eKBxVz0OTQ" name="priorityComparison" method="_JfV7FLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JbbrdrkVEe26eKBxVz0OTQ" name="obj2" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jbbrd7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JbbreLkVEe26eKBxVz0OTQ" name="priorityComparison" method="_JfWiILkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JbbrebkVEe26eKBxVz0OTQ" name="obj1" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JbbrerkVEe26eKBxVz0OTQ" name="obj2" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JbcSgLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JbcSgbkVEe26eKBxVz0OTQ" name="releaseTimeComparison" method="_JfWiJLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JbcSgrkVEe26eKBxVz0OTQ" name="obj2" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JbcSg7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JbcShLkVEe26eKBxVz0OTQ" name="releaseTimeComparison" method="_JfWiJ7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JbcShbkVEe26eKBxVz0OTQ" name="obj1" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JbcShrkVEe26eKBxVz0OTQ" name="obj2" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JbcSh7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JbcSiLkVEe26eKBxVz0OTQ" name="LatestReleaseTimeComparison" method="_JfWiK7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JbcSibkVEe26eKBxVz0OTQ" name="obj2" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JbcSirkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Jbc5kLkVEe26eKBxVz0OTQ" name="LatestReleaseTimeComparison" method="_JfWiLrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jbc5kbkVEe26eKBxVz0OTQ" name="obj1" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jbc5krkVEe26eKBxVz0OTQ" name="obj2" type="_JEoVALkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jbc5k7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JE8eELkVEe26eKBxVz0OTQ" name="Program">
              <ownedComment xmi:id="_JfpdEbkVEe26eKBxVz0OTQ">
                <body>Contains the main logic for constructing schedules given a schedule choice and number of channels.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_JeZf4LkVEe26eKBxVz0OTQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeZf4bkVEe26eKBxVz0OTQ" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeZf4rkVEe26eKBxVz0OTQ" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeZf47kVEe26eKBxVz0OTQ" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeaG8LkVEe26eKBxVz0OTQ" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeaG8bkVEe26eKBxVz0OTQ" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeaG8rkVEe26eKBxVz0OTQ" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_JeaG87kVEe26eKBxVz0OTQ" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JeaG9LkVEe26eKBxVz0OTQ" name="workLoad" visibility="package" type="_JEMQILkVEe26eKBxVz0OTQ" association="_JgkqIbkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JeauAbkVEe26eKBxVz0OTQ" name="scheduleBuilt" visibility="package" type="_JCJBsLkVEe26eKBxVz0OTQ" association="_JglRMbkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JebVELkVEe26eKBxVz0OTQ" name="SchedulerSelected" visibility="package" type="_JcmwILkVEe26eKBxVz0OTQ" association="_Jgl4QLkVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JebVErkVEe26eKBxVz0OTQ" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jeb8IbkVEe26eKBxVz0OTQ" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Jeb8I7kVEe26eKBxVz0OTQ" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JecjMLkVEe26eKBxVz0OTQ" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JecjMrkVEe26eKBxVz0OTQ" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JecjNLkVEe26eKBxVz0OTQ" name="channelsAvailable" visibility="package" type="_I_WMYLkVEe26eKBxVz0OTQ" association="_Jgl4Q7kVEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_JedKQbkVEe26eKBxVz0OTQ" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JedKQ7kVEe26eKBxVz0OTQ" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JedxUbkVEe26eKBxVz0OTQ" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_JedxU7kVEe26eKBxVz0OTQ" name="deadlineMisses" visibility="private" type="_JAKEsLkVEe26eKBxVz0OTQ" association="_JgmfUrkVEe26eKBxVz0OTQ"/>
              <interfaceRealization xmi:id="_JbeuwLkVEe26eKBxVz0OTQ" client="_JE8eELkVEe26eKBxVz0OTQ" supplier="_JDBLcrkVEe26eKBxVz0OTQ" contract="_JDBLcrkVEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfXJM7kVEe26eKBxVz0OTQ" name="Program" specification="_Jc0LgLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfXJNLkVEe26eKBxVz0OTQ" name="workLoad" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfXJNbkVEe26eKBxVz0OTQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfXJNrkVEe26eKBxVz0OTQ" name="choice" type="_JcmwILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfXJN7kVEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfXJOLkVEe26eKBxVz0OTQ" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfXJObkVEe26eKBxVz0OTQ" type="_JE8eELkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfXwQLkVEe26eKBxVz0OTQ" name="Program" specification="_Jc0ymLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfXwQbkVEe26eKBxVz0OTQ" name="workLoad" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfXwQrkVEe26eKBxVz0OTQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfXwQ7kVEe26eKBxVz0OTQ" name="choice" type="_JcmwILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfXwRLkVEe26eKBxVz0OTQ" type="_JE8eELkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfXwRbkVEe26eKBxVz0OTQ" name="setDefaultParameters" specification="_JbfV0LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfXwRrkVEe26eKBxVz0OTQ" name="workLoad" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfXwR7kVEe26eKBxVz0OTQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfXwSLkVEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfXwSbkVEe26eKBxVz0OTQ" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfXwSrkVEe26eKBxVz0OTQ" name="toWorkLoad" specification="_JE-6ULkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfXwS7kVEe26eKBxVz0OTQ" type="_JEMQILkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfXwTLkVEe26eKBxVz0OTQ" name="buildProgram" specification="_Jc1Zo7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfXwTbkVEe26eKBxVz0OTQ" name="choice" type="_JcmwILkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfXwTrkVEe26eKBxVz0OTQ" name="buildOriginalProgram" specification="_JE_hYLkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); &#xD;
   // create a time slot for nNodes, each initialized with a SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { &#xD;
     	// don't push for last node, so stop at node n-1, which is 2 less than count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); &#xD;
         // make sure precedence constraints on flow are preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { &#xD;
         	// instructionIndex is beyond current schedule length. Increase schedule and channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); &#xD;
             // create a time slot for nNodes, each initialized with a SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); &#xD;
             // need make sure we have channels available for all slots. instructionIndex may be >&#xD;
             // initialized size of array because of phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); &#xD;
               // create a time slot for nNodes, each initialized with a SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; &#xD;
           // get instruction scheduled for snk to execute in the prior time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { &#xD;
             	// The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; &#xD;
               // get instruction scheduled for sink/curentNodeName) to execute in the prior time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { &#xD;
             	  // will try to push and pull to/from the same node, so use the prior instruction channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfXwT7kVEe26eKBxVz0OTQ" name="waitInstruction" specification="_JE_hYbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfXwULkVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfXwUbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfYXULkVEe26eKBxVz0OTQ" name="elseWaitInstruction" specification="_JFAIcbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfYXUbkVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfYXUrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfYXU7kVEe26eKBxVz0OTQ" name="elsePullClause" specification="_JFAvgLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfYXVLkVEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfYXVbkVEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfYXVrkVEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfYXV7kVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfYXWLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfYXWbkVEe26eKBxVz0OTQ" name="hasPushInstruction" specification="_JFBWkLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfYXWrkVEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfYXW7kVEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfYXXLkVEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfYXXbkVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfYXXrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfYXX7kVEe26eKBxVz0OTQ" name="pushInstruction" specification="_JFB9oLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfYXYLkVEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfYXYbkVEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfYXYrkVEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfYXY7kVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfYXZLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfY-YLkVEe26eKBxVz0OTQ" name="getFirstChannelInInstruction" specification="_JFCksLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfY-YbkVEe26eKBxVz0OTQ" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfY-YrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfY-Y7kVEe26eKBxVz0OTQ" name="findNextAvailableInstructionTimeSlot" specification="_Jbf85LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfY-ZLkVEe26eKBxVz0OTQ" name="schedule" type="_JCJBsLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfY-ZbkVEe26eKBxVz0OTQ" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfY-ZrkVEe26eKBxVz0OTQ" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfY-Z7kVEe26eKBxVz0OTQ" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfY-aLkVEe26eKBxVz0OTQ" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfY-abkVEe26eKBxVz0OTQ" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JfY-arkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfY-a7kVEe26eKBxVz0OTQ" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JfY-bLkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfY-bbkVEe26eKBxVz0OTQ" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfY-brkVEe26eKBxVz0OTQ" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfY-b7kVEe26eKBxVz0OTQ" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfY-cLkVEe26eKBxVz0OTQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfY-cbkVEe26eKBxVz0OTQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfY-crkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfZlcLkVEe26eKBxVz0OTQ" name="slotIsAvailable" specification="_JbhLALkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfZlcbkVEe26eKBxVz0OTQ" name="currentInstructionTimeSlot" type="_JBPp0LkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfZlcrkVEe26eKBxVz0OTQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfZlc7kVEe26eKBxVz0OTQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfZldLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfZldbkVEe26eKBxVz0OTQ" name="findNextAvailableChannel" specification="_JbhyE7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfZldrkVEe26eKBxVz0OTQ" name="schedule" type="_JCJBsLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JfZld7kVEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfZleLkVEe26eKBxVz0OTQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfZlebkVEe26eKBxVz0OTQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfZlerkVEe26eKBxVz0OTQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfZle7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check&#xD;
                           // this result&#xD;
&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
 InstructionTimeSlot priorInstructionTimeSlot;&#xD;
&#xD;
 var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
 if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in&#xD;
                        // that slot, which have to be avoided here&#xD;
   Integer priorTime = currentTime - 1;&#xD;
   priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
   var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
   var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
   // extract the channels used by the src and snk nodes in the prior time slot and store them in&#xD;
   // an array&#xD;
   var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get&#xD;
                                                                                           // the&#xD;
                                                                                           // parameters&#xD;
                                                                                           // from&#xD;
                                                                                           // the&#xD;
                                                                                           // instruction&#xD;
                                                                                           // in&#xD;
                                                                                           // the&#xD;
                                                                                           // src&#xD;
                                                                                           // node's&#xD;
                                                                                           // prior&#xD;
                                                                                           // time&#xD;
                                                                                           // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
   instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the&#xD;
                                                                                       // parameters&#xD;
                                                                                       // from&#xD;
                                                                                       // the&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in the&#xD;
                                                                                       // snk&#xD;
                                                                                       // node's&#xD;
                                                                                       // prior&#xD;
                                                                                       // time&#xD;
                                                                                       // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
 }&#xD;
 Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node&#xD;
 channel++; // increment the channel because we don't use the same channel in consecutive time&#xD;
            // slots for the same node&#xD;
 if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits&#xD;
                                    // max&#xD;
   channel = 0;&#xD;
 }&#xD;
 var channelFound = false;&#xD;
 while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of&#xD;
                                                // channels to assign&#xD;
   var channelString = String.valueOf(channel);&#xD;
   var channelRemoved = channels.remove(channelString);&#xD;
   if (channelRemoved) {&#xD;
     // newChannel has the channel&#xD;
     newChannel = channelString;&#xD;
     channelFound = true;&#xD;
   } else {&#xD;
     // try another channel&#xD;
     channel += 1;&#xD;
     if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel&#xD;
                                        // hits max&#xD;
       channel = 0;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfZlfLkVEe26eKBxVz0OTQ" name="selectPriority" specification="_JFDy0LkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfZlfbkVEe26eKBxVz0OTQ" name="selectRM" specification="_JFEZ4LkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfZlfrkVEe26eKBxVz0OTQ" name="selectDM" specification="_JFEZ4bkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfZlf7kVEe26eKBxVz0OTQ" name="selectRtHART" specification="_JFEZ4rkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfZlgLkVEe26eKBxVz0OTQ" name="setScheduleSelected" specification="_Jc1ZpbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfZlgbkVEe26eKBxVz0OTQ" name="choice" type="_JcmwILkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfZlgrkVEe26eKBxVz0OTQ" name="setSchedule" specification="_JbhyGrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfZlg7kVEe26eKBxVz0OTQ" name="schedule" type="_JCJBsLkVEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfaMgLkVEe26eKBxVz0OTQ" name="getSchedule" specification="_JFFA8LkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfaMgbkVEe26eKBxVz0OTQ" type="_JCJBsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfaMgrkVEe26eKBxVz0OTQ" name="getSchedulerName" specification="_JFFA8bkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfaMg7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfaMhLkVEe26eKBxVz0OTQ" name="getSchChoice" specification="_JFFoA7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfaMhbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfaMhrkVEe26eKBxVz0OTQ" name="getNumChannels" specification="_JFGPELkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfaMh7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfaMiLkVEe26eKBxVz0OTQ" name="getNumTransmissions" specification="_JFG2I7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfaMibkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfaMirkVEe26eKBxVz0OTQ" name="getRealTimeHartFlag" specification="_JFIEQrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfaMi7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfaMjLkVEe26eKBxVz0OTQ" name="setRealTimeHartFlag" specification="_JFIrULkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfaMjbkVEe26eKBxVz0OTQ" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfaMjrkVEe26eKBxVz0OTQ" name="getMinPacketReceptionRate" specification="_JFIrUrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfaMj7kVEe26eKBxVz0OTQ" type="_JcZ71rkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfazkLkVEe26eKBxVz0OTQ" name="getE2e" specification="_JFJSY7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfazkbkVEe26eKBxVz0OTQ" type="_JcZ71rkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfazkrkVEe26eKBxVz0OTQ" name="getName" specification="_JFJ5c7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jfazk7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfbaoLkVEe26eKBxVz0OTQ" name="getOptimizationFlag" specification="_JFKghLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfbaobkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfbaorkVEe26eKBxVz0OTQ" name="deadlineMisses" specification="_JFLHlLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jfbao7kVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfbapLkVEe26eKBxVz0OTQ" name="getNumFaults" specification="_JFLuoLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfbapbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfbaprkVEe26eKBxVz0OTQ" name="getNodeMapIndex" specification="_JFMVsbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jfbap7kVEe26eKBxVz0OTQ" type="_JY5U0LkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
                                                                  // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndexMap = new HashMap&lt;String, Integer>(); // create a new mapping from node names to&#xD;
                                                    // index in schedule&#xD;
 // table&#xD;
 var nNodes = orderedNodes.length;&#xD;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
   var name = orderedNodes[index];&#xD;
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
 }&#xD;
 return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JE-6ULkVEe26eKBxVz0OTQ" name="toWorkLoad" method="_JfXwSrkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfpdErkVEe26eKBxVz0OTQ">
                  <body>Getter method to retrieve workLoad from which schedules are built.</body>
                </ownedComment>
                <ownedParameter xmi:id="_Jbf847kVEe26eKBxVz0OTQ" type="_JEMQILkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JE_hYLkVEe26eKBxVz0OTQ" name="buildOriginalProgram" method="_JfXwTrkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JE_hYbkVEe26eKBxVz0OTQ" name="waitInstruction" visibility="private" method="_JfXwT7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JE_hYrkVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JFAIcLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JFAIcbkVEe26eKBxVz0OTQ" name="elseWaitInstruction" visibility="private" method="_JfYXULkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JFAIcrkVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JFAIc7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JFAvgLkVEe26eKBxVz0OTQ" name="elsePullClause" visibility="private" method="_JfYXU7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JFAvgbkVEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JFAvgrkVEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JFAvg7kVEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JFAvhLkVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JFAvhbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JFBWkLkVEe26eKBxVz0OTQ" name="hasPushInstruction" visibility="private" method="_JfYXWbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JFBWkbkVEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JFBWkrkVEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JFBWk7kVEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JFBWlLkVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JFBWlbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JFB9oLkVEe26eKBxVz0OTQ" name="pushInstruction" visibility="private" method="_JfYXX7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JFB9obkVEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JFB9orkVEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JFB9o7kVEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JFB9pLkVEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JFB9pbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JFCksLkVEe26eKBxVz0OTQ" name="getFirstChannelInInstruction" visibility="private" method="_JfY-YLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JFCksbkVEe26eKBxVz0OTQ" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JFCksrkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JFDy0LkVEe26eKBxVz0OTQ" name="selectPriority" method="_JfZlfLkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JFEZ4LkVEe26eKBxVz0OTQ" name="selectRM" method="_JfZlfbkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JFEZ4bkVEe26eKBxVz0OTQ" name="selectDM" method="_JfZlfrkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JFEZ4rkVEe26eKBxVz0OTQ" name="selectRtHART" method="_JfZlf7kVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JFFA8LkVEe26eKBxVz0OTQ" name="getSchedule" method="_JfaMgLkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfqEILkVEe26eKBxVz0OTQ">
                  <body>Getter method to retrieve built schedule from program.</body>
                </ownedComment>
                <ownedParameter xmi:id="_JbhyHLkVEe26eKBxVz0OTQ" type="_JCJBsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JFFA8bkVEe26eKBxVz0OTQ" name="getSchedulerName" method="_JfaMgrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JFFA8rkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JFFoA7kVEe26eKBxVz0OTQ" name="getSchChoice" method="_JfaMhLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JFFoBLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JFGPELkVEe26eKBxVz0OTQ" name="getNumChannels" method="_JfaMhrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JFGPEbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JFG2I7kVEe26eKBxVz0OTQ" name="getNumTransmissions" method="_JfaMiLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JFHdMLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JFIEQrkVEe26eKBxVz0OTQ" name="getRealTimeHartFlag" visibility="private" method="_JfaMirkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JFIEQ7kVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JFIrULkVEe26eKBxVz0OTQ" name="setRealTimeHartFlag" visibility="private" method="_JfaMjLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JFIrUbkVEe26eKBxVz0OTQ" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JFIrUrkVEe26eKBxVz0OTQ" name="getMinPacketReceptionRate" method="_JfaMjrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jc2AsLkVEe26eKBxVz0OTQ" type="_JcZ71rkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JFJSY7kVEe26eKBxVz0OTQ" name="getE2e" method="_JfazkLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jc2AsbkVEe26eKBxVz0OTQ" type="_JcZ71rkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JFJ5c7kVEe26eKBxVz0OTQ" name="getName" method="_JfazkrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JFKggLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JFKghLkVEe26eKBxVz0OTQ" name="getOptimizationFlag" method="_JfbaoLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JFLHkLkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JFLHlLkVEe26eKBxVz0OTQ" name="deadlineMisses" method="_JfbaorkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JbhyHbkVEe26eKBxVz0OTQ" type="_JAKEsLkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JFLuoLkVEe26eKBxVz0OTQ" name="getNumFaults" method="_JfbapLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JFLuobkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JFMVsbkVEe26eKBxVz0OTQ" name="getNodeMapIndex" method="_JfbaprkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfqEIbkVEe26eKBxVz0OTQ">
                  <body>Maps nodes from workload to their respective indexes.&#xD;
   * &#xD;
   * @return HashMap of node indexes</body>
                </ownedComment>
                <ownedParameter xmi:id="_Jc2AsrkVEe26eKBxVz0OTQ" type="_JY5U0LkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JbfV0LkVEe26eKBxVz0OTQ" name="setDefaultParameters" visibility="private" method="_JfXwRbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JbfV0bkVEe26eKBxVz0OTQ" name="workLoad" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jbf84LkVEe26eKBxVz0OTQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jbf84bkVEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jbf84rkVEe26eKBxVz0OTQ" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Jbf85LkVEe26eKBxVz0OTQ" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_JfY-Y7kVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jbf85bkVEe26eKBxVz0OTQ" name="schedule" type="_JCJBsLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jbf85rkVEe26eKBxVz0OTQ" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jbf857kVEe26eKBxVz0OTQ" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jbf86LkVEe26eKBxVz0OTQ" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jbgj8LkVEe26eKBxVz0OTQ" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jbgj8bkVEe26eKBxVz0OTQ" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jbgj-bkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jbgj8rkVEe26eKBxVz0OTQ" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jbgj-rkVEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jbgj87kVEe26eKBxVz0OTQ" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jbgj9LkVEe26eKBxVz0OTQ" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jbgj9bkVEe26eKBxVz0OTQ" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jbgj9rkVEe26eKBxVz0OTQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jbgj97kVEe26eKBxVz0OTQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jbgj-LkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JbhLALkVEe26eKBxVz0OTQ" name="slotIsAvailable" visibility="private" method="_JfZlcLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JbhLAbkVEe26eKBxVz0OTQ" name="currentInstructionTimeSlot" type="_JBPp0LkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JbhyELkVEe26eKBxVz0OTQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JbhyEbkVEe26eKBxVz0OTQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JbhyErkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JbhyE7kVEe26eKBxVz0OTQ" name="findNextAvailableChannel" visibility="private" method="_JfZldbkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JbhyFLkVEe26eKBxVz0OTQ" name="schedule" type="_JCJBsLkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_JbhyFbkVEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JbhyFrkVEe26eKBxVz0OTQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JbhyF7kVEe26eKBxVz0OTQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JbhyGLkVEe26eKBxVz0OTQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JbhyGbkVEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_JbhyGrkVEe26eKBxVz0OTQ" name="setSchedule" visibility="private" method="_JfZlgrkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JbhyG7kVEe26eKBxVz0OTQ" name="schedule" type="_JCJBsLkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Jc0LgLkVEe26eKBxVz0OTQ" name="Program" visibility="package" method="_JfXJM7kVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_Jc0ylbkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Jc0ylrkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Jc0ykLkVEe26eKBxVz0OTQ" name="workLoad" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jc0ykbkVEe26eKBxVz0OTQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jc0ykrkVEe26eKBxVz0OTQ" name="choice" type="_JcmwILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jc0yk7kVEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jc0ylLkVEe26eKBxVz0OTQ" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jc0yl7kVEe26eKBxVz0OTQ" type="_JE8eELkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Jc0ymLkVEe26eKBxVz0OTQ" name="Program" visibility="package" method="_JfXwQLkVEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_Jc1ZoLkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Jc1ZobkVEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Jc0ymbkVEe26eKBxVz0OTQ" name="workLoad" type="_JEMQILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jc0ymrkVEe26eKBxVz0OTQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Jc0ym7kVEe26eKBxVz0OTQ" name="choice" type="_JcmwILkVEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_Jc1ZorkVEe26eKBxVz0OTQ" type="_JE8eELkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Jc1Zo7kVEe26eKBxVz0OTQ" name="buildProgram" method="_JfXwTLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jc1ZpLkVEe26eKBxVz0OTQ" name="choice" type="_JcmwILkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Jc1ZpbkVEe26eKBxVz0OTQ" name="setScheduleSelected" visibility="private" method="_JfZlgLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_Jc1ZprkVEe26eKBxVz0OTQ" name="choice" type="_JcmwILkVEe26eKBxVz0OTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JFTDYLkVEe26eKBxVz0OTQ" name="WorkLoadTest" visibility="package">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfbaqLkVEe26eKBxVz0OTQ" name="createDefaultWorkload" specification="_JFURgLkVEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_JfbaqbkVEe26eKBxVz0OTQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JfbaqrkVEe26eKBxVz0OTQ" type="_JEMQILkVEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>int numFaults = 0;&#xD;
		double minLQ = 0.9;&#xD;
		double e2e = 0.99;&#xD;
		WorkLoad workload = new WorkLoad(numFaults, minLQ, e2e, inputFileName);&#xD;
		return workload;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfcBsLkVEe26eKBxVz0OTQ" name="testAddFlow" specification="_JFURgrkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addFlow(&quot;F2&quot;);&#xD;
		workload.addFlow(&quot;F3&quot;);&#xD;
		workload.addFlow(&quot;F4&quot;);&#xD;
		workload.addFlow(&quot;F5&quot;);&#xD;
		workload.addFlow(&quot;F6&quot;);&#xD;
		var expected = new String[] {&quot;F0&quot;, &quot;F1&quot;, &quot;F2&quot;, &quot;F3&quot;, &quot;F4&quot;, &quot;F5&quot;, &quot;F6&quot;};&#xD;
		var flows = workload.getFlowNamesInOriginalOrder();&#xD;
		for(int i = 0; i &lt; flows.size(); i++) {&#xD;
			var msg = String.format(&quot;At index %d: Flow expected: %s, was: %s.&quot;, i, expected[i], flows.get(i));&#xD;
			assertEquals(msg, flows.get(i), expected[i] );&#xD;
		}&#xD;
		&#xD;
			&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfcBsbkVEe26eKBxVz0OTQ" name="testAddFlowJustNumbers" specification="_JFU4k7kVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addFlow(&quot;2&quot;);&#xD;
		workload.addFlow(&quot;3&quot;);&#xD;
		workload.addFlow(&quot;4&quot;);&#xD;
		workload.addFlow(&quot;5&quot;);&#xD;
		workload.addFlow(&quot;6&quot;);&#xD;
		workload.addFlow(&quot;7&quot;);&#xD;
		var expected = new String[] {&quot;F0&quot;, &quot;F1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;};&#xD;
		var flows = workload.getFlowNamesInOriginalOrder();&#xD;
		for(int i = 0; i &lt; flows.size(); i++) {&#xD;
			var msg = String.format(&quot;At index %d: Flow expected: %s, was: %s.&quot;, i, expected[i], flows.get(i));&#xD;
			assertEquals(msg, flows.get(i), expected[i] );&#xD;
		}	&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfcBsrkVEe26eKBxVz0OTQ" name="testAddNodeToFlow" specification="_JFVfo7kVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addNodeToFlow(&quot;F1&quot;, &quot;D&quot;);&#xD;
		workload.addNodeToFlow(&quot;F1&quot;, &quot;E&quot;);&#xD;
		workload.addNodeToFlow(&quot;F1&quot;, &quot;F&quot;);&#xD;
		var expected = new String[] {&quot;C&quot;, &quot;B&quot;, &quot;A&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;};&#xD;
		var nodes = workload.getNodesInFlow(&quot;F1&quot;);&#xD;
		for(int i = 0; i &lt; nodes.length; i++) {&#xD;
			var msg = String.format(&quot;At index %d: Node expected: %s was: %s&quot;, i, expected[i], nodes[i]);&#xD;
			assertEquals(msg, expected[i], nodes[i]);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfcBs7kVEe26eKBxVz0OTQ" name="testAddNodeToFlowAddingToNewFlow" specification="_JFWGsrkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addFlow(&quot;testFlow&quot;);&#xD;
		workload.addNodeToFlow(&quot;testFlow&quot;, &quot;A&quot;);&#xD;
		workload.addNodeToFlow(&quot;testFlow&quot;, &quot;B&quot;);&#xD;
		workload.addNodeToFlow(&quot;testFlow&quot;, &quot;C&quot;);&#xD;
		var expected = new String[] {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;};&#xD;
		var nodes = workload.getNodesInFlow(&quot;testFlow&quot;);&#xD;
		for(int i = 0; i &lt; nodes.length; i++) {&#xD;
			var msg = String.format(&quot;At index %d: Node expected: %s was: %s&quot;, i, expected[i], nodes[i]);&#xD;
			assertEquals(msg, expected[i], nodes[i]);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfcBtLkVEe26eKBxVz0OTQ" name="testGetTotalTxAttemptsInFlow" specification="_JFWtwbkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		var expected = new int[] {5, 4};&#xD;
		var flows = workload.getFlowNames();&#xD;
		for(int i = 0; i &lt; flows.length; i++) {&#xD;
			int attempts = workload.getTotalTxAttemptsInFlow(flows[i]);&#xD;
			var msg = String.format(&quot;expected Tx Attempts: %d was: %d&quot;, expected[i], attempts);&#xD;
&#xD;
			assertEquals(msg, expected[i], attempts); &#xD;
		}&#xD;
		&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfcBtbkVEe26eKBxVz0OTQ" name="testGetFlowPriority" specification="_JFXU0LkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		var flows = workload.getFlowNamesInPriorityOrder();&#xD;
		var expectedP = new int[] {0, 1};&#xD;
		for(int i = 0; i &lt; flows.size(); i++) {&#xD;
			int flowPriority = workload.getFlowPriority(flows.get(i));&#xD;
			var msg = String.format(&quot;Expected Priority: %d Actual Priority: %d &quot;, expectedP[i], flowPriority);&#xD;
			assertEquals(msg, expectedP[i], flowPriority);	&#xD;
		}	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfcBtrkVEe26eKBxVz0OTQ" name="testSetFlowPriority" specification="_JFXU1LkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		//set integer to set the priority&#xD;
		Integer j = 0;&#xD;
		var flows = workload.getFlowNamesInPriorityOrder();&#xD;
		//for loops starts at the end of the list&#xD;
		for(int i = flows.size(); i > 0; i-- ) {&#xD;
			//sets the priority using j then increases j by 1&#xD;
			workload.setFlowPriority(flows.get(i), j );&#xD;
			j++;&#xD;
			var priority = workload.getFlowPriority(flows.get(i));&#xD;
			var msg = String.format(&quot;Expected Priority: %d Actual Priority: %d &quot;, j, priority);&#xD;
			assertEquals(msg, j, priority);&#xD;
		}&#xD;
		&#xD;
		&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfcBt7kVEe26eKBxVz0OTQ" name="testGetFlowTxAttemptsPerLink" specification="_JFX747kVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addFlow(&quot;test&quot;);&#xD;
		var flows = workload.getFlowNames();&#xD;
		var expected = new int[] {3, 3, 1};&#xD;
		for(int i = 0; i &lt; flows.length; i++) {&#xD;
		int attempts = workload.getFlowTxAttemptsPerLink(flows[i]);&#xD;
		String msg = String.format(&quot;Expected No. of Tx: %d Actual No. of Tx: %d &quot;, expected[i], attempts);&#xD;
		assertEquals(msg, expected[i], attempts);&#xD;
		}&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfcBuLkVEe26eKBxVz0OTQ" name="testSetFlowsInRMOrder" specification="_JFYi87kVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
	    workload.setFlowsInRMorder();&#xD;
	    var flows = workload.getFlowNamesInPriorityOrder();&#xD;
		var expected = new String[] {&quot;F0&quot;, &quot;F1&quot; };&#xD;
		for(int i = 0; i &lt; flows.size(); i++ ) {&#xD;
			var msg = String.format(&quot;Expected Flow at index %d: %s Actual Flow: %s &quot;,i, expected[i], flows.get(i));&#xD;
			&#xD;
			assertEquals(msg, expected[i], flows.get(i).toString());&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfcBubkVEe26eKBxVz0OTQ" name="testSetFlowsInRMOrderChangePriorityandPeriod" specification="_JFZKArkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.setFlowPriority(&quot;F1&quot;, 0);&#xD;
		workload.setFlowPeriod(&quot;F1&quot;, 5);&#xD;
		workload.setFlowsInRMorder();&#xD;
		var flows = workload.getFlowNamesInPriorityOrder();&#xD;
		var expected = new String[] {&quot;F1&quot;, &quot;F0&quot; };&#xD;
		  for(int i = 0; i &lt; flows.size(); i++ ) {&#xD;
			var msg = String.format(&quot;Expected Flow at index %d: %s Actual Flow: %s &quot;,i, expected[i], flows.get(i));&#xD;
				&#xD;
			assertEquals(msg, expected[i], flows.get(i).toString());&#xD;
	}&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfcBurkVEe26eKBxVz0OTQ" name="testGetNodeNamesInAlphabeticalOrder" specification="_JFZKBrkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		var expected = new String[] {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;,};&#xD;
		var actual = workload.getNodeNamesOrderedAlphabetically();&#xD;
		for(int i = 0; i &lt; actual.length; i++) {&#xD;
			var node = actual[i];&#xD;
			var msg = String.format(&quot;At index: %d Node expected: %s Actual Node: %s&quot;, i, expected[i], node);&#xD;
			assertEquals(msg, expected[i], node);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfcBu7kVEe26eKBxVz0OTQ" name="testGetNodeNamesInAlphabeticalOrderExtraNodes" specification="_JFZxE7kVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addNodeToFlow(&quot;F0&quot;, &quot;1&quot;);&#xD;
		workload.addNodeToFlow(&quot;F1&quot;, &quot;O&quot;);&#xD;
		workload.addNodeToFlow(&quot;F0&quot;, &quot;N&quot;);&#xD;
		workload.addNodeToFlow(&quot;F1&quot;, &quot;2&quot;);&#xD;
		var expected = new String[] {&quot;1&quot;, &quot;2&quot;, &quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;N&quot;, &quot;O&quot;};&#xD;
		var actual = workload.getNodeNamesOrderedAlphabetically();&#xD;
		for(int i = 0; i &lt; actual.length; i++) {&#xD;
			var node = actual[i];&#xD;
			var msg = String.format(&quot;At index: %d Node expected: %s Actual Node: %s&quot;, i, expected[i], node);&#xD;
			assertEquals(msg, expected[i], node);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfcBvLkVEe26eKBxVz0OTQ" name="getFlowNames" specification="_JFaYILkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		String[] actual = workload.getFlowNames();&#xD;
		String[] expected = {&quot;F0&quot;, &quot;F1&quot;};&#xD;
		assertArrayEquals(actual, expected, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfcBvbkVEe26eKBxVz0OTQ" name="getNodeIndex_exists" specification="_JFaYJLkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int actual = workload.getNodeIndex(&quot;D&quot;);&#xD;
		int expected = 3;&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfcowLkVEe26eKBxVz0OTQ" name="getNodeIndex_doesNotExist" specification="_JFa_M7kVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int actual = workload.getNodeIndex(&quot;&quot;);&#xD;
		int expected = 0;&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfcowbkVEe26eKBxVz0OTQ" name="getNodesInFlow" specification="_JFbmQrkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		String[] actual = workload.getNodesInFlow(&quot;F0&quot;);&#xD;
		String[] expected = {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;};&#xD;
		assertArrayEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfcowrkVEe26eKBxVz0OTQ" name="getHyperPeriod_Short" specification="_JFbmRrkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int actual = workload.getHyperPeriod();&#xD;
		int expected = 20;&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jfcow7kVEe26eKBxVz0OTQ" name="getHyperPeriod_Long" specification="_JFcNU7kVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;StressTest.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int actual = workload.getHyperPeriod();&#xD;
		int expected = 300;&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfcoxLkVEe26eKBxVz0OTQ" name="getNumTxAttemptsPerLink" specification="_JFc0YrkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;StressTest.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		Integer[] actual = workload.getNumTxAttemptsPerLink(&quot;F1&quot;);&#xD;
		Integer[] expected = {3, 3, 0};&#xD;
		assertArrayEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfcoxbkVEe26eKBxVz0OTQ" name="maxFlowLength_StressTest" specification="_JFdbcLkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;StressTest.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int expected = 8;&#xD;
		int actual = workload.maxFlowLength();&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfcoxrkVEe26eKBxVz0OTQ" name="maxFlowLength_LongChain" specification="_JFdbdLkVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;LongChain.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int expected = 26;&#xD;
		int actual = workload.maxFlowLength();&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jfcox7kVEe26eKBxVz0OTQ" name="getFlowDeadline" specification="_JFeCg7kVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		&#xD;
		String flow = &quot;F0&quot;;&#xD;
		int expected = 10;&#xD;
		&#xD;
		workload.setFlowDeadline(flow, expected);&#xD;
		int actual = workload.getFlowDeadline(flow);&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfcoyLkVEe26eKBxVz0OTQ" name="setFlowDeadline" specification="_JFepk7kVEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		&#xD;
		String flow = &quot;F0&quot;;&#xD;
		int expected = 10;&#xD;
		&#xD;
		workload.setFlowDeadline(flow, expected);&#xD;
		int actual = workload.getFlowDeadline(flow);&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_JFURgLkVEe26eKBxVz0OTQ" name="createDefaultWorkload" visibility="private" method="_JfbaqLkVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfqEIrkVEe26eKBxVz0OTQ">
                  <body>Helper method to setup workload object depending on filename.&#xD;
	 * @param inputFileName name of file to use.&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_JFURgbkVEe26eKBxVz0OTQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_JbmDg7kVEe26eKBxVz0OTQ" type="_JEMQILkVEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JFURgrkVEe26eKBxVz0OTQ" name="testAddFlow" visibility="package" method="_JfcBsLkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JFU4k7kVEe26eKBxVz0OTQ" name="testAddFlowJustNumbers" visibility="package" method="_JfcBsbkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JFVfo7kVEe26eKBxVz0OTQ" name="testAddNodeToFlow" visibility="package" method="_JfcBsrkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JFWGsrkVEe26eKBxVz0OTQ" name="testAddNodeToFlowAddingToNewFlow" visibility="package" method="_JfcBs7kVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JFWtwbkVEe26eKBxVz0OTQ" name="testGetTotalTxAttemptsInFlow" visibility="package" method="_JfcBtLkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JFXU0LkVEe26eKBxVz0OTQ" name="testGetFlowPriority" visibility="package" method="_JfcBtbkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JFXU1LkVEe26eKBxVz0OTQ" name="testSetFlowPriority" visibility="package" method="_JfcBtrkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JFX747kVEe26eKBxVz0OTQ" name="testGetFlowTxAttemptsPerLink" visibility="package" method="_JfcBt7kVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JFYi87kVEe26eKBxVz0OTQ" name="testSetFlowsInRMOrder" visibility="package" method="_JfcBuLkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JFZKArkVEe26eKBxVz0OTQ" name="testSetFlowsInRMOrderChangePriorityandPeriod" visibility="package" method="_JfcBubkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JFZKBrkVEe26eKBxVz0OTQ" name="testGetNodeNamesInAlphabeticalOrder" visibility="package" method="_JfcBurkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JFZxE7kVEe26eKBxVz0OTQ" name="testGetNodeNamesInAlphabeticalOrderExtraNodes" visibility="package" method="_JfcBu7kVEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_JfqEI7kVEe26eKBxVz0OTQ">
                  <body>tests the getNodeNamesOrderedAlphabetically method in WorkLoad.java class. Adds extra Nodes&#xD;
	 * with names not present in the original file, then tests to see if they are sorted properly.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_JFaYILkVEe26eKBxVz0OTQ" name="getFlowNames" visibility="package" method="_JfcBvLkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JFaYJLkVEe26eKBxVz0OTQ" name="getNodeIndex_exists" visibility="package" method="_JfcBvbkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JFa_M7kVEe26eKBxVz0OTQ" name="getNodeIndex_doesNotExist" visibility="package" method="_JfcowLkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JFbmQrkVEe26eKBxVz0OTQ" name="getNodesInFlow" visibility="package" method="_JfcowbkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JFbmRrkVEe26eKBxVz0OTQ" name="getHyperPeriod_Short" visibility="package" method="_JfcowrkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JFcNU7kVEe26eKBxVz0OTQ" name="getHyperPeriod_Long" visibility="package" method="_Jfcow7kVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JFc0YrkVEe26eKBxVz0OTQ" name="getNumTxAttemptsPerLink" visibility="package" method="_JfcoxLkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JFdbcLkVEe26eKBxVz0OTQ" name="maxFlowLength_StressTest" visibility="package" method="_JfcoxbkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JFdbdLkVEe26eKBxVz0OTQ" name="maxFlowLength_LongChain" visibility="package" method="_JfcoxrkVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JFeCg7kVEe26eKBxVz0OTQ" name="getFlowDeadline" visibility="package" method="_Jfcox7kVEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_JFepk7kVEe26eKBxVz0OTQ" name="setFlowDeadline" visibility="package" method="_JfcoyLkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_JcA6QLkVEe26eKBxVz0OTQ" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_JcVDULkVEe26eKBxVz0OTQ" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_Jch3oLkVEe26eKBxVz0OTQ" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_JcjFwrkVEe26eKBxVz0OTQ" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_JcmwILkVEe26eKBxVz0OTQ" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_JfiIULkVEe26eKBxVz0OTQ" name="" memberEnd="_JdTTsbkVEe26eKBxVz0OTQ _JfiIUbkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JfiIUbkVEe26eKBxVz0OTQ" name="" type="_JANvELkVEe26eKBxVz0OTQ" association="_JfiIULkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JfnA0LkVEe26eKBxVz0OTQ" name="" memberEnd="_JePu4LkVEe26eKBxVz0OTQ _JfnA0bkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JfnA0bkVEe26eKBxVz0OTQ" name="" type="_JEMQILkVEe26eKBxVz0OTQ" association="_JfnA0LkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JfnA0rkVEe26eKBxVz0OTQ" name="" memberEnd="_JePu4bkVEe26eKBxVz0OTQ _JfnA07kVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JfnA07kVEe26eKBxVz0OTQ" name="" type="_JEMQILkVEe26eKBxVz0OTQ" association="_JfnA0rkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Jfo2ALkVEe26eKBxVz0OTQ" name="" memberEnd="_JeWckLkVEe26eKBxVz0OTQ _Jfo2AbkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_Jfo2AbkVEe26eKBxVz0OTQ" name="" type="_JEoVALkVEe26eKBxVz0OTQ" association="_Jfo2ALkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgFh8LkVEe26eKBxVz0OTQ" name="" memberEnd="_JgFh8bkVEe26eKBxVz0OTQ _Jc_xsLkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgFh8bkVEe26eKBxVz0OTQ" name="" type="_I-kwULkVEe26eKBxVz0OTQ" association="_JgFh8LkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgGJAbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgGJArkVEe26eKBxVz0OTQ _JdAYwLkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgGJArkVEe26eKBxVz0OTQ" name="" type="_I-kwULkVEe26eKBxVz0OTQ" association="_JgGJAbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgGwEbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgGwErkVEe26eKBxVz0OTQ _JdAYwrkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgGwErkVEe26eKBxVz0OTQ" name="" type="_I-kwULkVEe26eKBxVz0OTQ" association="_JgGwEbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgHXIbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgHXIrkVEe26eKBxVz0OTQ _JdC1ArkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgHXIrkVEe26eKBxVz0OTQ" name="" type="_I_MbYLkVEe26eKBxVz0OTQ" association="_JgHXIbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgH-MbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgH-MrkVEe26eKBxVz0OTQ _JdDcEbkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgH-MrkVEe26eKBxVz0OTQ" name="" type="_I_MbYLkVEe26eKBxVz0OTQ" association="_JgH-MbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgIlQbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgIlQrkVEe26eKBxVz0OTQ _JdFRQLkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgIlQrkVEe26eKBxVz0OTQ" name="" type="_I_R68LkVEe26eKBxVz0OTQ" association="_JgIlQbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgJMUbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgJMUrkVEe26eKBxVz0OTQ _JdFRQrkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgJMUrkVEe26eKBxVz0OTQ" name="" type="_I_R68LkVEe26eKBxVz0OTQ" association="_JgJMUbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgJzYbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgJzYrkVEe26eKBxVz0OTQ _JdHGcrkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgJzYrkVEe26eKBxVz0OTQ" name="" type="_I_WMYLkVEe26eKBxVz0OTQ" association="_JgJzYbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgKacbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgKacrkVEe26eKBxVz0OTQ _JdI7orkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgKacrkVEe26eKBxVz0OTQ" name="" type="_I_ogQLkVEe26eKBxVz0OTQ" association="_JgKacbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgLBgLkVEe26eKBxVz0OTQ" name="" memberEnd="_JgLBgbkVEe26eKBxVz0OTQ _JdKw0bkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgLBgbkVEe26eKBxVz0OTQ" name="" type="_I_ogQLkVEe26eKBxVz0OTQ" association="_JgLBgLkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgLBg7kVEe26eKBxVz0OTQ" name="" memberEnd="_JgLBhLkVEe26eKBxVz0OTQ _JdN0ILkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgLBhLkVEe26eKBxVz0OTQ" name="" type="_I_9QYLkVEe26eKBxVz0OTQ" association="_JgLBg7kVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgLokbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgLokrkVEe26eKBxVz0OTQ _JdPpULkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgLokrkVEe26eKBxVz0OTQ" name="" type="_I_9QYLkVEe26eKBxVz0OTQ" association="_JgLokbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgMPobkVEe26eKBxVz0OTQ" name="" memberEnd="_JgMPorkVEe26eKBxVz0OTQ _JdW-ErkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgMPorkVEe26eKBxVz0OTQ" name="" type="_JAkUYLkVEe26eKBxVz0OTQ" association="_JgMPobkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgMPpLkVEe26eKBxVz0OTQ" name="" memberEnd="_JgMPpbkVEe26eKBxVz0OTQ _JdYMMbkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgMPpbkVEe26eKBxVz0OTQ" name="" type="_JAkUYLkVEe26eKBxVz0OTQ" association="_JgMPpLkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgM2sbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgM2srkVEe26eKBxVz0OTQ _JdYzQbkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgM2srkVEe26eKBxVz0OTQ" name="" type="_JAkUYLkVEe26eKBxVz0OTQ" association="_JgM2sbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgM2tLkVEe26eKBxVz0OTQ" name="" memberEnd="_JgM2tbkVEe26eKBxVz0OTQ _JdZaUbkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgM2tbkVEe26eKBxVz0OTQ" name="" type="_JAkUYLkVEe26eKBxVz0OTQ" association="_JgM2tLkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgNdwbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgNdwrkVEe26eKBxVz0OTQ _JdZaU7kVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgNdwrkVEe26eKBxVz0OTQ" name="" type="_JAkUYLkVEe26eKBxVz0OTQ" association="_JgNdwbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgOE0LkVEe26eKBxVz0OTQ" name="" memberEnd="_JgOE0bkVEe26eKBxVz0OTQ _Jdb2k7kVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgOE0bkVEe26eKBxVz0OTQ" name="" type="_JA4dcLkVEe26eKBxVz0OTQ" association="_JgOE0LkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgOE07kVEe26eKBxVz0OTQ" name="" memberEnd="_JgOE1LkVEe26eKBxVz0OTQ _JddEsbkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgOE1LkVEe26eKBxVz0OTQ" name="" type="_JA4dcLkVEe26eKBxVz0OTQ" association="_JgOE07kVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgOr4bkVEe26eKBxVz0OTQ" name="" memberEnd="_JgOr4rkVEe26eKBxVz0OTQ _JddrwLkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgOr4rkVEe26eKBxVz0OTQ" name="" type="_JBAZQLkVEe26eKBxVz0OTQ" association="_JgOr4bkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgOr5LkVEe26eKBxVz0OTQ" name="" memberEnd="_JgOr5bkVEe26eKBxVz0OTQ _JdeS0LkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgOr5bkVEe26eKBxVz0OTQ" name="" type="_JBDckLkVEe26eKBxVz0OTQ" association="_JgOr5LkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgPS8bkVEe26eKBxVz0OTQ" name="" memberEnd="_JgPS8rkVEe26eKBxVz0OTQ _Jde54bkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgPS8rkVEe26eKBxVz0OTQ" name="" type="_JBDckLkVEe26eKBxVz0OTQ" association="_JgPS8bkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgP6AbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgP6ArkVEe26eKBxVz0OTQ _JdgIALkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgP6ArkVEe26eKBxVz0OTQ" name="" type="_JBHG8LkVEe26eKBxVz0OTQ" association="_JgP6AbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgQhELkVEe26eKBxVz0OTQ" name="" memberEnd="_JgQhEbkVEe26eKBxVz0OTQ _JdikQbkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgQhEbkVEe26eKBxVz0OTQ" name="" type="_JBT7QLkVEe26eKBxVz0OTQ" association="_JgQhELkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgQhE7kVEe26eKBxVz0OTQ" name="" memberEnd="_JgQhFLkVEe26eKBxVz0OTQ _JdjLUbkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgQhFLkVEe26eKBxVz0OTQ" name="" type="_JBT7QLkVEe26eKBxVz0OTQ" association="_JgQhE7kVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgRIIbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgRIIrkVEe26eKBxVz0OTQ _JdjLU7kVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgRIIrkVEe26eKBxVz0OTQ" name="" type="_JBT7QLkVEe26eKBxVz0OTQ" association="_JgRIIbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgRvMLkVEe26eKBxVz0OTQ" name="" memberEnd="_JgRvMbkVEe26eKBxVz0OTQ _JdjyYbkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgRvMbkVEe26eKBxVz0OTQ" name="" type="_JBT7QLkVEe26eKBxVz0OTQ" association="_JgRvMLkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgRvM7kVEe26eKBxVz0OTQ" name="" memberEnd="_JgRvNLkVEe26eKBxVz0OTQ _JdkZcLkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgRvNLkVEe26eKBxVz0OTQ" name="" type="_JBT7QLkVEe26eKBxVz0OTQ" association="_JgRvM7kVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgSWQbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgSWQrkVEe26eKBxVz0OTQ _JdlnkrkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgSWQrkVEe26eKBxVz0OTQ" name="" type="_JBao8LkVEe26eKBxVz0OTQ" association="_JgSWQbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgSWRLkVEe26eKBxVz0OTQ" name="" memberEnd="_JgSWRbkVEe26eKBxVz0OTQ _JdmOoLkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgSWRbkVEe26eKBxVz0OTQ" name="" type="_JBao8LkVEe26eKBxVz0OTQ" association="_JgSWRLkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgS9UbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgS9UrkVEe26eKBxVz0OTQ _Jdm1s7kVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgS9UrkVEe26eKBxVz0OTQ" name="" type="_JBgvkLkVEe26eKBxVz0OTQ" association="_JgS9UbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgTkYbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgTkYrkVEe26eKBxVz0OTQ _Jdoq5LkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgTkYrkVEe26eKBxVz0OTQ" name="" type="_JBxOQLkVEe26eKBxVz0OTQ" association="_JgTkYbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgTkZLkVEe26eKBxVz0OTQ" name="" memberEnd="_JgTkZbkVEe26eKBxVz0OTQ _JdpR8bkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgTkZbkVEe26eKBxVz0OTQ" name="" type="_JBxOQLkVEe26eKBxVz0OTQ" association="_JgTkZLkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgULcbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgULcrkVEe26eKBxVz0OTQ _JdpR87kVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgULcrkVEe26eKBxVz0OTQ" name="" type="_JBxOQLkVEe26eKBxVz0OTQ" association="_JgULcbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgUygLkVEe26eKBxVz0OTQ" name="" memberEnd="_JgUygbkVEe26eKBxVz0OTQ _JdqgELkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgUygbkVEe26eKBxVz0OTQ" name="" type="_JBxOQLkVEe26eKBxVz0OTQ" association="_JgUygLkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgUyg7kVEe26eKBxVz0OTQ" name="" memberEnd="_JgUyhLkVEe26eKBxVz0OTQ _JdqgFbkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgUyhLkVEe26eKBxVz0OTQ" name="" type="_JBxOQLkVEe26eKBxVz0OTQ" association="_JgUyg7kVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgVZkbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgVZkrkVEe26eKBxVz0OTQ _JdrHILkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgVZkrkVEe26eKBxVz0OTQ" name="" type="_JBxOQLkVEe26eKBxVz0OTQ" association="_JgVZkbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgWAoLkVEe26eKBxVz0OTQ" name="" memberEnd="_JgWAobkVEe26eKBxVz0OTQ _JdrHI7kVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgWAobkVEe26eKBxVz0OTQ" name="" type="_JBxOQLkVEe26eKBxVz0OTQ" association="_JgWAoLkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgWAo7kVEe26eKBxVz0OTQ" name="" memberEnd="_JgWApLkVEe26eKBxVz0OTQ _JdruMrkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgWApLkVEe26eKBxVz0OTQ" name="" type="_JBxOQLkVEe26eKBxVz0OTQ" association="_JgWAo7kVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgWnsbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgWnsrkVEe26eKBxVz0OTQ _Jds8ULkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgWnsrkVEe26eKBxVz0OTQ" name="" type="_JCFXULkVEe26eKBxVz0OTQ" association="_JgWnsbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgWntLkVEe26eKBxVz0OTQ" name="" memberEnd="_JgWntbkVEe26eKBxVz0OTQ _JduKdLkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgWntbkVEe26eKBxVz0OTQ" name="" type="_JCK24LkVEe26eKBxVz0OTQ" association="_JgWntLkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgXOwbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgXOwrkVEe26eKBxVz0OTQ _JduxgLkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgXOwrkVEe26eKBxVz0OTQ" name="" type="_JCK24LkVEe26eKBxVz0OTQ" association="_JgXOwbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgX10LkVEe26eKBxVz0OTQ" name="" memberEnd="_JgX10bkVEe26eKBxVz0OTQ _JdxNwrkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgX10bkVEe26eKBxVz0OTQ" name="" type="_JCeY4LkVEe26eKBxVz0OTQ" association="_JgX10LkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgX107kVEe26eKBxVz0OTQ" name="" memberEnd="_JgX11LkVEe26eKBxVz0OTQ _Jdx00bkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgX11LkVEe26eKBxVz0OTQ" name="" type="_JCeY4LkVEe26eKBxVz0OTQ" association="_JgX107kVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgYc4bkVEe26eKBxVz0OTQ" name="" memberEnd="_JgYc4rkVEe26eKBxVz0OTQ _Jdyb4rkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgYc4rkVEe26eKBxVz0OTQ" name="" type="_JCgOELkVEe26eKBxVz0OTQ" association="_JgYc4bkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgYc5LkVEe26eKBxVz0OTQ" name="" memberEnd="_JgYc5bkVEe26eKBxVz0OTQ _JdzqBbkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgYc5bkVEe26eKBxVz0OTQ" name="" type="_JCmUsLkVEe26eKBxVz0OTQ" association="_JgYc5LkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgZD8bkVEe26eKBxVz0OTQ" name="" memberEnd="_JgZD8rkVEe26eKBxVz0OTQ _Jd0RErkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgZD8rkVEe26eKBxVz0OTQ" name="" type="_JCmUsLkVEe26eKBxVz0OTQ" association="_JgZD8bkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgZrAbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgZrArkVEe26eKBxVz0OTQ _Jd2GRLkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgZrArkVEe26eKBxVz0OTQ" name="" type="_JCveoLkVEe26eKBxVz0OTQ" association="_JgZrAbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgZrBLkVEe26eKBxVz0OTQ" name="" memberEnd="_JgZrBbkVEe26eKBxVz0OTQ _Jd2tUbkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgZrBbkVEe26eKBxVz0OTQ" name="" type="_JCveoLkVEe26eKBxVz0OTQ" association="_JgZrBLkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgaSEbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgaSErkVEe26eKBxVz0OTQ _Jd5JkLkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgaSErkVEe26eKBxVz0OTQ" name="" type="_JDPN4LkVEe26eKBxVz0OTQ" association="_JgaSEbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Jga5IbkVEe26eKBxVz0OTQ" name="" memberEnd="_Jga5IrkVEe26eKBxVz0OTQ _Jd5JkrkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_Jga5IrkVEe26eKBxVz0OTQ" name="" type="_JDPN4LkVEe26eKBxVz0OTQ" association="_Jga5IbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgbgMbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgbgMrkVEe26eKBxVz0OTQ _Jd5wobkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgbgMrkVEe26eKBxVz0OTQ" name="" type="_JDPN4LkVEe26eKBxVz0OTQ" association="_JgbgMbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgcHQLkVEe26eKBxVz0OTQ" name="" memberEnd="_JgcHQbkVEe26eKBxVz0OTQ _Jd6XtbkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgcHQbkVEe26eKBxVz0OTQ" name="" type="_JDPN4LkVEe26eKBxVz0OTQ" association="_JgcHQLkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgcHQ7kVEe26eKBxVz0OTQ" name="" memberEnd="_JgcHRLkVEe26eKBxVz0OTQ _Jd6-wbkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgcHRLkVEe26eKBxVz0OTQ" name="" type="_JDPN4LkVEe26eKBxVz0OTQ" association="_JgcHQ7kVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgcuUbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgcuUrkVEe26eKBxVz0OTQ _Jd6-xLkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgcuUrkVEe26eKBxVz0OTQ" name="" type="_JDPN4LkVEe26eKBxVz0OTQ" association="_JgcuUbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgdVYbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgdVYrkVEe26eKBxVz0OTQ _Jd7l0bkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgdVYrkVEe26eKBxVz0OTQ" name="" type="_JDPN4LkVEe26eKBxVz0OTQ" association="_JgdVYbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Jgd8cbkVEe26eKBxVz0OTQ" name="" memberEnd="_Jgd8crkVEe26eKBxVz0OTQ _Jd8M4LkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_Jgd8crkVEe26eKBxVz0OTQ" name="" type="_JDWioLkVEe26eKBxVz0OTQ" association="_Jgd8cbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgejgLkVEe26eKBxVz0OTQ" name="" memberEnd="_JgejgbkVEe26eKBxVz0OTQ _Jd-CELkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgejgbkVEe26eKBxVz0OTQ" name="" type="_JDfFgLkVEe26eKBxVz0OTQ" association="_JgejgLkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Jgejg7kVEe26eKBxVz0OTQ" name="" memberEnd="_JgejhLkVEe26eKBxVz0OTQ _Jd-CErkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgejhLkVEe26eKBxVz0OTQ" name="" type="_JDfFgLkVEe26eKBxVz0OTQ" association="_Jgejg7kVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgfKkbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgfKkrkVEe26eKBxVz0OTQ _Jd-pIbkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgfKkrkVEe26eKBxVz0OTQ" name="" type="_JDfFgLkVEe26eKBxVz0OTQ" association="_JgfKkbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgfxobkVEe26eKBxVz0OTQ" name="" memberEnd="_JgfxorkVEe26eKBxVz0OTQ _Jd-pI7kVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgfxorkVEe26eKBxVz0OTQ" name="" type="_JDfFgLkVEe26eKBxVz0OTQ" association="_JgfxobkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JggYsbkVEe26eKBxVz0OTQ" name="" memberEnd="_JggYsrkVEe26eKBxVz0OTQ _Jd_QMbkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JggYsrkVEe26eKBxVz0OTQ" name="" type="_JDfFgLkVEe26eKBxVz0OTQ" association="_JggYsbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Jgg_wbkVEe26eKBxVz0OTQ" name="" memberEnd="_Jgg_wrkVEe26eKBxVz0OTQ _JeEvwbkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_Jgg_wrkVEe26eKBxVz0OTQ" name="" type="_JD7xcLkVEe26eKBxVz0OTQ" association="_Jgg_wbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Jghm0bkVEe26eKBxVz0OTQ" name="" memberEnd="_Jghm0rkVEe26eKBxVz0OTQ _JeFW0rkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_Jghm0rkVEe26eKBxVz0OTQ" name="" type="_JD7xcLkVEe26eKBxVz0OTQ" association="_Jghm0bkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgiN4bkVEe26eKBxVz0OTQ" name="" memberEnd="_JgiN4rkVEe26eKBxVz0OTQ _JeQV8rkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgiN4rkVEe26eKBxVz0OTQ" name="" type="_JEMQILkVEe26eKBxVz0OTQ" association="_JgiN4bkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Jgi08bkVEe26eKBxVz0OTQ" name="" memberEnd="_Jgi08rkVEe26eKBxVz0OTQ _JeQ9ArkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_Jgi08rkVEe26eKBxVz0OTQ" name="" type="_JEMQILkVEe26eKBxVz0OTQ" association="_Jgi08bkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgjcAbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgjcArkVEe26eKBxVz0OTQ _JeWckbkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgjcArkVEe26eKBxVz0OTQ" name="" type="_JEoVALkVEe26eKBxVz0OTQ" association="_JgjcAbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgkDEbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgkDErkVEe26eKBxVz0OTQ _JeXDorkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgkDErkVEe26eKBxVz0OTQ" name="" type="_JEoVALkVEe26eKBxVz0OTQ" association="_JgkDEbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgkqIbkVEe26eKBxVz0OTQ" name="" memberEnd="_JgkqIrkVEe26eKBxVz0OTQ _JeaG9LkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgkqIrkVEe26eKBxVz0OTQ" name="" type="_JE8eELkVEe26eKBxVz0OTQ" association="_JgkqIbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JglRMbkVEe26eKBxVz0OTQ" name="" memberEnd="_JglRMrkVEe26eKBxVz0OTQ _JeauAbkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JglRMrkVEe26eKBxVz0OTQ" name="" type="_JE8eELkVEe26eKBxVz0OTQ" association="_JglRMbkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Jgl4QLkVEe26eKBxVz0OTQ" name="" memberEnd="_Jgl4QbkVEe26eKBxVz0OTQ _JebVELkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_Jgl4QbkVEe26eKBxVz0OTQ" name="" type="_JE8eELkVEe26eKBxVz0OTQ" association="_Jgl4QLkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Jgl4Q7kVEe26eKBxVz0OTQ" name="" memberEnd="_JgmfULkVEe26eKBxVz0OTQ _JecjNLkVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgmfULkVEe26eKBxVz0OTQ" name="" type="_JE8eELkVEe26eKBxVz0OTQ" association="_Jgl4Q7kVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JgmfUrkVEe26eKBxVz0OTQ" name="" memberEnd="_JgmfU7kVEe26eKBxVz0OTQ _JedxU7kVEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_JgmfU7kVEe26eKBxVz0OTQ" name="" type="_JE8eELkVEe26eKBxVz0OTQ" association="_JgmfUrkVEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ASLUYMqOEe2esKyal-zizw" name="" memberEnd="_ASLUYcqOEe2esKyal-zizw _AR0IAMqOEe2esKyal-zizw">
              <ownedEnd xmi:id="_ASLUYcqOEe2esKyal-zizw" name="" type="_JCXEIbkVEe26eKBxVz0OTQ" association="_ASLUYMqOEe2esKyal-zizw"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_I6I8QrkVEe26eKBxVz0OTQ" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_JZqw4bkVEe26eKBxVz0OTQ" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_JZrX8bkVEe26eKBxVz0OTQ" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_JZr_AbkVEe26eKBxVz0OTQ" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_JcqagbkVEe26eKBxVz0OTQ" name="WARPdslBaseListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_I74osLkVEe26eKBxVz0OTQ" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_JbQsULkVEe26eKBxVz0OTQ" name="Utilities"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_I41UsLkVEe26eKBxVz0OTQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_I41UsbkVEe26eKBxVz0OTQ" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_I5dm0LkVEe26eKBxVz0OTQ" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_JZPTELkVEe26eKBxVz0OTQ" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_I75PwLkVEe26eKBxVz0OTQ" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_JbTIkbkVEe26eKBxVz0OTQ" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_JCV2ALkVEe26eKBxVz0OTQ" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_JY5U0LkVEe26eKBxVz0OTQ" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_JY7KALkVEe26eKBxVz0OTQ" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_JY7xEbkVEe26eKBxVz0OTQ" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_JY8YIbkVEe26eKBxVz0OTQ" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_JY8_MbkVEe26eKBxVz0OTQ" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_JZYdAbkVEe26eKBxVz0OTQ" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_JaIq8LkVEe26eKBxVz0OTQ" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_JbRTYbkVEe26eKBxVz0OTQ" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_JbRTY7kVEe26eKBxVz0OTQ" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_JbRTZbkVEe26eKBxVz0OTQ" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_JbShgbkVEe26eKBxVz0OTQ" name="Vector"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_JbYBELkVEe26eKBxVz0OTQ" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_JbZPMLkVEe26eKBxVz0OTQ" name="Queue"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_I5y-A7kVEe26eKBxVz0OTQ" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_JZdVgLkVEe26eKBxVz0OTQ" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_JZdVgrkVEe26eKBxVz0OTQ" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_JZ6ogLkVEe26eKBxVz0OTQ" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_JZ7PkbkVEe26eKBxVz0OTQ" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_I5y-BLkVEe26eKBxVz0OTQ" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_I5y-BbkVEe26eKBxVz0OTQ" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_JZd8kbkVEe26eKBxVz0OTQ" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_JZejobkVEe26eKBxVz0OTQ" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_JZejo7kVEe26eKBxVz0OTQ" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_I6Q4ELkVEe26eKBxVz0OTQ" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_JZ1wALkVEe26eKBxVz0OTQ" name="Component"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Jby30LkVEe26eKBxVz0OTQ" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_Jby30bkVEe26eKBxVz0OTQ" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_JcKrQLkVEe26eKBxVz0OTQ" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_JcZ71rkVEe26eKBxVz0OTQ" name="Double"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_I5y-ALkVEe26eKBxVz0OTQ" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_I5y-AbkVEe26eKBxVz0OTQ" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_I5y-ArkVEe26eKBxVz0OTQ" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_JZcucLkVEe26eKBxVz0OTQ" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_I5y-BrkVEe26eKBxVz0OTQ" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_I5y-B7kVEe26eKBxVz0OTQ" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_I6RfILkVEe26eKBxVz0OTQ" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_JZ4MQbkVEe26eKBxVz0OTQ" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_JZ4zUbkVEe26eKBxVz0OTQ" name="TableColumnModel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_JZfKsbkVEe26eKBxVz0OTQ" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_JZ2-ILkVEe26eKBxVz0OTQ" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_JZ2-IrkVEe26eKBxVz0OTQ" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_JZ3lMbkVEe26eKBxVz0OTQ" name="JTable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_I6HuILkVEe26eKBxVz0OTQ" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_I6IVMLkVEe26eKBxVz0OTQ" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_I6IVMbkVEe26eKBxVz0OTQ" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_I6I8QLkVEe26eKBxVz0OTQ" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_I6I8QbkVEe26eKBxVz0OTQ" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_JZpiwbkVEe26eKBxVz0OTQ" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_JZqJ0bkVEe26eKBxVz0OTQ" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_JZoUoLkVEe26eKBxVz0OTQ" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_JZo7sbkVEe26eKBxVz0OTQ" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_JZo7s7kVEe26eKBxVz0OTQ" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_I8cCULkVEe26eKBxVz0OTQ" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_I8cpYLkVEe26eKBxVz0OTQ" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_I8cpYbkVEe26eKBxVz0OTQ" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_Jbk1YbkVEe26eKBxVz0OTQ" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_JbmDgbkVEe26eKBxVz0OTQ" name="Test"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_JbkOULkVEe26eKBxVz0OTQ" name="Assert"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_I6NNsLkVEe26eKBxVz0OTQ" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_JZsmErkVEe26eKBxVz0OTQ" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_JZt0NLkVEe26eKBxVz0OTQ" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_JZvpYbkVEe26eKBxVz0OTQ" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_JZwQc7kVEe26eKBxVz0OTQ" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_JZyForkVEe26eKBxVz0OTQ" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_JZz60LkVEe26eKBxVz0OTQ" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_JaWtY7kVEe26eKBxVz0OTQ" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_JaX7gLkVEe26eKBxVz0OTQ" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_JaYik7kVEe26eKBxVz0OTQ" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_JaZwsrkVEe26eKBxVz0OTQ" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_I7tCgLkVEe26eKBxVz0OTQ" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_JbANoLkVEe26eKBxVz0OTQ" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_JbBbxLkVEe26eKBxVz0OTQ" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_JbCp4rkVEe26eKBxVz0OTQ" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_JbD4ALkVEe26eKBxVz0OTQ" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_JbEfE7kVEe26eKBxVz0OTQ" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_JbFtMrkVEe26eKBxVz0OTQ" name="ChannelContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_I7yiELkVEe26eKBxVz0OTQ" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_JbIwgLkVEe26eKBxVz0OTQ" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_JbJXkbkVEe26eKBxVz0OTQ" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_JbJ-obkVEe26eKBxVz0OTQ" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_JbKlsbkVEe26eKBxVz0OTQ" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_JbLMwbkVEe26eKBxVz0OTQ" name="StringHolder"/>
    </packagedElement>
    <profileApplication xmi:id="_H7-D0LkVEe26eKBxVz0OTQ">
      <eAnnotations xmi:id="_H8XscLkVEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_H8Y6kLkVEe26eKBxVz0OTQ" base_Package="_H0IWcLkVEe26eKBxVz0OTQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_I-ge4LkVEe26eKBxVz0OTQ" genericsValue="T,E" base_Element="_I-dbkLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_I-po0LkVEe26eKBxVz0OTQ" base_Element="_I-oasLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_I-q28LkVEe26eKBxVz0OTQ" base_Element="_I-oasLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_I-q28bkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_I-sFELkVEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_I-reALkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_I-t6QLkVEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_I-ssILkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_I-vvcLkVEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_I-uhULkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_I-yLsLkVEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_I-vvcbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_I-0A4LkVEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_I-yLsbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_I_fWULkVEe26eKBxVz0OTQ" genericsValue="String" base_Element="_I_dhILkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_I_t_0LkVEe26eKBxVz0OTQ" genericsValue="String" base_Element="_I_sKorkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_I__soLkVEe26eKBxVz0OTQ" base_Element="_I__FkLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JAATsLkVEe26eKBxVz0OTQ" base_Element="_I__FkLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JAATsbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JAA6wLkVEe26eKBxVz0OTQ" base_Element="_JAATsrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JABh0LkVEe26eKBxVz0OTQ" base_Element="_JAATsrkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JABh0bkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JACv8LkVEe26eKBxVz0OTQ" base_Element="_JACI4LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JADXALkVEe26eKBxVz0OTQ" base_Element="_JACI4LkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JADXAbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_JAI2kLkVEe26eKBxVz0OTQ" genericsValue="T extends SchedulableObject" base_Element="_JAHocLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JAMg8rkVEe26eKBxVz0OTQ" base_Element="_JAMg8LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JANIALkVEe26eKBxVz0OTQ" base_Element="_JAMg8LkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JANIAbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JAQyYLkVEe26eKBxVz0OTQ" base_Element="_JAQLULkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JAVD0LkVEe26eKBxVz0OTQ" base_Element="_JAUcwLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JAVD0bkVEe26eKBxVz0OTQ" base_Element="_JAUcwLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JAVD0rkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JAWR8LkVEe26eKBxVz0OTQ" base_Element="_JAVq4LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JAW5ALkVEe26eKBxVz0OTQ" base_Element="_JAVq4LkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JAW5AbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JAXgELkVEe26eKBxVz0OTQ" base_Element="_JAW5ArkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JAXgEbkVEe26eKBxVz0OTQ" base_Element="_JAW5ArkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JAXgErkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_JArCELkVEe26eKBxVz0OTQ" genericsValue="Node" base_Element="_JApz8bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JAs3QLkVEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_JArCEbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JAuscLkVEe26eKBxVz0OTQ" genericsValue="Integer" base_Element="_JAteULkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JAxvwbkVEe26eKBxVz0OTQ" base_Element="_JAxIsLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JAyW0LkVEe26eKBxVz0OTQ" base_Element="_JAxIsLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JAyW0bkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JA6SobkVEe26eKBxVz0OTQ" base_Element="_JA6SoLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JA65sLkVEe26eKBxVz0OTQ" base_Element="_JA6SoLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JA65sbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_JBFRwbkVEe26eKBxVz0OTQ" dimensions="2" base_Element="_JBEqs7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JBdFMLkVEe26eKBxVz0OTQ" genericsValue="T extends SchedulableObject" base_Element="_JBceILkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JBfhcLkVEe26eKBxVz0OTQ" genericsValue="T extends SchedulableObject" base_Element="_JBe6YLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JBjL0bkVEe26eKBxVz0OTQ" base_Element="_JBikw7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JBjy4LkVEe26eKBxVz0OTQ" base_Element="_JBikw7kVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JBjy4bkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JBloELkVEe26eKBxVz0OTQ" base_Element="_JBlBAbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JBmPILkVEe26eKBxVz0OTQ" base_Element="_JBlBAbkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JBmPIbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JBm2MLkVEe26eKBxVz0OTQ" base_Element="_JBmPIrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JBm2MbkVEe26eKBxVz0OTQ" base_Element="_JBmPIrkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JBm2MrkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JBuK8LkVEe26eKBxVz0OTQ" base_Element="_JBtj5bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JBuK8bkVEe26eKBxVz0OTQ" base_Element="_JBtj5bkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JBuyALkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_JBwAILkVEe26eKBxVz0OTQ" genericsValue="T extends SchedulableObject" base_Element="_JBvZELkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JBzqgLkVEe26eKBxVz0OTQ" genericsValue="String, Integer" base_Element="_JBycYLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JB04oLkVEe26eKBxVz0OTQ" genericsValue="String" base_Element="_JB0RkLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Array xmi:id="_JB2GwLkVEe26eKBxVz0OTQ" base_Element="_JB1fsLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JB_QsLkVEe26eKBxVz0OTQ" base_Element="_JB-poLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JB_QsbkVEe26eKBxVz0OTQ" base_Element="_JB-poLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JB_QsrkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_JCEJMLkVEe26eKBxVz0OTQ" genericsValue="T extends SchedulableObject" base_Element="_JCDiILkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JCMFALkVEe26eKBxVz0OTQ" base_Element="_JCLd8LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JCMsELkVEe26eKBxVz0OTQ" base_Element="_JCLd8LkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JCMsEbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JCMsE7kVEe26eKBxVz0OTQ" base_Element="_JCMsErkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JCNTILkVEe26eKBxVz0OTQ" base_Element="_JCMsErkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JCNTIbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JCN6MLkVEe26eKBxVz0OTQ" base_Element="_JCNTIrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JCN6MbkVEe26eKBxVz0OTQ" base_Element="_JCNTIrkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JCN6MrkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_JCOhQrkVEe26eKBxVz0OTQ" dimensions="1" base_Element="_JCN6M7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JCOhQ7kVEe26eKBxVz0OTQ" base_Element="_JCN6M7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JCPIULkVEe26eKBxVz0OTQ" base_Element="_JCN6M7kVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JCPIUbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_JCPIVbkVEe26eKBxVz0OTQ" dimensions="2" base_Element="_JCPIUrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JCPvYLkVEe26eKBxVz0OTQ" base_Element="_JCPIUrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JCPvYbkVEe26eKBxVz0OTQ" base_Element="_JCPIUrkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JCPvYrkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_JCSysLkVEe26eKBxVz0OTQ" genericsValue="T extends SchedulableObject" base_Element="_JCSLoLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JCUn4LkVEe26eKBxVz0OTQ" genericsValue="T extends SchedulableObject" base_Element="_JCUA0LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JCV2AbkVEe26eKBxVz0OTQ" base_Element="_JCV2ALkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JCXEILkVEe26eKBxVz0OTQ" genericsValue="T" base_Element="_JCWdELkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JChcMbkVEe26eKBxVz0OTQ" base_Element="_JChcMLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JCiDQLkVEe26eKBxVz0OTQ" base_Element="_JChcMLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JCiDQbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_JCj4cLkVEe26eKBxVz0OTQ" genericsValue="T" base_Element="_JCjRYLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JCow8LkVEe26eKBxVz0OTQ" base_Element="_JCoJ5LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JCow8bkVEe26eKBxVz0OTQ" base_Element="_JCoJ5LkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JCow8rkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JCow9LkVEe26eKBxVz0OTQ" base_Element="_JCow87kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JCpYALkVEe26eKBxVz0OTQ" base_Element="_JCow87kVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JCpYAbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JCqmILkVEe26eKBxVz0OTQ" base_Element="_JCpYArkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JCqmIbkVEe26eKBxVz0OTQ" base_Element="_JCpYArkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JCqmIrkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_JCtCYLkVEe26eKBxVz0OTQ" genericsValue="T extends SchedulableObject" base_Element="_JCsbULkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JCu3kLkVEe26eKBxVz0OTQ" genericsValue="T" base_Element="_JCuQgLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JC_9ULkVEe26eKBxVz0OTQ" genericsValue="T extends SchedulableObject" base_Element="_JC_WQLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JDBLcbkVEe26eKBxVz0OTQ" genericsValue="T" base_Element="_JDBLcLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JDCZkbkVEe26eKBxVz0OTQ" base_Element="_JDCZkLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JDHSELkVEe26eKBxVz0OTQ" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_JDGrALkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JDLjgbkVEe26eKBxVz0OTQ" base_Element="_JDLjgLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JDMxoLkVEe26eKBxVz0OTQ" base_Element="_JDMKk7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JDRqILkVEe26eKBxVz0OTQ" base_Element="_JDRDELkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JDRqIbkVEe26eKBxVz0OTQ" base_Element="_JDRDELkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JDRqIrkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JDSRMLkVEe26eKBxVz0OTQ" base_Element="_JDRqI7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JDSRMbkVEe26eKBxVz0OTQ" base_Element="_JDRqI7kVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JDSRMrkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JDSRNbkVEe26eKBxVz0OTQ" base_Element="_JDSRM7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JDS4QLkVEe26eKBxVz0OTQ" base_Element="_JDSRM7kVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JDS4QbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_JDbbILkVEe26eKBxVz0OTQ" base_Element="_JDa0E7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Array xmi:id="_JDcCM7kVEe26eKBxVz0OTQ" dimensions="2" base_Element="_JDcCMLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JDg6sLkVEe26eKBxVz0OTQ" base_Element="_JDgToLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JDg6sbkVEe26eKBxVz0OTQ" base_Element="_JDgToLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JDg6srkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JDhhwbkVEe26eKBxVz0OTQ" base_Element="_JDhhwLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JDiI0LkVEe26eKBxVz0OTQ" base_Element="_JDhhwLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JDiI0bkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JDiI07kVEe26eKBxVz0OTQ" base_Element="_JDiI0rkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JDiv4LkVEe26eKBxVz0OTQ" base_Element="_JDiI0rkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JDiv4bkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JDjW8LkVEe26eKBxVz0OTQ" base_Element="_JDiv4rkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JDjW8bkVEe26eKBxVz0OTQ" base_Element="_JDiv4rkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JDjW8rkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JDj-ALkVEe26eKBxVz0OTQ" base_Element="_JDjW87kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JDj-AbkVEe26eKBxVz0OTQ" base_Element="_JDjW87kVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JDj-ArkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JDklEbkVEe26eKBxVz0OTQ" base_Element="_JDklELkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JDklErkVEe26eKBxVz0OTQ" base_Element="_JDklELkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JDlMILkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JDlzMbkVEe26eKBxVz0OTQ" base_Element="_JDlMIbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JDlzMrkVEe26eKBxVz0OTQ" base_Element="_JDlMIbkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JDlzM7kVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JDlzNrkVEe26eKBxVz0OTQ" base_Element="_JDlzNLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JDmaQLkVEe26eKBxVz0OTQ" base_Element="_JDlzNLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JDmaQbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JDnBUbkVEe26eKBxVz0OTQ" base_Element="_JDmaQrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JDnBUrkVEe26eKBxVz0OTQ" base_Element="_JDmaQrkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JDnBU7kVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JDnoYLkVEe26eKBxVz0OTQ" base_Element="_JDnBVLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JDnoYbkVEe26eKBxVz0OTQ" base_Element="_JDnBVLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JDnoYrkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JDoPcLkVEe26eKBxVz0OTQ" base_Element="_JDnoY7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JDoPcbkVEe26eKBxVz0OTQ" base_Element="_JDnoY7kVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JDoPcrkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JDo2gbkVEe26eKBxVz0OTQ" base_Element="_JDoPc7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JDo2grkVEe26eKBxVz0OTQ" base_Element="_JDoPc7kVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JDo2g7kVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JDpdkrkVEe26eKBxVz0OTQ" base_Element="_JDpdkLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JDqEoLkVEe26eKBxVz0OTQ" base_Element="_JDpdkLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JDqEobkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JDqEpLkVEe26eKBxVz0OTQ" base_Element="_JDqEorkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JDqrsLkVEe26eKBxVz0OTQ" base_Element="_JDqEorkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JDqrsbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JDqrtLkVEe26eKBxVz0OTQ" base_Element="_JDqrsrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JDqrtbkVEe26eKBxVz0OTQ" base_Element="_JDqrsrkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JDrSwLkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JDrSwrkVEe26eKBxVz0OTQ" base_Element="_JDrSwbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JDrSw7kVEe26eKBxVz0OTQ" base_Element="_JDrSwbkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JDrSxLkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_JD7KYLkVEe26eKBxVz0OTQ" genericsValue="InstructionParameters" base_Element="_JD6jULkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JD8_kLkVEe26eKBxVz0OTQ" genericsValue="InstructionParameters" base_Element="_JD8YhLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Array xmi:id="_JEE7YrkVEe26eKBxVz0OTQ" base_Element="_JEE7YLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Array xmi:id="_JEGwk7kVEe26eKBxVz0OTQ" base_Element="_JEGwkbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Array xmi:id="_JEcHwLkVEe26eKBxVz0OTQ" base_Element="_JEbgsLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Array xmi:id="_JEdV47kVEe26eKBxVz0OTQ" base_Element="_JEdV4LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Array xmi:id="_JEekBLkVEe26eKBxVz0OTQ" dimensions="1" base_Element="_JEekALkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Array xmi:id="_JEfyJLkVEe26eKBxVz0OTQ" base_Element="_JEfyILkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JEt0kLkVEe26eKBxVz0OTQ" genericsValue="Integer" base_Element="_JEtNiLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFFoALkVEe26eKBxVz0OTQ" base_Element="_JFFA8bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFFoAbkVEe26eKBxVz0OTQ" base_Element="_JFFA8bkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFFoArkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFG2ILkVEe26eKBxVz0OTQ" base_Element="_JFGPELkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFG2IbkVEe26eKBxVz0OTQ" base_Element="_JFGPELkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFG2IrkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFHdMbkVEe26eKBxVz0OTQ" base_Element="_JFG2I7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFIEQLkVEe26eKBxVz0OTQ" base_Element="_JFG2I7kVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFIEQbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFJSYLkVEe26eKBxVz0OTQ" base_Element="_JFIrUrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFJSYbkVEe26eKBxVz0OTQ" base_Element="_JFIrUrkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFJSYrkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFJ5cLkVEe26eKBxVz0OTQ" base_Element="_JFJSY7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFJ5cbkVEe26eKBxVz0OTQ" base_Element="_JFJSY7kVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFJ5crkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFKggbkVEe26eKBxVz0OTQ" base_Element="_JFJ5c7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFKggrkVEe26eKBxVz0OTQ" base_Element="_JFJ5c7kVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFKgg7kVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFLHkbkVEe26eKBxVz0OTQ" base_Element="_JFKghLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFLHkrkVEe26eKBxVz0OTQ" base_Element="_JFKghLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFLHk7kVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFLuorkVEe26eKBxVz0OTQ" base_Element="_JFLuoLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFLuo7kVEe26eKBxVz0OTQ" base_Element="_JFLuoLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFMVsLkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_JFMVsrkVEe26eKBxVz0OTQ" genericsValue="String, Integer" base_Element="_JFMVsbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFU4kLkVEe26eKBxVz0OTQ" base_Element="_JFURgrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFU4kbkVEe26eKBxVz0OTQ" base_Element="_JFURgrkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFU4krkVEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFVfoLkVEe26eKBxVz0OTQ" base_Element="_JFU4k7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFVfobkVEe26eKBxVz0OTQ" base_Element="_JFU4k7kVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFVforkVEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFVfpLkVEe26eKBxVz0OTQ" base_Element="_JFVfo7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFWGsLkVEe26eKBxVz0OTQ" base_Element="_JFVfo7kVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFWGsbkVEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFWGs7kVEe26eKBxVz0OTQ" base_Element="_JFWGsrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFWGtLkVEe26eKBxVz0OTQ" base_Element="_JFWGsrkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFWtwLkVEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFWtwrkVEe26eKBxVz0OTQ" base_Element="_JFWtwbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFWtw7kVEe26eKBxVz0OTQ" base_Element="_JFWtwbkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFWtxLkVEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFXU0bkVEe26eKBxVz0OTQ" base_Element="_JFXU0LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFXU0rkVEe26eKBxVz0OTQ" base_Element="_JFXU0LkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFXU07kVEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFX74LkVEe26eKBxVz0OTQ" base_Element="_JFXU1LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFX74bkVEe26eKBxVz0OTQ" base_Element="_JFXU1LkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFX74rkVEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFYi8LkVEe26eKBxVz0OTQ" base_Element="_JFX747kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFYi8bkVEe26eKBxVz0OTQ" base_Element="_JFX747kVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFYi8rkVEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFYi9LkVEe26eKBxVz0OTQ" base_Element="_JFYi87kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFZKALkVEe26eKBxVz0OTQ" base_Element="_JFYi87kVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFZKAbkVEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFZKA7kVEe26eKBxVz0OTQ" base_Element="_JFZKArkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFZKBLkVEe26eKBxVz0OTQ" base_Element="_JFZKArkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFZKBbkVEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFZxELkVEe26eKBxVz0OTQ" base_Element="_JFZKBrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFZxEbkVEe26eKBxVz0OTQ" base_Element="_JFZKBrkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFZxErkVEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFaYIbkVEe26eKBxVz0OTQ" base_Element="_JFaYILkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFaYIrkVEe26eKBxVz0OTQ" base_Element="_JFaYILkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFaYI7kVEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFa_MLkVEe26eKBxVz0OTQ" base_Element="_JFaYJLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFa_MbkVEe26eKBxVz0OTQ" base_Element="_JFaYJLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFa_MrkVEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFa_NLkVEe26eKBxVz0OTQ" base_Element="_JFa_M7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFbmQLkVEe26eKBxVz0OTQ" base_Element="_JFa_M7kVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFbmQbkVEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFbmQ7kVEe26eKBxVz0OTQ" base_Element="_JFbmQrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFbmRLkVEe26eKBxVz0OTQ" base_Element="_JFbmQrkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFbmRbkVEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFcNULkVEe26eKBxVz0OTQ" base_Element="_JFbmRrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFcNUbkVEe26eKBxVz0OTQ" base_Element="_JFbmRrkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFcNUrkVEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFcNVLkVEe26eKBxVz0OTQ" base_Element="_JFcNU7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFc0YLkVEe26eKBxVz0OTQ" base_Element="_JFcNU7kVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFc0YbkVEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFc0Y7kVEe26eKBxVz0OTQ" base_Element="_JFc0YrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFc0ZLkVEe26eKBxVz0OTQ" base_Element="_JFc0YrkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFc0ZbkVEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFdbcbkVEe26eKBxVz0OTQ" base_Element="_JFdbcLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFdbcrkVEe26eKBxVz0OTQ" base_Element="_JFdbcLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFdbc7kVEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFeCgLkVEe26eKBxVz0OTQ" base_Element="_JFdbdLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFeCgbkVEe26eKBxVz0OTQ" base_Element="_JFdbdLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFeCgrkVEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFepkLkVEe26eKBxVz0OTQ" base_Element="_JFeCg7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFepkbkVEe26eKBxVz0OTQ" base_Element="_JFeCg7kVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFepkrkVEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JFfQoLkVEe26eKBxVz0OTQ" base_Element="_JFepk7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JFfQobkVEe26eKBxVz0OTQ" base_Element="_JFepk7kVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JFfQorkVEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_JY6i8LkVEe26eKBxVz0OTQ" base_Element="_JY5U0LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JY7xELkVEe26eKBxVz0OTQ" base_Element="_JY7KALkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JY8YILkVEe26eKBxVz0OTQ" base_Element="_JY7xEbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JY8_MLkVEe26eKBxVz0OTQ" base_Element="_JY8YIbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JY-NULkVEe26eKBxVz0OTQ" base_Element="_JY8_MbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JZBQo7kVEe26eKBxVz0OTQ" base_Element="_JZBQoLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JZB3sLkVEe26eKBxVz0OTQ" base_Element="_JZBQoLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JZB3sbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_JZET8LkVEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_JZDs4rkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JZGJILkVEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_JZE7AbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JZJMcLkVEe26eKBxVz0OTQ" genericsValue="String, Activation" base_Element="_JZIlYLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JZP6ILkVEe26eKBxVz0OTQ" base_Element="_JZPTELkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JZWAwLkVEe26eKBxVz0OTQ" base_Element="_JZVZsbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JZWAwbkVEe26eKBxVz0OTQ" base_Element="_JZVZsbkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JZWAwrkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_JZZEELkVEe26eKBxVz0OTQ" base_Element="_JZYdAbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JZa5QLkVEe26eKBxVz0OTQ" base_Element="_JZaSMLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JZa5QbkVEe26eKBxVz0OTQ" base_Element="_JZaSMLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JZa5QrkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_JZcucbkVEe26eKBxVz0OTQ" base_Element="_JZcucLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JZdVgbkVEe26eKBxVz0OTQ" base_Element="_JZdVgLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JZd8kLkVEe26eKBxVz0OTQ" base_Element="_JZdVgrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JZejoLkVEe26eKBxVz0OTQ" base_Element="_JZd8kbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JZejorkVEe26eKBxVz0OTQ" base_Element="_JZejobkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JZfKsLkVEe26eKBxVz0OTQ" base_Element="_JZejo7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JZfxwLkVEe26eKBxVz0OTQ" base_Element="_JZfKsbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JZiOArkVEe26eKBxVz0OTQ" base_Element="_JZhm8rkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JZi1ELkVEe26eKBxVz0OTQ" base_Element="_JZhm8rkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JZi1EbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_JZlRUbkVEe26eKBxVz0OTQ" genericsValue="String, Flow" base_Element="_JZlRULkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JZl4YbkVEe26eKBxVz0OTQ" genericsValue="Node, Activation" base_Element="_JZl4YLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JZo7sLkVEe26eKBxVz0OTQ" base_Element="_JZoUoLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JZo7srkVEe26eKBxVz0OTQ" base_Element="_JZo7sbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JZpiwLkVEe26eKBxVz0OTQ" base_Element="_JZo7s7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JZqJ0LkVEe26eKBxVz0OTQ" base_Element="_JZpiwbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JZqw4LkVEe26eKBxVz0OTQ" base_Element="_JZqJ0bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JZrX8LkVEe26eKBxVz0OTQ" base_Element="_JZqw4bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JZr_ALkVEe26eKBxVz0OTQ" base_Element="_JZrX8bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JZr_ArkVEe26eKBxVz0OTQ" base_Element="_JZr_AbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JZtNILkVEe26eKBxVz0OTQ" base_Element="_JZsmErkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JZt0MbkVEe26eKBxVz0OTQ" base_Element="_JZtNIbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JZt0MrkVEe26eKBxVz0OTQ" base_Element="_JZtNIbkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JZt0M7kVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_JZubQLkVEe26eKBxVz0OTQ" base_Element="_JZt0NLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JZvCUbkVEe26eKBxVz0OTQ" base_Element="_JZubQbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JZvCUrkVEe26eKBxVz0OTQ" base_Element="_JZubQbkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JZvpYLkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_JZvpYrkVEe26eKBxVz0OTQ" base_Element="_JZvpYbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JZwQcLkVEe26eKBxVz0OTQ" base_Element="_JZvpY7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JZwQcbkVEe26eKBxVz0OTQ" base_Element="_JZvpY7kVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JZwQcrkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_JZw3gLkVEe26eKBxVz0OTQ" base_Element="_JZwQc7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JZxekrkVEe26eKBxVz0OTQ" base_Element="_JZxekLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JZyFoLkVEe26eKBxVz0OTQ" base_Element="_JZxekLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JZyFobkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_JZyssLkVEe26eKBxVz0OTQ" base_Element="_JZyForkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JZzTwLkVEe26eKBxVz0OTQ" base_Element="_JZyssbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JZzTwbkVEe26eKBxVz0OTQ" base_Element="_JZyssbkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JZzTwrkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_JZ0h4LkVEe26eKBxVz0OTQ" base_Element="_JZz60LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JZ0h47kVEe26eKBxVz0OTQ" base_Element="_JZ0h4bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JZ1I8LkVEe26eKBxVz0OTQ" base_Element="_JZ0h4bkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JZ1I8bkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_JZ2XELkVEe26eKBxVz0OTQ" base_Element="_JZ1wALkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JZ2-IbkVEe26eKBxVz0OTQ" base_Element="_JZ2-ILkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JZ3lMLkVEe26eKBxVz0OTQ" base_Element="_JZ2-IrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JZ4MQLkVEe26eKBxVz0OTQ" base_Element="_JZ3lMbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JZ4zULkVEe26eKBxVz0OTQ" base_Element="_JZ4MQbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JZ5aYLkVEe26eKBxVz0OTQ" base_Element="_JZ4zUbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JZ7PkLkVEe26eKBxVz0OTQ" base_Element="_JZ6ogLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JZ72oLkVEe26eKBxVz0OTQ" base_Element="_JZ7PkbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JZ-S4LkVEe26eKBxVz0OTQ" genericsValue="String" base_Element="_JZ9r0LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JZ_hALkVEe26eKBxVz0OTQ" base_Element="_JZ-58LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JaEZgrkVEe26eKBxVz0OTQ" base_Element="_JaDycLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JaFAkLkVEe26eKBxVz0OTQ" base_Element="_JaDycLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JaFAkbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_JaG1wLkVEe26eKBxVz0OTQ" genericsValue="String, Node" base_Element="_JaGOsLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JaJSALkVEe26eKBxVz0OTQ" base_Element="_JaIq8LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JaPYoLkVEe26eKBxVz0OTQ" base_Element="_JaOxkLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JaPYobkVEe26eKBxVz0OTQ" base_Element="_JaOxkLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JaPYorkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_JaRN0LkVEe26eKBxVz0OTQ" genericsValue="ScheduleTime" base_Element="_JaP_s7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JaTDA7kVEe26eKBxVz0OTQ" base_Element="_JaTDALkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JaTqELkVEe26eKBxVz0OTQ" base_Element="_JaTDALkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JaTqEbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JaWGULkVEe26eKBxVz0OTQ" base_Element="_JaVfRrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JaWGUbkVEe26eKBxVz0OTQ" base_Element="_JaVfRrkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JaWGUrkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JaWtYLkVEe26eKBxVz0OTQ" base_Element="_JaWGU7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JaWtYbkVEe26eKBxVz0OTQ" base_Element="_JaWGU7kVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JaWtYrkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_JaXUcLkVEe26eKBxVz0OTQ" base_Element="_JaWtY7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JaXUc7kVEe26eKBxVz0OTQ" base_Element="_JaXUcbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JaXUdLkVEe26eKBxVz0OTQ" base_Element="_JaXUcbkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JaXUdbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_JaX7gbkVEe26eKBxVz0OTQ" base_Element="_JaX7gLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JaYikLkVEe26eKBxVz0OTQ" base_Element="_JaX7grkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JaYikbkVEe26eKBxVz0OTQ" base_Element="_JaX7grkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JaYikrkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_JaZJoLkVEe26eKBxVz0OTQ" base_Element="_JaYik7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JaZJo7kVEe26eKBxVz0OTQ" base_Element="_JaZJobkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JaZwsLkVEe26eKBxVz0OTQ" base_Element="_JaZJobkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JaZwsbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_JaZws7kVEe26eKBxVz0OTQ" base_Element="_JaZwsrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JaaXwrkVEe26eKBxVz0OTQ" base_Element="_JaaXwLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JaaXw7kVEe26eKBxVz0OTQ" base_Element="_JaaXwLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JaaXxLkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jaa-0LkVEe26eKBxVz0OTQ" base_Element="_JaaXxbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_Jaa-0bkVEe26eKBxVz0OTQ" base_Element="_JaaXxbkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_Jaa-0rkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jabl4LkVEe26eKBxVz0OTQ" base_Element="_Jaa-07kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_Jabl4bkVEe26eKBxVz0OTQ" base_Element="_Jaa-07kVEe26eKBxVz0OTQ">
    <annotations xmi:id="_Jabl4rkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jabl5bkVEe26eKBxVz0OTQ" base_Element="_Jabl47kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JacM8LkVEe26eKBxVz0OTQ" base_Element="_Jabl47kVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JacM8bkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Jac0AbkVEe26eKBxVz0OTQ" genericsValue="String,InstructionTimeSlot" base_Element="_Jac0ALkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_Jaf3ULkVEe26eKBxVz0OTQ" genericsValue="T" base_Element="_JafQQLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JahsgLkVEe26eKBxVz0OTQ" genericsValue="Double" base_Element="_JahFcLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_Jai6oLkVEe26eKBxVz0OTQ" genericsValue="Double,ReliabilityRow" base_Element="_JaiTkLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_Javu8LkVEe26eKBxVz0OTQ" genericsValue="Activation,Row&lt;Activation>" base_Element="_JavH4LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_Jaw9ELkVEe26eKBxVz0OTQ" genericsValue="T" base_Element="_JawWAbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JayLMLkVEe26eKBxVz0OTQ" base_Element="_JaxkIbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_Ja0ncLkVEe26eKBxVz0OTQ" base_Element="_Ja0AYLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_Ja1OgLkVEe26eKBxVz0OTQ" base_Element="_Ja0ncbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JbANobkVEe26eKBxVz0OTQ" base_Element="_JbANoLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JbA0srkVEe26eKBxVz0OTQ" base_Element="_JbA0sLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JbA0s7kVEe26eKBxVz0OTQ" base_Element="_JbA0sLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JbA0tLkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JbBbwbkVEe26eKBxVz0OTQ" base_Element="_JbA0tbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JbBbwrkVEe26eKBxVz0OTQ" base_Element="_JbA0tbkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JbBbw7kVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_JbCC0LkVEe26eKBxVz0OTQ" base_Element="_JbBbxLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JbCC07kVEe26eKBxVz0OTQ" base_Element="_JbCC0bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JbCp4LkVEe26eKBxVz0OTQ" base_Element="_JbCC0bkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JbCp4bkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_JbCp47kVEe26eKBxVz0OTQ" base_Element="_JbCp4rkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JbDQ8rkVEe26eKBxVz0OTQ" base_Element="_JbDQ8LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JbDQ87kVEe26eKBxVz0OTQ" base_Element="_JbDQ8LkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JbDQ9LkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_JbD4AbkVEe26eKBxVz0OTQ" base_Element="_JbD4ALkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JbEfELkVEe26eKBxVz0OTQ" base_Element="_JbD4ArkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JbEfEbkVEe26eKBxVz0OTQ" base_Element="_JbD4ArkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JbEfErkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_JbFGILkVEe26eKBxVz0OTQ" base_Element="_JbEfE7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JbFGI7kVEe26eKBxVz0OTQ" base_Element="_JbFGIbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JbFtMLkVEe26eKBxVz0OTQ" base_Element="_JbFGIbkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JbFtMbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_JbGUQLkVEe26eKBxVz0OTQ" base_Element="_JbFtMrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JbG7ULkVEe26eKBxVz0OTQ" base_Element="_JbGUQbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JbG7UbkVEe26eKBxVz0OTQ" base_Element="_JbGUQbkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JbG7UrkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_JbJXkLkVEe26eKBxVz0OTQ" base_Element="_JbIwgLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JbJ-oLkVEe26eKBxVz0OTQ" base_Element="_JbJXkbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JbKlsLkVEe26eKBxVz0OTQ" base_Element="_JbJ-obkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JbLMwLkVEe26eKBxVz0OTQ" base_Element="_JbKlsbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JbLz0LkVEe26eKBxVz0OTQ" base_Element="_JbLMwbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JbRTYLkVEe26eKBxVz0OTQ" base_Element="_JbQsULkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JbRTYrkVEe26eKBxVz0OTQ" base_Element="_JbRTYbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JbRTZLkVEe26eKBxVz0OTQ" base_Element="_JbRTY7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JbShgLkVEe26eKBxVz0OTQ" base_Element="_JbRTZbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JbTIkLkVEe26eKBxVz0OTQ" base_Element="_JbShgbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JbTIkrkVEe26eKBxVz0OTQ" base_Element="_JbTIkbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JbYoILkVEe26eKBxVz0OTQ" base_Element="_JbYBELkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JbZPMbkVEe26eKBxVz0OTQ" base_Element="_JbZPMLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_Jbk1YLkVEe26eKBxVz0OTQ" base_Element="_JbkOULkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JbmDgLkVEe26eKBxVz0OTQ" base_Element="_Jbk1YbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JbmDgrkVEe26eKBxVz0OTQ" base_Element="_JbmDgbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JbyQwLkVEe26eKBxVz0OTQ" genericsValue="T, E" base_Element="_JbxpsLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_Jbze4LkVEe26eKBxVz0OTQ" base_Element="_Jby30bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_Jb0F8LkVEe26eKBxVz0OTQ" genericsValue="Activation" base_Element="_Jbze4bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_Jb17ILkVEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_Jb1UELkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_Jb2iMLkVEe26eKBxVz0OTQ" genericsValue="String" base_Element="_Jb17IrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_Jb3JQLkVEe26eKBxVz0OTQ" genericsValue="String" base_Element="_Jb2iMrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_Jb3wULkVEe26eKBxVz0OTQ" genericsValue="ScheduleTime" base_Element="_Jb3JQrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_Jb4-cbkVEe26eKBxVz0OTQ" genericsValue="String" base_Element="_Jb4-cLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_Jb6zp7kVEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_Jb6zobkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_Jb7asLkVEe26eKBxVz0OTQ" genericsValue="String" base_Element="_Jb6zorkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_Jb8Bw7kVEe26eKBxVz0OTQ" genericsValue="String" base_Element="_Jb8BwrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_Jb9P4LkVEe26eKBxVz0OTQ" genericsValue="String" base_Element="_Jb8o0bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_Jb-eALkVEe26eKBxVz0OTQ" genericsValue="Activation" base_Element="_Jb928LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jb_sILkVEe26eKBxVz0OTQ" base_Element="_Jb_FELkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_Jb_sIbkVEe26eKBxVz0OTQ" genericsValue="Node" base_Element="_Jb_FEbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JcATMLkVEe26eKBxVz0OTQ" base_Element="_Jb_FELkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JcATMbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_JcATM7kVEe26eKBxVz0OTQ" genericsValue="T" base_Element="_JcATMrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JcA6QbkVEe26eKBxVz0OTQ" base_Element="_JcA6QLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JcCIY7kVEe26eKBxVz0OTQ" base_Element="_JcBhULkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JcCIZLkVEe26eKBxVz0OTQ" base_Element="_JcBhULkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JcCIZbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_JcCvcbkVEe26eKBxVz0OTQ" genericsValue="String" base_Element="_JcCvcLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JcDWgLkVEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_JcCvcrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JcFLsLkVEe26eKBxVz0OTQ" genericsValue="Flow" base_Element="_JcEkoLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JcHA4LkVEe26eKBxVz0OTQ" genericsValue="Node" base_Element="_JcGZ0bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JcHn8LkVEe26eKBxVz0OTQ" genericsValue="Integer" base_Element="_JcHA4rkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JcKrQbkVEe26eKBxVz0OTQ" base_Element="_JcKrQLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JcNHgLkVEe26eKBxVz0OTQ" genericsValue="T" base_Element="_JcMgcLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JcNukbkVEe26eKBxVz0OTQ" base_Element="_JcNHgbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JcNukrkVEe26eKBxVz0OTQ" base_Element="_JcNHgbkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JcNuk7kVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_JcOVobkVEe26eKBxVz0OTQ" genericsValue="T" base_Element="_JcOVoLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JcPjw7kVEe26eKBxVz0OTQ" base_Element="_JcO8sLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JcPjxLkVEe26eKBxVz0OTQ" base_Element="_JcO8sLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JcPjxbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_JcQK0LkVEe26eKBxVz0OTQ" genericsValue="Node" base_Element="_JcPjxrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JcRY8bkVEe26eKBxVz0OTQ" genericsValue="T" base_Element="_JcRY8LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JcSABLkVEe26eKBxVz0OTQ" base_Element="_JcSAALkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JcSnELkVEe26eKBxVz0OTQ" base_Element="_JcSAALkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JcSnEbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_JcT1MLkVEe26eKBxVz0OTQ" genericsValue="Node" base_Element="_JcTOIrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Array xmi:id="_JcUcQLkVEe26eKBxVz0OTQ" base_Element="_JcT1MbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JcUcQbkVEe26eKBxVz0OTQ" genericsValue="Node" base_Element="_JcT1MrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JcVqYLkVEe26eKBxVz0OTQ" base_Element="_JcVDULkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JcW4gLkVEe26eKBxVz0OTQ" genericsValue="T" base_Element="_JcWRcrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JcXflLkVEe26eKBxVz0OTQ" base_Element="_JcXfkLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JcXflbkVEe26eKBxVz0OTQ" base_Element="_JcXfkLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JcXflrkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_JcYtsbkVEe26eKBxVz0OTQ" genericsValue="T" base_Element="_JcYtsLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JcZ707kVEe26eKBxVz0OTQ" base_Element="_JcZUwLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JcZ71LkVEe26eKBxVz0OTQ" base_Element="_JcZUwLkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JcZ71bkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Jcai4LkVEe26eKBxVz0OTQ" base_Element="_JcZ71rkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_Jcc_IrkVEe26eKBxVz0OTQ" genericsValue="T" base_Element="_Jcc_IbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JceNQLkVEe26eKBxVz0OTQ" genericsValue="T" base_Element="_JcdmMbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JcfbYLkVEe26eKBxVz0OTQ" genericsValue="T" base_Element="_JceNQrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JcfbYbkVEe26eKBxVz0OTQ" genericsValue="T" base_Element="_Jce0ULkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JchQkrkVEe26eKBxVz0OTQ" genericsValue="E" base_Element="_JchQkbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JciesLkVEe26eKBxVz0OTQ" base_Element="_Jch3oLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_Jcjs0LkVEe26eKBxVz0OTQ" base_Element="_JcjFwrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_Jck68bkVEe26eKBxVz0OTQ" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_JckT5LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jck68rkVEe26eKBxVz0OTQ" base_Element="_JckT5LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JcnXMLkVEe26eKBxVz0OTQ" base_Element="_JcmwILkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JcpMYrkVEe26eKBxVz0OTQ" base_Element="_JcolULkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JcpMY7kVEe26eKBxVz0OTQ" genericsValue="Node" base_Element="_JcpMYLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_JcpzcLkVEe26eKBxVz0OTQ" base_Element="_JcolULkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JcpzcbkVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_JcqagrkVEe26eKBxVz0OTQ" base_Element="_JcqagbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_Jc_xsbkVEe26eKBxVz0OTQ" genericsValue="String" base_Element="_Jc_xsLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JdAYwbkVEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_JdAYwLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JdA_0LkVEe26eKBxVz0OTQ" genericsValue="ScheduleTime" base_Element="_JdAYwrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdDcELkVEe26eKBxVz0OTQ" base_Element="_JdC1ArkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdDcErkVEe26eKBxVz0OTQ" base_Element="_JdDcEbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdEDILkVEe26eKBxVz0OTQ" base_Element="_JdDcE7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdFRQbkVEe26eKBxVz0OTQ" base_Element="_JdFRQLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdF4ULkVEe26eKBxVz0OTQ" base_Element="_JdFRQrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdGfYbkVEe26eKBxVz0OTQ" base_Element="_JdGfYLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdHGcbkVEe26eKBxVz0OTQ" base_Element="_JdHGcLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JdHtgLkVEe26eKBxVz0OTQ" genericsValue="ChannelSet" base_Element="_JdHGcrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdIUkLkVEe26eKBxVz0OTQ" base_Element="_JdHGcrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JdJisLkVEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_JdI7orkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdKJwLkVEe26eKBxVz0OTQ" base_Element="_JdI7orkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdKw0LkVEe26eKBxVz0OTQ" base_Element="_JdKJwbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JdLX4LkVEe26eKBxVz0OTQ" genericsValue="String" base_Element="_JdKw0bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdLX4bkVEe26eKBxVz0OTQ" base_Element="_JdKw0bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdL-8bkVEe26eKBxVz0OTQ" base_Element="_JdL-8LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdMmAbkVEe26eKBxVz0OTQ" base_Element="_JdMmALkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdN0IbkVEe26eKBxVz0OTQ" base_Element="_JdN0ILkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdObMbkVEe26eKBxVz0OTQ" base_Element="_JdObMLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdPCQbkVEe26eKBxVz0OTQ" base_Element="_JdPCQLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdPpUbkVEe26eKBxVz0OTQ" base_Element="_JdPpULkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdUh0LkVEe26eKBxVz0OTQ" base_Element="_JdT6wbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdWXALkVEe26eKBxVz0OTQ" base_Element="_JdVv8rkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdWXArkVEe26eKBxVz0OTQ" base_Element="_JdWXAbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdW-EbkVEe26eKBxVz0OTQ" base_Element="_JdW-ELkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JdXlILkVEe26eKBxVz0OTQ" genericsValue="Node" base_Element="_JdW-ErkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdYMMLkVEe26eKBxVz0OTQ" base_Element="_JdW-ErkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JdYMMrkVEe26eKBxVz0OTQ" genericsValue="Integer" base_Element="_JdYMMbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdYzQLkVEe26eKBxVz0OTQ" base_Element="_JdYMMbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JdYzQrkVEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_JdYzQbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdZaULkVEe26eKBxVz0OTQ" base_Element="_JdYzQbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdZaUrkVEe26eKBxVz0OTQ" base_Element="_JdZaUbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdaBYLkVEe26eKBxVz0OTQ" base_Element="_JdZaU7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jdb2kLkVEe26eKBxVz0OTQ" base_Element="_JdbPhbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jdb2krkVEe26eKBxVz0OTQ" base_Element="_Jdb2kbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdcdoLkVEe26eKBxVz0OTQ" base_Element="_Jdb2k7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdcdorkVEe26eKBxVz0OTQ" base_Element="_JdcdobkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JddEsLkVEe26eKBxVz0OTQ" base_Element="_Jdcdo7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JddEsrkVEe26eKBxVz0OTQ" base_Element="_JddEsbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JddrwbkVEe26eKBxVz0OTQ" base_Element="_JddrwLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jde54LkVEe26eKBxVz0OTQ" base_Element="_JdeS0LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jde54rkVEe26eKBxVz0OTQ" base_Element="_Jde54bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdgIAbkVEe26eKBxVz0OTQ" base_Element="_JdgIALkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdgvEbkVEe26eKBxVz0OTQ" base_Element="_JdgvELkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdgvFLkVEe26eKBxVz0OTQ" base_Element="_JdgvErkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jdh9MbkVEe26eKBxVz0OTQ" base_Element="_JdhWIrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jdh9M7kVEe26eKBxVz0OTQ" base_Element="_Jdh9MrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdjLULkVEe26eKBxVz0OTQ" base_Element="_JdikQbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdjLUrkVEe26eKBxVz0OTQ" base_Element="_JdjLUbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdjyYLkVEe26eKBxVz0OTQ" base_Element="_JdjLU7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdjyYrkVEe26eKBxVz0OTQ" base_Element="_JdjyYbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JdkZcbkVEe26eKBxVz0OTQ" genericsValue="String, Integer" base_Element="_JdkZcLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdlAgLkVEe26eKBxVz0OTQ" base_Element="_JdkZcLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jdlnk7kVEe26eKBxVz0OTQ" base_Element="_JdlnkrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdmOobkVEe26eKBxVz0OTQ" base_Element="_JdmOoLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JdncwLkVEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_Jdm1s7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdpR8LkVEe26eKBxVz0OTQ" base_Element="_Jdoq5LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdpR8rkVEe26eKBxVz0OTQ" base_Element="_JdpR8bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jdp5A7kVEe26eKBxVz0OTQ" base_Element="_JdpR87kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdqgFLkVEe26eKBxVz0OTQ" base_Element="_JdqgELkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdqgFrkVEe26eKBxVz0OTQ" base_Element="_JdqgFbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JdrHIbkVEe26eKBxVz0OTQ" genericsValue="Activation" base_Element="_JdrHILkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdrHIrkVEe26eKBxVz0OTQ" base_Element="_JdrHILkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JdruMLkVEe26eKBxVz0OTQ" genericsValue="String, Integer" base_Element="_JdrHI7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdruMbkVEe26eKBxVz0OTQ" base_Element="_JdrHI7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdsVQLkVEe26eKBxVz0OTQ" base_Element="_JdruMrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jds8UbkVEe26eKBxVz0OTQ" base_Element="_Jds8ULkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdtjYLkVEe26eKBxVz0OTQ" base_Element="_Jds8UrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JduKdbkVEe26eKBxVz0OTQ" base_Element="_JduKdLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JduxgbkVEe26eKBxVz0OTQ" base_Element="_JduxgLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdvYkLkVEe26eKBxVz0OTQ" base_Element="_JduxgrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jdx00LkVEe26eKBxVz0OTQ" base_Element="_JdxNwrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jdx00rkVEe26eKBxVz0OTQ" base_Element="_Jdx00bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jdyb47kVEe26eKBxVz0OTQ" base_Element="_Jdyb4rkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdzC8LkVEe26eKBxVz0OTQ" base_Element="_Jdyb5LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JdzqBrkVEe26eKBxVz0OTQ" base_Element="_JdzqBbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd0REbkVEe26eKBxVz0OTQ" base_Element="_Jd0RELkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd0RE7kVEe26eKBxVz0OTQ" base_Element="_Jd0RErkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd1fMbkVEe26eKBxVz0OTQ" base_Element="_Jd1fMLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd1fM7kVEe26eKBxVz0OTQ" base_Element="_Jd1fMrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd2GQbkVEe26eKBxVz0OTQ" base_Element="_Jd1fNLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd2GQ7kVEe26eKBxVz0OTQ" base_Element="_Jd2GQrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd2tULkVEe26eKBxVz0OTQ" base_Element="_Jd2GRLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd2tUrkVEe26eKBxVz0OTQ" base_Element="_Jd2tUbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd2tVLkVEe26eKBxVz0OTQ" base_Element="_Jd2tU7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd3UYbkVEe26eKBxVz0OTQ" base_Element="_Jd3UYLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd5JkbkVEe26eKBxVz0OTQ" base_Element="_Jd5JkLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd5woLkVEe26eKBxVz0OTQ" base_Element="_Jd5JkrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd5workVEe26eKBxVz0OTQ" base_Element="_Jd5wobkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd6XsLkVEe26eKBxVz0OTQ" base_Element="_Jd5wo7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd6XsrkVEe26eKBxVz0OTQ" base_Element="_Jd6XsbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd6XtLkVEe26eKBxVz0OTQ" base_Element="_Jd6Xs7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd6-wLkVEe26eKBxVz0OTQ" base_Element="_Jd6XtbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd6-w7kVEe26eKBxVz0OTQ" base_Element="_Jd6-wbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd7l0LkVEe26eKBxVz0OTQ" base_Element="_Jd6-xLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd7l0rkVEe26eKBxVz0OTQ" base_Element="_Jd7l0bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd8M4bkVEe26eKBxVz0OTQ" base_Element="_Jd8M4LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd8z8LkVEe26eKBxVz0OTQ" base_Element="_Jd8M4rkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd8z8rkVEe26eKBxVz0OTQ" base_Element="_Jd8z8bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Array xmi:id="_Jd9bArkVEe26eKBxVz0OTQ" dimensions="2" base_Element="_Jd9bALkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd9bA7kVEe26eKBxVz0OTQ" base_Element="_Jd9bALkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd-CEbkVEe26eKBxVz0OTQ" base_Element="_Jd-CELkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd-pILkVEe26eKBxVz0OTQ" base_Element="_Jd-CErkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd-pIrkVEe26eKBxVz0OTQ" base_Element="_Jd-pIbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd_QMLkVEe26eKBxVz0OTQ" base_Element="_Jd-pI7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd_QMrkVEe26eKBxVz0OTQ" base_Element="_Jd_QMbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jd_3QLkVEe26eKBxVz0OTQ" base_Element="_Jd_QM7kVEe26eKBxVz0OTQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_JeAeULkVEe26eKBxVz0OTQ" name="getNumChannels" method="_JfJGyLkVEe26eKBxVz0OTQ">
      <ownedParameter xmi:id="_JeAeUbkVEe26eKBxVz0OTQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_JeAeUrkVEe26eKBxVz0OTQ" base_Element="_JeAeULkVEe26eKBxVz0OTQ">
    <annotations xmi:id="_JeAeU7kVEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeBFYbkVEe26eKBxVz0OTQ" base_Element="_JeAeVLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeBFZLkVEe26eKBxVz0OTQ" base_Element="_JeBFYrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeDhprkVEe26eKBxVz0OTQ" base_Element="_JeDhpLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeEvwLkVEe26eKBxVz0OTQ" base_Element="_JeEIsrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JeFW0LkVEe26eKBxVz0OTQ" genericsValue="InstructionParameters" base_Element="_JeEvwbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeFW0bkVEe26eKBxVz0OTQ" base_Element="_JeEvwbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeFW07kVEe26eKBxVz0OTQ" base_Element="_JeFW0rkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeHzELkVEe26eKBxVz0OTQ" base_Element="_JeHMBrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeHzErkVEe26eKBxVz0OTQ" base_Element="_JeHzEbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeHzFLkVEe26eKBxVz0OTQ" base_Element="_JeHzE7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeIaIbkVEe26eKBxVz0OTQ" base_Element="_JeIaILkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeIaI7kVEe26eKBxVz0OTQ" base_Element="_JeIaIrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeJBMbkVEe26eKBxVz0OTQ" base_Element="_JeJBMLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeJBM7kVEe26eKBxVz0OTQ" base_Element="_JeJBMrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeJoQLkVEe26eKBxVz0OTQ" base_Element="_JeJBNLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeJoQrkVEe26eKBxVz0OTQ" base_Element="_JeJoQbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeJoRLkVEe26eKBxVz0OTQ" base_Element="_JeJoQ7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeKPUbkVEe26eKBxVz0OTQ" base_Element="_JeKPULkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeKPU7kVEe26eKBxVz0OTQ" base_Element="_JeKPUrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeK2YLkVEe26eKBxVz0OTQ" base_Element="_JeKPVLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeK2YrkVEe26eKBxVz0OTQ" base_Element="_JeK2YbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeLdcLkVEe26eKBxVz0OTQ" base_Element="_JeK2Y7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeLdcrkVEe26eKBxVz0OTQ" base_Element="_JeLdcbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeMEgLkVEe26eKBxVz0OTQ" base_Element="_JeLdc7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeMEgrkVEe26eKBxVz0OTQ" base_Element="_JeMEgbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeOgw7kVEe26eKBxVz0OTQ" base_Element="_JeOgwbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JePH1LkVEe26eKBxVz0OTQ" base_Element="_JePH0rkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeQV8bkVEe26eKBxVz0OTQ" base_Element="_JeQV8LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JeQ9ALkVEe26eKBxVz0OTQ" genericsValue="String" base_Element="_JeQV8rkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JeRkELkVEe26eKBxVz0OTQ" genericsValue="String" base_Element="_JeQ9ArkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeUAUbkVEe26eKBxVz0OTQ" base_Element="_JeUAULkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeUnYrkVEe26eKBxVz0OTQ" base_Element="_JeUnYbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeVOcbkVEe26eKBxVz0OTQ" base_Element="_JeVOcLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeV1gLkVEe26eKBxVz0OTQ" base_Element="_JeVOcrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JeXDoLkVEe26eKBxVz0OTQ" genericsValue="Integer" base_Element="_JeWckbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeXDobkVEe26eKBxVz0OTQ" base_Element="_JeWckbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_JeXqsLkVEe26eKBxVz0OTQ" genericsValue="SchedulableObject" base_Element="_JeXDorkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeauALkVEe26eKBxVz0OTQ" base_Element="_JeaG9LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeauArkVEe26eKBxVz0OTQ" base_Element="_JeauAbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JebVEbkVEe26eKBxVz0OTQ" base_Element="_JebVELkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jeb8ILkVEe26eKBxVz0OTQ" base_Element="_JebVErkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jeb8IrkVEe26eKBxVz0OTQ" base_Element="_Jeb8IbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Jeb8JLkVEe26eKBxVz0OTQ" base_Element="_Jeb8I7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JecjMbkVEe26eKBxVz0OTQ" base_Element="_JecjMLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JecjM7kVEe26eKBxVz0OTQ" base_Element="_JecjMrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JedKQLkVEe26eKBxVz0OTQ" base_Element="_JecjNLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JedKQrkVEe26eKBxVz0OTQ" base_Element="_JedKQbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JedxULkVEe26eKBxVz0OTQ" base_Element="_JedKQ7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JedxUrkVEe26eKBxVz0OTQ" base_Element="_JedxUbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JeeYYLkVEe26eKBxVz0OTQ" base_Element="_JedxU7kVEe26eKBxVz0OTQ"/>
  <uml:OpaqueBehavior xmi:id="_JfJGyLkVEe26eKBxVz0OTQ" name="getNumChannels" specification="_JeAeULkVEe26eKBxVz0OTQ">
    <ownedParameter xmi:id="_JfJt0LkVEe26eKBxVz0OTQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_JgGJALkVEe26eKBxVz0OTQ" base_Element="_JgFh8LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgGwELkVEe26eKBxVz0OTQ" base_Element="_JgGJAbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgHXILkVEe26eKBxVz0OTQ" base_Element="_JgGwEbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgH-MLkVEe26eKBxVz0OTQ" base_Element="_JgHXIbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgIlQLkVEe26eKBxVz0OTQ" base_Element="_JgH-MbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgJMULkVEe26eKBxVz0OTQ" base_Element="_JgIlQbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgJzYLkVEe26eKBxVz0OTQ" base_Element="_JgJMUbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgKacLkVEe26eKBxVz0OTQ" base_Element="_JgJzYbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgKac7kVEe26eKBxVz0OTQ" base_Element="_JgKacbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgLBgrkVEe26eKBxVz0OTQ" base_Element="_JgLBgLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgLokLkVEe26eKBxVz0OTQ" base_Element="_JgLBg7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgMPoLkVEe26eKBxVz0OTQ" base_Element="_JgLokbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgMPo7kVEe26eKBxVz0OTQ" base_Element="_JgMPobkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgM2sLkVEe26eKBxVz0OTQ" base_Element="_JgMPpLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgM2s7kVEe26eKBxVz0OTQ" base_Element="_JgM2sbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgNdwLkVEe26eKBxVz0OTQ" base_Element="_JgM2tLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgNdw7kVEe26eKBxVz0OTQ" base_Element="_JgNdwbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgOE0rkVEe26eKBxVz0OTQ" base_Element="_JgOE0LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgOr4LkVEe26eKBxVz0OTQ" base_Element="_JgOE07kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgOr47kVEe26eKBxVz0OTQ" base_Element="_JgOr4bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgPS8LkVEe26eKBxVz0OTQ" base_Element="_JgOr5LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgP6ALkVEe26eKBxVz0OTQ" base_Element="_JgPS8bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgP6A7kVEe26eKBxVz0OTQ" base_Element="_JgP6AbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgQhErkVEe26eKBxVz0OTQ" base_Element="_JgQhELkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgRIILkVEe26eKBxVz0OTQ" base_Element="_JgQhE7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgRII7kVEe26eKBxVz0OTQ" base_Element="_JgRIIbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgRvMrkVEe26eKBxVz0OTQ" base_Element="_JgRvMLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgSWQLkVEe26eKBxVz0OTQ" base_Element="_JgRvM7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgSWQ7kVEe26eKBxVz0OTQ" base_Element="_JgSWQbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgS9ULkVEe26eKBxVz0OTQ" base_Element="_JgSWRLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgTkYLkVEe26eKBxVz0OTQ" base_Element="_JgS9UbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgTkY7kVEe26eKBxVz0OTQ" base_Element="_JgTkYbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgULcLkVEe26eKBxVz0OTQ" base_Element="_JgTkZLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgULc7kVEe26eKBxVz0OTQ" base_Element="_JgULcbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgUygrkVEe26eKBxVz0OTQ" base_Element="_JgUygLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgVZkLkVEe26eKBxVz0OTQ" base_Element="_JgUyg7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgVZk7kVEe26eKBxVz0OTQ" base_Element="_JgVZkbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgWAorkVEe26eKBxVz0OTQ" base_Element="_JgWAoLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgWnsLkVEe26eKBxVz0OTQ" base_Element="_JgWAo7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgWns7kVEe26eKBxVz0OTQ" base_Element="_JgWnsbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgXOwLkVEe26eKBxVz0OTQ" base_Element="_JgWntLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgXOw7kVEe26eKBxVz0OTQ" base_Element="_JgXOwbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgX10rkVEe26eKBxVz0OTQ" base_Element="_JgX10LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgYc4LkVEe26eKBxVz0OTQ" base_Element="_JgX107kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgYc47kVEe26eKBxVz0OTQ" base_Element="_JgYc4bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgZD8LkVEe26eKBxVz0OTQ" base_Element="_JgYc5LkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgZrALkVEe26eKBxVz0OTQ" base_Element="_JgZD8bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgZrA7kVEe26eKBxVz0OTQ" base_Element="_JgZrAbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgaSELkVEe26eKBxVz0OTQ" base_Element="_JgZrBLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_Jga5ILkVEe26eKBxVz0OTQ" base_Element="_JgaSEbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgbgMLkVEe26eKBxVz0OTQ" base_Element="_Jga5IbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgbgM7kVEe26eKBxVz0OTQ" base_Element="_JgbgMbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgcHQrkVEe26eKBxVz0OTQ" base_Element="_JgcHQLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgcuULkVEe26eKBxVz0OTQ" base_Element="_JgcHQ7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgdVYLkVEe26eKBxVz0OTQ" base_Element="_JgcuUbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_Jgd8cLkVEe26eKBxVz0OTQ" base_Element="_JgdVYbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_Jgd8c7kVEe26eKBxVz0OTQ" base_Element="_Jgd8cbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgejgrkVEe26eKBxVz0OTQ" base_Element="_JgejgLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgfKkLkVEe26eKBxVz0OTQ" base_Element="_Jgejg7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgfxoLkVEe26eKBxVz0OTQ" base_Element="_JgfKkbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JggYsLkVEe26eKBxVz0OTQ" base_Element="_JgfxobkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_Jgg_wLkVEe26eKBxVz0OTQ" base_Element="_JggYsbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_Jghm0LkVEe26eKBxVz0OTQ" base_Element="_Jgg_wbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgiN4LkVEe26eKBxVz0OTQ" base_Element="_Jghm0bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_Jgi08LkVEe26eKBxVz0OTQ" base_Element="_JgiN4bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgjcALkVEe26eKBxVz0OTQ" base_Element="_Jgi08bkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgkDELkVEe26eKBxVz0OTQ" base_Element="_JgjcAbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgkqILkVEe26eKBxVz0OTQ" base_Element="_JgkDEbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JglRMLkVEe26eKBxVz0OTQ" base_Element="_JgkqIbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JglRM7kVEe26eKBxVz0OTQ" base_Element="_JglRMbkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_Jgl4QrkVEe26eKBxVz0OTQ" base_Element="_Jgl4QLkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgmfUbkVEe26eKBxVz0OTQ" base_Element="_Jgl4Q7kVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_JgnGYLkVEe26eKBxVz0OTQ" base_Element="_JgmfUrkVEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Patch xmi:id="_KhYm4LkVEe26eKBxVz0OTQ" base_Element="_JANvELkVEe26eKBxVz0OTQ" patchText="@@ -351,26 +351,24 @@&#xA; um EdgeState&#xA;-()&#xA;  %7B%0D%0A%09%09RELEAS&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_KhacELkVEe26eKBxVz0OTQ" base_Element="_JBT7QLkVEe26eKBxVz0OTQ" patchText="@@ -254,22 +254,25 @@&#xA; MISS%22;%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_KhbDILkVEe26eKBxVz0OTQ" base_Element="_JDBLcrkVEe26eKBxVz0OTQ" patchText="@@ -113,18 +113,16 @@&#xA; eChoices&#xA;-()&#xA;  %7B%0D%0A%09   &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_KhbqMLkVEe26eKBxVz0OTQ" base_Element="_JDK8cLkVEe26eKBxVz0OTQ" patchText="@@ -145,26 +145,24 @@&#xA; ystemChoices&#xA;-()&#xA;  %7B%0D%0A    SOUR&#xA;@@ -284,18 +284,16 @@&#xA; dChoices&#xA;-()&#xA;  %7B%0D%0A    &#xA;" conflicting="false"/>
  <UMLLabProfile:Generics xmi:id="_AQ3FwMqOEe2esKyal-zizw" genericsValue="Integer" base_Element="_AQ13ocqOEe2esKyal-zizw"/>
  <UMLLabProfile:Generics xmi:id="_AQ6JEMqOEe2esKyal-zizw" genericsValue="Integer" base_Element="_AQ4T4MqOEe2esKyal-zizw"/>
  <UMLLabProfile:Generics xmi:id="_ARlegMqOEe2esKyal-zizw" genericsValue="Integer" base_Element="_ARjpUMqOEe2esKyal-zizw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARxrwsqOEe2esKyal-zizw" base_Element="_ARxrwMqOEe2esKyal-zizw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARy54cqOEe2esKyal-zizw" base_Element="_ARxrw8qOEe2esKyal-zizw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARzg8MqOEe2esKyal-zizw" base_Element="_ARy54sqOEe2esKyal-zizw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AR0vEMqOEe2esKyal-zizw" base_Element="_AR0IAMqOEe2esKyal-zizw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AR19MMqOEe2esKyal-zizw" base_Element="_AR1WIMqOEe2esKyal-zizw"/>
  <UMLLabProfile:Reference xmi:id="_ASMigMqOEe2esKyal-zizw" base_Element="_ASLUYMqOEe2esKyal-zizw"/>
</xmi:XMI>
