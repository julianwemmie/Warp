<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_QYU4ILxiEe2Pj61kfbEkwg" name="Reliability">
    <eAnnotations xmi:id="_QdZlYLxiEe2Pj61kfbEkwg" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_QdZlYbxiEe2Pj61kfbEkwg" source="codegen">
        <details xmi:id="_QdZlYrxiEe2Pj61kfbEkwg" key="codegenDirectory" value="/cs2820-spring23/src"/>
        <details xmi:id="_S_uYMLxiEe2Pj61kfbEkwg" key="AssociatedSourceCode" value="/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;3352083564/1;"/>
        <details xmi:id="_yWVfENu5Ee2RlunxwnVSag" key="codeGenerator" value="com.yattasolutions.codegen.oaw.codeGenerator"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_RfFE0LxiEe2Pj61kfbEkwg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_RfFE0bxiEe2Pj61kfbEkwg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_RfFE0rxiEe2Pj61kfbEkwg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_RfFE07xiEe2Pj61kfbEkwg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_RfFE1LxiEe2Pj61kfbEkwg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_RfFE1bxiEe2Pj61kfbEkwg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_RfFE1rxiEe2Pj61kfbEkwg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_RfFE17xiEe2Pj61kfbEkwg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_RfFE2LxiEe2Pj61kfbEkwg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_ReB78LxiEe2Pj61kfbEkwg" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_ReB78bxiEe2Pj61kfbEkwg" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_ReCjALxiEe2Pj61kfbEkwg" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_ReDKEbxiEe2Pj61kfbEkwg" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_RfNAoLxiEe2Pj61kfbEkwg" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_R6OvwLxiEe2Pj61kfbEkwg" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_Rf7ZYLxiEe2Pj61kfbEkwg" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_R6ywcrxiEe2Pj61kfbEkwg" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_Rf_DwLxiEe2Pj61kfbEkwg" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_R60loLxiEe2Pj61kfbEkwg" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_R61MsbxiEe2Pj61kfbEkwg" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RizuQLxiEe2Pj61kfbEkwg" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_R7tWcLxiEe2Pj61kfbEkwg" general="_R5fI4LxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R830ELxiEe2Pj61kfbEkwg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R84bILxiEe2Pj61kfbEkwg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-PtELxiEe2Pj61kfbEkwg" name="AbstractMap" specification="_Ri1jcLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-PtEbxiEe2Pj61kfbEkwg" type="_RizuQLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Ri1jcLxiEe2Pj61kfbEkwg" name="AbstractMap" method="_R-PtELxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_Ri2KgLxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Ri2KgbxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Ri2KgrxiEe2Pj61kfbEkwg" type="_RizuQLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ri2Kg7xiEe2Pj61kfbEkwg" name="Activation">
              <generalization xmi:id="_R5l2kbxiEe2Pj61kfbEkwg" general="_RnuDcLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R84bIbxiEe2Pj61kfbEkwg" name="coordinators" type="_R5gXALxiEe2Pj61kfbEkwg" isReadOnly="true" association="_R_hfcLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R85CMbxiEe2Pj61kfbEkwg" name="edges" type="_R5gXALxiEe2Pj61kfbEkwg" isReadOnly="true" association="_R_iGgbxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R85pQbxiEe2Pj61kfbEkwg" name="additionalScheduleTimes" type="_R5gXALxiEe2Pj61kfbEkwg" isReadOnly="true" association="_R_iGhLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R86QULxiEe2Pj61kfbEkwg" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R86QUbxiEe2Pj61kfbEkwg" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_R7t9g7xiEe2Pj61kfbEkwg" client="_Ri2Kg7xiEe2Pj61kfbEkwg" supplier="_R7t9gbxiEe2Pj61kfbEkwg" contract="_R7t9gbxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-QUILxiEe2Pj61kfbEkwg" name="Activation" specification="_Ri3YoLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-QUIbxiEe2Pj61kfbEkwg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-QUIrxiEe2Pj61kfbEkwg" type="_Ri2Kg7xiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-QUI7xiEe2Pj61kfbEkwg" name="Activation" specification="_R5iMMLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-QUJLxiEe2Pj61kfbEkwg" name="elem" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-QUJbxiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-QUJrxiEe2Pj61kfbEkwg" type="_Ri2Kg7xiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-QUJ7xiEe2Pj61kfbEkwg" name="clone" specification="_Ri4mwLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-QUKLxiEe2Pj61kfbEkwg" type="_Ri2Kg7xiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-QUKbxiEe2Pj61kfbEkwg" name="getEdgesByReleaseTime" specification="_Ri5N07xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-QUKrxiEe2Pj61kfbEkwg" type="_RlTBlLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-QUK7xiEe2Pj61kfbEkwg" name="getEdgesByLatestReleaseTime" specification="_Ri504bxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-QULLxiEe2Pj61kfbEkwg" type="_RlTBlLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-QULbxiEe2Pj61kfbEkwg" name="getEdgesByPeriod" specification="_Ri7DAbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-QULrxiEe2Pj61kfbEkwg" type="_RlTBlLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-QUL7xiEe2Pj61kfbEkwg" name="getEdgesByDeadline" specification="_Ri7DA7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-QUMLxiEe2Pj61kfbEkwg" type="_RlTBlLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-QUMbxiEe2Pj61kfbEkwg" name="getEdgesByPriority" specification="_Ri8RIbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-QUMrxiEe2Pj61kfbEkwg" type="_RlTBlLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Q7MLxiEe2Pj61kfbEkwg" name="addEdges" specification="_R7vLoLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Q7MbxiEe2Pj61kfbEkwg" name="edges" type="_R5gXALxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Q7MrxiEe2Pj61kfbEkwg" name="addEdge" specification="_R5jaULxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Q7M7xiEe2Pj61kfbEkwg" name="edge" type="_RjsfELxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Q7NLxiEe2Pj61kfbEkwg" name="increaseEdgePhases" specification="_Ri84MLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Q7NbxiEe2Pj61kfbEkwg" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Q7NrxiEe2Pj61kfbEkwg" name="updatePriorityAndRelease" specification="_Ri9fQbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Q7N7xiEe2Pj61kfbEkwg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Q7OLxiEe2Pj61kfbEkwg" name="addConflict" specification="_Ri9fQ7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Q7ObxiEe2Pj61kfbEkwg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Q7OrxiEe2Pj61kfbEkwg" name="addConflicts" specification="_R7vysbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Q7O7xiEe2Pj61kfbEkwg" name="conflicts" type="_R5hlIrxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Q7PLxiEe2Pj61kfbEkwg" name="addCoordinator" specification="_Ri9fRbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Q7PbxiEe2Pj61kfbEkwg" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Q7PrxiEe2Pj61kfbEkwg" name="addCoordinators" specification="_R7wZwbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Q7P7xiEe2Pj61kfbEkwg" name="coordinators" type="_R5gXALxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Q7QLxiEe2Pj61kfbEkwg" name="addScheduleTimes" specification="_R7xA0bxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Q7QbxiEe2Pj61kfbEkwg" name="scheduleTime" type="_R5gXALxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Q7QrxiEe2Pj61kfbEkwg" name="getNextScheduleTime" specification="_Ri-GUbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Q7Q7xiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-Q7RLxiEe2Pj61kfbEkwg" type="_Rl76wLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Q7RbxiEe2Pj61kfbEkwg" name="getMatchingEndTime" specification="_Ri-tYLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Q7RrxiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-Q7R7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-RiQLxiEe2Pj61kfbEkwg" name="getNextStartTime" specification="_Ri_UcLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-RiQbxiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-RiQrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-RiQ7xiEe2Pj61kfbEkwg" name="getNextEndTime" specification="_Ri_7grxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-RiRLxiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-RiRbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-RiRrxiEe2Pj61kfbEkwg" name="getNumEdges" specification="_RjAikLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-RiR7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-RiSLxiEe2Pj61kfbEkwg" name="compareTo" specification="_R5jaU7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-RiSbxiEe2Pj61kfbEkwg" name="obj" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-RiSrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-RiS7xiEe2Pj61kfbEkwg" name="conflictExists" specification="_R5kBZLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-RiTLxiEe2Pj61kfbEkwg" name="obj" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-RiTbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-RiTrxiEe2Pj61kfbEkwg" name="canCombine" specification="_R5kBZ7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-RiT7xiEe2Pj61kfbEkwg" name="a2" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-RiULxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-RiUbxiEe2Pj61kfbEkwg" name="getDelta" specification="_RjAikrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-RiUrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-RiU7xiEe2Pj61kfbEkwg" name="getExecutionDuration" specification="_RjBwsbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-RiVLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-RiVbxiEe2Pj61kfbEkwg" name="getCombinedExecutionDuration" specification="_R5kocLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-RiVrxiEe2Pj61kfbEkwg" name="a2" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-RiV7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-SJULxiEe2Pj61kfbEkwg" name="printAll" specification="_RjBws7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-SJUbxiEe2Pj61kfbEkwg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-SJUrxiEe2Pj61kfbEkwg" name="printAll" specification="_RjCXwbxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-SJU7xiEe2Pj61kfbEkwg" name="printEdges" specification="_R5lPgbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-SJVLxiEe2Pj61kfbEkwg" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-SJVbxiEe2Pj61kfbEkwg" name="edges" type="_RlRzcLxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-SJVrxiEe2Pj61kfbEkwg" name="printEdges" specification="_R5lPhbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-SJV7xiEe2Pj61kfbEkwg" name="edges" type="_RlRzcLxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Ri3YoLxiEe2Pj61kfbEkwg" name="Activation" visibility="package" method="_R-QUILxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_Ri3YorxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Ri3Yo7xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Ri3YobxiEe2Pj61kfbEkwg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ri3YpLxiEe2Pj61kfbEkwg" type="_Ri2Kg7xiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ri4mwLxiEe2Pj61kfbEkwg" name="clone" method="_R-QUJ7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R5izQLxiEe2Pj61kfbEkwg" type="_Ri2Kg7xiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ri5N07xiEe2Pj61kfbEkwg" name="getEdgesByReleaseTime" method="_R-QUKbxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-8QoLxiEe2Pj61kfbEkwg">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_R5izQbxiEe2Pj61kfbEkwg" type="_RlTBlLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ri504bxiEe2Pj61kfbEkwg" name="getEdgesByLatestReleaseTime" method="_R-QUK7xiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-8QobxiEe2Pj61kfbEkwg">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_R5izQrxiEe2Pj61kfbEkwg" type="_RlTBlLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ri7DAbxiEe2Pj61kfbEkwg" name="getEdgesByPeriod" method="_R-QULbxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-83sLxiEe2Pj61kfbEkwg">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_R5izQ7xiEe2Pj61kfbEkwg" type="_RlTBlLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ri7DA7xiEe2Pj61kfbEkwg" name="getEdgesByDeadline" method="_R-QUL7xiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-83sbxiEe2Pj61kfbEkwg">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_R5izRLxiEe2Pj61kfbEkwg" type="_RlTBlLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ri8RIbxiEe2Pj61kfbEkwg" name="getEdgesByPriority" method="_R-QUMbxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-83srxiEe2Pj61kfbEkwg">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_R5izRbxiEe2Pj61kfbEkwg" type="_RlTBlLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ri84MLxiEe2Pj61kfbEkwg" name="increaseEdgePhases" method="_R-Q7NLxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-83s7xiEe2Pj61kfbEkwg">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ri9fQLxiEe2Pj61kfbEkwg" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ri9fQbxiEe2Pj61kfbEkwg" name="updatePriorityAndRelease" method="_R-Q7NrxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-83tLxiEe2Pj61kfbEkwg">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_Ri9fQrxiEe2Pj61kfbEkwg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ri9fQ7xiEe2Pj61kfbEkwg" name="addConflict" method="_R-Q7OLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Ri9fRLxiEe2Pj61kfbEkwg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ri9fRbxiEe2Pj61kfbEkwg" name="addCoordinator" method="_R-Q7PLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Ri-GULxiEe2Pj61kfbEkwg" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ri-GUbxiEe2Pj61kfbEkwg" name="getNextScheduleTime" method="_R-Q7QrxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-83trxiEe2Pj61kfbEkwg">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ri-GUrxiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5jaUrxiEe2Pj61kfbEkwg" type="_Rl76wLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ri-tYLxiEe2Pj61kfbEkwg" name="getMatchingEndTime" method="_R-Q7RbxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-83t7xiEe2Pj61kfbEkwg">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ri-tYbxiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ri-tYrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ri_UcLxiEe2Pj61kfbEkwg" name="getNextStartTime" method="_R-RiQLxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-83uLxiEe2Pj61kfbEkwg">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ri_7gLxiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ri_7gbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ri_7grxiEe2Pj61kfbEkwg" name="getNextEndTime" method="_R-RiQ7xiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-83ubxiEe2Pj61kfbEkwg">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ri_7g7xiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ri_7hLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjAikLxiEe2Pj61kfbEkwg" name="getNumEdges" method="_R-RiRrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RjAikbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjAikrxiEe2Pj61kfbEkwg" name="getDelta" method="_R-RiUbxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-83urxiEe2Pj61kfbEkwg">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_RjBwsLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjBwsbxiEe2Pj61kfbEkwg" name="getExecutionDuration" method="_R-RiU7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RjBwsrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjBws7xiEe2Pj61kfbEkwg" name="printAll" method="_R-SJULxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RjCXwLxiEe2Pj61kfbEkwg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjCXwbxiEe2Pj61kfbEkwg" name="printAll" method="_R-SJUrxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_R5iMMLxiEe2Pj61kfbEkwg" name="Activation" visibility="package" method="_R-QUI7xiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R5iMM7xiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R5iMNLxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R5iMMbxiEe2Pj61kfbEkwg" name="elem" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R5iMMrxiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5iMNbxiEe2Pj61kfbEkwg" type="_Ri2Kg7xiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R5jaULxiEe2Pj61kfbEkwg" name="addEdge" method="_R-Q7MrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R5jaUbxiEe2Pj61kfbEkwg" name="edge" type="_RjsfELxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R5jaU7xiEe2Pj61kfbEkwg" name="compareTo" method="_R-RiSLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R5jaVLxiEe2Pj61kfbEkwg" name="obj" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R5kBYLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R5kBZLxiEe2Pj61kfbEkwg" name="conflictExists" method="_R-RiS7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R5kBZbxiEe2Pj61kfbEkwg" name="obj" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R5kBZrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R5kBZ7xiEe2Pj61kfbEkwg" name="canCombine" method="_R-RiTrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R5kBaLxiEe2Pj61kfbEkwg" name="a2" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R5kBabxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R5kocLxiEe2Pj61kfbEkwg" name="getCombinedExecutionDuration" method="_R-RiVbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R5kocbxiEe2Pj61kfbEkwg" name="a2" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R5lPgLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R5lPgbxiEe2Pj61kfbEkwg" name="printEdges" visibility="private" method="_R-SJU7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R5lPgrxiEe2Pj61kfbEkwg" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5lPg7xiEe2Pj61kfbEkwg" name="edges" type="_RlRzcLxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R5lPhbxiEe2Pj61kfbEkwg" name="printEdges" visibility="private" method="_R-SJVrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R5lPhrxiEe2Pj61kfbEkwg" name="edges" type="_RlRzcLxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R7vLoLxiEe2Pj61kfbEkwg" name="addEdges" method="_R-Q7MLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R7vLobxiEe2Pj61kfbEkwg" name="edges" type="_R5gXALxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R7vysbxiEe2Pj61kfbEkwg" name="addConflicts" method="_R-Q7OrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R7vysrxiEe2Pj61kfbEkwg" name="conflicts" type="_R5hlIrxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R7wZwbxiEe2Pj61kfbEkwg" name="addCoordinators" method="_R-Q7PrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R7wZwrxiEe2Pj61kfbEkwg" name="coordinators" type="_R5gXALxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R7xA0bxiEe2Pj61kfbEkwg" name="addScheduleTimes" method="_R-Q7QLxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-83tbxiEe2Pj61kfbEkwg">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_R7xA0rxiEe2Pj61kfbEkwg" name="scheduleTime" type="_R5gXALxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RjJsgLxiEe2Pj61kfbEkwg" name="Activations">
              <generalization xmi:id="_R5nrwLxiEe2Pj61kfbEkwg" general="_RizuQLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R88skLxiEe2Pj61kfbEkwg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R88skbxiEe2Pj61kfbEkwg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RjK6oLxiEe2Pj61kfbEkwg" name="BasicPoset">
              <ownedComment xmi:id="_R-83u7xiEe2Pj61kfbEkwg">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_R5oS1bxiEe2Pj61kfbEkwg" general="_Rkvn8LxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-SwYLxiEe2Pj61kfbEkwg" name="BasicPoset" specification="_R5oS0LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-SwYbxiEe2Pj61kfbEkwg" name="workload" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-SwYrxiEe2Pj61kfbEkwg" type="_RjK6oLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R5oS0LxiEe2Pj61kfbEkwg" name="BasicPoset" visibility="package" method="_R-SwYLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R5oS0rxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R5oS07xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R5oS0bxiEe2Pj61kfbEkwg" name="workload" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R5oS1LxiEe2Pj61kfbEkwg" type="_RjK6oLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RjLhsLxiEe2Pj61kfbEkwg" name="ChannelAnalysis">
              <ownedComment xmi:id="_R-83vLxiEe2Pj61kfbEkwg">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R88skrxiEe2Pj61kfbEkwg" name="program" visibility="private" type="_RoNysLxiEe2Pj61kfbEkwg" association="_R_itkbxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R89TobxiEe2Pj61kfbEkwg" name="programTable" visibility="private" type="_RlG0ULxiEe2Pj61kfbEkwg" association="_R_itlLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R896sLxiEe2Pj61kfbEkwg" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-SwY7xiEe2Pj61kfbEkwg" name="ChannelAnalysis" specification="_R5o54LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-SwZLxiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-SwZbxiEe2Pj61kfbEkwg" type="_RjLhsLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>this.program = warp.toProgram();&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-SwZrxiEe2Pj61kfbEkwg" name="ChannelAnalysis" specification="_R5pg8LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-SwZ7xiEe2Pj61kfbEkwg" name="program" type="_RoNysLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-SwaLxiEe2Pj61kfbEkwg" type="_RjLhsLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-SwabxiEe2Pj61kfbEkwg" name="isChannelConflict" specification="_RjMv0LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-SwarxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RjMv0LxiEe2Pj61kfbEkwg" name="isChannelConflict" method="_R-SwabxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RjNW4LxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R5o54LxiEe2Pj61kfbEkwg" name="ChannelAnalysis" visibility="package" method="_R-SwY7xiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R5o54rxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R5o547xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R5o54bxiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R5o55LxiEe2Pj61kfbEkwg" type="_RjLhsLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R5pg8LxiEe2Pj61kfbEkwg" name="ChannelAnalysis" visibility="package" method="_R-SwZrxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R5pg8rxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R5pg87xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R5pg8bxiEe2Pj61kfbEkwg" name="program" type="_RoNysLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R5pg9LxiEe2Pj61kfbEkwg" type="_RjLhsLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RjN98LxiEe2Pj61kfbEkwg" name="ChannelVisualization">
              <ownedComment xmi:id="_R-83vbxiEe2Pj61kfbEkwg">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R5qIALxiEe2Pj61kfbEkwg" general="_RmX_oLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R8-hwLxiEe2Pj61kfbEkwg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R8-hwbxiEe2Pj61kfbEkwg" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R8-hwrxiEe2Pj61kfbEkwg" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R8_I0LxiEe2Pj61kfbEkwg" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R8_I0bxiEe2Pj61kfbEkwg" name="warp" visibility="private" type="_Rm2gwLxiEe2Pj61kfbEkwg" association="_R_jUobxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R8_I07xiEe2Pj61kfbEkwg" name="ca" visibility="private" type="_RjLhsLxiEe2Pj61kfbEkwg" association="_R_jUpLxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Swa7xiEe2Pj61kfbEkwg" name="ChannelVisualization" specification="_R5pg9bxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-SwbLxiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-SwbbxiEe2Pj61kfbEkwg" type="_RjN98LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R5pg9bxiEe2Pj61kfbEkwg" name="ChannelVisualization" visibility="package" method="_R-Swa7xiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R5pg97xiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R5pg-LxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R5pg9rxiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R5pg-bxiEe2Pj61kfbEkwg" type="_RjN98LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RjQaMLxiEe2Pj61kfbEkwg" name="Channels">
              <ownedComment xmi:id="_R-83vrxiEe2Pj61kfbEkwg">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R9AW8rxiEe2Pj61kfbEkwg" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9A-AbxiEe2Pj61kfbEkwg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9BlELxiEe2Pj61kfbEkwg" name="channelsAvailable" visibility="package" type="_R5gXALxiEe2Pj61kfbEkwg" association="_R_jUp7xiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-TXdbxiEe2Pj61kfbEkwg" name="Channels" specification="_RjS2cLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-TXdrxiEe2Pj61kfbEkwg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-TXd7xiEe2Pj61kfbEkwg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-TXeLxiEe2Pj61kfbEkwg" type="_RjQaMLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-TXebxiEe2Pj61kfbEkwg" name="getChannelSet" specification="_RjTdg7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-TXerxiEe2Pj61kfbEkwg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-TXe7xiEe2Pj61kfbEkwg" type="_R5gXArxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>/* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-TXfLxiEe2Pj61kfbEkwg" name="addNewChannelSet" specification="_RjUroLxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-TXfbxiEe2Pj61kfbEkwg" name="isEmpty" specification="_RjUrobxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-TXfrxiEe2Pj61kfbEkwg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-TXf7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-TXgLxiEe2Pj61kfbEkwg" name="removeChannel" specification="_RjUrpLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-TXgbxiEe2Pj61kfbEkwg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-TXgrxiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-TXg7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-TXhLxiEe2Pj61kfbEkwg" name="addChannel" specification="_RjVSs7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-TXhbxiEe2Pj61kfbEkwg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-TXhrxiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-TXh7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-TXiLxiEe2Pj61kfbEkwg" name="getNumChannels" specification="_RjVSt7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-TXibxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RjS2cLxiEe2Pj61kfbEkwg" name="Channels" visibility="package" method="_R-TXdbxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RjTdgLxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RjTdgbxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RjS2cbxiEe2Pj61kfbEkwg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjS2crxiEe2Pj61kfbEkwg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjTdgrxiEe2Pj61kfbEkwg" type="_RjQaMLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjTdg7xiEe2Pj61kfbEkwg" name="getChannelSet" method="_R-TXebxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RjTdhLxiEe2Pj61kfbEkwg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R7zdELxiEe2Pj61kfbEkwg" type="_R5gXArxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjUroLxiEe2Pj61kfbEkwg" name="addNewChannelSet" method="_R-TXfLxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RjUrobxiEe2Pj61kfbEkwg" name="isEmpty" method="_R-TXfbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RjUrorxiEe2Pj61kfbEkwg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjUro7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjUrpLxiEe2Pj61kfbEkwg" name="removeChannel" method="_R-TXgLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RjVSsLxiEe2Pj61kfbEkwg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjVSsbxiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjVSsrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjVSs7xiEe2Pj61kfbEkwg" name="addChannel" method="_R-TXhLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RjVStLxiEe2Pj61kfbEkwg" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjVStbxiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjVStrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjVSt7xiEe2Pj61kfbEkwg" name="getNumChannels" method="_R-TXiLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RjV5wLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_RjRBQLxiEe2Pj61kfbEkwg" name="ChannelSet" visibility="private">
                <generalization xmi:id="_R7y2ALxiEe2Pj61kfbEkwg" general="_R5gXArxiEe2Pj61kfbEkwg"/>
                <ownedAttribute xmi:id="_R9AW8LxiEe2Pj61kfbEkwg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9AW8bxiEe2Pj61kfbEkwg" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-TXcLxiEe2Pj61kfbEkwg" name="ChannelSet" specification="_RjRoULxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R-TXcbxiEe2Pj61kfbEkwg" type="_RjRBQLxiEe2Pj61kfbEkwg" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-TXcrxiEe2Pj61kfbEkwg" name="ChannelSet" specification="_RjSPYLxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R-TXc7xiEe2Pj61kfbEkwg" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_R-TXdLxiEe2Pj61kfbEkwg" type="_RjRBQLxiEe2Pj61kfbEkwg" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_RjRoULxiEe2Pj61kfbEkwg" name="ChannelSet" visibility="private" method="_R-TXcLxiEe2Pj61kfbEkwg">
                  <eAnnotations xmi:id="_RjRoUbxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_RjRoUrxiEe2Pj61kfbEkwg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_RjRoU7xiEe2Pj61kfbEkwg" type="_RjRBQLxiEe2Pj61kfbEkwg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_RjSPYLxiEe2Pj61kfbEkwg" name="ChannelSet" visibility="private" method="_R-TXcrxiEe2Pj61kfbEkwg">
                  <eAnnotations xmi:id="_RjSPYrxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_RjSPY7xiEe2Pj61kfbEkwg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_RjSPYbxiEe2Pj61kfbEkwg" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_RjSPZLxiEe2Pj61kfbEkwg" type="_RjRBQLxiEe2Pj61kfbEkwg" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RjWg0LxiEe2Pj61kfbEkwg" name="CodeFragment">
              <ownedAttribute xmi:id="_R9DaQLxiEe2Pj61kfbEkwg" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9DaQbxiEe2Pj61kfbEkwg" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9DaQrxiEe2Pj61kfbEkwg" name="edges" visibility="package" type="_R5gXALxiEe2Pj61kfbEkwg" association="_R_j7sbxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9EBUrxiEe2Pj61kfbEkwg" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9EoYbxiEe2Pj61kfbEkwg" name="codeFragment" visibility="package" type="_R5gXALxiEe2Pj61kfbEkwg" association="_R_kiwLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9FPcrxiEe2Pj61kfbEkwg" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9F2gbxiEe2Pj61kfbEkwg" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-T-gLxiEe2Pj61kfbEkwg" name="CodeFragment" specification="_RjXH4LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-T-gbxiEe2Pj61kfbEkwg" type="_RjWg0LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-T-grxiEe2Pj61kfbEkwg" name="CodeFragment" specification="_R70EILxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-T-g7xiEe2Pj61kfbEkwg" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-T-hLxiEe2Pj61kfbEkwg" name="edges" type="_R5gXALxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-T-hbxiEe2Pj61kfbEkwg" name="coordinators" type="_R5gXALxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-T-hrxiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-T-h7xiEe2Pj61kfbEkwg" type="_RjWg0LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-T-iLxiEe2Pj61kfbEkwg" name="getCoordinator" specification="_RjYWALxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-T-ibxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-T-irxiEe2Pj61kfbEkwg" name="instructions" specification="_RjYWArxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-T-i7xiEe2Pj61kfbEkwg" type="_R5gXALxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-T-jLxiEe2Pj61kfbEkwg" name="size" specification="_RjZkILxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-T-jbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-T-jrxiEe2Pj61kfbEkwg" name="generateCodeFragment" specification="_RjZkIrxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-T-j7xiEe2Pj61kfbEkwg" name="getBaseInstruction" specification="_RjZkI7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-T-kLxiEe2Pj61kfbEkwg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-T-kbxiEe2Pj61kfbEkwg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-T-krxiEe2Pj61kfbEkwg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-T-k7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-T-lLxiEe2Pj61kfbEkwg" name="push" specification="_RjZkKLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-T-lbxiEe2Pj61kfbEkwg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-T-lrxiEe2Pj61kfbEkwg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-T-l7xiEe2Pj61kfbEkwg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-T-mLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-UlkLxiEe2Pj61kfbEkwg" name="pull" specification="_RjayQLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-UlkbxiEe2Pj61kfbEkwg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-UlkrxiEe2Pj61kfbEkwg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-Ulk7xiEe2Pj61kfbEkwg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-UllLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-UllbxiEe2Pj61kfbEkwg" name="ifHas" specification="_RjayRbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-UllrxiEe2Pj61kfbEkwg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-Ull7xiEe2Pj61kfbEkwg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-UlmLxiEe2Pj61kfbEkwg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-UlmbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-UlmrxiEe2Pj61kfbEkwg" name="ifNotHas" specification="_RjbZU7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Ulm7xiEe2Pj61kfbEkwg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-UlnLxiEe2Pj61kfbEkwg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-UlnbxiEe2Pj61kfbEkwg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-UlnrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Uln7xiEe2Pj61kfbEkwg" name="wait" specification="_RjbZWLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-UloLxiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-UlobxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-UlorxiEe2Pj61kfbEkwg" name="sleep" specification="_RjcAYbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Ulo7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-UlpLxiEe2Pj61kfbEkwg" name="reportIfDifferentCoordinators" specification="_R715UbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-UlpbxiEe2Pj61kfbEkwg" name="coordinators" type="_R5gXALxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-UlprxiEe2Pj61kfbEkwg" name="multipleCoordinators" specification="_R72gYLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Ulp7xiEe2Pj61kfbEkwg" name="coordinators" type="_R5gXALxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-UlqLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RjXH4LxiEe2Pj61kfbEkwg" name="CodeFragment" visibility="package" method="_R-T-gLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RjXu8LxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RjXu8bxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_R-83v7xiEe2Pj61kfbEkwg">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_RjXu8rxiEe2Pj61kfbEkwg" type="_RjWg0LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjYWALxiEe2Pj61kfbEkwg" name="getCoordinator" method="_R-T-iLxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-83wbxiEe2Pj61kfbEkwg">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_RjYWAbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjYWArxiEe2Pj61kfbEkwg" name="instructions" method="_R-T-irxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-83wrxiEe2Pj61kfbEkwg">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_R715ULxiEe2Pj61kfbEkwg" type="_R5gXALxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjZkILxiEe2Pj61kfbEkwg" name="size" method="_R-T-jLxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-9ewLxiEe2Pj61kfbEkwg">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_RjZkIbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjZkIrxiEe2Pj61kfbEkwg" name="generateCodeFragment" visibility="private" method="_R-T-jrxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RjZkI7xiEe2Pj61kfbEkwg" name="getBaseInstruction" visibility="private" method="_R-T-j7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RjZkJLxiEe2Pj61kfbEkwg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjZkJbxiEe2Pj61kfbEkwg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjZkJrxiEe2Pj61kfbEkwg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjZkJ7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjZkKLxiEe2Pj61kfbEkwg" name="push" visibility="private" method="_R-T-lLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RjaLMLxiEe2Pj61kfbEkwg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjaLMbxiEe2Pj61kfbEkwg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjaLMrxiEe2Pj61kfbEkwg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjaLM7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjayQLxiEe2Pj61kfbEkwg" name="pull" visibility="private" method="_R-UlkLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RjayQbxiEe2Pj61kfbEkwg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjayQrxiEe2Pj61kfbEkwg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjayQ7xiEe2Pj61kfbEkwg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjayRLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjayRbxiEe2Pj61kfbEkwg" name="ifHas" visibility="private" method="_R-UllbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RjayRrxiEe2Pj61kfbEkwg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjbZULxiEe2Pj61kfbEkwg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjbZUbxiEe2Pj61kfbEkwg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjbZUrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjbZU7xiEe2Pj61kfbEkwg" name="ifNotHas" visibility="private" method="_R-UlmrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RjbZVLxiEe2Pj61kfbEkwg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjbZVbxiEe2Pj61kfbEkwg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjbZVrxiEe2Pj61kfbEkwg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjbZV7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjbZWLxiEe2Pj61kfbEkwg" name="wait" method="_R-Uln7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RjbZWbxiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjcAYLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjcAYbxiEe2Pj61kfbEkwg" name="sleep" isStatic="true" method="_R-UlorxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RjcAYrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R70EILxiEe2Pj61kfbEkwg" name="CodeFragment" visibility="package" method="_R-T-grxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R70rNLxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R70rNbxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_R-83wLxiEe2Pj61kfbEkwg">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_R70rMLxiEe2Pj61kfbEkwg" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R70rMbxiEe2Pj61kfbEkwg" name="edges" type="_R5gXALxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R70rMrxiEe2Pj61kfbEkwg" name="coordinators" type="_R5gXALxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R70rM7xiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R70rNrxiEe2Pj61kfbEkwg" type="_RjWg0LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R715UbxiEe2Pj61kfbEkwg" name="reportIfDifferentCoordinators" visibility="private" method="_R-UlpLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R715UrxiEe2Pj61kfbEkwg" name="coordinators" type="_R5gXALxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R72gYLxiEe2Pj61kfbEkwg" name="multipleCoordinators" visibility="private" method="_R-UlprxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R72gYbxiEe2Pj61kfbEkwg" name="coordinators" type="_R5gXALxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R72gYrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RjfDsLxiEe2Pj61kfbEkwg" name="CombinedActivation">
              <generalization xmi:id="_R5tyZLxiEe2Pj61kfbEkwg" general="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
              <interfaceRealization xmi:id="_R73ugLxiEe2Pj61kfbEkwg" client="_RjfDsLxiEe2Pj61kfbEkwg" supplier="_R7t9gbxiEe2Pj61kfbEkwg" contract="_R7t9gbxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-UlqbxiEe2Pj61kfbEkwg" name="CombinedActivation" specification="_RjfDsbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-UlqrxiEe2Pj61kfbEkwg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-Ulq7xiEe2Pj61kfbEkwg" type="_RjfDsLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-UlrLxiEe2Pj61kfbEkwg" name="CombinedActivation" specification="_R5skQLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-UlrbxiEe2Pj61kfbEkwg" name="elem" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-UlrrxiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-Ulr7xiEe2Pj61kfbEkwg" type="_RjfDsLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-UlsLxiEe2Pj61kfbEkwg" name="CombinedActivation" specification="_R5tLVbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-UlsbxiEe2Pj61kfbEkwg" name="priorEntry" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-UlsrxiEe2Pj61kfbEkwg" name="next" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-Uls7xiEe2Pj61kfbEkwg" type="_RjfDsLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-UltLxiEe2Pj61kfbEkwg" name="canCombine" specification="_R5tLW7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-UltbxiEe2Pj61kfbEkwg" name="a2" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-UltrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RjfDsbxiEe2Pj61kfbEkwg" name="CombinedActivation" visibility="package" method="_R-UlqbxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RjfqwbxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RjfqwrxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RjfqwLxiEe2Pj61kfbEkwg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rjfqw7xiEe2Pj61kfbEkwg" type="_RjfDsLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R5skQLxiEe2Pj61kfbEkwg" name="CombinedActivation" visibility="package" method="_R-UlrLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R5tLUrxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R5tLU7xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R5tLULxiEe2Pj61kfbEkwg" name="elem" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R5tLUbxiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5tLVLxiEe2Pj61kfbEkwg" type="_RjfDsLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R5tLVbxiEe2Pj61kfbEkwg" name="CombinedActivation" visibility="package" method="_R-UlsLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R5tLWLxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R5tLWbxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R5tLVrxiEe2Pj61kfbEkwg" name="priorEntry" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R5tLV7xiEe2Pj61kfbEkwg" name="next" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R5tLWrxiEe2Pj61kfbEkwg" type="_RjfDsLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R5tLW7xiEe2Pj61kfbEkwg" name="canCombine" method="_R-UltLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R5tLXLxiEe2Pj61kfbEkwg" name="a2" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R5tyYLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rjhf8LxiEe2Pj61kfbEkwg" name="CommunicationGraph">
              <ownedComment xmi:id="_R-9ewbxiEe2Pj61kfbEkwg">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R5vAg7xiEe2Pj61kfbEkwg" general="_RmX_oLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9ISwLxiEe2Pj61kfbEkwg" name="wfm" visibility="package" type="_Rj0a4LxiEe2Pj61kfbEkwg" association="_R_lJ0bxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9ISwrxiEe2Pj61kfbEkwg" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9I50bxiEe2Pj61kfbEkwg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9KH8LxiEe2Pj61kfbEkwg" name="workLoad" visibility="package" type="_RnLQ4LxiEe2Pj61kfbEkwg" association="_R_lJ1LxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-VMoLxiEe2Pj61kfbEkwg" name="CommunicationGraph" specification="_R5uZcLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-VMobxiEe2Pj61kfbEkwg" name="fm" type="_Rj0a4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-VMorxiEe2Pj61kfbEkwg" name="workLoad" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-VMo7xiEe2Pj61kfbEkwg" type="_Rjhf8LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-VMpLxiEe2Pj61kfbEkwg" name="CommunicationGraph" specification="_R5uZdrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-VMpbxiEe2Pj61kfbEkwg" name="fm" type="_Rj0a4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-VMprxiEe2Pj61kfbEkwg" name="workLoad" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-VMp7xiEe2Pj61kfbEkwg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-VMqLxiEe2Pj61kfbEkwg" type="_Rjhf8LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-VMqbxiEe2Pj61kfbEkwg" name="createHeader" specification="_RjiHALxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-VMqrxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-VMq7xiEe2Pj61kfbEkwg" name="createFooter" specification="_RjiuE7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-VMrLxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-VMrbxiEe2Pj61kfbEkwg" name="visualization" specification="_RjjVI7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-VMrrxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-VMr7xiEe2Pj61kfbEkwg" name="createWarpFileContent" specification="_Rjj8M7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-VMsLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RjiHALxiEe2Pj61kfbEkwg" name="createHeader" method="_R-VMqbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R5vAgLxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjiuE7xiEe2Pj61kfbEkwg" name="createFooter" method="_R-VMq7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R5vAgbxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjjVI7xiEe2Pj61kfbEkwg" name="visualization" method="_R-VMrbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R5vAgrxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rjj8M7xiEe2Pj61kfbEkwg" name="createWarpFileContent" method="_R-VMr7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Rjj8NLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R5uZcLxiEe2Pj61kfbEkwg" name="CommunicationGraph" method="_R-VMoLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R5uZc7xiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R5uZdLxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R5uZcbxiEe2Pj61kfbEkwg" name="fm" type="_Rj0a4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R5uZcrxiEe2Pj61kfbEkwg" name="workLoad" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R5uZdbxiEe2Pj61kfbEkwg" type="_Rjhf8LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R5uZdrxiEe2Pj61kfbEkwg" name="CommunicationGraph" method="_R-VMpLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R5uZerxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R5uZe7xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R5uZd7xiEe2Pj61kfbEkwg" name="fm" type="_Rj0a4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R5uZeLxiEe2Pj61kfbEkwg" name="workLoad" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R5uZebxiEe2Pj61kfbEkwg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R5uZfLxiEe2Pj61kfbEkwg" type="_Rjhf8LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RjmYcLxiEe2Pj61kfbEkwg" name="ConnectivityPoset">
              <ownedComment xmi:id="_R-9ewrxiEe2Pj61kfbEkwg">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_R5vnk7xiEe2Pj61kfbEkwg" general="_Rkvn8LxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-VzsLxiEe2Pj61kfbEkwg" name="ConnectivityPoset" specification="_R5vAhLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-VzsbxiEe2Pj61kfbEkwg" name="workload" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-VzsrxiEe2Pj61kfbEkwg" type="_RjmYcLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Vzs7xiEe2Pj61kfbEkwg" name="findCoordinator" specification="_R74VkLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-VztLxiEe2Pj61kfbEkwg" name="nodesInFlow" type="_R5gXALxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-VztbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R5vAhLxiEe2Pj61kfbEkwg" name="ConnectivityPoset" visibility="package" method="_R-VzsLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R5vnkLxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R5vnkbxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R5vAhbxiEe2Pj61kfbEkwg" name="workload" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R5vnkrxiEe2Pj61kfbEkwg" type="_RjmYcLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R74VkLxiEe2Pj61kfbEkwg" name="findCoordinator" visibility="protected" method="_R-Vzs7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R74VkbxiEe2Pj61kfbEkwg" name="nodesInFlow" type="_R5gXALxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R74VkrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RjoNoLxiEe2Pj61kfbEkwg" name="DeadlineComparator">
              <interfaceRealization xmi:id="_R75jsLxiEe2Pj61kfbEkwg" client="_RjoNoLxiEe2Pj61kfbEkwg" supplier="_R5vnlLxiEe2Pj61kfbEkwg" contract="_R5vnlLxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-VztrxiEe2Pj61kfbEkwg" name="compare" specification="_R76KwrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Vzt7xiEe2Pj61kfbEkwg" name="obj1" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-VzuLxiEe2Pj61kfbEkwg" name="obj2" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-VzubxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R76KwrxiEe2Pj61kfbEkwg" name="compare" method="_R-VztrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R76x0LxiEe2Pj61kfbEkwg" name="obj1" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R76x0bxiEe2Pj61kfbEkwg" name="obj2" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R76x0rxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RjqC0LxiEe2Pj61kfbEkwg" name="Description">
              <ownedComment xmi:id="_R-9ew7xiEe2Pj61kfbEkwg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R77Y4LxiEe2Pj61kfbEkwg" general="_R5gXALxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9KvALxiEe2Pj61kfbEkwg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9KvAbxiEe2Pj61kfbEkwg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-VzurxiEe2Pj61kfbEkwg" name="Description" specification="_RjqC0bxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-WawLxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-XB0LxiEe2Pj61kfbEkwg" name="Description" specification="_RjrQ8LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-XB0bxiEe2Pj61kfbEkwg" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-XB0rxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-XB07xiEe2Pj61kfbEkwg" name="toString" specification="_RjrQ9bxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-XB1LxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RjqC0bxiEe2Pj61kfbEkwg" name="Description" method="_R-VzurxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_Rjqp4LxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Rjqp4bxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Rjqp4rxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjrQ8LxiEe2Pj61kfbEkwg" name="Description" method="_R-XB0LxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RjrQ8rxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RjrQ87xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RjrQ8bxiEe2Pj61kfbEkwg" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjrQ9LxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjrQ9bxiEe2Pj61kfbEkwg" name="toString" method="_R-XB07xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Rjr4ALxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RjsfELxiEe2Pj61kfbEkwg" name="Edge">
              <generalization xmi:id="_R5yD1bxiEe2Pj61kfbEkwg" general="_RnuDcLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9LWELxiEe2Pj61kfbEkwg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9LWEbxiEe2Pj61kfbEkwg" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9LWErxiEe2Pj61kfbEkwg" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9LWE7xiEe2Pj61kfbEkwg" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9LWFLxiEe2Pj61kfbEkwg" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9L9ILxiEe2Pj61kfbEkwg" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9L9IbxiEe2Pj61kfbEkwg" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9L9IrxiEe2Pj61kfbEkwg" name="state" type="_RjttMLxiEe2Pj61kfbEkwg" association="_R--F0LxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9MkMLxiEe2Pj61kfbEkwg" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_R77_8bxiEe2Pj61kfbEkwg" client="_RjsfELxiEe2Pj61kfbEkwg" supplier="_R7t9gbxiEe2Pj61kfbEkwg" contract="_R7t9gbxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-XB1bxiEe2Pj61kfbEkwg" name="Edge" specification="_RjviYLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-XB1rxiEe2Pj61kfbEkwg" type="_RjsfELxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-XB17xiEe2Pj61kfbEkwg" name="Edge" specification="_RjviZLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-XB2LxiEe2Pj61kfbEkwg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-XB2bxiEe2Pj61kfbEkwg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-XB2rxiEe2Pj61kfbEkwg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-XB27xiEe2Pj61kfbEkwg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-XB3LxiEe2Pj61kfbEkwg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-XB3bxiEe2Pj61kfbEkwg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-XB3rxiEe2Pj61kfbEkwg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-XB37xiEe2Pj61kfbEkwg" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-XB4LxiEe2Pj61kfbEkwg" type="_RjsfELxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-XB4bxiEe2Pj61kfbEkwg" name="compareTo" specification="_R5xcwLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-XB4rxiEe2Pj61kfbEkwg" name="edge" type="_RjsfELxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-XB47xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-XB5LxiEe2Pj61kfbEkwg" name="toString" specification="_RjwwgLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-XB5bxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-XB5rxiEe2Pj61kfbEkwg" name="print" specification="_RjxXkLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-XB57xiEe2Pj61kfbEkwg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Xo4LxiEe2Pj61kfbEkwg" name="print" specification="_Rjx-orxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RjviYLxiEe2Pj61kfbEkwg" name="Edge" visibility="package" method="_R-XB1bxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RjviYbxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RjviYrxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RjviY7xiEe2Pj61kfbEkwg" type="_RjsfELxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjviZLxiEe2Pj61kfbEkwg" name="Edge" visibility="package" method="_R-XB17xiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RjwJeLxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RjwJebxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RjwJcLxiEe2Pj61kfbEkwg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjwJcbxiEe2Pj61kfbEkwg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjwJcrxiEe2Pj61kfbEkwg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjwJc7xiEe2Pj61kfbEkwg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjwJdLxiEe2Pj61kfbEkwg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjwJdbxiEe2Pj61kfbEkwg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjwJdrxiEe2Pj61kfbEkwg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjwJd7xiEe2Pj61kfbEkwg" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RjwJerxiEe2Pj61kfbEkwg" type="_RjsfELxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RjwwgLxiEe2Pj61kfbEkwg" name="toString" method="_R-XB5LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RjwwgbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RjxXkLxiEe2Pj61kfbEkwg" name="print" method="_R-XB5rxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RjxXkbxiEe2Pj61kfbEkwg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rjx-orxiEe2Pj61kfbEkwg" name="print" method="_R-Xo4LxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_R5xcwLxiEe2Pj61kfbEkwg" name="compareTo" method="_R-XB4bxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R5yD0LxiEe2Pj61kfbEkwg" name="edge" type="_RjsfELxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R5yD0bxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_RjttMLxiEe2Pj61kfbEkwg" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_Rju7UbxiEe2Pj61kfbEkwg" name="RELEASED"/>
                <ownedLiteral xmi:id="_Rju7UrxiEe2Pj61kfbEkwg" name="EXECUTING"/>
                <ownedLiteral xmi:id="_Rju7U7xiEe2Pj61kfbEkwg" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rj0a4LxiEe2Pj61kfbEkwg" name="FileManager">
              <ownedComment xmi:id="_R--s4bxiEe2Pj61kfbEkwg">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R9NLQLxiEe2Pj61kfbEkwg" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9NyULxiEe2Pj61kfbEkwg" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Xo4bxiEe2Pj61kfbEkwg" name="FileManager" specification="_Rj1B8LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Xo4rxiEe2Pj61kfbEkwg" type="_Rj0a4LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 verbose = false; // initialize verbose to false&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Xo47xiEe2Pj61kfbEkwg" name="FileManager" specification="_Rj1pAbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Xo5LxiEe2Pj61kfbEkwg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-Xo5bxiEe2Pj61kfbEkwg" type="_Rj0a4LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Xo5rxiEe2Pj61kfbEkwg" name="getDocumentsDirectory" specification="_Rj2QELxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Xo57xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
 String documentsDirectory;&#xD;
 if (OSValidator.isWindows()) {&#xD;
   documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
 } else if (OSValidator.isMac()) {&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;) + File.separator + &quot;Documents&quot;;&#xD;
 } else { // for all other Unix systems&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not&#xD;
                                                         // MACOS)&#xD;
 }&#xD;
 return documentsDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Xo6LxiEe2Pj61kfbEkwg" name="getCurrentDirectory" specification="_Rj2QErxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Xo6bxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Xo6rxiEe2Pj61kfbEkwg" name="createFile" specification="_Rj23ILxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Xo67xiEe2Pj61kfbEkwg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-Xo7LxiEe2Pj61kfbEkwg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-Xo7bxiEe2Pj61kfbEkwg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-Xo7rxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * we don't actually create the file...it will be created when written to this routine really&#xD;
  * just creates the file name ;-)&#xD;
  */&#xD;
 Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex); // get the file string sans the suffix&#xD;
 }&#xD;
 /*&#xD;
  * fileString has no suffix at this point (removed if it existed) Now add file name extension&#xD;
  * and suffix&#xD;
  */&#xD;
 fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Xo77xiEe2Pj61kfbEkwg" name="createFile" specification="_Rj3eMLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Xo8LxiEe2Pj61kfbEkwg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-Xo8bxiEe2Pj61kfbEkwg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-Xo8rxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex - 1); // get the file string sans the suffix&#xD;
 }&#xD;
 // fileString has no suffix at this point (removed if it existed)&#xD;
 // Now add file name extension and suffix&#xD;
 fileString = fileString + suffix;&#xD;
 // we don't actually create the file...it will be created when written to&#xD;
 // this routine really just creates the file name ;-)&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Xo87xiEe2Pj61kfbEkwg" name="createDirectory" specification="_Rj3eNLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Xo9LxiEe2Pj61kfbEkwg" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-Xo9bxiEe2Pj61kfbEkwg" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-Xo9rxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory;&#xD;
 if (subDirectory.startsWith(&quot;/&quot;)) { // check if full path provided&#xD;
   newDirectory = subDirectory; // if subDirectory is a full path, use it.&#xD;
 } else { // subDirectory has relative path, so just append&#xD;
   newDirectory = directory + File.separator + subDirectory;&#xD;
 }&#xD;
 try {&#xD;
   Path path = Paths.get(newDirectory);&#xD;
   Files.createDirectories(path);&#xD;
   if (verbose) {&#xD;
     System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
   }&#xD;
 } catch (IOException e) {&#xD;
   System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
   newDirectory = directory; // in case of error, just use the initial directory&#xD;
 }&#xD;
 return newDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Xo97xiEe2Pj61kfbEkwg" name="writeFile" specification="_Rj4FQbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Xo-LxiEe2Pj61kfbEkwg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-Xo-bxiEe2Pj61kfbEkwg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Authentication tag = new Authentication(COURSE_TAG);&#xD;
 Path fileName = Path.of(file);&#xD;
 try {&#xD;
   // Files.writeString(fileName, tag.sign(fileContents)); // uncomment to tag course file&#xD;
   Files.writeString(fileName, fileContents); // comment out if tag is being used (line above)&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Xo-rxiEe2Pj61kfbEkwg" name="readFile" specification="_Rj4sULxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Xo-7xiEe2Pj61kfbEkwg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-Xo_LxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
 Path fileName = Path.of(file);&#xD;
 String contents = null;&#xD;
 try {&#xD;
   contents = Files.readString(fileName);&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on reading file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
 return contents;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Rj1B8LxiEe2Pj61kfbEkwg" name="FileManager" method="_R-Xo4bxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_Rj1B8bxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Rj1B8rxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_R--s4rxiEe2Pj61kfbEkwg">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rj1pALxiEe2Pj61kfbEkwg" type="_Rj0a4LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rj1pAbxiEe2Pj61kfbEkwg" name="FileManager" method="_R-Xo47xiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_Rj1pA7xiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Rj1pBLxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Rj1pArxiEe2Pj61kfbEkwg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rj1pBbxiEe2Pj61kfbEkwg" type="_Rj0a4LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rj2QELxiEe2Pj61kfbEkwg" name="getDocumentsDirectory" method="_R-Xo5rxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Rj2QEbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rj2QErxiEe2Pj61kfbEkwg" name="getCurrentDirectory" method="_R-Xo6LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Rj2QE7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rj23ILxiEe2Pj61kfbEkwg" name="createFile" method="_R-Xo6rxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R--s47xiEe2Pj61kfbEkwg">
                  <body>Build the name extension used for all files created by this tool. The nameExtension will be&#xD;
   * added to the base input file name so that all of the output files can be associated with the&#xD;
   * input file The file naming pattern is: baseFileNameFileType-NonDefaultParameterList where&#xD;
   * FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray Default parameters are&#xD;
   * not identified in the NameExtension All parameters used to create the file, should be listed&#xD;
   * near the top of the file in the Parameter Section, followed by the file contents.&#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rj23IbxiEe2Pj61kfbEkwg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rj23IrxiEe2Pj61kfbEkwg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rj23I7xiEe2Pj61kfbEkwg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rj23JLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rj3eMLxiEe2Pj61kfbEkwg" name="createFile" method="_R-Xo77xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Rj3eMbxiEe2Pj61kfbEkwg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rj3eMrxiEe2Pj61kfbEkwg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rj3eM7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rj3eNLxiEe2Pj61kfbEkwg" name="createDirectory" method="_R-Xo87xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Rj3eNbxiEe2Pj61kfbEkwg" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rj3eNrxiEe2Pj61kfbEkwg" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rj4FQLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rj4FQbxiEe2Pj61kfbEkwg" name="writeFile" method="_R-Xo97xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Rj4FQrxiEe2Pj61kfbEkwg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rj4FQ7xiEe2Pj61kfbEkwg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rj4sULxiEe2Pj61kfbEkwg" name="readFile" method="_R-Xo-rxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Rj4sUbxiEe2Pj61kfbEkwg" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rj4sUrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rj5TYLxiEe2Pj61kfbEkwg" name="Flow">
              <ownedComment xmi:id="_R--s5LxiEe2Pj61kfbEkwg">
                <body>Flow is a java class in which the user creates a flow object based on the graph file provided.&#xD;
The flows, edges, link transmission and total cost are all added to separate ArrayLists which are stored and can&#xD;
be accessed if needed. Methods inside the class allow the user to manipulate certain aspects of the flow and return&#xD;
certain values.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_R54KcrxiEe2Pj61kfbEkwg" general="_RnuDcLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9PAcLxiEe2Pj61kfbEkwg" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9PAcbxiEe2Pj61kfbEkwg" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9PAcrxiEe2Pj61kfbEkwg" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9PAc7xiEe2Pj61kfbEkwg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9PAdLxiEe2Pj61kfbEkwg" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9PAdbxiEe2Pj61kfbEkwg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9PngLxiEe2Pj61kfbEkwg" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9PngbxiEe2Pj61kfbEkwg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9PngrxiEe2Pj61kfbEkwg" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9Png7xiEe2Pj61kfbEkwg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9PnhLxiEe2Pj61kfbEkwg" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9PnhbxiEe2Pj61kfbEkwg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9PnhrxiEe2Pj61kfbEkwg" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9QOkLxiEe2Pj61kfbEkwg" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9QOkrxiEe2Pj61kfbEkwg" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9Q1obxiEe2Pj61kfbEkwg" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9Q1o7xiEe2Pj61kfbEkwg" name="nodes" visibility="package" type="_R5gXALxiEe2Pj61kfbEkwg" association="_R_lw4bxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9RcsrxiEe2Pj61kfbEkwg" name="linkTxAndTotalCost" visibility="package" type="_R5gXALxiEe2Pj61kfbEkwg" association="_R_lw5LxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9SDwrxiEe2Pj61kfbEkwg" name="edges" visibility="package" type="_R5gXALxiEe2Pj61kfbEkwg" association="_R_mX8bxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9Sq0rxiEe2Pj61kfbEkwg" name="nodePredecessor" visibility="package" type="_RkhlgLxiEe2Pj61kfbEkwg" association="_R_mX9LxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9TR4bxiEe2Pj61kfbEkwg" name="edgePredecessor" visibility="package" type="_RjsfELxiEe2Pj61kfbEkwg" association="_R_mX97xiEe2Pj61kfbEkwg"/>
              <interfaceRealization xmi:id="_R791ILxiEe2Pj61kfbEkwg" client="_Rj5TYLxiEe2Pj61kfbEkwg" supplier="_R7t9gbxiEe2Pj61kfbEkwg" contract="_R7t9gbxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Xo_bxiEe2Pj61kfbEkwg" name="Flow" specification="_Rj6hgLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Xo_rxiEe2Pj61kfbEkwg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-Xo_7xiEe2Pj61kfbEkwg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-XpALxiEe2Pj61kfbEkwg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-XpAbxiEe2Pj61kfbEkwg" type="_Rj5TYLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 	this.index = index;&#xD;
     /*&#xD;
      *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
      *  on flow updated based on flow length and reliability parameters&#xD;
      */&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges  = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();	&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-XpArxiEe2Pj61kfbEkwg" name="Flow" specification="_Rj7IlrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-XpA7xiEe2Pj61kfbEkwg" type="_Rj5TYLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	this.index = DEFAULT_INDEX;&#xD;
 	/*&#xD;
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
 	 *  on flow updated based on flow length and reliability parameters&#xD;
 	 */&#xD;
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 	this.nodes = new ArrayList&lt;>();&#xD;
 	this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 	this.edges = new ArrayList&lt;>();&#xD;
 	this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-YP8LxiEe2Pj61kfbEkwg" name="getInitialPriority" specification="_Rj7voLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-YP8bxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-YP8rxiEe2Pj61kfbEkwg" name="getIndex" specification="_Rj7vorxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-YP87xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-YP9LxiEe2Pj61kfbEkwg" name="getNumTxPerLink" specification="_Rj7vpLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-YP9bxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Y3ALxiEe2Pj61kfbEkwg" name="getNodes" specification="_Rj7vprxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Y3AbxiEe2Pj61kfbEkwg" type="_R5gXALxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Y3ArxiEe2Pj61kfbEkwg" name="getEdges" specification="_Rj8WsbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Y3A7xiEe2Pj61kfbEkwg" type="_R5gXALxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Y3BLxiEe2Pj61kfbEkwg" name="addEdge" specification="_R528ULxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Y3BbxiEe2Pj61kfbEkwg" name="edge" type="_RjsfELxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Y3BrxiEe2Pj61kfbEkwg" name="addNode" specification="_R53jYLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Y3B7xiEe2Pj61kfbEkwg" name="node" type="_RkhlgLxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Y3CLxiEe2Pj61kfbEkwg" name="getLinkTxAndTotalCost" specification="_Rj9k0LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Y3CbxiEe2Pj61kfbEkwg" type="_R5gXALxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Y3CrxiEe2Pj61kfbEkwg" name="setInitialPriority" specification="_Rj-L4bxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Y3C7xiEe2Pj61kfbEkwg" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Y3DLxiEe2Pj61kfbEkwg" name="setIndex" specification="_Rj-y8LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Y3DbxiEe2Pj61kfbEkwg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Y3DrxiEe2Pj61kfbEkwg" name="setNumTxPerLink" specification="_Rj-y8rxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Y3D7xiEe2Pj61kfbEkwg" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Y3ELxiEe2Pj61kfbEkwg" name="setNodes" specification="_R7_qUbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Y3EbxiEe2Pj61kfbEkwg" name="nodes" type="_R5gXALxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Y3ErxiEe2Pj61kfbEkwg" name="setLinkTxAndTotalCost" specification="_R8A4cLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Y3E7xiEe2Pj61kfbEkwg" name="linkTxAndTotalCost" type="_R5gXALxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-Y3FLxiEe2Pj61kfbEkwg" name="compareTo" specification="_R53jYrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-Y3FbxiEe2Pj61kfbEkwg" name="flow" type="_Rj5TYLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-Y3FrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-ZeELxiEe2Pj61kfbEkwg" name="toString" specification="_Rj_aALxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-ZeEbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Rj6hgLxiEe2Pj61kfbEkwg" name="Flow" visibility="package" method="_R-Xo_bxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_Rj7Ik7xiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Rj7IlLxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_R--s5bxiEe2Pj61kfbEkwg">
                  <body>Constructor that sets name, priority, and index of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rj7IkLxiEe2Pj61kfbEkwg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rj7IkbxiEe2Pj61kfbEkwg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rj7IkrxiEe2Pj61kfbEkwg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rj7IlbxiEe2Pj61kfbEkwg" type="_Rj5TYLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rj7IlrxiEe2Pj61kfbEkwg" name="Flow" visibility="package" method="_R-XpArxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_Rj7Il7xiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Rj7ImLxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_R--s5rxiEe2Pj61kfbEkwg">
                  <body>Constructor</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rj7ImbxiEe2Pj61kfbEkwg" type="_Rj5TYLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rj7voLxiEe2Pj61kfbEkwg" name="getInitialPriority" method="_R-YP8LxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R--s57xiEe2Pj61kfbEkwg">
                  <body>Gets the initial priority of the flow.&#xD;
	 * &#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rj7vobxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rj7vorxiEe2Pj61kfbEkwg" name="getIndex" method="_R-YP8rxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-_T8LxiEe2Pj61kfbEkwg">
                  <body>Gets the index of the flow. The order in which the node was read from the &#xD;
	 * graph file.&#xD;
	 *  &#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rj7vo7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rj7vpLxiEe2Pj61kfbEkwg" name="getNumTxPerLink" method="_R-YP9LxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-_T8bxiEe2Pj61kfbEkwg">
                  <body>Gets the number of transmissions per link of the flow.&#xD;
	 * Defaulted to 1.&#xD;
	 * &#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rj7vpbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rj7vprxiEe2Pj61kfbEkwg" name="getNodes" method="_R-Y3ALxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-_T8rxiEe2Pj61kfbEkwg">
                  <body>Gets an ArrayList of nodes in the flow.&#xD;
	 * &#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_R7_DQLxiEe2Pj61kfbEkwg" type="_R5gXALxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rj8WsbxiEe2Pj61kfbEkwg" name="getEdges" method="_R-Y3ArxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-_T87xiEe2Pj61kfbEkwg">
                  <body>Gets and ArrayList of edges in the flow.&#xD;
	 * &#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_R7_DQbxiEe2Pj61kfbEkwg" type="_R5gXALxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rj9k0LxiEe2Pj61kfbEkwg" name="getLinkTxAndTotalCost" method="_R-Y3CLxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-_T9rxiEe2Pj61kfbEkwg">
                  <body>Gets the link transmission and total cost of the flow.&#xD;
	 * &#xD;
	 * @return ArrayList of link transmission and total cost values.</body>
                </ownedComment>
                <ownedParameter xmi:id="_R7_qULxiEe2Pj61kfbEkwg" type="_R5gXALxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rj-L4bxiEe2Pj61kfbEkwg" name="setInitialPriority" method="_R-Y3CrxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-_T97xiEe2Pj61kfbEkwg">
                  <body>Sets the initial priority of the flow. Default is -1.&#xD;
	 * &#xD;
	 * @param initialPriority the initial priority to be set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rj-L4rxiEe2Pj61kfbEkwg" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rj-y8LxiEe2Pj61kfbEkwg" name="setIndex" method="_R-Y3DLxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-_T-LxiEe2Pj61kfbEkwg">
                  <body>Sets the index of a node in the flow. Default is 0.&#xD;
	 * &#xD;
	 * @param index the index to be set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rj-y8bxiEe2Pj61kfbEkwg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rj-y8rxiEe2Pj61kfbEkwg" name="setNumTxPerLink" method="_R-Y3DrxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-_T-bxiEe2Pj61kfbEkwg">
                  <body>Sets the number of transmissions per link. Determined by the fault model.&#xD;
	 * &#xD;
	 * @param numTxPerLink the number of transmissions per link to be set.</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rj-y87xiEe2Pj61kfbEkwg" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rj_aALxiEe2Pj61kfbEkwg" name="toString" method="_R-ZeELxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Rj_aAbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R528ULxiEe2Pj61kfbEkwg" name="addEdge" method="_R-Y3BLxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-_T9LxiEe2Pj61kfbEkwg">
                  <body>Add an edge to the flow by first setting the edge predecessor, adding the edge, then&#xD;
	 * updating the predecessor for the next node.&#xD;
	 * &#xD;
	 * @param edge the edge to added</body>
                </ownedComment>
                <ownedParameter xmi:id="_R528UbxiEe2Pj61kfbEkwg" name="edge" type="_RjsfELxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R53jYLxiEe2Pj61kfbEkwg" name="addNode" method="_R-Y3BrxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-_T9bxiEe2Pj61kfbEkwg">
                  <body>Add a node to the flow by first setting its predecessor, adding the node, then &#xD;
	 * updating the predecessor for the next node.&#xD;
	 * &#xD;
	 * @param node the node to be added</body>
                </ownedComment>
                <ownedParameter xmi:id="_R53jYbxiEe2Pj61kfbEkwg" name="node" type="_RkhlgLxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R53jYrxiEe2Pj61kfbEkwg" name="compareTo" method="_R-Y3FLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R53jY7xiEe2Pj61kfbEkwg" name="flow" type="_Rj5TYLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R53jZLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R7_qUbxiEe2Pj61kfbEkwg" name="setNodes" method="_R-Y3ELxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-_T-rxiEe2Pj61kfbEkwg">
                  <body>Sets a list of nodes to the flow.&#xD;
	 * &#xD;
	 * @param nodes the ArrayList of nodes to be set.</body>
                </ownedComment>
                <ownedParameter xmi:id="_R7_qUrxiEe2Pj61kfbEkwg" name="nodes" type="_R5gXALxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R8A4cLxiEe2Pj61kfbEkwg" name="setLinkTxAndTotalCost" method="_R-Y3ErxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-_T-7xiEe2Pj61kfbEkwg">
                  <body>Sets a list of link transmission and total cost to the flow.&#xD;
	 * &#xD;
	 * @param linkTxAndTotalCost the ArrayList of values to set.</body>
                </ownedComment>
                <ownedParameter xmi:id="_R8A4cbxiEe2Pj61kfbEkwg" name="linkTxAndTotalCost" type="_R5gXALxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RkDrcLxiEe2Pj61kfbEkwg" name="FlowMap">
              <ownedComment xmi:id="_R-_T_LxiEe2Pj61kfbEkwg">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R55YkLxiEe2Pj61kfbEkwg" general="_RizuQLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9T48LxiEe2Pj61kfbEkwg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9T48bxiEe2Pj61kfbEkwg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RkESgLxiEe2Pj61kfbEkwg" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_R-_T_bxiEe2Pj61kfbEkwg">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R56msLxiEe2Pj61kfbEkwg" general="_RizuQLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9T48rxiEe2Pj61kfbEkwg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9T487xiEe2Pj61kfbEkwg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RkE5kLxiEe2Pj61kfbEkwg" name="GraphViz">
              <ownedComment xmi:id="_R-_T_rxiEe2Pj61kfbEkwg">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R5700bxiEe2Pj61kfbEkwg" general="_RmX_oLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9T49LxiEe2Pj61kfbEkwg" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9T49bxiEe2Pj61kfbEkwg" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9UgALxiEe2Pj61kfbEkwg" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9UgAbxiEe2Pj61kfbEkwg" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9UgArxiEe2Pj61kfbEkwg" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9UgBLxiEe2Pj61kfbEkwg" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9VHELxiEe2Pj61kfbEkwg" name="wfm" visibility="package" type="_Rj0a4LxiEe2Pj61kfbEkwg" association="_R_m_AbxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9VHErxiEe2Pj61kfbEkwg" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9VHFLxiEe2Pj61kfbEkwg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9VuIbxiEe2Pj61kfbEkwg" name="gv" visibility="package" type="_RkE5kLxiEe2Pj61kfbEkwg" association="_R_nmEbxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-ZeErxiEe2Pj61kfbEkwg" name="GraphViz" specification="_R57NwLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-ZeE7xiEe2Pj61kfbEkwg" name="wfm" type="_Rj0a4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-ZeFLxiEe2Pj61kfbEkwg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-ZeFbxiEe2Pj61kfbEkwg" type="_RkE5kLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-aFILxiEe2Pj61kfbEkwg" name="GraphViz" specification="_R57NxrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-aFIbxiEe2Pj61kfbEkwg" name="wfm" type="_Rj0a4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-aFIrxiEe2Pj61kfbEkwg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-aFI7xiEe2Pj61kfbEkwg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-aFJLxiEe2Pj61kfbEkwg" type="_RkE5kLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-aFJbxiEe2Pj61kfbEkwg" name="visualization" specification="_RkGHsLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-aFJrxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-aFJ7xiEe2Pj61kfbEkwg" name="initializeGraphVizContent" specification="_RkGuw7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-aFKLxiEe2Pj61kfbEkwg" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-aFKbxiEe2Pj61kfbEkwg" name="finalizeGraphVizContent" specification="_RkHV0LxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-aFKrxiEe2Pj61kfbEkwg" name="getGraphVizContent" specification="_RkHV0bxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-aFK7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-aFLLxiEe2Pj61kfbEkwg" name="createGraphVizContent" specification="_RkHV07xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-aFLbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-aFLrxiEe2Pj61kfbEkwg" name="addFlowToGraphViz" specification="_RkH84LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-aFL7xiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-aFMLxiEe2Pj61kfbEkwg" name="addSrcNodeToGraphViz" specification="_RkH84rxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-aFMbxiEe2Pj61kfbEkwg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-aFMrxiEe2Pj61kfbEkwg" name="addSnkNodeToGraphViz" specification="_RkIj8LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-aFM7xiEe2Pj61kfbEkwg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-aFNLxiEe2Pj61kfbEkwg" name="finalizeCurrentFlowInGraphViz" specification="_RkIj8rxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-aFNbxiEe2Pj61kfbEkwg" name="addNodeName" specification="_RkJLALxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-aFNrxiEe2Pj61kfbEkwg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-aFN7xiEe2Pj61kfbEkwg" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RkGHsLxiEe2Pj61kfbEkwg" name="visualization" method="_R-aFJbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R5700LxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RkGuw7xiEe2Pj61kfbEkwg" name="initializeGraphVizContent" method="_R-aFJ7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RkGuxLxiEe2Pj61kfbEkwg" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkHV0LxiEe2Pj61kfbEkwg" name="finalizeGraphVizContent" method="_R-aFKbxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RkHV0bxiEe2Pj61kfbEkwg" name="getGraphVizContent" method="_R-aFKrxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-_T_7xiEe2Pj61kfbEkwg">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkHV0rxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkHV07xiEe2Pj61kfbEkwg" name="createGraphVizContent" method="_R-aFLLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RkHV1LxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkH84LxiEe2Pj61kfbEkwg" name="addFlowToGraphViz" method="_R-aFLrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RkH84bxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkH84rxiEe2Pj61kfbEkwg" name="addSrcNodeToGraphViz" method="_R-aFMLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RkH847xiEe2Pj61kfbEkwg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkIj8LxiEe2Pj61kfbEkwg" name="addSnkNodeToGraphViz" method="_R-aFMrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RkIj8bxiEe2Pj61kfbEkwg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkIj8rxiEe2Pj61kfbEkwg" name="finalizeCurrentFlowInGraphViz" method="_R-aFNLxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RkJLALxiEe2Pj61kfbEkwg" name="addNodeName" visibility="private" method="_R-aFNbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RkJLAbxiEe2Pj61kfbEkwg" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkJLArxiEe2Pj61kfbEkwg" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R57NwLxiEe2Pj61kfbEkwg" name="GraphViz" visibility="package" method="_R-ZeErxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R57Nw7xiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R57NxLxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R57NwbxiEe2Pj61kfbEkwg" name="wfm" type="_Rj0a4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R57NwrxiEe2Pj61kfbEkwg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R57NxbxiEe2Pj61kfbEkwg" type="_RkE5kLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R57NxrxiEe2Pj61kfbEkwg" name="GraphViz" visibility="package" method="_R-aFILxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R57NyrxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R57Ny7xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R57Nx7xiEe2Pj61kfbEkwg" name="wfm" type="_Rj0a4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R57NyLxiEe2Pj61kfbEkwg" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R57NybxiEe2Pj61kfbEkwg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R57NzLxiEe2Pj61kfbEkwg" type="_RkE5kLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RkLnQLxiEe2Pj61kfbEkwg" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_R-_UALxiEe2Pj61kfbEkwg">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_R8CGkLxiEe2Pj61kfbEkwg" general="_R5-4IbxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9VuI7xiEe2Pj61kfbEkwg" name="gv" visibility="package" type="_RkE5kLxiEe2Pj61kfbEkwg" association="_R_nmFLxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-asMLxiEe2Pj61kfbEkwg" name="GraphVizListener" specification="_R6AtUbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-asMbxiEe2Pj61kfbEkwg" name="gv" type="_RkE5kLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-asMrxiEe2Pj61kfbEkwg" type="_RkLnQLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-asM7xiEe2Pj61kfbEkwg" name="buildGraphViz" specification="_R6BUY7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-asNLxiEe2Pj61kfbEkwg" name="gv" type="_RkE5kLxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-asNbxiEe2Pj61kfbEkwg" name="enterWarpName" specification="_R6B7cbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-asNrxiEe2Pj61kfbEkwg" name="ctx" type="_R6BUZbxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-asN7xiEe2Pj61kfbEkwg" name="exitWarp" specification="_R6DJkbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-asOLxiEe2Pj61kfbEkwg" name="ctx" type="_R6Cig7xiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-asObxiEe2Pj61kfbEkwg" name="enterFlowName" specification="_R6EXsbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-asOrxiEe2Pj61kfbEkwg" name="ctx" type="_R6Dwo7xiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-asO7xiEe2Pj61kfbEkwg" name="exitSrcNode" specification="_R6E-wrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-asPLxiEe2Pj61kfbEkwg" name="ctx" type="_R6E-wLxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-asPbxiEe2Pj61kfbEkwg" name="exitSnkNode" specification="_R6GM4LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-asPrxiEe2Pj61kfbEkwg" name="ctx" type="_R6Fl0rxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-asP7xiEe2Pj61kfbEkwg" name="exitFlow" specification="_R6Gz8rxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-asQLxiEe2Pj61kfbEkwg" name="ctx" type="_R6Gz8LxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R6AtUbxiEe2Pj61kfbEkwg" name="GraphVizListener" visibility="private" method="_R-asMLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R6BUYLxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R6BUYbxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R6AtUrxiEe2Pj61kfbEkwg" name="gv" type="_RkE5kLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6BUYrxiEe2Pj61kfbEkwg" type="_RkLnQLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6BUY7xiEe2Pj61kfbEkwg" name="buildGraphViz" isStatic="true" method="_R-asM7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6BUZLxiEe2Pj61kfbEkwg" name="gv" type="_RkE5kLxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6B7cbxiEe2Pj61kfbEkwg" name="enterWarpName" method="_R-asNbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6B7crxiEe2Pj61kfbEkwg" name="ctx" type="_R6BUZbxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6DJkbxiEe2Pj61kfbEkwg" name="exitWarp" method="_R-asN7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6DJkrxiEe2Pj61kfbEkwg" name="ctx" type="_R6Cig7xiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6EXsbxiEe2Pj61kfbEkwg" name="enterFlowName" method="_R-asObxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6EXsrxiEe2Pj61kfbEkwg" name="ctx" type="_R6Dwo7xiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6E-wrxiEe2Pj61kfbEkwg" name="exitSrcNode" method="_R-asO7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6E-w7xiEe2Pj61kfbEkwg" name="ctx" type="_R6E-wLxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6GM4LxiEe2Pj61kfbEkwg" name="exitSnkNode" method="_R-asPbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6GM4bxiEe2Pj61kfbEkwg" name="ctx" type="_R6Fl0rxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6Gz8rxiEe2Pj61kfbEkwg" name="exitFlow" method="_R-asP7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6Gz87xiEe2Pj61kfbEkwg" name="ctx" type="_R6Gz8LxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RkODgLxiEe2Pj61kfbEkwg" name="GuiVisualization">
              <ownedComment xmi:id="_R-_UAbxiEe2Pj61kfbEkwg">
                <body>GuiVisualization Class to create a Java Swing window that displays a table of data with column&#xD;
headings.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R9W8QLxiEe2Pj61kfbEkwg" name="frame" visibility="package" type="_R6IpIbxiEe2Pj61kfbEkwg" association="_R_oNIbxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9W8QrxiEe2Pj61kfbEkwg" name="jtable" visibility="package" type="_R6J3QbxiEe2Pj61kfbEkwg" association="_R_oNJLxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-bTQLxiEe2Pj61kfbEkwg" name="GuiVisualization" specification="_RkPRoLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-bTQbxiEe2Pj61kfbEkwg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-bTQrxiEe2Pj61kfbEkwg" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-bTQ7xiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-bTRLxiEe2Pj61kfbEkwg" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-bTRbxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-bTRrxiEe2Pj61kfbEkwg" type="_RkODgLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>// Frame initialization&#xD;
 frame = new JFrame();&#xD;
&#xD;
 // Frame Title&#xD;
 frame.setTitle(title);&#xD;
&#xD;
 // Initializing the JTable with input parameters&#xD;
 jtable = new JTable(table, columnNames);&#xD;
 jtable.setBounds(30, 40, 200, 300); // default size&#xD;
 // resizeColumnWidth(jtable); // uncomment to auto size column widths&#xD;
&#xD;
 // attached the table to a JScrollPane and then add both to the frame&#xD;
 JScrollPane sp = new JScrollPane(jtable); // gives table a vertical scrollbar&#xD;
 frame.add(sp);&#xD;
 // Frame Size&#xD;
 frame.setSize(500, 200);&#xD;
 jtable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); // creates horizontal scrollbar&#xD;
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
 // Frame Visible = false&#xD;
 frame.setVisible(false);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-bTR7xiEe2Pj61kfbEkwg" name="setVisible" specification="_RkP4s7xiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>frame.setVisible(true);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-bTSLxiEe2Pj61kfbEkwg" name="resizeColumnWidth" specification="_R8CtoLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-bTSbxiEe2Pj61kfbEkwg" name="table" type="_R6J3QbxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>final TableColumnModel columnModel = table.getColumnModel();&#xD;
 for (int column = 0; column &lt; table.getColumnCount(); column++) {&#xD;
   int width = 70; // Min width&#xD;
   for (int row = 0; row &lt; table.getRowCount(); row++) {&#xD;
     TableCellRenderer renderer = table.getCellRenderer(row, column);&#xD;
     Component comp = table.prepareRenderer(renderer, row, column);&#xD;
     width = Math.max(comp.getPreferredSize().width + 5, width);&#xD;
   }&#xD;
   if (width > 300)&#xD;
     width = 300;&#xD;
   columnModel.getColumn(column).setPreferredWidth(width);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RkPRoLxiEe2Pj61kfbEkwg" name="GuiVisualization" method="_R-bTQLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RkPRpLxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RkPRpbxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_R-_UArxiEe2Pj61kfbEkwg">
                  <body>Constructor to create a Java Swing Window for a table of data with column headings. The window&#xD;
   * is initially not visible, and is made visible by a call to setVisible().&#xD;
   * &#xD;
   * @param title Window title&#xD;
   * @param columnNames Column heading names&#xD;
   * @param table table of strings representing the data</body>
                </ownedComment>
                <ownedParameter xmi:id="_RkPRobxiEe2Pj61kfbEkwg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkPRorxiEe2Pj61kfbEkwg" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RkP4sLxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkPRo7xiEe2Pj61kfbEkwg" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RkP4sbxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkPRprxiEe2Pj61kfbEkwg" type="_RkODgLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RkP4s7xiEe2Pj61kfbEkwg" name="setVisible" method="_R-bTR7xiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-_UA7xiEe2Pj61kfbEkwg">
                  <body>Make the table visible.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_R8CtoLxiEe2Pj61kfbEkwg" name="resizeColumnWidth" visibility="private" method="_R-bTSLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R8DUsLxiEe2Pj61kfbEkwg" name="table" type="_R6J3QbxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RkQfwLxiEe2Pj61kfbEkwg" name="InputGraphFile">
              <ownedComment xmi:id="_R-_UBLxiEe2Pj61kfbEkwg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R9XjULxiEe2Pj61kfbEkwg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9XjUbxiEe2Pj61kfbEkwg" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9XjUrxiEe2Pj61kfbEkwg" name="wfm" visibility="private" type="_Rj0a4LxiEe2Pj61kfbEkwg" association="_R_oNJ7xiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9XjVLxiEe2Pj61kfbEkwg" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9XjVbxiEe2Pj61kfbEkwg" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9YKYbxiEe2Pj61kfbEkwg" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9YKYrxiEe2Pj61kfbEkwg" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-bTSrxiEe2Pj61kfbEkwg" name="InputGraphFile" specification="_R6M6kLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-bTS7xiEe2Pj61kfbEkwg" name="fm" type="_Rj0a4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-bTTLxiEe2Pj61kfbEkwg" type="_RkQfwLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-bTTbxiEe2Pj61kfbEkwg" name="InputGraphFile" specification="_R6M6lbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-bTTrxiEe2Pj61kfbEkwg" name="fm" type="_Rj0a4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-bTT7xiEe2Pj61kfbEkwg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-bTULxiEe2Pj61kfbEkwg" type="_RkQfwLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-bTUbxiEe2Pj61kfbEkwg" name="setGraphFileName" specification="_RkRt4LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-bTUrxiEe2Pj61kfbEkwg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-bTU7xiEe2Pj61kfbEkwg" name="verifyGraphFileName" specification="_RkSU8LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-bTVLxiEe2Pj61kfbEkwg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-bTVbxiEe2Pj61kfbEkwg" name="readGraphFile" specification="_RkSU8rxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-bTVrxiEe2Pj61kfbEkwg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-bTV7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-bTWLxiEe2Pj61kfbEkwg" name="getInputGraphFileName" specification="_RkS8ALxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-bTWbxiEe2Pj61kfbEkwg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-bTWrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-bTW7xiEe2Pj61kfbEkwg" name="readGraphFileContents" specification="_RkS8A7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-bTXLxiEe2Pj61kfbEkwg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-bTXbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-bTXrxiEe2Pj61kfbEkwg" name="printVerboseMessage" specification="_RkTjEbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-bTX7xiEe2Pj61kfbEkwg" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-bTYLxiEe2Pj61kfbEkwg" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-bTYbxiEe2Pj61kfbEkwg" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RkRt4LxiEe2Pj61kfbEkwg" name="setGraphFileName" visibility="private" method="_R-bTUbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RkRt4bxiEe2Pj61kfbEkwg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkSU8LxiEe2Pj61kfbEkwg" name="verifyGraphFileName" visibility="private" method="_R-bTU7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RkSU8bxiEe2Pj61kfbEkwg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkSU8rxiEe2Pj61kfbEkwg" name="readGraphFile" method="_R-bTVbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RkSU87xiEe2Pj61kfbEkwg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkSU9LxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkS8ALxiEe2Pj61kfbEkwg" name="getInputGraphFileName" visibility="private" method="_R-bTWLxiEe2Pj61kfbEkwg" raisedException="_R8DUsbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RkS8AbxiEe2Pj61kfbEkwg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkS8ArxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkS8A7xiEe2Pj61kfbEkwg" name="readGraphFileContents" visibility="private" method="_R-bTW7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RkS8BLxiEe2Pj61kfbEkwg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkTjELxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkTjEbxiEe2Pj61kfbEkwg" name="printVerboseMessage" visibility="private" method="_R-bTXrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RkTjErxiEe2Pj61kfbEkwg" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkTjE7xiEe2Pj61kfbEkwg" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkTjFLxiEe2Pj61kfbEkwg" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R6M6kLxiEe2Pj61kfbEkwg" name="InputGraphFile" method="_R-bTSrxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R6M6krxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R6M6k7xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R6M6kbxiEe2Pj61kfbEkwg" name="fm" type="_Rj0a4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6M6lLxiEe2Pj61kfbEkwg" type="_RkQfwLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6M6lbxiEe2Pj61kfbEkwg" name="InputGraphFile" method="_R-bTTbxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R6M6mLxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R6M6mbxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R6M6lrxiEe2Pj61kfbEkwg" name="fm" type="_Rj0a4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6M6l7xiEe2Pj61kfbEkwg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6M6mrxiEe2Pj61kfbEkwg" type="_RkQfwLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RkVYQLxiEe2Pj61kfbEkwg" name="InstructionTimeSlot">
              <generalization xmi:id="_R6NhoLxiEe2Pj61kfbEkwg" general="_RlhEALxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9YxcLxiEe2Pj61kfbEkwg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9YxcbxiEe2Pj61kfbEkwg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-bTYrxiEe2Pj61kfbEkwg" name="InstructionTimeSlot" specification="_RkV_ULxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-bTY7xiEe2Pj61kfbEkwg" type="_RkVYQLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-b6ULxiEe2Pj61kfbEkwg" name="InstructionTimeSlot" specification="_RkWmYLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-b6UbxiEe2Pj61kfbEkwg" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-b6UrxiEe2Pj61kfbEkwg" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-b6U7xiEe2Pj61kfbEkwg" type="_RkVYQLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-chYLxiEe2Pj61kfbEkwg" name="InstructionTimeSlot" specification="_RkWmZrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-chYbxiEe2Pj61kfbEkwg" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-chYrxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-chY7xiEe2Pj61kfbEkwg" type="_RkVYQLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RkV_ULxiEe2Pj61kfbEkwg" name="InstructionTimeSlot" method="_R-bTYrxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RkV_UbxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RkV_UrxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RkV_U7xiEe2Pj61kfbEkwg" type="_RkVYQLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RkWmYLxiEe2Pj61kfbEkwg" name="InstructionTimeSlot" visibility="package" method="_R-b6ULxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RkWmY7xiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RkWmZLxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RkWmYbxiEe2Pj61kfbEkwg" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkWmYrxiEe2Pj61kfbEkwg" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkWmZbxiEe2Pj61kfbEkwg" type="_RkVYQLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RkWmZrxiEe2Pj61kfbEkwg" name="InstructionTimeSlot" visibility="package" method="_R-chYLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RkXNcLxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RkXNcbxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RkWmZ7xiEe2Pj61kfbEkwg" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RkXNc7xiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkXNcrxiEe2Pj61kfbEkwg" type="_RkVYQLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RkXNdLxiEe2Pj61kfbEkwg" name="LatencyAnalysis">
              <ownedComment xmi:id="_R-_UBbxiEe2Pj61kfbEkwg">
                <body>@author sgoddard2&#xD;
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R9YxcrxiEe2Pj61kfbEkwg" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9Yxc7xiEe2Pj61kfbEkwg" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9YxdbxiEe2Pj61kfbEkwg" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9ZYgbxiEe2Pj61kfbEkwg" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9ZYgrxiEe2Pj61kfbEkwg" name="latencyReport" visibility="private" type="_RjqC0LxiEe2Pj61kfbEkwg" association="_R_o0MbxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9ZYhLxiEe2Pj61kfbEkwg" name="program" visibility="private" type="_RoNysLxiEe2Pj61kfbEkwg" association="_R_o0NLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9Z_kbxiEe2Pj61kfbEkwg" name="workload" visibility="private" type="_RnLQ4LxiEe2Pj61kfbEkwg" association="_R_pbQbxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9Z_k7xiEe2Pj61kfbEkwg" name="programTable" visibility="private" type="_RlG0ULxiEe2Pj61kfbEkwg" association="_R_pbRLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9amoLxiEe2Pj61kfbEkwg" name="nodeIndex" visibility="private" type="_R5fI4LxiEe2Pj61kfbEkwg" association="_R_qCUbxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-chZLxiEe2Pj61kfbEkwg" name="LatencyAnalysis" specification="_R6PW0LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-chZbxiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-chZrxiEe2Pj61kfbEkwg" type="_RkXNdLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = warp.toProgram();&#xD;
 this.workload = warp.toWorkload();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-chZ7xiEe2Pj61kfbEkwg" name="LatencyAnalysis" specification="_R6P94LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-chaLxiEe2Pj61kfbEkwg" name="program" type="_RoNysLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-chabxiEe2Pj61kfbEkwg" type="_RkXNdLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-charxiEe2Pj61kfbEkwg" name="latencyReport" specification="_RkYbkLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-cha7xiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>/*&#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
&#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {&#xD;
   var time = 0;&#xD;
&#xD;
   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   /* get snk of last link in the flow, which is also the Flow snk node */&#xD;
   String snk = nodes[flowSnkIndex];&#xD;
   /* get the src of last link in the flow */&#xD;
   String src = nodes[flowSnkIndex - 1];&#xD;
   /* get (column) indexes into programTable of these nodes */&#xD;
   var snkIndex = nodeIndex.get(snk);&#xD;
   var srcIndex = nodeIndex.get(src);&#xD;
   /* get the array containing the number of transmissions required for each link in the flow */&#xD;
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
   /* get the number of transmission required for the last link in the flow */&#xD;
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
   var instance = 0;&#xD;
   while (time &lt; workload.getHyperPeriod()) {&#xD;
     /* get next release time and absolute deadline of the flow */&#xD;
     var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
     // var latency = 0;&#xD;
     time = releaseTime;&#xD;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
     while (time &lt; nextReleaseTime) {&#xD;
       /* get instruction strings at these to locations */&#xD;
       String instr1 = programTable.get(time, srcIndex);&#xD;
       String instr2 = programTable.get(time, snkIndex);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
       if (numTxProcessed == numTxRequired) {&#xD;
         /*&#xD;
          * all required Tx attempts have been made compute and record latency&#xD;
          */&#xD;
         var latency = time - releaseTime + 1;&#xD;
         // report latency&#xD;
         String latencyMsg =&#xD;
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
         if (latency > deadline) {&#xD;
           /* deadline missed, so color the text red */&#xD;
           latencyMsg += DEADLINE_MISS;&#xD;
         }&#xD;
         latencyMsg += &quot;\n&quot;;&#xD;
         latencyReport.add(latencyMsg);&#xD;
         time = nextReleaseTime;&#xD;
       } else {&#xD;
         time++;&#xD;
       }&#xD;
&#xD;
     }&#xD;
     if (numTxProcessed &lt; numTxRequired) {&#xD;
       /*&#xD;
        * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
        * printed with the schedulers built&#xD;
        */&#xD;
       String latencyMsg =&#xD;
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
               flowName, instance);&#xD;
       latencyReport.add(latencyMsg);&#xD;
     }&#xD;
     instance++;&#xD;
   }&#xD;
   String flowSeparator = FLOW_SEPARATOR;&#xD;
   latencyReport.add(flowSeparator);&#xD;
 }&#xD;
 return latencyReport;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-chbLxiEe2Pj61kfbEkwg" name="numMatchingTx" specification="_RkZCoLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-chbbxiEe2Pj61kfbEkwg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-chbrxiEe2Pj61kfbEkwg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-chb7xiEe2Pj61kfbEkwg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-chcLxiEe2Pj61kfbEkwg" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-chcbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var dsl = new WarpDSL();&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RkYbkLxiEe2Pj61kfbEkwg" name="latencyReport" method="_R-charxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6P95bxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RkZCoLxiEe2Pj61kfbEkwg" name="numMatchingTx" method="_R-chbLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RkZCobxiEe2Pj61kfbEkwg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkZCorxiEe2Pj61kfbEkwg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkZCo7xiEe2Pj61kfbEkwg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkZpsLxiEe2Pj61kfbEkwg" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkZpsbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R6PW0LxiEe2Pj61kfbEkwg" name="LatencyAnalysis" visibility="package" method="_R-chZLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R6PW0rxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R6PW07xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R6PW0bxiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6PW1LxiEe2Pj61kfbEkwg" type="_RkXNdLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6P94LxiEe2Pj61kfbEkwg" name="LatencyAnalysis" visibility="package" method="_R-chZ7xiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R6P94rxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R6P947xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R6P94bxiEe2Pj61kfbEkwg" name="program" type="_RoNysLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6P95LxiEe2Pj61kfbEkwg" type="_RkXNdLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RkcF8LxiEe2Pj61kfbEkwg" name="LatencyVisualization">
              <ownedComment xmi:id="_R-_7ALxiEe2Pj61kfbEkwg">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2022 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.3&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R6RMA7xiEe2Pj61kfbEkwg" general="_RmX_oLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9bNsLxiEe2Pj61kfbEkwg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9bNsbxiEe2Pj61kfbEkwg" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9bNsrxiEe2Pj61kfbEkwg" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9bNs7xiEe2Pj61kfbEkwg" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9b0wLxiEe2Pj61kfbEkwg" name="warp" visibility="private" type="_Rm2gwLxiEe2Pj61kfbEkwg" association="_R_qCVLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9b0wrxiEe2Pj61kfbEkwg" name="la" visibility="private" type="_RkXNdLxiEe2Pj61kfbEkwg" association="_R_qpYbxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-chcrxiEe2Pj61kfbEkwg" name="LatencyVisualization" specification="_R6Qk8LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-chc7xiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-chdLxiEe2Pj61kfbEkwg" type="_RkcF8LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R6Qk8LxiEe2Pj61kfbEkwg" name="LatencyVisualization" visibility="package" method="_R-chcrxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R6RMALxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R6RMAbxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R6Qk8bxiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6RMArxiEe2Pj61kfbEkwg" type="_RkcF8LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rkd7ILxiEe2Pj61kfbEkwg" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_R8Ei0LxiEe2Pj61kfbEkwg" client="_Rkd7ILxiEe2Pj61kfbEkwg" supplier="_R5vnlLxiEe2Pj61kfbEkwg" contract="_R5vnlLxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-chdbxiEe2Pj61kfbEkwg" name="compare" specification="_R8Fw8bxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-chdrxiEe2Pj61kfbEkwg" name="obj1" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-chd7xiEe2Pj61kfbEkwg" name="obj2" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-cheLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R8Fw8bxiEe2Pj61kfbEkwg" name="compare" method="_R-chdbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R8Fw8rxiEe2Pj61kfbEkwg" name="obj1" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8Fw87xiEe2Pj61kfbEkwg" name="obj2" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8Fw9LxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RkfwULxiEe2Pj61kfbEkwg" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_R8GYA7xiEe2Pj61kfbEkwg" client="_RkfwULxiEe2Pj61kfbEkwg" supplier="_R5vnlLxiEe2Pj61kfbEkwg" contract="_R5vnlLxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-chebxiEe2Pj61kfbEkwg" name="compare" specification="_R8G_EbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-cherxiEe2Pj61kfbEkwg" name="obj1" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-che7xiEe2Pj61kfbEkwg" name="obj2" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-chfLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R8G_EbxiEe2Pj61kfbEkwg" name="compare" method="_R-chebxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R8G_ErxiEe2Pj61kfbEkwg" name="obj1" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8G_E7xiEe2Pj61kfbEkwg" name="obj2" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8HmILxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RkhlgLxiEe2Pj61kfbEkwg" name="Node">
              <generalization xmi:id="_R6UPULxiEe2Pj61kfbEkwg" general="_RnuDcLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9cb0LxiEe2Pj61kfbEkwg" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9cb0bxiEe2Pj61kfbEkwg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9cb0rxiEe2Pj61kfbEkwg" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9dC4LxiEe2Pj61kfbEkwg" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9dC4bxiEe2Pj61kfbEkwg" name="edges" type="_R5gXALxiEe2Pj61kfbEkwg" isReadOnly="true" association="_R_qpZLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9dp8LxiEe2Pj61kfbEkwg" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R9dp8bxiEe2Pj61kfbEkwg" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_R8INMLxiEe2Pj61kfbEkwg" client="_RkhlgLxiEe2Pj61kfbEkwg" supplier="_R7t9gbxiEe2Pj61kfbEkwg" contract="_R7t9gbxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-chfbxiEe2Pj61kfbEkwg" name="Node" specification="_RkizoLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-chfrxiEe2Pj61kfbEkwg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-chf7xiEe2Pj61kfbEkwg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-chgLxiEe2Pj61kfbEkwg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-chgbxiEe2Pj61kfbEkwg" type="_RkhlgLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-chgrxiEe2Pj61kfbEkwg" name="compareTo" specification="_R6TBMLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-chg7xiEe2Pj61kfbEkwg" name="node" type="_RkhlgLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-chhLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-chhbxiEe2Pj61kfbEkwg" name="toString" specification="_RkjasLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-chhrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-dIcLxiEe2Pj61kfbEkwg" name="addEdge" specification="_R6ToQ7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-dIcbxiEe2Pj61kfbEkwg" name="edge" type="_RjsfELxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-dIcrxiEe2Pj61kfbEkwg" name="addConflict" specification="_RkkBxLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-dIc7xiEe2Pj61kfbEkwg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-dIdLxiEe2Pj61kfbEkwg" name="numEdges" specification="_Rkko0LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-dIdbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-dIdrxiEe2Pj61kfbEkwg" name="print" specification="_Rkko0rxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-dId7xiEe2Pj61kfbEkwg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-dIeLxiEe2Pj61kfbEkwg" name="print" specification="_RklP4rxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RkizoLxiEe2Pj61kfbEkwg" name="Node" visibility="package" method="_R-chfbxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RkizpLxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RkizpbxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RkizobxiEe2Pj61kfbEkwg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkizorxiEe2Pj61kfbEkwg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rkizo7xiEe2Pj61kfbEkwg" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkizprxiEe2Pj61kfbEkwg" type="_RkhlgLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RkjasLxiEe2Pj61kfbEkwg" name="toString" method="_R-chhbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RkkBwLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RkkBxLxiEe2Pj61kfbEkwg" name="addConflict" method="_R-dIcrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RkkBxbxiEe2Pj61kfbEkwg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rkko0LxiEe2Pj61kfbEkwg" name="numEdges" method="_R-dIdLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Rkko0bxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rkko0rxiEe2Pj61kfbEkwg" name="print" method="_R-dIdrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Rkko07xiEe2Pj61kfbEkwg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RklP4rxiEe2Pj61kfbEkwg" name="print" method="_R-dIeLxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_R6TBMLxiEe2Pj61kfbEkwg" name="compareTo" method="_R-chgrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6TBMbxiEe2Pj61kfbEkwg" name="node" type="_RkhlgLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6TBMrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R6ToQ7xiEe2Pj61kfbEkwg" name="addEdge" method="_R-dIcLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6ToRLxiEe2Pj61kfbEkwg" name="edge" type="_RjsfELxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RknsILxiEe2Pj61kfbEkwg" name="NodeMap">
              <ownedComment xmi:id="_R-_7AbxiEe2Pj61kfbEkwg">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R6VdcLxiEe2Pj61kfbEkwg" general="_RizuQLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9eRALxiEe2Pj61kfbEkwg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9eRAbxiEe2Pj61kfbEkwg" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rko6QLxiEe2Pj61kfbEkwg" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_R-_7ArxiEe2Pj61kfbEkwg">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R6WEhLxiEe2Pj61kfbEkwg" general="_RltRQLxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-dIebxiEe2Pj61kfbEkwg" name="NonPreemptiveSchedule" specification="_R6VdcrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-dIerxiEe2Pj61kfbEkwg" name="poset" type="_Rkvn8LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-dIe7xiEe2Pj61kfbEkwg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-dIfLxiEe2Pj61kfbEkwg" type="_Rko6QLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R6VdcrxiEe2Pj61kfbEkwg" name="NonPreemptiveSchedule" visibility="package" method="_R-dIebxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R6WEgbxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R6WEgrxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R6Vdc7xiEe2Pj61kfbEkwg" name="poset" type="_Rkvn8LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6WEgLxiEe2Pj61kfbEkwg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6WEg7xiEe2Pj61kfbEkwg" type="_Rko6QLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RkqIYLxiEe2Pj61kfbEkwg" name="NotImplentedVisualization">
              <generalization xmi:id="_R6WEhrxiEe2Pj61kfbEkwg" general="_RmX_oLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9eRArxiEe2Pj61kfbEkwg" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9eRA7xiEe2Pj61kfbEkwg" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9e4ELxiEe2Pj61kfbEkwg" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9e4EbxiEe2Pj61kfbEkwg" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9e4ErxiEe2Pj61kfbEkwg" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9e4E7xiEe2Pj61kfbEkwg" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-dIfbxiEe2Pj61kfbEkwg" name="NotImplentedVisualization" specification="_RkqvcLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-dIfrxiEe2Pj61kfbEkwg" type="_RkqIYLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-dvgLxiEe2Pj61kfbEkwg" name="NotImplentedVisualization" specification="_RkrWgbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-dvgbxiEe2Pj61kfbEkwg" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-dvgrxiEe2Pj61kfbEkwg" type="_RkqIYLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-dvg7xiEe2Pj61kfbEkwg" name="visualization" specification="_RkrWhrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-dvhLxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RkqvcLxiEe2Pj61kfbEkwg" name="NotImplentedVisualization" visibility="package" method="_R-dIfbxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RkqvcbxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RkqvcrxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RkrWgLxiEe2Pj61kfbEkwg" type="_RkqIYLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RkrWgbxiEe2Pj61kfbEkwg" name="NotImplentedVisualization" visibility="package" method="_R-dvgLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RkrWg7xiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RkrWhLxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RkrWgrxiEe2Pj61kfbEkwg" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RkrWhbxiEe2Pj61kfbEkwg" type="_RkqIYLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RkrWhrxiEe2Pj61kfbEkwg" name="visualization" method="_R-dvg7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6WEhbxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RktLsLxiEe2Pj61kfbEkwg" name="PeriodComparator">
              <interfaceRealization xmi:id="_R8JbULxiEe2Pj61kfbEkwg" client="_RktLsLxiEe2Pj61kfbEkwg" supplier="_R5vnlLxiEe2Pj61kfbEkwg" contract="_R5vnlLxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-eWkLxiEe2Pj61kfbEkwg" name="compare" specification="_R8KCYLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-eWkbxiEe2Pj61kfbEkwg" name="obj1" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-eWkrxiEe2Pj61kfbEkwg" name="obj2" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-eWk7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R8KCYLxiEe2Pj61kfbEkwg" name="compare" method="_R-eWkLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R8KCYbxiEe2Pj61kfbEkwg" name="obj1" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8KpcLxiEe2Pj61kfbEkwg" name="obj2" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8KpcbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rkvn8LxiEe2Pj61kfbEkwg" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_R-_7A7xiEe2Pj61kfbEkwg">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R9e4FLxiEe2Pj61kfbEkwg" name="activations" visibility="private" type="_RjJsgLxiEe2Pj61kfbEkwg" association="_R_rQcbxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9ffIbxiEe2Pj61kfbEkwg" name="workload" visibility="private" type="_RnLQ4LxiEe2Pj61kfbEkwg" association="_R_r3gLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9gGMLxiEe2Pj61kfbEkwg" name="flows" visibility="protected" type="_Rj5TYLxiEe2Pj61kfbEkwg" association="_R_sekbxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R9gGMrxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R9gGM7xiEe2Pj61kfbEkwg" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R9gGMbxiEe2Pj61kfbEkwg" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9gtQbxiEe2Pj61kfbEkwg" name="nodes" visibility="private" type="_RkhlgLxiEe2Pj61kfbEkwg" association="_R_selLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R9gtQ7xiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R9gtRLxiEe2Pj61kfbEkwg" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R9gtQrxiEe2Pj61kfbEkwg" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9hUULxiEe2Pj61kfbEkwg" name="nodeMap" visibility="private" type="_RknsILxiEe2Pj61kfbEkwg" association="_R_tFobxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9hUUrxiEe2Pj61kfbEkwg" name="priorityQueue" visibility="private" type="_RlTBlLxiEe2Pj61kfbEkwg" association="_R_tssbxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9h7YrxiEe2Pj61kfbEkwg" name="nodeConnectivityMap" visibility="protected" type="_R5fI4LxiEe2Pj61kfbEkwg" association="_R_uTwbxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9jJgbxiEe2Pj61kfbEkwg" name="activationMap" visibility="package" type="_RkESgLxiEe2Pj61kfbEkwg" association="_R_uTxLxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-eWlLxiEe2Pj61kfbEkwg" name="Poset" specification="_R6X5sbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-eWlbxiEe2Pj61kfbEkwg" name="workload" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-eWlrxiEe2Pj61kfbEkwg" type="_Rkvn8LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-eWl7xiEe2Pj61kfbEkwg" name="getNodeConnectivity" specification="_RkxdILxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-eWmLxiEe2Pj61kfbEkwg" type="_R5fI4LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-eWmbxiEe2Pj61kfbEkwg" name="getNodeNames" specification="_RkzSUbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-eWmrxiEe2Pj61kfbEkwg" type="_R5gXALxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-eWm7xiEe2Pj61kfbEkwg" name="getNodesNamesOrderedAlphabetically" specification="_Rkz5YLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-eWnLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-eWnbxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-eWnrxiEe2Pj61kfbEkwg" name="buildPosetOfActivations" specification="_Rk0gcbxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-eWn7xiEe2Pj61kfbEkwg" name="createEdgeLists" specification="_Rk0gcrxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-eWoLxiEe2Pj61kfbEkwg" name="createConflictLists" specification="_Rk1ukLxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-eWobxiEe2Pj61kfbEkwg" name="createGlobalConflictLists" specification="_Rk1ukbxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-eWorxiEe2Pj61kfbEkwg" name="createLocalConflictLists" specification="_Rk1ukrxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-eWo7xiEe2Pj61kfbEkwg" name="findCoordinator" specification="_R8L3kbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-eWpLxiEe2Pj61kfbEkwg" name="nodesInFlow" type="_R5gXALxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-eWpbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-eWprxiEe2Pj61kfbEkwg" name="buildTxArray" specification="_R8NFsLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-eWp7xiEe2Pj61kfbEkwg" name="nodesInFlow" type="_R5gXALxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-eWqLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-eWqbxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-e9oLxiEe2Pj61kfbEkwg" name="createInitialActivations" specification="_Rk2VoLxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-e9obxiEe2Pj61kfbEkwg" name="getMaxTx" specification="_R6YgwLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-e9orxiEe2Pj61kfbEkwg" name="node" type="_RkhlgLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-e9o7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-e9pLxiEe2Pj61kfbEkwg" name="getActivation" specification="_R6ZH0LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-e9pbxiEe2Pj61kfbEkwg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-e9prxiEe2Pj61kfbEkwg" name="node" type="_RkhlgLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-e9p7xiEe2Pj61kfbEkwg" type="_Ri2Kg7xiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-e9qLxiEe2Pj61kfbEkwg" name="getHyperPeriod" specification="_Rk28sLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-e9qbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-e9qrxiEe2Pj61kfbEkwg" name="getMaxPhase" specification="_Rk28srxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-e9q7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-e9rLxiEe2Pj61kfbEkwg" name="orderActivations" specification="_Rk3jwbxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-e9rbxiEe2Pj61kfbEkwg" name="getNextActivation" specification="_Rk3jwrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-e9rrxiEe2Pj61kfbEkwg" type="_Ri2Kg7xiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-e9r7xiEe2Pj61kfbEkwg" name="addActivation" specification="_R6ZH1bxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-e9sLxiEe2Pj61kfbEkwg" name="activation" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-e9sbxiEe2Pj61kfbEkwg" name="findBaseStation" specification="_Rk4x4LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-e9srxiEe2Pj61kfbEkwg" type="_RkhlgLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RkxdILxiEe2Pj61kfbEkwg" name="getNodeConnectivity" visibility="private" method="_R-eWl7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R8LQgLxiEe2Pj61kfbEkwg" type="_R5fI4LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RkzSUbxiEe2Pj61kfbEkwg" name="getNodeNames" method="_R-eWmbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R8L3kLxiEe2Pj61kfbEkwg" type="_R5gXALxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rkz5YLxiEe2Pj61kfbEkwg" name="getNodesNamesOrderedAlphabetically" method="_R-eWm7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Rkz5YbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rkz5YrxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rk0gcbxiEe2Pj61kfbEkwg" name="buildPosetOfActivations" method="_R-eWnrxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_Rk0gcrxiEe2Pj61kfbEkwg" name="createEdgeLists" visibility="private" method="_R-eWn7xiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_Rk1ukLxiEe2Pj61kfbEkwg" name="createConflictLists" visibility="private" method="_R-eWoLxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_Rk1ukbxiEe2Pj61kfbEkwg" name="createGlobalConflictLists" visibility="private" method="_R-eWobxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_Rk1ukrxiEe2Pj61kfbEkwg" name="createLocalConflictLists" visibility="private" method="_R-eWorxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_Rk2VoLxiEe2Pj61kfbEkwg" name="createInitialActivations" visibility="private" method="_R-e9oLxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_Rk28sLxiEe2Pj61kfbEkwg" name="getHyperPeriod" method="_R-e9qLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Rk28sbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rk28srxiEe2Pj61kfbEkwg" name="getMaxPhase" method="_R-e9qrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Rk3jwLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rk3jwbxiEe2Pj61kfbEkwg" name="orderActivations" method="_R-e9rLxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_Rk3jwrxiEe2Pj61kfbEkwg" name="getNextActivation" method="_R-e9rbxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-_7BrxiEe2Pj61kfbEkwg">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_R6ZH1LxiEe2Pj61kfbEkwg" type="_Ri2Kg7xiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rk4x4LxiEe2Pj61kfbEkwg" name="findBaseStation" visibility="protected" method="_R-e9sbxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-_7CLxiEe2Pj61kfbEkwg">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_R6ZH17xiEe2Pj61kfbEkwg" type="_RkhlgLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6X5sbxiEe2Pj61kfbEkwg" name="Poset" visibility="package" method="_R-eWlLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R6X5s7xiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R6X5tLxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_R-_7BLxiEe2Pj61kfbEkwg">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_R6X5srxiEe2Pj61kfbEkwg" name="workload" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6X5tbxiEe2Pj61kfbEkwg" type="_Rkvn8LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6YgwLxiEe2Pj61kfbEkwg" name="getMaxTx" visibility="private" method="_R-e9obxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6YgwbxiEe2Pj61kfbEkwg" name="node" type="_RkhlgLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6YgwrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R6ZH0LxiEe2Pj61kfbEkwg" name="getActivation" visibility="private" method="_R-e9pLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6ZH0bxiEe2Pj61kfbEkwg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6ZH0rxiEe2Pj61kfbEkwg" name="node" type="_RkhlgLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6ZH07xiEe2Pj61kfbEkwg" type="_Ri2Kg7xiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6ZH1bxiEe2Pj61kfbEkwg" name="addActivation" method="_R-e9r7xiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-_7B7xiEe2Pj61kfbEkwg">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_R6ZH1rxiEe2Pj61kfbEkwg" name="activation" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R8L3kbxiEe2Pj61kfbEkwg" name="findCoordinator" visibility="protected" method="_R-eWo7xiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R-_7BbxiEe2Pj61kfbEkwg">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_R8L3krxiEe2Pj61kfbEkwg" name="nodesInFlow" type="_R5gXALxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8L3k7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R8NFsLxiEe2Pj61kfbEkwg" name="buildTxArray" visibility="private" method="_R-eWprxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R8NFsbxiEe2Pj61kfbEkwg" name="nodesInFlow" type="_R5gXALxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8NFsrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R8NFs7xiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rk-RcLxiEe2Pj61kfbEkwg" name="PreemptiveSchedule">
              <ownedComment xmi:id="_R-_7CbxiEe2Pj61kfbEkwg">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R6eAVrxiEe2Pj61kfbEkwg" general="_RltRQLxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-e9s7xiEe2Pj61kfbEkwg" name="PreemptiveSchedule" specification="_R6aV8LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-e9tLxiEe2Pj61kfbEkwg" name="poset" type="_Rkvn8LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-e9tbxiEe2Pj61kfbEkwg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-e9trxiEe2Pj61kfbEkwg" type="_Rk-RcLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-fksLxiEe2Pj61kfbEkwg" name="continueSearch" specification="_R6a9BbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-fksbxiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-fksrxiEe2Pj61kfbEkwg" name="activation" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-fks7xiEe2Pj61kfbEkwg" type="_R8O64LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-fktLxiEe2Pj61kfbEkwg" name="toProgram" specification="_Rk_fkLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-fktbxiEe2Pj61kfbEkwg" type="_RlG0ULxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-fktrxiEe2Pj61kfbEkwg" name="findPreeptiveChannelAndTime" specification="_R6bkFLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-fkt7xiEe2Pj61kfbEkwg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-fkuLxiEe2Pj61kfbEkwg" name="schedulableObject" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-fkubxiEe2Pj61kfbEkwg" type="_R8O64LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-fkurxiEe2Pj61kfbEkwg" name="findAdditionalTime" specification="_R6cLIrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-fku7xiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-fkvLxiEe2Pj61kfbEkwg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-fkvbxiEe2Pj61kfbEkwg" name="a1" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-fkvrxiEe2Pj61kfbEkwg" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-fkv7xiEe2Pj61kfbEkwg" type="_R5gXALxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-fkwLxiEe2Pj61kfbEkwg" name="findMaxTimeAvailable" specification="_R6cyMbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-fkwbxiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-fkwrxiEe2Pj61kfbEkwg" name="schedulableObject" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-fkw7xiEe2Pj61kfbEkwg" type="_R8O64LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-fkxLxiEe2Pj61kfbEkwg" name="availableTime" specification="_R6dZQLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-fkxbxiEe2Pj61kfbEkwg" name="a1" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-fkxrxiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-fkx7xiEe2Pj61kfbEkwg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-fkyLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-fkybxiEe2Pj61kfbEkwg" name="addToSchedule" specification="_R6dZRbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-fkyrxiEe2Pj61kfbEkwg" name="next" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-fky7xiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-fkzLxiEe2Pj61kfbEkwg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-fkzbxiEe2Pj61kfbEkwg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-fkzrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-fkz7xiEe2Pj61kfbEkwg" name="addToSchedule" specification="_R6eAULxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-fk0LxiEe2Pj61kfbEkwg" name="next" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-fk0bxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Rk_fkLxiEe2Pj61kfbEkwg" name="toProgram" method="_R-fktLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6bkE7xiEe2Pj61kfbEkwg" type="_RlG0ULxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6aV8LxiEe2Pj61kfbEkwg" name="PreemptiveSchedule" visibility="package" method="_R-e9s7xiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R6a9ArxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R6a9A7xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R6a9ALxiEe2Pj61kfbEkwg" name="poset" type="_Rkvn8LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6a9AbxiEe2Pj61kfbEkwg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6a9BLxiEe2Pj61kfbEkwg" type="_Rk-RcLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6a9BbxiEe2Pj61kfbEkwg" name="continueSearch" visibility="protected" method="_R-fksLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6a9BrxiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6a9B7xiEe2Pj61kfbEkwg" name="activation" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8O64rxiEe2Pj61kfbEkwg" type="_R8O64LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6bkFLxiEe2Pj61kfbEkwg" name="findPreeptiveChannelAndTime" visibility="private" method="_R-fktrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6cLILxiEe2Pj61kfbEkwg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6cLIbxiEe2Pj61kfbEkwg" name="schedulableObject" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8Ph8LxiEe2Pj61kfbEkwg" type="_R8O64LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6cLIrxiEe2Pj61kfbEkwg" name="findAdditionalTime" visibility="private" method="_R-fkurxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6cLI7xiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6cLJLxiEe2Pj61kfbEkwg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6cLJbxiEe2Pj61kfbEkwg" name="a1" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6cLJrxiEe2Pj61kfbEkwg" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R8Ph8bxiEe2Pj61kfbEkwg" type="_R5gXALxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6cyMbxiEe2Pj61kfbEkwg" name="findMaxTimeAvailable" visibility="private" method="_R-fkwLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6cyMrxiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6cyM7xiEe2Pj61kfbEkwg" name="schedulableObject" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8Ph8rxiEe2Pj61kfbEkwg" type="_R8O64LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6dZQLxiEe2Pj61kfbEkwg" name="availableTime" visibility="private" method="_R-fkxLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6dZQbxiEe2Pj61kfbEkwg" name="a1" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6dZQrxiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6dZQ7xiEe2Pj61kfbEkwg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6dZRLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R6dZRbxiEe2Pj61kfbEkwg" name="addToSchedule" visibility="private" method="_R-fkybxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6dZRrxiEe2Pj61kfbEkwg" name="next" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6dZR7xiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6dZSLxiEe2Pj61kfbEkwg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6dZSbxiEe2Pj61kfbEkwg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6dZSrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R6eAULxiEe2Pj61kfbEkwg" name="addToSchedule" visibility="protected" method="_R-fkz7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6eAUbxiEe2Pj61kfbEkwg" name="next" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6eAUrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RlEYELxiEe2Pj61kfbEkwg" name="PriorityComparator">
              <interfaceRealization xmi:id="_R8Ph87xiEe2Pj61kfbEkwg" client="_RlEYELxiEe2Pj61kfbEkwg" supplier="_R5vnlLxiEe2Pj61kfbEkwg" contract="_R5vnlLxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-gLwLxiEe2Pj61kfbEkwg" name="compare" specification="_R8QwELxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-gLwbxiEe2Pj61kfbEkwg" name="obj1" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-gLwrxiEe2Pj61kfbEkwg" name="obj2" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-gLw7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R8QwELxiEe2Pj61kfbEkwg" name="compare" method="_R-gLwLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R8QwEbxiEe2Pj61kfbEkwg" name="obj1" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8QwErxiEe2Pj61kfbEkwg" name="obj2" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8QwE7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RlG0ULxiEe2Pj61kfbEkwg" name="ProgramSchedule">
              <generalization xmi:id="_R6fOcLxiEe2Pj61kfbEkwg" general="_RmGS0LxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9kXoLxiEe2Pj61kfbEkwg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9kXobxiEe2Pj61kfbEkwg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-gLxLxiEe2Pj61kfbEkwg" name="ProgramSchedule" specification="_RlHbYLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-gLxbxiEe2Pj61kfbEkwg" type="_RlG0ULxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-gLxrxiEe2Pj61kfbEkwg" name="ProgramSchedule" specification="_RlICcLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-gLx7xiEe2Pj61kfbEkwg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-gLyLxiEe2Pj61kfbEkwg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-gLybxiEe2Pj61kfbEkwg" type="_RlG0ULxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RlHbYLxiEe2Pj61kfbEkwg" name="ProgramSchedule" method="_R-gLxLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RlHbYbxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RlHbYrxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RlHbY7xiEe2Pj61kfbEkwg" type="_RlG0ULxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RlICcLxiEe2Pj61kfbEkwg" name="ProgramSchedule" visibility="package" method="_R-gLxrxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RlICc7xiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RlICdLxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RlICcbxiEe2Pj61kfbEkwg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RlICcrxiEe2Pj61kfbEkwg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RlICdbxiEe2Pj61kfbEkwg" type="_RlG0ULxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RlIpgLxiEe2Pj61kfbEkwg" name="ProgramVisualization">
              <ownedComment xmi:id="_R_AiELxiEe2Pj61kfbEkwg">
                <body>Allows the user to generate a GUI to visualize WARP data given by .dsl files.&#xD;
If applicable, the GUI will contain minimum packet reception rate, End-to-End transmission reliability, &#xD;
and number of channels.&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R6gckbxiEe2Pj61kfbEkwg" general="_RmX_oLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9k-sLxiEe2Pj61kfbEkwg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9k-sbxiEe2Pj61kfbEkwg" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9k-srxiEe2Pj61kfbEkwg" name="sourceCode" visibility="private" type="_RlG0ULxiEe2Pj61kfbEkwg" association="_R_u60bxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9llwLxiEe2Pj61kfbEkwg" name="program" visibility="private" type="_RoNysLxiEe2Pj61kfbEkwg" association="_R_vh4bxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9llwrxiEe2Pj61kfbEkwg" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-gLyrxiEe2Pj61kfbEkwg" name="ProgramVisualization" specification="_R6f1gLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-gLy7xiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-gLzLxiEe2Pj61kfbEkwg" type="_RlIpgLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-gLzbxiEe2Pj61kfbEkwg" name="displayVisualization" specification="_RlJ3oLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-gLzrxiEe2Pj61kfbEkwg" type="_RkODgLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-gLz7xiEe2Pj61kfbEkwg" name="createHeader" specification="_RlLFwLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-gL0LxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(createTitle());&#xD;
 header.add(String.format(&quot;Scheduler Name: %s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumFaults() > 0) { // only specify when deterministic fault model is assumed&#xD;
   header.add(String.format(&quot;numFaults: %d\n&quot;, program.getNumFaults()));&#xD;
 }&#xD;
 header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
 header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(program.getE2e())));&#xD;
 header.add(String.format(&quot;nChannels: %d\n&quot;, program.getNumChannels()));&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-gL0bxiEe2Pj61kfbEkwg" name="createFooter" specification="_RlLs0rxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-gL0rxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-gL07xiEe2Pj61kfbEkwg" name="createColumnHeader" specification="_RlMT47xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-gL1LxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-gL1bxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
 String[] columnNames = new String[orderedNodes.length + 1];&#xD;
 columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first&#xD;
 /* loop through the node names, adding each to the header */&#xD;
 for (int i = 0; i &lt; orderedNodes.length; i++) {&#xD;
   columnNames[i + 1] = orderedNodes[i];&#xD;
 }&#xD;
 return columnNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-gy0LxiEe2Pj61kfbEkwg" name="createVisualizationData" specification="_RlM69rxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-gy0bxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-gy0rxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
   int numRows = sourceCode.getNumRows();&#xD;
   int numColumns = sourceCode.getNumColumns();&#xD;
   visualizationData = new String[numRows][numColumns + 1];&#xD;
&#xD;
   for (int row = 0; row &lt; numRows; row++) {&#xD;
     visualizationData[row][0] = String.format(&quot;%s&quot;, row);&#xD;
     for (int column = 0; column &lt; numColumns; column++) {&#xD;
       visualizationData[row][column + 1] = sourceCode.get(row, column);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return visualizationData;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-gy07xiEe2Pj61kfbEkwg" name="createTitle" specification="_RlOJEbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-gy1LxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;WARP program for graph %s\n&quot;, program.getName());&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RlJ3oLxiEe2Pj61kfbEkwg" name="displayVisualization" method="_R-gLzbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6f1hbxiEe2Pj61kfbEkwg" type="_RkODgLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RlLFwLxiEe2Pj61kfbEkwg" name="createHeader" visibility="protected" method="_R-gLz7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6f1hrxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RlLs0rxiEe2Pj61kfbEkwg" name="createFooter" visibility="protected" method="_R-gL0bxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6gckLxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RlMT47xiEe2Pj61kfbEkwg" name="createColumnHeader" visibility="protected" method="_R-gL07xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RlM68LxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RlM68bxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RlM69rxiEe2Pj61kfbEkwg" name="createVisualizationData" visibility="protected" method="_R-gy0LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RlNiALxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RlNiAbxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RlOJEbxiEe2Pj61kfbEkwg" name="createTitle" visibility="private" method="_R-gy07xiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_BJILxiEe2Pj61kfbEkwg">
                  <body>Creates a title for the GUI using the name from the program.&#xD;
   * &#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_RlOJErxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R6f1gLxiEe2Pj61kfbEkwg" name="ProgramVisualization" visibility="package" method="_R-gLyrxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R6f1grxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R6f1g7xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_R_AiEbxiEe2Pj61kfbEkwg">
                  <body>Constructor for new ProgramVisualization. Used WARP file as input changes it to&#xD;
   * a program and gets the schedule and deadlines met.&#xD;
   * &#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_R6f1gbxiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6f1hLxiEe2Pj61kfbEkwg" type="_RlIpgLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RlP-QLxiEe2Pj61kfbEkwg" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_R8R-MLxiEe2Pj61kfbEkwg" client="_RlP-QLxiEe2Pj61kfbEkwg" supplier="_R5vnlLxiEe2Pj61kfbEkwg" contract="_R5vnlLxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-gy1bxiEe2Pj61kfbEkwg" name="compare" specification="_R8R-MrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-gy1rxiEe2Pj61kfbEkwg" name="obj1" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-gy17xiEe2Pj61kfbEkwg" name="obj2" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-gy2LxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R8R-MrxiEe2Pj61kfbEkwg" name="compare" method="_R-gy1bxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R8R-M7xiEe2Pj61kfbEkwg" name="obj1" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8R-NLxiEe2Pj61kfbEkwg" name="obj2" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8SlQLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RlRzcLxiEe2Pj61kfbEkwg" name="ReleaseTimeQueue">
              <generalization xmi:id="_RlUPsbxiEe2Pj61kfbEkwg" general="_RlTBlLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9mM0LxiEe2Pj61kfbEkwg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9mM0bxiEe2Pj61kfbEkwg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-gy2bxiEe2Pj61kfbEkwg" name="ReleaseTimeQueue" specification="_RlTBkLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-gy2rxiEe2Pj61kfbEkwg" type="_RlRzcLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-gy27xiEe2Pj61kfbEkwg" name="ReleaseTimeQueue" specification="_R6hDoLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-gy3LxiEe2Pj61kfbEkwg" name="schedulableObjects" type="_R6WrkLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-gy3bxiEe2Pj61kfbEkwg" type="_RlRzcLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RlTBkLxiEe2Pj61kfbEkwg" name="ReleaseTimeQueue" visibility="package" method="_R-gy2bxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RlTBkbxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RlTBkrxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RlTBk7xiEe2Pj61kfbEkwg" type="_RlRzcLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6hDoLxiEe2Pj61kfbEkwg" name="ReleaseTimeQueue" visibility="package" method="_R-gy27xiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R6hDorxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R6hDo7xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R6hDobxiEe2Pj61kfbEkwg" name="schedulableObjects" type="_R6WrkLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6hDpLxiEe2Pj61kfbEkwg" type="_RlRzcLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RlU2wLxiEe2Pj61kfbEkwg" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_VMWTI8qMEe2Q06zi9Lxc2Q">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages&#xD;
transmitted in flows for the WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The&#xD;
end-to-end reliability for each flow, flow:src->sink, is computed iteratively&#xD;
as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released.&#xD;
All other initial probabilities are 0.0. (That is, the reset of the nodes in&#xD;
the flow have an initial probability value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState =&#xD;
(1-M)*PrevSnkNodeState + M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by&#xD;
the node SinkNode. Thus, the NewSinkNodeState probability will increase each&#xD;
time a push or pull is executed with SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the&#xD;
message reaching that node, and the end-to-end reliability of a flow is the&#xD;
value of the last Flow:SinkNode probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to compute the probabilities&#xD;
the comprise the ReliablityMatrix, which is the core of the file&#xD;
visualization that is requested in Warp.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the&#xD;
instructions for each node, in each time slot, to extract the src and snk&#xD;
nodes in the instruction and then apply the message success probability&#xD;
equation defined above.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to&#xD;
extract the src and snk nodes from the instruction string in a program&#xD;
schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_xfCuoMjJEe2Q06zi9Lxc2Q" name="e2e" visibility="private" type="_R8TMULxiEe2Pj61kfbEkwg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_xfDVsMjJEe2Q06zi9Lxc2Q" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_xfD8wMjJEe2Q06zi9Lxc2Q" name="minPacketReceptionRate" visibility="private" type="_R8TMULxiEe2Pj61kfbEkwg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_xfD8wcjJEe2Q06zi9Lxc2Q" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_xfEj0cjJEe2Q06zi9Lxc2Q" name="numFaults" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_xfEj0sjJEe2Q06zi9Lxc2Q" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_xfFK4MjJEe2Q06zi9Lxc2Q" name="program" visibility="private" type="_RoNysLxiEe2Pj61kfbEkwg" association="_xfKDYMjJEe2Q06zi9Lxc2Q">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_xfFK4cjJEe2Q06zi9Lxc2Q" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_EyiTcMqJEe2Q06zi9Lxc2Q" name="E2E_M_CONSTRUCTOR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_EyiTccqJEe2Q06zi9Lxc2Q" value="&quot;E2E_M_CONSTRUCTOR&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Eyi6gMqJEe2Q06zi9Lxc2Q" name="NUM_FAULTS_CONSTRUCTOR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Eyi6gcqJEe2Q06zi9Lxc2Q" value="&quot;NUM_FAULTS_CONSTRUCTOR&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Eyi6gsqJEe2Q06zi9Lxc2Q" name="constructorUsed" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Eyi6g8qJEe2Q06zi9Lxc2Q" value="null"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-hZ4LxiEe2Pj61kfbEkwg" name="verifyReliabilities" specification="_RlVd0LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-hZ4bxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xfGZAMjJEe2Q06zi9Lxc2Q" name="numTxAttemptsPerLinkAndTotalTxAttempts" specification="_xe-dMMjJEe2Q06zi9Lxc2Q">
                <ownedParameter xmi:id="_xfGZAcjJEe2Q06zi9Lxc2Q" name="flow" type="_Rj5TYLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_xfGZAsjJEe2Q06zi9Lxc2Q" name="e2e" type="_R8TMULxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_xfGZA8jJEe2Q06zi9Lxc2Q" name="M" type="_R8TMULxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_xfGZBMjJEe2Q06zi9Lxc2Q" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_xfGZBcjJEe2Q06zi9Lxc2Q" type="_R5gXALxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
		    var nNodesInFlow = nodesInFlow.size(); // The last entry will contain the worst-case cost of&#xD;
		                                           // transmitting E2E in isolation&#xD;
		    // ArrayList&lt;Integer> nPushes = Array(repeating: 0, count: nNodesInFlow+1);&#xD;
		    ArrayList&lt;Integer> nPushes = new ArrayList&lt;Integer>();// Array to track nPushes for each node in this&#xD;
		    for (int i = 0; i &lt; nNodesInFlow + 1; i++) {&#xD;
		    	// initialize to all 0 values&#xD;
		    	nPushes.add(0);    }&#xD;
		                                                 // flow (same as nTx per link)&#xD;
		    &#xD;
		    var nHops = nNodesInFlow - 1;&#xD;
		    // minLinkReliablityNeded is the minimum reliability needed per link in a flow to hit E2E&#xD;
		    // reliability for the flow&#xD;
		    Double minLinkReliablityNeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops))); // use max&#xD;
		                                                                                          // to&#xD;
		                                                                                          // handle&#xD;
		                                                                                          // rounding&#xD;
		                                                                                          // error&#xD;
		                                                                                          // when&#xD;
		                                                                                          // e2e ==&#xD;
		                                                                                          // 1.0&#xD;
		    // Now compute reliability of packet reaching each node in the given time slot&#xD;
		    // Start with a 2-D reliability window that is a 2-D matrix of no size&#xD;
		    // each row is a time slot, stating at time 0&#xD;
		    // each column represents the reliability of the packet reaching that node at the&#xD;
		    // current time slot (i.e., the row it is in)&#xD;
		    // will add rows as we compute reliabilities until the final reliability is reached&#xD;
		    // for all nodes.&#xD;
		   ReliabilityTable reliabilityWindow = new ReliabilityTable();&#xD;
		   ReliabilityRow newReliabilityRow = new ReliabilityRow();&#xD;
		    for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
		      newReliabilityRow.add(0.0); // create the the row initialized with 0.0 values&#xD;
		    }&#xD;
		    reliabilityWindow.add(newReliabilityRow); // now add row to the reliability window, Time 0&#xD;
		    ReliabilityRow tmpVector = reliabilityWindow.get(0);&#xD;
		    ArrayList&lt;Double> currentReliabilityRow = new ArrayList&lt;Double>();&#xD;
		    for (int i = 0; i &lt; tmpVector.size(); i++) {&#xD;
		    	currentReliabilityRow.add(tmpVector.get(i));&#xD;
		    }&#xD;
		    // var currentReliabilityRow = (Double[]) reliabilityWindow.get(0).toArray();&#xD;
		    // Want reliabilityWindow[0][0] = 1.0 (i.e., P(packet@FlowSrc) = 1&#xD;
		    // but I din't want to mess with the newReliablityRow vector I use below&#xD;
		    // So, we initialize this first entry to 1.0, which is reliabilityWindow[0][0]&#xD;
		    // We will then update this row with computed values for each node and put it&#xD;
		    // back in the matrix&#xD;
		    currentReliabilityRow.set(0, 1.0); // initialize (i.e., P(packet@FlowSrc) = 1&#xD;
		    Double e2eReliabilityState = currentReliabilityRow.get(nNodesInFlow - 1); // the analysis will end&#xD;
		                                                                          // when the 2e2&#xD;
		                                                                          // reliability metrix is&#xD;
		                                                                          // met, initially the&#xD;
		                                                                          // state is not met and&#xD;
		                                                                          // will be 0 with this&#xD;
		                                                                          // statement&#xD;
		    var timeSlot = 0; // start time at 0&#xD;
		    while (e2eReliabilityState &lt; e2e) { // change to while and increment increment timeSlot becuase&#xD;
		                                        // we don't know how long this schedule window will last&#xD;
		      ArrayList&lt;Double> prevReliabilityRow = new ArrayList&lt;Double>(currentReliabilityRow);&#xD;
		      currentReliabilityRow.clear(); // would&#xD;
			    for (int i = 0; i &lt; newReliabilityRow.size(); i++) {&#xD;
			    	currentReliabilityRow.add(newReliabilityRow.get(i));&#xD;
			    }&#xD;
		       &#xD;
		      &#xD;
		      &#xD;
		      &#xD;
		      // be&#xD;
		                                                                                         // reliabilityWindow[timeSlot]&#xD;
		                                                                                               // if&#xD;
		                                                                                               // working&#xD;
		                                                                                               // through&#xD;
		                                                                                               // a&#xD;
		                                                                                               // schedule&#xD;
		      // Now use each flow:src->sink to update reliability computations&#xD;
		      // this is the update formula for the state probabilities&#xD;
		      // nextState = (1 - M) * prevState + M*NextHighestFlowState&#xD;
		      // use MinLQ for M in above equation&#xD;
		      // NewSinkNodeState = (1-M)*PrevSnkNodeState + M*PrevSrcNodeState&#xD;
&#xD;
		      for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) { // loop through each&#xD;
		                                                                             // node in the flow and&#xD;
		                                                                             // update the sates for&#xD;
		                                                                             // each link (i.e.,&#xD;
		                                                                             // sink->src pair)&#xD;
		        var flowSrcNodeindex = nodeIndex;&#xD;
		        var flowSnkNodeindex = nodeIndex + 1;&#xD;
		        var prevSrcNodeState = prevReliabilityRow.get(flowSrcNodeindex);&#xD;
		        var prevSnkNodeState = prevReliabilityRow.get(flowSnkNodeindex);&#xD;
		        Double nextSnkState;&#xD;
		        if ((prevSnkNodeState &lt; minLinkReliablityNeded) &amp;&amp; prevSrcNodeState > 0) { // do a push&#xD;
		                                                                                   // until PrevSnk&#xD;
		                                                                                   // state > e2e to&#xD;
		                                                                                   // ensure next&#xD;
		                                                                                   // node reaches&#xD;
		                                                                                   // target E2E BUT&#xD;
		                                                                                   // skip if no&#xD;
		                                                                                   // chance of&#xD;
		                                                                                   // success (i.e.,&#xD;
		                                                                                   // source doesn't&#xD;
		                                                                                   // have packet)&#xD;
		          nextSnkState = ((1.0 - M) * prevSnkNodeState) + (M * prevSrcNodeState); // need to&#xD;
		                                                                                  // continue&#xD;
		                                                                                  // attempting to&#xD;
		                                                                                  // Tx, so update&#xD;
		                                                                                  // current state&#xD;
		          nPushes.set(nodeIndex, nPushes.get(nodeIndex) + 1); // increment the number of pushes for for this node to snk node&#xD;
		        } else {&#xD;
		          nextSnkState = prevSnkNodeState; // snkNode has met its reliability. Thus move on to the&#xD;
		                                           // next node and record the reliability met&#xD;
		        }&#xD;
&#xD;
		        if (currentReliabilityRow.get(flowSrcNodeindex) &lt; prevReliabilityRow.get(flowSrcNodeindex)) { // probabilities&#xD;
		                                                                                              // are&#xD;
		                                                                                              // non-decreasing&#xD;
		                                                                                              // so&#xD;
		                                                                                              // update&#xD;
		                                                                                              // if&#xD;
		                                                                                              // we&#xD;
		                                                                                              // were&#xD;
		                                                                                              // higher&#xD;
		                                                                                              // by&#xD;
		                                                                                              // carring&#xD;
		                                                                                              // old&#xD;
		                                                                                              // value&#xD;
		                                                                                              // forward&#xD;
		          currentReliabilityRow.set(flowSrcNodeindex, prevReliabilityRow.get(flowSrcNodeindex)); // carry&#xD;
		                                                                                          // forward&#xD;
		                                                                                          // the&#xD;
		                                                                                          // previous&#xD;
		                                                                                          // state&#xD;
		                                                                                          // for the&#xD;
		                                                                                          // src&#xD;
		                                                                                          // node,&#xD;
		                                                                                          // which&#xD;
		                                                                                          // may get&#xD;
		                                                                                          // over&#xD;
		                                                                                          // written&#xD;
		                                                                                          // later&#xD;
		                                                                                          // by&#xD;
		                                                                                          // another&#xD;
		                                                                                          // instruction&#xD;
		                                                                                          // in this&#xD;
		                                                                                          // slot&#xD;
		        }&#xD;
		        currentReliabilityRow.set(flowSnkNodeindex, nextSnkState);&#xD;
		      }&#xD;
&#xD;
		      e2eReliabilityState = currentReliabilityRow.get(nNodesInFlow - 1);&#xD;
		      ReliabilityRow currentReliabilityVector = new ReliabilityRow();&#xD;
		      // convert the row to a vector so we can add it to the reliability window&#xD;
		      Collections.addAll(currentReliabilityVector, currentReliabilityRow.toArray(new Double [0]));&#xD;
		      if (timeSlot &lt; reliabilityWindow.size()) {&#xD;
		        reliabilityWindow.set(timeSlot, (currentReliabilityVector));&#xD;
		      } else {&#xD;
		        reliabilityWindow.add(currentReliabilityVector);&#xD;
		      }&#xD;
		      timeSlot += 1; // increase to next time slot&#xD;
		    }&#xD;
		    var size = reliabilityWindow.size();&#xD;
		    nPushes.set(nNodesInFlow, size); // The total (worst-case) cost to transmit E2E in isolation with&#xD;
		                                  // specified reliability target is the number of rows in the&#xD;
		                                  // reliabilityWindow&#xD;
		    return nPushes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xfHAEMjJEe2Q06zi9Lxc2Q" name="getFixedTxPerLinkAndTotalTxCost" specification="_xe4WkMjJEe2Q06zi9Lxc2Q">
                <ownedParameter xmi:id="_xfHAEcjJEe2Q06zi9Lxc2Q" name="flow" type="_Rj5TYLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_xfHAEsjJEe2Q06zi9Lxc2Q" type="_R5gXALxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
		    var nNodesInFlow = nodesInFlow.size();&#xD;
		    ArrayList&lt;Integer> txArrayList = new ArrayList&lt;Integer>();&#xD;
		    /*&#xD;
		     * Each node will have at most numFaults+1 transmissions. Because we don't know which nodes will&#xD;
		     * send the message over an edge, we give the cost to each node.&#xD;
		     */&#xD;
		    for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
		      txArrayList.add(numFaults + 1);&#xD;
		    }&#xD;
		    /*&#xD;
		     * now compute the maximum # of TX, assuming at most numFaults occur on an edge per period, and&#xD;
		     * each edge requires at least one successful TX.&#xD;
		     */&#xD;
		    var numEdgesInFlow = nNodesInFlow - 1;&#xD;
		    var maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
		    txArrayList.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
		    return txArrayList;&#xD;
		  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xfHAE8jJEe2Q06zi9Lxc2Q" name="numTxPerLinkAndTotalTxCost" specification="_-Om9EMi_Ee2Q06zi9Lxc2Q">
                <ownedParameter xmi:id="_xfHAFMjJEe2Q06zi9Lxc2Q" type="_R5gXALxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <ownedParameter xmi:id="_xfHAFcjJEe2Q06zi9Lxc2Q" name="flow" type="_Rj5TYLxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>if (this.constructorUsed.equals(E2E_M_CONSTRUCTOR)) {&#xD;
			return this.numTxAttemptsPerLinkAndTotalTxAttempts(flow, this.e2e, this.minPacketReceptionRate, true);&#xD;
		}&#xD;
		return this.getFixedTxPerLinkAndTotalTxCost(flow);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xfHAFsjJEe2Q06zi9Lxc2Q" name="ReliabilityAnalysis" specification="_SX_tMMjAEe2Q06zi9Lxc2Q">
                <ownedParameter xmi:id="_xfHAF8jJEe2Q06zi9Lxc2Q" type="_RlU2wLxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <ownedParameter xmi:id="_xfHAGMjJEe2Q06zi9Lxc2Q" name="e2e" type="_R8TMULxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_xfHAGcjJEe2Q06zi9Lxc2Q" name="minPacketReceptionRate" type="_R8TMULxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
		this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
		this.constructorUsed = E2E_M_CONSTRUCTOR;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_EykIoMqJEe2Q06zi9Lxc2Q" name="ReliabilityAnalysis" specification="_WkQSQMjAEe2Q06zi9Lxc2Q">
                <ownedParameter xmi:id="_EykIocqJEe2Q06zi9Lxc2Q" type="_RlU2wLxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EykIosqJEe2Q06zi9Lxc2Q" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numFaults = numFaults;&#xD;
		this.constructorUsed = NUM_FAULTS_CONSTRUCTOR;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VMWTIMqMEe2Q06zi9Lxc2Q" name="ReliabilityAnalysis" specification="_VMSowMqMEe2Q06zi9Lxc2Q">
                <ownedParameter xmi:id="_VMWTIcqMEe2Q06zi9Lxc2Q" name="program" type="_RoNysLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_VMWTIsqMEe2Q06zi9Lxc2Q" type="_RlU2wLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>this.program = program;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RlVd0LxiEe2Pj61kfbEkwg" name="verifyReliabilities" method="_R-hZ4LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RlVd0bxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_fxhPsLxiEe2Pj61kfbEkwg" name="getReliabilities">
                <ownedParameter xmi:id="_fxhPsbxiEe2Pj61kfbEkwg" type="_RlZIMLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_-Om9EMi_Ee2Q06zi9Lxc2Q" name="numTxPerLinkAndTotalTxCost" method="_xfHAE8jJEe2Q06zi9Lxc2Q">
                <ownedComment xmi:id="_VMW6M8qMEe2Q06zi9Lxc2Q">
                  <body>Calculates the number of transmissions per link and total cost based on which constructor was used.&#xD;
	  * @param flow&#xD;
	  * @return ArrayList&lt;Integer></body>
                </ownedComment>
                <ownedParameter xmi:id="_-Om9Eci_Ee2Q06zi9Lxc2Q" type="_R5gXALxiEe2Pj61kfbEkwg" direction="return"/>
                <ownedParameter xmi:id="_-O1mkMi_Ee2Q06zi9Lxc2Q" name="flow" type="_Rj5TYLxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_SX_tMMjAEe2Q06zi9Lxc2Q" name="ReliabilityAnalysis" method="_xfHAFsjJEe2Q06zi9Lxc2Q">
                <eAnnotations xmi:id="_JBXfkMjBEe2Q06zi9Lxc2Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_JBXfkcjBEe2Q06zi9Lxc2Q" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_VMWTJMqMEe2Q06zi9Lxc2Q">
                  <body>Creates a ReliabilityAnalysis object and sets the current constructor used to E2E_M_CONSTRUCTOR.&#xD;
	 * @param e2e&#xD;
	 * @param minPacketReceptionRate</body>
                </ownedComment>
                <ownedParameter xmi:id="_u6_zoMjAEe2Q06zi9Lxc2Q" type="_RlU2wLxiEe2Pj61kfbEkwg" direction="return"/>
                <ownedParameter xmi:id="_SYAUQMjAEe2Q06zi9Lxc2Q" name="e2e" type="_R8TMULxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_SYAUQcjAEe2Q06zi9Lxc2Q" name="minPacketReceptionRate" type="_R8TMULxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_WkQSQMjAEe2Q06zi9Lxc2Q" name="ReliabilityAnalysis" method="_EykIoMqJEe2Q06zi9Lxc2Q">
                <eAnnotations xmi:id="_LHNKsMjBEe2Q06zi9Lxc2Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_LHNKscjBEe2Q06zi9Lxc2Q" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_VMW6MMqMEe2Q06zi9Lxc2Q">
                  <body>Creates a ReliabilityAnalysis object and sets the current constructor used to NUM_FAULTS_CONSTRUCTOR.&#xD;
	 * @param numFaults&#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_McAacMjBEe2Q06zi9Lxc2Q" type="_RlU2wLxiEe2Pj61kfbEkwg" direction="return"/>
                <ownedParameter xmi:id="_WkQSQcjAEe2Q06zi9Lxc2Q" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_xe4WkMjJEe2Q06zi9Lxc2Q" name="getFixedTxPerLinkAndTotalTxCost" method="_xfHAEMjJEe2Q06zi9Lxc2Q">
                <ownedComment xmi:id="_VMW6MsqMEe2Q06zi9Lxc2Q">
                  <body>Calculates the fixed transmission per link, the total transmission cost, and returns it.&#xD;
	   * &#xD;
	   * @param flow &#xD;
	   * @return txArrayList</body>
                </ownedComment>
                <ownedParameter xmi:id="_xe4WkcjJEe2Q06zi9Lxc2Q" name="flow" type="_Rj5TYLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_xe4WksjJEe2Q06zi9Lxc2Q" type="_R5gXALxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_xe-dMMjJEe2Q06zi9Lxc2Q" name="numTxAttemptsPerLinkAndTotalTxAttempts" method="_xfGZAMjJEe2Q06zi9Lxc2Q">
                <ownedComment xmi:id="_VMW6McqMEe2Q06zi9Lxc2Q">
                  <body>Creates an array list of the number of transmission attempts per link and the total&#xD;
	   * transmission attempts.&#xD;
	   * &#xD;
	   * @param flow&#xD;
	   * @param e2e&#xD;
	   * @param M&#xD;
	   * @param optimizationRequested&#xD;
	   * @return nPushesArrayList</body>
                </ownedComment>
                <ownedParameter xmi:id="_xe-dMcjJEe2Q06zi9Lxc2Q" name="flow" type="_Rj5TYLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_xe_EQMjJEe2Q06zi9Lxc2Q" name="e2e" type="_R8TMULxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_xe_EQcjJEe2Q06zi9Lxc2Q" name="M" type="_R8TMULxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_xe_EQsjJEe2Q06zi9Lxc2Q" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_xe_rUMjJEe2Q06zi9Lxc2Q" type="_R5gXALxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_VMSowMqMEe2Q06zi9Lxc2Q" name="ReliabilityAnalysis" method="_VMWTIMqMEe2Q06zi9Lxc2Q">
                <eAnnotations xmi:id="_VMTP0MqMEe2Q06zi9Lxc2Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_VMTP0cqMEe2Q06zi9Lxc2Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_VMSowcqMEe2Q06zi9Lxc2Q" name="program" type="_RoNysLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_VMSowsqMEe2Q06zi9Lxc2Q" type="_RlU2wLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_RlWE4LxiEe2Pj61kfbEkwg" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_R_BJIrxiEe2Pj61kfbEkwg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_RlWr8LxiEe2Pj61kfbEkwg" name="minPacketReceptionRate" type="_R8TMULxiEe2Pj61kfbEkwg" isReadOnly="true"/>
              <ownedAttribute xmi:id="_RlWr8bxiEe2Pj61kfbEkwg" name="e2e" type="_R8TMULxiEe2Pj61kfbEkwg" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RlXTALxiEe2Pj61kfbEkwg" name="ReliabilityRow">
              <generalization xmi:id="_R6iRwbxiEe2Pj61kfbEkwg" general="_RlhEALxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9mz4LxiEe2Pj61kfbEkwg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9mz4bxiEe2Pj61kfbEkwg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-hZ4rxiEe2Pj61kfbEkwg" name="ReliabilityRow" specification="_RlXTAbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-hZ47xiEe2Pj61kfbEkwg" type="_RlXTALxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-hZ5LxiEe2Pj61kfbEkwg" name="ReliabilityRow" specification="_R8TzYLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-hZ5bxiEe2Pj61kfbEkwg" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-hZ5rxiEe2Pj61kfbEkwg" name="element" type="_R8TMULxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-hZ57xiEe2Pj61kfbEkwg" type="_RlXTALxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-hZ6LxiEe2Pj61kfbEkwg" name="ReliabilityRow" specification="_R8UacLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-hZ6bxiEe2Pj61kfbEkwg" name="rowArray" type="_R8TMULxiEe2Pj61kfbEkwg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-hZ6rxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-hZ67xiEe2Pj61kfbEkwg" type="_RlXTALxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RlXTAbxiEe2Pj61kfbEkwg" name="ReliabilityRow" method="_R-hZ4rxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RlX6ELxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RlX6EbxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RlX6ErxiEe2Pj61kfbEkwg" type="_RlXTALxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R8TzYLxiEe2Pj61kfbEkwg" name="ReliabilityRow" visibility="package" method="_R-hZ5LxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R8TzY7xiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R8TzZLxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R8TzYbxiEe2Pj61kfbEkwg" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R8TzYrxiEe2Pj61kfbEkwg" name="element" type="_R8TMULxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8TzZbxiEe2Pj61kfbEkwg" type="_RlXTALxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R8UacLxiEe2Pj61kfbEkwg" name="ReliabilityRow" visibility="package" method="_R-hZ6LxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R8UacrxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R8Uac7xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R8UacbxiEe2Pj61kfbEkwg" name="rowArray" type="_R8TMULxiEe2Pj61kfbEkwg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R8VBgLxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R8UadLxiEe2Pj61kfbEkwg" type="_RlXTALxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RlZIMLxiEe2Pj61kfbEkwg" name="ReliabilityTable">
              <generalization xmi:id="_R6i40bxiEe2Pj61kfbEkwg" general="_RmGS0LxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9mz4rxiEe2Pj61kfbEkwg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9mz47xiEe2Pj61kfbEkwg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-hZ7LxiEe2Pj61kfbEkwg" name="ReliabilityTable" specification="_RlZvQLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-hZ7bxiEe2Pj61kfbEkwg" type="_RlZIMLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-hZ7rxiEe2Pj61kfbEkwg" name="ReliabilityTable" specification="_RlZvRLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-hZ77xiEe2Pj61kfbEkwg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-hZ8LxiEe2Pj61kfbEkwg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-hZ8bxiEe2Pj61kfbEkwg" type="_RlZIMLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RlZvQLxiEe2Pj61kfbEkwg" name="ReliabilityTable" method="_R-hZ7LxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RlZvQbxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RlZvQrxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RlZvQ7xiEe2Pj61kfbEkwg" type="_RlZIMLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RlZvRLxiEe2Pj61kfbEkwg" name="ReliabilityTable" visibility="package" method="_R-hZ7rxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RlaWUrxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RlaWU7xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RlaWULxiEe2Pj61kfbEkwg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RlaWUbxiEe2Pj61kfbEkwg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RlaWVLxiEe2Pj61kfbEkwg" type="_RlZIMLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rla9YLxiEe2Pj61kfbEkwg" name="ReliabilityVisualization">
              <ownedComment xmi:id="_6li8Ndu5Ee2RlunxwnVSag">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program.&#xD;
&lt;p>&#xD;
 *&#xD;
CS2820 Spring 2023 Project: Implement this class to create&#xD;
the file visualization that is requested in Warp.&#xD;
 *&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R6kG9bxiEe2Pj61kfbEkwg" general="_RmX_oLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9mz5LxiEe2Pj61kfbEkwg" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9mz5bxiEe2Pj61kfbEkwg" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9na8LxiEe2Pj61kfbEkwg" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9na8bxiEe2Pj61kfbEkwg" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9na8rxiEe2Pj61kfbEkwg" name="warp" visibility="private" type="_Rm2gwLxiEe2Pj61kfbEkwg" association="_R_wI8bxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9na9LxiEe2Pj61kfbEkwg" name="ra" visibility="private" type="_RlU2wLxiEe2Pj61kfbEkwg" association="_R_wI9LxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-hZ8rxiEe2Pj61kfbEkwg" name="ReliabilityVisualization" specification="_R6kG8LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-hZ87xiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-hZ9LxiEe2Pj61kfbEkwg" type="_Rla9YLxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6liVINu5Ee2RlunxwnVSag" name="createTitle" specification="_6lYkINu5Ee2RlunxwnVSag">
                <ownedParameter xmi:id="_6liVIdu5Ee2RlunxwnVSag" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(OBJECT_NAME + &quot; for graph &quot; + warp.getName() + &quot;\n&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6liVItu5Ee2RlunxwnVSag" name="displayVisualization" specification="_6lZLMNu5Ee2RlunxwnVSag">
                <ownedParameter xmi:id="_6liVI9u5Ee2RlunxwnVSag" type="_RkODgLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6liVJNu5Ee2RlunxwnVSag" name="createColumnHeader" specification="_6laZUdu5Ee2RlunxwnVSag">
                <ownedParameter xmi:id="_6liVJdu5Ee2RlunxwnVSag" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6liVJtu5Ee2RlunxwnVSag" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>WorkLoad wl = this.warp.toProgram().toWorkLoad();&#xD;
		// get the flow names in priority order from the workload&#xD;
		ArrayList&lt;String> flows = wl.getFlowNamesInPriorityOrder();&#xD;
		ArrayList&lt;String> output = new ArrayList&lt;String>();&#xD;
&#xD;
		// loop through each flow and get each flows nodes from getNodesInFlow and add&#xD;
		// them to output in the format &quot;flowName:node[i]&quot;&#xD;
		for (int i = 0; i &lt; flows.size(); i++) {&#xD;
			String[] nodes = wl.getNodesInFlow(flows.get(i));&#xD;
			for (int j = 0; j &lt; nodes.length; j++) {&#xD;
				output.add(flows.get(i) + &quot;:&quot; + nodes[j]);&#xD;
			}&#xD;
		}&#xD;
		// cast output to a string array&#xD;
		String[] columnNames = output.toArray(new String[0]);&#xD;
		return columnNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6li8MNu5Ee2RlunxwnVSag" name="createHeader" specification="_6lcOgNu5Ee2RlunxwnVSag">
                <ownedParameter xmi:id="_6li8Mdu5Ee2RlunxwnVSag" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(createTitle());&#xD;
		header.add(&quot;M: &quot; + warp.getMinPacketReceptionRate() + &quot;\n&quot;);&#xD;
		header.add(&quot;E2E: &quot; + warp.getE2e() + &quot;\n&quot;);&#xD;
		header.add(&quot;nChannels: &quot; + warp.getNumChannels() + &quot;\n&quot;);&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_6li8Mtu5Ee2RlunxwnVSag" name="createVisualizationData" specification="_6lc1ktu5Ee2RlunxwnVSag">
                <ownedParameter xmi:id="_6li8M9u5Ee2RlunxwnVSag" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6li8NNu5Ee2RlunxwnVSag" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>ReliabilityTable reliabilities = this.ra.getReliabilities();&#xD;
		// turn the reliability table into 2d a string array&#xD;
		String[][] data = new String[reliabilities.getNumRows()][reliabilities.getNumColumns()];&#xD;
		for (int i = 0; i &lt; reliabilities.getNumRows(); i++) {&#xD;
			for (int j = 0; j &lt; reliabilities.getNumColumns(); j++) {&#xD;
				data[i][j] = reliabilities.get(i, j).toString();&#xD;
			}&#xD;
		}&#xD;
		return data;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R6kG8LxiEe2Pj61kfbEkwg" name="ReliabilityVisualization" visibility="package" method="_R-hZ8rxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R6kG8rxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R6kG87xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R6kG8bxiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6kG9LxiEe2Pj61kfbEkwg" type="_Rla9YLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6lYkINu5Ee2RlunxwnVSag" name="createTitle" visibility="private" method="_6liVINu5Ee2RlunxwnVSag">
                <ownedComment xmi:id="_6li8Ntu5Ee2RlunxwnVSag">
                  <body>createTitle creates the title for the reliability analysis file which is the&#xD;
	 * object name and the graph name</body>
                </ownedComment>
                <ownedParameter xmi:id="_6lgf8Nu5Ee2RlunxwnVSag" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6lZLMNu5Ee2RlunxwnVSag" name="displayVisualization" method="_6liVItu5Ee2RlunxwnVSag">
                <ownedParameter xmi:id="_6lZLMdu5Ee2RlunxwnVSag" type="_RkODgLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6laZUdu5Ee2RlunxwnVSag" name="createColumnHeader" visibility="protected" method="_6liVJNu5Ee2RlunxwnVSag">
                <ownedParameter xmi:id="_6lbAYNu5Ee2RlunxwnVSag" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6lbAYdu5Ee2RlunxwnVSag" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6lcOgNu5Ee2RlunxwnVSag" name="createHeader" visibility="protected" method="_6li8MNu5Ee2RlunxwnVSag">
                <ownedParameter xmi:id="_6lcOgdu5Ee2RlunxwnVSag" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6lc1ktu5Ee2RlunxwnVSag" name="createVisualizationData" visibility="protected" method="_6li8Mtu5Ee2RlunxwnVSag">
                <ownedParameter xmi:id="_6ldcoNu5Ee2RlunxwnVSag" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6ldcodu5Ee2RlunxwnVSag" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RldZoLxiEe2Pj61kfbEkwg" name="ReportVisualization">
              <generalization xmi:id="_R6kuCrxiEe2Pj61kfbEkwg" general="_RmX_oLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9oCALxiEe2Pj61kfbEkwg" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9oCAbxiEe2Pj61kfbEkwg" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9oCArxiEe2Pj61kfbEkwg" name="content" visibility="private" type="_RjqC0LxiEe2Pj61kfbEkwg" association="_R_wwAbxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9oCBLxiEe2Pj61kfbEkwg" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-iA8LxiEe2Pj61kfbEkwg" name="ReportVisualization" specification="_R6kuALxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-iA8bxiEe2Pj61kfbEkwg" name="fm" type="_Rj0a4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-iA8rxiEe2Pj61kfbEkwg" name="warp" type="_RmAMMLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-iA87xiEe2Pj61kfbEkwg" name="content" type="_RjqC0LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-iA9LxiEe2Pj61kfbEkwg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-iA9bxiEe2Pj61kfbEkwg" type="_RldZoLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-iA9rxiEe2Pj61kfbEkwg" name="visualization" specification="_RlenwLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-iA97xiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-iA-LxiEe2Pj61kfbEkwg" name="createReport" specification="_RlfO07xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-iA-bxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RlenwLxiEe2Pj61kfbEkwg" name="visualization" method="_R-iA9rxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6kuCLxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RlfO07xiEe2Pj61kfbEkwg" name="createReport" visibility="private" method="_R-iA-LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6kuCbxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6kuALxiEe2Pj61kfbEkwg" name="ReportVisualization" visibility="package" method="_R-iA8LxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R6kuBbxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R6kuBrxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R6kuAbxiEe2Pj61kfbEkwg" name="fm" type="_Rj0a4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6kuArxiEe2Pj61kfbEkwg" name="warp" type="_RmAMMLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6kuA7xiEe2Pj61kfbEkwg" name="content" type="_RjqC0LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6kuBLxiEe2Pj61kfbEkwg" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6kuB7xiEe2Pj61kfbEkwg" type="_RldZoLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RlhEALxiEe2Pj61kfbEkwg" name="Row">
              <generalization xmi:id="_R8WPobxiEe2Pj61kfbEkwg" general="_R5gXALxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9opEbxiEe2Pj61kfbEkwg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9opErxiEe2Pj61kfbEkwg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-iA-rxiEe2Pj61kfbEkwg" name="Row" specification="_RliSILxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-iA-7xiEe2Pj61kfbEkwg" type="_RlhEALxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-iA_LxiEe2Pj61kfbEkwg" name="Row" specification="_R8VBgbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-iA_bxiEe2Pj61kfbEkwg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-iA_rxiEe2Pj61kfbEkwg" name="element" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-iA_7xiEe2Pj61kfbEkwg" type="_RlhEALxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-iBALxiEe2Pj61kfbEkwg" name="Row" specification="_R8VolLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-iBAbxiEe2Pj61kfbEkwg" name="rowArray" type="_R76KwLxiEe2Pj61kfbEkwg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-iBArxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-iBA7xiEe2Pj61kfbEkwg" type="_RlhEALxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-iBBLxiEe2Pj61kfbEkwg" name="Row" specification="_Rli5MLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-iBBbxiEe2Pj61kfbEkwg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-iBBrxiEe2Pj61kfbEkwg" type="_RlhEALxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RliSILxiEe2Pj61kfbEkwg" name="Row" method="_R-iA-rxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RliSIbxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RliSIrxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RliSI7xiEe2Pj61kfbEkwg" type="_RlhEALxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rli5MLxiEe2Pj61kfbEkwg" name="Row" visibility="package" method="_R-iBBLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RljgQbxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RljgQrxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RljgQLxiEe2Pj61kfbEkwg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RljgQ7xiEe2Pj61kfbEkwg" type="_RlhEALxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R8VBgbxiEe2Pj61kfbEkwg" name="Row" visibility="package" method="_R-iA_LxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R8VokbxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R8VokrxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R8VBgrxiEe2Pj61kfbEkwg" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R8VokLxiEe2Pj61kfbEkwg" name="element" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8Vok7xiEe2Pj61kfbEkwg" type="_RlhEALxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R8VolLxiEe2Pj61kfbEkwg" name="Row" visibility="package" method="_R-iBALxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R8VolrxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R8Vol7xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R8VolbxiEe2Pj61kfbEkwg" name="rowArray" type="_R76KwLxiEe2Pj61kfbEkwg">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R8WPoLxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R8VomLxiEe2Pj61kfbEkwg" type="_RlhEALxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RlkHULxiEe2Pj61kfbEkwg" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_R_BJJLxiEe2Pj61kfbEkwg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R8W2sLxiEe2Pj61kfbEkwg" general="_R5-4IbxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9opE7xiEe2Pj61kfbEkwg" name="workLoad" visibility="package" type="_RnLQ4LxiEe2Pj61kfbEkwg" association="_R_xXEbxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9pQIbxiEe2Pj61kfbEkwg" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-ioALxiEe2Pj61kfbEkwg" name="WorkLoadListener" specification="_R6l8ILxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-ioAbxiEe2Pj61kfbEkwg" name="workLoad" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-ioArxiEe2Pj61kfbEkwg" type="_RlkHULxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-jPELxiEe2Pj61kfbEkwg" name="buildNodesAndFlows" specification="_R6mjM7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-jPEbxiEe2Pj61kfbEkwg" name="workLoad" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-jPErxiEe2Pj61kfbEkwg" name="testPrintStdOut" specification="_RllVcLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-jPE7xiEe2Pj61kfbEkwg" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-jPFLxiEe2Pj61kfbEkwg" name="enterWarpName" specification="_R6mjNbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-jPFbxiEe2Pj61kfbEkwg" name="ctx" type="_R6BUZbxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-jPFrxiEe2Pj61kfbEkwg" name="enterFlowName" specification="_R6nKQrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-jPF7xiEe2Pj61kfbEkwg" name="ctx" type="_R6Dwo7xiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-jPGLxiEe2Pj61kfbEkwg" name="exitPriority" specification="_R6nxUbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-jPGbxiEe2Pj61kfbEkwg" name="ctx" type="_R6nKR7xiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-jPGrxiEe2Pj61kfbEkwg" name="exitPeriod" specification="_R6o_cLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-jPG7xiEe2Pj61kfbEkwg" name="ctx" type="_R6oYYrxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-jPHLxiEe2Pj61kfbEkwg" name="exitDeadline" specification="_R6pmgbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-jPHbxiEe2Pj61kfbEkwg" name="ctx" type="_R6o_dbxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-jPHrxiEe2Pj61kfbEkwg" name="exitPhase" specification="_R6qNkbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-jPH7xiEe2Pj61kfbEkwg" name="ctx" type="_R6pmhrxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-jPILxiEe2Pj61kfbEkwg" name="exitSrcNode" specification="_R6q0orxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-jPIbxiEe2Pj61kfbEkwg" name="ctx" type="_R6E-wLxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-jPIrxiEe2Pj61kfbEkwg" name="exitSnkNode" specification="_R6q0p7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-jPI7xiEe2Pj61kfbEkwg" name="ctx" type="_R6Fl0rxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-jPJLxiEe2Pj61kfbEkwg" name="exitFlow" specification="_R6rbtLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-jPJbxiEe2Pj61kfbEkwg" name="ctx" type="_R6Gz8LxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RllVcLxiEe2Pj61kfbEkwg" name="testPrintStdOut" method="_R-jPErxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RllVcbxiEe2Pj61kfbEkwg" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R6l8ILxiEe2Pj61kfbEkwg" name="WorkLoadListener" visibility="private" method="_R-ioALxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R6mjMLxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R6mjMbxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R6l8IbxiEe2Pj61kfbEkwg" name="workLoad" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6mjMrxiEe2Pj61kfbEkwg" type="_RlkHULxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6mjM7xiEe2Pj61kfbEkwg" name="buildNodesAndFlows" isStatic="true" method="_R-jPELxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6mjNLxiEe2Pj61kfbEkwg" name="workLoad" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6mjNbxiEe2Pj61kfbEkwg" name="enterWarpName" method="_R-jPFLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6mjNrxiEe2Pj61kfbEkwg" name="ctx" type="_R6BUZbxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6nKQrxiEe2Pj61kfbEkwg" name="enterFlowName" method="_R-jPFrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6nKQ7xiEe2Pj61kfbEkwg" name="ctx" type="_R6Dwo7xiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6nxUbxiEe2Pj61kfbEkwg" name="exitPriority" method="_R-jPGLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6nxUrxiEe2Pj61kfbEkwg" name="ctx" type="_R6nKR7xiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6o_cLxiEe2Pj61kfbEkwg" name="exitPeriod" method="_R-jPGrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6o_cbxiEe2Pj61kfbEkwg" name="ctx" type="_R6oYYrxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6pmgbxiEe2Pj61kfbEkwg" name="exitDeadline" method="_R-jPHLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6pmgrxiEe2Pj61kfbEkwg" name="ctx" type="_R6o_dbxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6qNkbxiEe2Pj61kfbEkwg" name="exitPhase" method="_R-jPHrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6qNkrxiEe2Pj61kfbEkwg" name="ctx" type="_R6pmhrxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6q0orxiEe2Pj61kfbEkwg" name="exitSrcNode" method="_R-jPILxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6q0o7xiEe2Pj61kfbEkwg" name="ctx" type="_R6E-wLxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6q0p7xiEe2Pj61kfbEkwg" name="exitSnkNode" method="_R-jPIrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6rbsLxiEe2Pj61kfbEkwg" name="ctx" type="_R6Fl0rxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6rbtLxiEe2Pj61kfbEkwg" name="exitFlow" method="_R-jPJLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6rbtbxiEe2Pj61kfbEkwg" name="ctx" type="_R6Gz8LxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RlqN8LxiEe2Pj61kfbEkwg" name="SchedulableObjectQueue">
              <generalization xmi:id="_RlsDILxiEe2Pj61kfbEkwg" general="_RlTBlLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9p3MLxiEe2Pj61kfbEkwg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9p3MbxiEe2Pj61kfbEkwg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-j2ILxiEe2Pj61kfbEkwg" name="SchedulableObjectQueue" specification="_R8W2sbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-j2IbxiEe2Pj61kfbEkwg" name="comparitor" type="_R5vnlLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-j2IrxiEe2Pj61kfbEkwg" type="_RlqN8LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-j2I7xiEe2Pj61kfbEkwg" name="SchedulableObjectQueue" specification="_R8YE0LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-j2JLxiEe2Pj61kfbEkwg" name="comparitor" type="_R5vnlLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-j2JbxiEe2Pj61kfbEkwg" name="schedulableObjects" type="_R6WrkLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-j2JrxiEe2Pj61kfbEkwg" type="_RlqN8LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R8W2sbxiEe2Pj61kfbEkwg" name="SchedulableObjectQueue" visibility="package" method="_R-j2ILxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R8XdwbxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R8XdwrxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R8XdwLxiEe2Pj61kfbEkwg" name="comparitor" type="_R5vnlLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8Xdw7xiEe2Pj61kfbEkwg" type="_RlqN8LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R8YE0LxiEe2Pj61kfbEkwg" name="SchedulableObjectQueue" visibility="package" method="_R-j2I7xiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R8YE07xiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R8YE1LxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R8YE0bxiEe2Pj61kfbEkwg" name="comparitor" type="_R5vnlLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8YE0rxiEe2Pj61kfbEkwg" name="schedulableObjects" type="_R6WrkLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8YE1bxiEe2Pj61kfbEkwg" type="_RlqN8LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RltRQLxiEe2Pj61kfbEkwg" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_R_BJJbxiEe2Pj61kfbEkwg">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R9p3MrxiEe2Pj61kfbEkwg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9p3M7xiEe2Pj61kfbEkwg" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9p3NLxiEe2Pj61kfbEkwg" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9qeQbxiEe2Pj61kfbEkwg" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9qeQ7xiEe2Pj61kfbEkwg" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9qeRLxiEe2Pj61kfbEkwg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9rFULxiEe2Pj61kfbEkwg" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9rFUrxiEe2Pj61kfbEkwg" name="schedule" visibility="protected" type="_Rl6FkLxiEe2Pj61kfbEkwg" association="_R_x-IbxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9rFVLxiEe2Pj61kfbEkwg" name="poset" visibility="protected" type="_Rkvn8LxiEe2Pj61kfbEkwg" association="_R_ylMbxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-j2J7xiEe2Pj61kfbEkwg" name="Schedule" specification="_R6tQ4LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-j2KLxiEe2Pj61kfbEkwg" name="poset" type="_Rkvn8LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-j2KbxiEe2Pj61kfbEkwg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-j2KrxiEe2Pj61kfbEkwg" type="_RltRQLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-kdNLxiEe2Pj61kfbEkwg" name="getSchedule" specification="_RlwUk7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-kdNbxiEe2Pj61kfbEkwg" type="_Rl6FkLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-kdNrxiEe2Pj61kfbEkwg" name="buildSchedule" specification="_Rlw7oLxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-kdN7xiEe2Pj61kfbEkwg" name="toProgram" specification="_Rlw7obxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-kdOLxiEe2Pj61kfbEkwg" type="_RlG0ULxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-kdObxiEe2Pj61kfbEkwg" name="replaceNullWithSleep" specification="_R6tQ6LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-kdOrxiEe2Pj61kfbEkwg" name="program" type="_RlG0ULxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-kdO7xiEe2Pj61kfbEkwg" name="fakeSchedulingToTestRest" specification="_R6t38LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-kdPLxiEe2Pj61kfbEkwg" name="next" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-kdPbxiEe2Pj61kfbEkwg" name="getChannelAndSetStartTime" specification="_R6t38rxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-kdPrxiEe2Pj61kfbEkwg" name="schedulableObject" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-kdP7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-kdQLxiEe2Pj61kfbEkwg" name="findChannelAndTime" specification="_R6t39bxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-kdQbxiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-kdQrxiEe2Pj61kfbEkwg" name="schedulableObject" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-kdQ7xiEe2Pj61kfbEkwg" type="_RlvGcLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-kdRLxiEe2Pj61kfbEkwg" name="continueSearch" specification="_R6ufALxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-kdRbxiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-kdRrxiEe2Pj61kfbEkwg" name="activation" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-kdR7xiEe2Pj61kfbEkwg" type="_RlvGcLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-kdSLxiEe2Pj61kfbEkwg" name="noOtherChannelConflicts" specification="_R6ufBLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-kdSbxiEe2Pj61kfbEkwg" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-kdSrxiEe2Pj61kfbEkwg" name="schedulableObject" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-kdS7xiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-kdTLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-kdTbxiEe2Pj61kfbEkwg" name="conflictsExist" specification="_R6ufCbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-kdTrxiEe2Pj61kfbEkwg" name="obj" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-kdT7xiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-kdULxiEe2Pj61kfbEkwg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-kdUbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-kdUrxiEe2Pj61kfbEkwg" name="freeOfCoordinatorConflicts" specification="_R6vGEbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-kdU7xiEe2Pj61kfbEkwg" name="obj" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-kdVLxiEe2Pj61kfbEkwg" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-kdVbxiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-kdVrxiEe2Pj61kfbEkwg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-kdV7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-kdWLxiEe2Pj61kfbEkwg" name="isAvailable" specification="_R6vGF7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-kdWbxiEe2Pj61kfbEkwg" name="a1" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-kdWrxiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-kdW7xiEe2Pj61kfbEkwg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-kdXLxiEe2Pj61kfbEkwg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-kdXbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-kdXrxiEe2Pj61kfbEkwg" name="isAvailable" specification="_R6vtILxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-kdX7xiEe2Pj61kfbEkwg" name="a1" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-kdYLxiEe2Pj61kfbEkwg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-kdYbxiEe2Pj61kfbEkwg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-kdYrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-lEQLxiEe2Pj61kfbEkwg" name="timeRemaining" specification="_Rlyw0LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-lEQbxiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-lEQrxiEe2Pj61kfbEkwg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-lEQ7xiEe2Pj61kfbEkwg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-lERLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-lERbxiEe2Pj61kfbEkwg" name="canCombineEntriesInPlace" specification="_R6vtJbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-lERrxiEe2Pj61kfbEkwg" name="a1" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-lER7xiEe2Pj61kfbEkwg" name="a2" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-lESLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-lrULxiEe2Pj61kfbEkwg" name="combinedEntriesInPlace" specification="_R6vtKbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-lrUbxiEe2Pj61kfbEkwg" name="a1" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-lrUrxiEe2Pj61kfbEkwg" name="a2" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-lrU7xiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-lrVLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-lrVbxiEe2Pj61kfbEkwg" name="addToSchedule" specification="_R6wUMbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-lrVrxiEe2Pj61kfbEkwg" name="next" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-lrV7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-lrWLxiEe2Pj61kfbEkwg" name="reportNotSchedulable" specification="_R6wUNLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-lrWbxiEe2Pj61kfbEkwg" name="object" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-lrWrxiEe2Pj61kfbEkwg" name="printVerbose" specification="_Rlz-8LxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-lrW7xiEe2Pj61kfbEkwg" name="print" specification="_Rl0mALxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RlwUk7xiEe2Pj61kfbEkwg" name="getSchedule" method="_R-kdNLxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_BJKLxiEe2Pj61kfbEkwg">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_R6tQ5rxiEe2Pj61kfbEkwg" type="_Rl6FkLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rlw7oLxiEe2Pj61kfbEkwg" name="buildSchedule" visibility="private" method="_R-kdNrxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_Rlw7obxiEe2Pj61kfbEkwg" name="toProgram" method="_R-kdN7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6tQ57xiEe2Pj61kfbEkwg" type="_RlG0ULxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rlyw0LxiEe2Pj61kfbEkwg" name="timeRemaining" visibility="protected" method="_R-lEQLxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_BwNLxiEe2Pj61kfbEkwg">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rlyw0bxiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rlyw0rxiEe2Pj61kfbEkwg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rlyw07xiEe2Pj61kfbEkwg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RlzX4LxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rlz-8LxiEe2Pj61kfbEkwg" name="printVerbose" method="_R-lrWrxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_Rl0mALxiEe2Pj61kfbEkwg" name="print" method="_R-lrW7xiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_R6tQ4LxiEe2Pj61kfbEkwg" name="Schedule" visibility="package" method="_R-j2J7xiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R6tQ47xiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R6tQ5LxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R6tQ4bxiEe2Pj61kfbEkwg" name="poset" type="_Rkvn8LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6tQ4rxiEe2Pj61kfbEkwg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6tQ5bxiEe2Pj61kfbEkwg" type="_RltRQLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6tQ6LxiEe2Pj61kfbEkwg" name="replaceNullWithSleep" visibility="private" method="_R-kdObxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_BJKbxiEe2Pj61kfbEkwg">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_R6tQ6bxiEe2Pj61kfbEkwg" name="program" type="_RlG0ULxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6t38LxiEe2Pj61kfbEkwg" name="fakeSchedulingToTestRest" visibility="private" method="_R-kdO7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6t38bxiEe2Pj61kfbEkwg" name="next" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6t38rxiEe2Pj61kfbEkwg" name="getChannelAndSetStartTime" visibility="protected" method="_R-kdPbxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_BwMLxiEe2Pj61kfbEkwg">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_R6t387xiEe2Pj61kfbEkwg" name="schedulableObject" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6t39LxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R6t39bxiEe2Pj61kfbEkwg" name="findChannelAndTime" visibility="protected" method="_R-kdQLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6t39rxiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6t397xiEe2Pj61kfbEkwg" name="schedulableObject" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6t3-LxiEe2Pj61kfbEkwg" type="_RlvGcLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6ufALxiEe2Pj61kfbEkwg" name="continueSearch" visibility="protected" method="_R-kdRLxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_BwMbxiEe2Pj61kfbEkwg">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_R6ufAbxiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6ufArxiEe2Pj61kfbEkwg" name="activation" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6ufA7xiEe2Pj61kfbEkwg" type="_RlvGcLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6ufBLxiEe2Pj61kfbEkwg" name="noOtherChannelConflicts" visibility="protected" method="_R-kdSLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6ufBbxiEe2Pj61kfbEkwg" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6ufBrxiEe2Pj61kfbEkwg" name="schedulableObject" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6ufB7xiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6ufCLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R6ufCbxiEe2Pj61kfbEkwg" name="conflictsExist" visibility="protected" method="_R-kdTbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6ufCrxiEe2Pj61kfbEkwg" name="obj" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6ufC7xiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6ufDLxiEe2Pj61kfbEkwg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6vGELxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R6vGEbxiEe2Pj61kfbEkwg" name="freeOfCoordinatorConflicts" visibility="protected" method="_R-kdUrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6vGErxiEe2Pj61kfbEkwg" name="obj" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6vGE7xiEe2Pj61kfbEkwg" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6vGFLxiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6vGFbxiEe2Pj61kfbEkwg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6vGFrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R6vGF7xiEe2Pj61kfbEkwg" name="isAvailable" visibility="protected" method="_R-kdWLxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_BwMrxiEe2Pj61kfbEkwg">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_R6vGGLxiEe2Pj61kfbEkwg" name="a1" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6vGGbxiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6vGGrxiEe2Pj61kfbEkwg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6vGG7xiEe2Pj61kfbEkwg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6vGHLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R6vtILxiEe2Pj61kfbEkwg" name="isAvailable" visibility="protected" method="_R-kdXrxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_BwM7xiEe2Pj61kfbEkwg">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_R6vtIbxiEe2Pj61kfbEkwg" name="a1" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6vtIrxiEe2Pj61kfbEkwg" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6vtI7xiEe2Pj61kfbEkwg" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6vtJLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R6vtJbxiEe2Pj61kfbEkwg" name="canCombineEntriesInPlace" visibility="private" method="_R-lERbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6vtJrxiEe2Pj61kfbEkwg" name="a1" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6vtJ7xiEe2Pj61kfbEkwg" name="a2" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6vtKLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R6vtKbxiEe2Pj61kfbEkwg" name="combinedEntriesInPlace" visibility="private" method="_R-lrULxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6vtKrxiEe2Pj61kfbEkwg" name="a1" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6vtK7xiEe2Pj61kfbEkwg" name="a2" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6vtLLxiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6wUMLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R6wUMbxiEe2Pj61kfbEkwg" name="addToSchedule" visibility="protected" method="_R-lrVbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6wUMrxiEe2Pj61kfbEkwg" name="next" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6wUM7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R6wUNLxiEe2Pj61kfbEkwg" name="reportNotSchedulable" visibility="private" method="_R-lrWLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6wUNbxiEe2Pj61kfbEkwg" name="object" type="_Ri2Kg7xiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_RlvGcLxiEe2Pj61kfbEkwg" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_R9rsYLxiEe2Pj61kfbEkwg" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_R9rsYrxiEe2Pj61kfbEkwg" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-j2K7xiEe2Pj61kfbEkwg" name="ScheduleLocation" specification="_RlvGcbxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R-j2LLxiEe2Pj61kfbEkwg" type="_RlvGcLxiEe2Pj61kfbEkwg" direction="return"/>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-j2LbxiEe2Pj61kfbEkwg" name="ScheduleLocation" specification="_RlvtgLxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R-j2LrxiEe2Pj61kfbEkwg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_R-j2L7xiEe2Pj61kfbEkwg" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_R-j2MLxiEe2Pj61kfbEkwg" type="_RlvGcLxiEe2Pj61kfbEkwg" direction="return"/>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-kdMLxiEe2Pj61kfbEkwg" name="getChannel" specification="_RlvthrxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R-kdMbxiEe2Pj61kfbEkwg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-kdMrxiEe2Pj61kfbEkwg" name="getTime" specification="_RlwUkbxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R-kdM7xiEe2Pj61kfbEkwg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_RlvGcbxiEe2Pj61kfbEkwg" name="ScheduleLocation" visibility="package" method="_R-j2K7xiEe2Pj61kfbEkwg">
                  <eAnnotations xmi:id="_RlvGcrxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_RlvGc7xiEe2Pj61kfbEkwg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_RlvGdLxiEe2Pj61kfbEkwg" type="_RlvGcLxiEe2Pj61kfbEkwg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_RlvtgLxiEe2Pj61kfbEkwg" name="ScheduleLocation" visibility="package" method="_R-j2LbxiEe2Pj61kfbEkwg">
                  <eAnnotations xmi:id="_Rlvtg7xiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_RlvthLxiEe2Pj61kfbEkwg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_RlvtgbxiEe2Pj61kfbEkwg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_RlvtgrxiEe2Pj61kfbEkwg" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_RlvthbxiEe2Pj61kfbEkwg" type="_RlvGcLxiEe2Pj61kfbEkwg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_RlvthrxiEe2Pj61kfbEkwg" name="getChannel" visibility="protected" method="_R-kdMLxiEe2Pj61kfbEkwg">
                  <ownedComment xmi:id="_R_BJJrxiEe2Pj61kfbEkwg">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_RlwUkLxiEe2Pj61kfbEkwg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_RlwUkbxiEe2Pj61kfbEkwg" name="getTime" visibility="protected" method="_R-kdMrxiEe2Pj61kfbEkwg">
                  <ownedComment xmi:id="_R_BJJ7xiEe2Pj61kfbEkwg">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_RlwUkrxiEe2Pj61kfbEkwg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rl6FkLxiEe2Pj61kfbEkwg" name="ScheduleTable">
              <generalization xmi:id="_R6xiULxiEe2Pj61kfbEkwg" general="_RmGS0LxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9s6gLxiEe2Pj61kfbEkwg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9s6gbxiEe2Pj61kfbEkwg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-lrXLxiEe2Pj61kfbEkwg" name="ScheduleTable" specification="_Rl6soLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-lrXbxiEe2Pj61kfbEkwg" type="_Rl6FkLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-lrXrxiEe2Pj61kfbEkwg" name="ScheduleTable" specification="_Rl7TsLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-lrX7xiEe2Pj61kfbEkwg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-lrYLxiEe2Pj61kfbEkwg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-lrYbxiEe2Pj61kfbEkwg" type="_Rl6FkLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Rl6soLxiEe2Pj61kfbEkwg" name="ScheduleTable" visibility="package" method="_R-lrXLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_Rl6sobxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Rl6sorxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Rl6so7xiEe2Pj61kfbEkwg" type="_Rl6FkLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rl7TsLxiEe2Pj61kfbEkwg" name="ScheduleTable" visibility="package" method="_R-lrXrxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_Rl7Ts7xiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Rl7TtLxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Rl7TsbxiEe2Pj61kfbEkwg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rl7TsrxiEe2Pj61kfbEkwg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rl7TtbxiEe2Pj61kfbEkwg" type="_Rl6FkLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rl76wLxiEe2Pj61kfbEkwg" name="ScheduleTime">
              <ownedAttribute xmi:id="_R9s6grxiEe2Pj61kfbEkwg" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9s6g7xiEe2Pj61kfbEkwg" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-mSYLxiEe2Pj61kfbEkwg" name="ScheduleTime" specification="_Rl8h0LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-mSYbxiEe2Pj61kfbEkwg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-mSYrxiEe2Pj61kfbEkwg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-mSY7xiEe2Pj61kfbEkwg" type="_Rl76wLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Rl8h0LxiEe2Pj61kfbEkwg" name="ScheduleTime" visibility="package" method="_R-mSYLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_Rl8h07xiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Rl8h1LxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Rl8h0bxiEe2Pj61kfbEkwg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rl8h0rxiEe2Pj61kfbEkwg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rl8h1bxiEe2Pj61kfbEkwg" type="_Rl76wLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rl9I4LxiEe2Pj61kfbEkwg" name="SimulatorInput">
              <ownedComment xmi:id="_R_BwNbxiEe2Pj61kfbEkwg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rl9v8LxiEe2Pj61kfbEkwg" name="SortedPeriodQueue">
              <generalization xmi:id="_Rl--FLxiEe2Pj61kfbEkwg" general="_RlTBlLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9thkLxiEe2Pj61kfbEkwg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9thkbxiEe2Pj61kfbEkwg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-mSZLxiEe2Pj61kfbEkwg" name="SortedPeriodQueue" specification="_Rl--ELxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-mSZbxiEe2Pj61kfbEkwg" type="_Rl9v8LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-mSZrxiEe2Pj61kfbEkwg" name="SortedPeriodQueue" specification="_R6yJYLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-mSZ7xiEe2Pj61kfbEkwg" name="schedulableObjects" type="_R6WrkLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-mSaLxiEe2Pj61kfbEkwg" type="_Rl9v8LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Rl--ELxiEe2Pj61kfbEkwg" name="SortedPeriodQueue" visibility="package" method="_R-mSZLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_Rl--EbxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Rl--ErxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Rl--E7xiEe2Pj61kfbEkwg" type="_Rl9v8LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R6yJYLxiEe2Pj61kfbEkwg" name="SortedPeriodQueue" visibility="package" method="_R-mSZrxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R6yJYrxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R6yJY7xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R6yJYbxiEe2Pj61kfbEkwg" name="schedulableObjects" type="_R6WrkLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6yJZLxiEe2Pj61kfbEkwg" type="_Rl9v8LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_RmAMMLxiEe2Pj61kfbEkwg" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_R6ywcbxiEe2Pj61kfbEkwg" general="_RlWE4LxiEe2Pj61kfbEkwg"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_RmAzQLxiEe2Pj61kfbEkwg" name="ScheduleChoices">
                <ownedLiteral xmi:id="_RmBaUbxiEe2Pj61kfbEkwg" name="PRIORITY"/>
                <ownedLiteral xmi:id="_RmBaUrxiEe2Pj61kfbEkwg" name="RM"/>
                <ownedLiteral xmi:id="_RmBaU7xiEe2Pj61kfbEkwg" name="DM"/>
                <ownedLiteral xmi:id="_RmBaVLxiEe2Pj61kfbEkwg" name="RTHART"/>
                <ownedLiteral xmi:id="_RmBaVbxiEe2Pj61kfbEkwg" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_RmBaVrxiEe2Pj61kfbEkwg" name="POSET_RM"/>
                <ownedLiteral xmi:id="_RmBaV7xiEe2Pj61kfbEkwg" name="POSET_DM"/>
                <ownedLiteral xmi:id="_RmBaWLxiEe2Pj61kfbEkwg" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_RmCBYLxiEe2Pj61kfbEkwg" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_RmCBYbxiEe2Pj61kfbEkwg" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_RmCBYrxiEe2Pj61kfbEkwg" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_RmCBY7xiEe2Pj61kfbEkwg" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_RmCocLxiEe2Pj61kfbEkwg" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_RmCocbxiEe2Pj61kfbEkwg" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_RmDPgLxiEe2Pj61kfbEkwg" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_RmDPgbxiEe2Pj61kfbEkwg" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_RmDPgrxiEe2Pj61kfbEkwg" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_RmD2kLxiEe2Pj61kfbEkwg" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_RmD2kbxiEe2Pj61kfbEkwg" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RmEdoLxiEe2Pj61kfbEkwg" name="SystemFactory">
              <ownedComment xmi:id="_R_BwNrxiEe2Pj61kfbEkwg">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-mSabxiEe2Pj61kfbEkwg" name="create" specification="_R6zXgbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-mSarxiEe2Pj61kfbEkwg" name="workload" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-mSa7xiEe2Pj61kfbEkwg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-mSbLxiEe2Pj61kfbEkwg" name="choice" type="_RmAzQLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-mSbbxiEe2Pj61kfbEkwg" type="_Rm2gwLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R6zXgbxiEe2Pj61kfbEkwg" name="create" isStatic="true" method="_R-mSabxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R6zXgrxiEe2Pj61kfbEkwg" name="workload" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6zXg7xiEe2Pj61kfbEkwg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R6zXhLxiEe2Pj61kfbEkwg" name="choice" type="_RmAzQLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6z-kLxiEe2Pj61kfbEkwg" type="_Rm2gwLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RmGS0LxiEe2Pj61kfbEkwg" name="Table">
              <generalization xmi:id="_R8ahEbxiEe2Pj61kfbEkwg" general="_R5gXALxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9thkrxiEe2Pj61kfbEkwg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9thk7xiEe2Pj61kfbEkwg" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-mSbrxiEe2Pj61kfbEkwg" name="Table" specification="_RmG54bxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-mSb7xiEe2Pj61kfbEkwg" type="_RmGS0LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-mScLxiEe2Pj61kfbEkwg" name="Table" specification="_RmHg87xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-mScbxiEe2Pj61kfbEkwg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-mScrxiEe2Pj61kfbEkwg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-mSc7xiEe2Pj61kfbEkwg" type="_RmGS0LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-mSdLxiEe2Pj61kfbEkwg" name="getNumRows" specification="_RmIIArxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-mSdbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-m5cLxiEe2Pj61kfbEkwg" name="getNumColumns" specification="_RmIIBLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-m5cbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-m5crxiEe2Pj61kfbEkwg" name="set" specification="_R8Z6ALxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-m5c7xiEe2Pj61kfbEkwg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-m5dLxiEe2Pj61kfbEkwg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-m5dbxiEe2Pj61kfbEkwg" name="element" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-m5drxiEe2Pj61kfbEkwg" name="get" specification="_RmIIBrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-m5d7xiEe2Pj61kfbEkwg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-m5eLxiEe2Pj61kfbEkwg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-m5ebxiEe2Pj61kfbEkwg" type="_R76KwLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RmG54bxiEe2Pj61kfbEkwg" name="Table" method="_R-mSbrxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RmHg8LxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RmHg8bxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RmHg8rxiEe2Pj61kfbEkwg" type="_RmGS0LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RmHg87xiEe2Pj61kfbEkwg" name="Table" method="_R-mScLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RmHg9rxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RmIIALxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RmHg9LxiEe2Pj61kfbEkwg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RmHg9bxiEe2Pj61kfbEkwg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RmIIAbxiEe2Pj61kfbEkwg" type="_RmGS0LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RmIIArxiEe2Pj61kfbEkwg" name="getNumRows" method="_R-mSdLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RmIIA7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RmIIBLxiEe2Pj61kfbEkwg" name="getNumColumns" method="_R-m5cLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RmIIBbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RmIIBrxiEe2Pj61kfbEkwg" name="get" method="_R-m5drxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RmIIB7xiEe2Pj61kfbEkwg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RmIICLxiEe2Pj61kfbEkwg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R8ahELxiEe2Pj61kfbEkwg" type="_R76KwLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R8Z6ALxiEe2Pj61kfbEkwg" name="set" method="_R-m5crxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R8Z6AbxiEe2Pj61kfbEkwg" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R8Z6ArxiEe2Pj61kfbEkwg" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R8Z6A7xiEe2Pj61kfbEkwg" name="element" type="_R76KwLxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_RmJWILxiEe2Pj61kfbEkwg" name="Visualization">
              <ownedComment xmi:id="_R_BwN7xiEe2Pj61kfbEkwg">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_RmJ9MLxiEe2Pj61kfbEkwg" name="SystemChoices">
                <ownedLiteral xmi:id="_RmKkQLxiEe2Pj61kfbEkwg" name="SOURCE"/>
                <ownedLiteral xmi:id="_RmKkQbxiEe2Pj61kfbEkwg" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_RmKkQrxiEe2Pj61kfbEkwg" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_RmKkQ7xiEe2Pj61kfbEkwg" name="LATENCY"/>
                <ownedLiteral xmi:id="_RmKkRLxiEe2Pj61kfbEkwg" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_RmKkRbxiEe2Pj61kfbEkwg" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_RmKkRrxiEe2Pj61kfbEkwg" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_RmLLULxiEe2Pj61kfbEkwg" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_RmLLUrxiEe2Pj61kfbEkwg" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_RmLLU7xiEe2Pj61kfbEkwg" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_RmLyYLxiEe2Pj61kfbEkwg" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_RmLyYbxiEe2Pj61kfbEkwg" name="toDisplay"/>
              <ownedOperation xmi:id="_RmLyYrxiEe2Pj61kfbEkwg" name="toFile"/>
              <ownedOperation xmi:id="_RmLyY7xiEe2Pj61kfbEkwg" name="toString">
                <ownedParameter xmi:id="_RmLyZLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RmMZcLxiEe2Pj61kfbEkwg" name="VisualizationFactory">
              <ownedComment xmi:id="_R_BwOLxiEe2Pj61kfbEkwg">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-m5erxiEe2Pj61kfbEkwg" name="createProgramVisualization" specification="_R61Ms7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-m5e7xiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-m5fLxiEe2Pj61kfbEkwg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-m5fbxiEe2Pj61kfbEkwg" name="choice" type="_RmJ9MLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-m5frxiEe2Pj61kfbEkwg" type="_RmJWILxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-m5f7xiEe2Pj61kfbEkwg" name="createWorkLoadVisualization" specification="_R61zxLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-m5gLxiEe2Pj61kfbEkwg" name="workload" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-m5gbxiEe2Pj61kfbEkwg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-m5grxiEe2Pj61kfbEkwg" name="choice" type="_RmLLULxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-m5g7xiEe2Pj61kfbEkwg" type="_RmJWILxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R61Ms7xiEe2Pj61kfbEkwg" name="createProgramVisualization" isStatic="true" method="_R-m5erxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R61zwLxiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R61zwbxiEe2Pj61kfbEkwg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R61zwrxiEe2Pj61kfbEkwg" name="choice" type="_RmJ9MLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R61zw7xiEe2Pj61kfbEkwg" type="_RmJWILxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R61zxLxiEe2Pj61kfbEkwg" name="createWorkLoadVisualization" isStatic="true" method="_R-m5f7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R61zxbxiEe2Pj61kfbEkwg" name="workload" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R61zxrxiEe2Pj61kfbEkwg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R61zx7xiEe2Pj61kfbEkwg" name="choice" type="_RmLLULxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R61zyLxiEe2Pj61kfbEkwg" type="_RmJWILxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RmO1sLxiEe2Pj61kfbEkwg" name="VisualizationImplementation">
              <ownedComment xmi:id="_R_BwObxiEe2Pj61kfbEkwg">
                <body>Handles visualizations for Warp program outputs.&#xD;
This includes creating either GraphViz files (.gv) or WARP files (.wf) and &#xD;
displaying graphs in a new window.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R9uIoLxiEe2Pj61kfbEkwg" name="visualization" visibility="private" type="_RjqC0LxiEe2Pj61kfbEkwg" association="_R_ylNLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9uIorxiEe2Pj61kfbEkwg" name="fileContent" visibility="private" type="_RjqC0LxiEe2Pj61kfbEkwg" association="_R_zMQbxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9uIpLxiEe2Pj61kfbEkwg" name="window" visibility="private" type="_RkODgLxiEe2Pj61kfbEkwg" association="_R_zzULxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9uvsbxiEe2Pj61kfbEkwg" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9uvs7xiEe2Pj61kfbEkwg" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9uvtbxiEe2Pj61kfbEkwg" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9vWwbxiEe2Pj61kfbEkwg" name="fm" visibility="private" type="_Rj0a4LxiEe2Pj61kfbEkwg" association="_R_zzU7xiEe2Pj61kfbEkwg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9vWwrxiEe2Pj61kfbEkwg" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9vWxLxiEe2Pj61kfbEkwg" name="warp" visibility="private" type="_Rm2gwLxiEe2Pj61kfbEkwg" association="_R_0aYbxiEe2Pj61kfbEkwg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9vWxbxiEe2Pj61kfbEkwg" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9v90LxiEe2Pj61kfbEkwg" name="workLoad" visibility="private" type="_RnLQ4LxiEe2Pj61kfbEkwg" association="_R_0aZLxiEe2Pj61kfbEkwg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9v90bxiEe2Pj61kfbEkwg" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9v907xiEe2Pj61kfbEkwg" name="visualizationObject" visibility="private" type="_RmX_oLxiEe2Pj61kfbEkwg" association="_R_1BcbxiEe2Pj61kfbEkwg"/>
              <interfaceRealization xmi:id="_R62a0LxiEe2Pj61kfbEkwg" client="_RmO1sLxiEe2Pj61kfbEkwg" supplier="_RmJWILxiEe2Pj61kfbEkwg" contract="_RmJWILxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-m5hLxiEe2Pj61kfbEkwg" name="VisualizationImplementation" specification="_R8bvMbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-m5hbxiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-m5hrxiEe2Pj61kfbEkwg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-m5h7xiEe2Pj61kfbEkwg" name="choice" type="_R8bIILxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-m5iLxiEe2Pj61kfbEkwg" type="_RmO1sLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-m5ibxiEe2Pj61kfbEkwg" name="VisualizationImplementation" specification="_R8cWQbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-m5irxiEe2Pj61kfbEkwg" name="workLoad" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-m5i7xiEe2Pj61kfbEkwg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-m5jLxiEe2Pj61kfbEkwg" name="choice" type="_R8bvOLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-m5jbxiEe2Pj61kfbEkwg" type="_RmO1sLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-nggLxiEe2Pj61kfbEkwg" name="toDisplay" specification="_RmRR8LxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>window = visualizationObject.displayVisualization();&#xD;
 if (window != null) {&#xD;
   window.setVisible();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-nggbxiEe2Pj61kfbEkwg" name="toFile" specification="_RmR5ArxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-nggrxiEe2Pj61kfbEkwg" name="toString" specification="_RmSgEbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-ngg7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-nghLxiEe2Pj61kfbEkwg" name="createVisualization" specification="_R8c9VrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-nghbxiEe2Pj61kfbEkwg" name="choice" type="_R8bIILxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case RELIABILITIES:&#xD;
     // TODO Implement Reliability Analysis Visualization&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case SIMULATOR_INPUT:&#xD;
     // TODO Implement Simulator Input Visualization&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
&#xD;
   case LATENCY:&#xD;
     // TODO Implement Latency Analysis Visualization&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case CHANNEL:&#xD;
     // TODO Implement Channel Analysis Visualization&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp,&#xD;
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(&#xD;
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-nghrxiEe2Pj61kfbEkwg" name="createVisualization" specification="_R8dkYLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-ngh7xiEe2Pj61kfbEkwg" name="choice" type="_R8bvOLxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case COMUNICATION_GRAPH:&#xD;
     // createWarpVisualization();&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-ngiLxiEe2Pj61kfbEkwg" name="createVisualization" specification="_R8dkYrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-ngibxiEe2Pj61kfbEkwg" name="obj" type="_R76KwLxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 /* display is file content printed to console */&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
 visualizationObject = obj;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-ngirxiEe2Pj61kfbEkwg" name="createFileNameTemplate" specification="_RmTHILxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-ngi7xiEe2Pj61kfbEkwg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-ngjLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 // Now create the fileNameTemplate using full output path and input filename&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RmRR8LxiEe2Pj61kfbEkwg" name="toDisplay" method="_R-nggLxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RmR5ArxiEe2Pj61kfbEkwg" name="toFile" method="_R-nggbxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RmSgEbxiEe2Pj61kfbEkwg" name="toString" method="_R-nggrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RmSgErxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RmTHILxiEe2Pj61kfbEkwg" name="createFileNameTemplate" visibility="private" method="_R-ngirxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_BwPbxiEe2Pj61kfbEkwg">
                  <body>Generates full path to output file.&#xD;
   * &#xD;
   * @param outputDirectory&#xD;
   * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_RmTHIbxiEe2Pj61kfbEkwg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RmTuMLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R8bvMbxiEe2Pj61kfbEkwg" name="VisualizationImplementation" method="_R-m5hLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R8bvNbxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R8bvNrxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_R_BwOrxiEe2Pj61kfbEkwg">
                  <body>Creates visualization from warp program output.&#xD;
   * &#xD;
   * @param warp WarpInterface object. &#xD;
   * @param outputDirectory Where to save the visualization&#xD;
   * @param choice Type of visualization to create. @see Visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_R8bvMrxiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8bvM7xiEe2Pj61kfbEkwg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R8bvNLxiEe2Pj61kfbEkwg" name="choice" type="_R8bIILxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8bvN7xiEe2Pj61kfbEkwg" type="_RmO1sLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R8cWQbxiEe2Pj61kfbEkwg" name="VisualizationImplementation" method="_R-m5ibxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R8c9U7xiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R8c9VLxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_R_BwO7xiEe2Pj61kfbEkwg">
                  <body>Creates visualization from given workload.&#xD;
   * &#xD;
   * @param workLoad WorkLoad object&#xD;
   * @param outputDirectory Where to save the visualization&#xD;
   * @param choice Type of visualization to create. @see Visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_R8c9ULxiEe2Pj61kfbEkwg" name="workLoad" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8c9UbxiEe2Pj61kfbEkwg" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R8c9UrxiEe2Pj61kfbEkwg" name="choice" type="_R8bvOLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8c9VbxiEe2Pj61kfbEkwg" type="_RmO1sLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R8c9VrxiEe2Pj61kfbEkwg" name="createVisualization" visibility="private" method="_R-nghLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R8c9V7xiEe2Pj61kfbEkwg" name="choice" type="_R8bIILxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R8dkYLxiEe2Pj61kfbEkwg" name="createVisualization" visibility="private" method="_R-nghrxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_BwPLxiEe2Pj61kfbEkwg">
                  <body>Generates visualization from workload choice.&#xD;
   * Either communication graph, graphviz, or input graph.&#xD;
   * &#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_R8dkYbxiEe2Pj61kfbEkwg" name="choice" type="_R8bvOLxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R8dkYrxiEe2Pj61kfbEkwg" name="createVisualization" visibility="private" method="_R-ngiLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R8dkY7xiEe2Pj61kfbEkwg" name="obj" type="_R76KwLxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RmX_oLxiEe2Pj61kfbEkwg" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_R_CXQLxiEe2Pj61kfbEkwg">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R9wk4LxiEe2Pj61kfbEkwg" name="fm" visibility="private" type="_Rj0a4LxiEe2Pj61kfbEkwg" association="_R_1BdLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9wk4rxiEe2Pj61kfbEkwg" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9xL8LxiEe2Pj61kfbEkwg" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9xL8rxiEe2Pj61kfbEkwg" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9xL87xiEe2Pj61kfbEkwg" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9xL9LxiEe2Pj61kfbEkwg" name="visualizationData" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R9xL9bxiEe2Pj61kfbEkwg" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-ngjbxiEe2Pj61kfbEkwg" name="VisualizationObject" specification="_R64QALxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-ngjrxiEe2Pj61kfbEkwg" name="fm" type="_Rj0a4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-ngj7xiEe2Pj61kfbEkwg" name="workLoad" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-ngkLxiEe2Pj61kfbEkwg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-ngkbxiEe2Pj61kfbEkwg" type="_RmX_oLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,&#xD;
     String.valueOf(workLoad.getMinPacketReceptionRate()), String.valueOf(workLoad.getE2e()));&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-oHkLxiEe2Pj61kfbEkwg" name="VisualizationObject" specification="_R643FrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-oHkbxiEe2Pj61kfbEkwg" name="fm" type="_Rj0a4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-oHkrxiEe2Pj61kfbEkwg" name="warp" type="_RmAMMLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-oHk7xiEe2Pj61kfbEkwg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-oHlLxiEe2Pj61kfbEkwg" type="_RmX_oLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults());&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e());&#xD;
 }&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-oHlbxiEe2Pj61kfbEkwg" name="VisualizationObject" specification="_R65eIbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-oHlrxiEe2Pj61kfbEkwg" name="fm" type="_Rj0a4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-oHl7xiEe2Pj61kfbEkwg" name="warp" type="_RmAMMLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-oHmLxiEe2Pj61kfbEkwg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-oHmbxiEe2Pj61kfbEkwg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-oHmrxiEe2Pj61kfbEkwg" type="_RmX_oLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getNumFaults()) + nameExtension;&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e())&#xD;
           + nameExtension;&#xD;
 }&#xD;
&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-oHm7xiEe2Pj61kfbEkwg" name="VisualizationObject" specification="_R65eKbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-oHnLxiEe2Pj61kfbEkwg" name="fm" type="_Rj0a4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-oHnbxiEe2Pj61kfbEkwg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-oHnrxiEe2Pj61kfbEkwg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-oHn7xiEe2Pj61kfbEkwg" type="_RmX_oLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = nameExtension;&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-oHoLxiEe2Pj61kfbEkwg" name="nameExtension" specification="_R8eygLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-oHobxiEe2Pj61kfbEkwg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-oHorxiEe2Pj61kfbEkwg" name="m" type="_R8TMULxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-oHo7xiEe2Pj61kfbEkwg" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-oHpLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension =&#xD;
     String.format(&quot;%s-%sM-%sE2E&quot;, schName, String.valueOf(m), String.valueOf(e2e));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-oHpbxiEe2Pj61kfbEkwg" name="nameExtension" specification="_Rmab4LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-oHprxiEe2Pj61kfbEkwg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-oHp7xiEe2Pj61kfbEkwg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-oHqLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;, schName, String.valueOf(numFaults));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-oHqbxiEe2Pj61kfbEkwg" name="getFileManager" specification="_Rmab5LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-oHqrxiEe2Pj61kfbEkwg" type="_Rj0a4LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return fm;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-oHq7xiEe2Pj61kfbEkwg" name="visualization" specification="_RmbC8LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-oHrLxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 var data = createVisualizationData();&#xD;
&#xD;
 if (data != null) {&#xD;
   String nodeString = String.join(&quot;\t&quot;, createColumnHeader()) + &quot;\n&quot;;&#xD;
   content.add(nodeString);&#xD;
&#xD;
   for (int rowIndex = 0; rowIndex &lt; data.length; rowIndex++) {&#xD;
     var row = data[rowIndex];&#xD;
     String rowString = String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
     content.add(rowString);&#xD;
   }&#xD;
 } else {&#xD;
   content.add(NOT_IMPLEMENTED);&#xD;
 }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-oHrbxiEe2Pj61kfbEkwg" name="createFile" specification="_RmbC8bxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-oHrrxiEe2Pj61kfbEkwg" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-oHr7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-oHsLxiEe2Pj61kfbEkwg" name="fileVisualization" specification="_RmbqAbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-oHsbxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 fileContent.addAll(visualization());&#xD;
 fileContent.addAll(createFooter());&#xD;
 return fileContent;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-ouoLxiEe2Pj61kfbEkwg" name="displayVisualization" specification="_RmbqArxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-ouobxiEe2Pj61kfbEkwg" type="_RkODgLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return null; // not implemented&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-ouorxiEe2Pj61kfbEkwg" name="createHeader" specification="_RmcRELxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-ouo7xiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-oupLxiEe2Pj61kfbEkwg" name="createFooter" specification="_RmcREbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-oupbxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-ouprxiEe2Pj61kfbEkwg" name="createColumnHeader" specification="_RmcRErxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-oup7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-ouqLxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new String[] {NOT_IMPLEMENTED};&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-ouqbxiEe2Pj61kfbEkwg" name="createVisualizationData" specification="_Rmc4I7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-ouqrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-ouq7xiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualizationData; // not implemented--returns null&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Rmab4LxiEe2Pj61kfbEkwg" name="nameExtension" visibility="private" method="_R-oHpbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Rmab4bxiEe2Pj61kfbEkwg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rmab4rxiEe2Pj61kfbEkwg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rmab47xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rmab5LxiEe2Pj61kfbEkwg" name="getFileManager" method="_R-oHqbxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_CXQbxiEe2Pj61kfbEkwg">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_R66FNbxiEe2Pj61kfbEkwg" type="_Rj0a4LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RmbC8LxiEe2Pj61kfbEkwg" name="visualization" method="_R-oHq7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R66FNrxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RmbC8bxiEe2Pj61kfbEkwg" name="createFile" method="_R-oHrbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RmbC8rxiEe2Pj61kfbEkwg" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RmbqALxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RmbqAbxiEe2Pj61kfbEkwg" name="fileVisualization" method="_R-oHsLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R66FN7xiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RmbqArxiEe2Pj61kfbEkwg" name="displayVisualization" method="_R-ouoLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R66FOLxiEe2Pj61kfbEkwg" type="_RkODgLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RmcRELxiEe2Pj61kfbEkwg" name="createHeader" visibility="protected" method="_R-ouorxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R66FObxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RmcREbxiEe2Pj61kfbEkwg" name="createFooter" visibility="protected" method="_R-oupLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R66FOrxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RmcRErxiEe2Pj61kfbEkwg" name="createColumnHeader" visibility="protected" method="_R-ouprxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Rmc4ILxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rmc4IbxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rmc4I7xiEe2Pj61kfbEkwg" name="createVisualizationData" visibility="protected" method="_R-ouqbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Rmc4JLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rmc4JbxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R64QALxiEe2Pj61kfbEkwg" name="VisualizationObject" visibility="package" method="_R-ngjbxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R643E7xiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R643FLxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R643ELxiEe2Pj61kfbEkwg" name="fm" type="_Rj0a4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R643EbxiEe2Pj61kfbEkwg" name="workLoad" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R643ErxiEe2Pj61kfbEkwg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R643FbxiEe2Pj61kfbEkwg" type="_RmX_oLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R643FrxiEe2Pj61kfbEkwg" name="VisualizationObject" visibility="package" method="_R-oHkLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R643GrxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R643G7xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R643F7xiEe2Pj61kfbEkwg" name="fm" type="_Rj0a4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R643GLxiEe2Pj61kfbEkwg" name="warp" type="_RmAMMLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R643GbxiEe2Pj61kfbEkwg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R65eILxiEe2Pj61kfbEkwg" type="_RmX_oLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R65eIbxiEe2Pj61kfbEkwg" name="VisualizationObject" visibility="package" method="_R-oHlbxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R65eJrxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R65eJ7xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R65eIrxiEe2Pj61kfbEkwg" name="fm" type="_Rj0a4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R65eI7xiEe2Pj61kfbEkwg" name="warp" type="_RmAMMLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R65eJLxiEe2Pj61kfbEkwg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R65eJbxiEe2Pj61kfbEkwg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R65eKLxiEe2Pj61kfbEkwg" type="_RmX_oLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R65eKbxiEe2Pj61kfbEkwg" name="VisualizationObject" visibility="package" method="_R-oHm7xiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R66FMrxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R66FM7xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R65eKrxiEe2Pj61kfbEkwg" name="fm" type="_Rj0a4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R66FMLxiEe2Pj61kfbEkwg" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R66FMbxiEe2Pj61kfbEkwg" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R66FNLxiEe2Pj61kfbEkwg" type="_RmX_oLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R8eygLxiEe2Pj61kfbEkwg" name="nameExtension" visibility="private" method="_R-oHoLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R8eygbxiEe2Pj61kfbEkwg" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R8eygrxiEe2Pj61kfbEkwg" name="m" type="_R8TMULxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8eyg7xiEe2Pj61kfbEkwg" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R8eyhLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RmgigLxiEe2Pj61kfbEkwg" name="WorkLoadDescription">
              <ownedComment xmi:id="_R_CXQrxiEe2Pj61kfbEkwg">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4 Fall 2022</body>
              </ownedComment>
              <generalization xmi:id="_R67TUrxiEe2Pj61kfbEkwg" general="_RmX_oLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9xzAbxiEe2Pj61kfbEkwg" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9xzArxiEe2Pj61kfbEkwg" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9yaELxiEe2Pj61kfbEkwg" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9yaEbxiEe2Pj61kfbEkwg" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9yaErxiEe2Pj61kfbEkwg" name="FILE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9yaE7xiEe2Pj61kfbEkwg" value="&quot;StressTest.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9yaFLxiEe2Pj61kfbEkwg" name="description" visibility="private" type="_RjqC0LxiEe2Pj61kfbEkwg" association="_R_1ogbxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9yaFrxiEe2Pj61kfbEkwg" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9zBIbxiEe2Pj61kfbEkwg" name="fm" visibility="private" type="_Rj0a4LxiEe2Pj61kfbEkwg" association="_R_1ohLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9zBI7xiEe2Pj61kfbEkwg" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-ourLxiEe2Pj61kfbEkwg" name="WorkLoadDescription" specification="_RmhwoLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-ourbxiEe2Pj61kfbEkwg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-ourrxiEe2Pj61kfbEkwg" type="_RmgigLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
 this.fm = this.getFileManager();&#xD;
 initialize(inputFileName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-our7xiEe2Pj61kfbEkwg" name="visualization" specification="_RmhwpbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-ousLxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-pVsLxiEe2Pj61kfbEkwg" name="fileVisualization" specification="_Rmi-wLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-pVsbxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-pVsrxiEe2Pj61kfbEkwg" name="toString" specification="_Rmjl0rxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-pVs7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-pVtLxiEe2Pj61kfbEkwg" name="initialize" specification="_RmkM47xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-pVtbxiEe2Pj61kfbEkwg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
 InputGraphFile gf = new InputGraphFile(fm);&#xD;
 inputGraphString = gf.readGraphFile(inputFile);&#xD;
 this.inputFileName = gf.getGraphFileName();&#xD;
 description = new Description(inputGraphString);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-pVtrxiEe2Pj61kfbEkwg" name="main" specification="_Rmkz8LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-pVt7xiEe2Pj61kfbEkwg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-pVuLxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>//Initiating new WorkLoadDescription w/ FILE&#xD;
	  //FILE is a static final variable initialized at the beginning of the file&#xD;
	  //allowing for quick swap of files&#xD;
	   WorkLoadDescription wldTest = new WorkLoadDescription(FILE);&#xD;
	   //Initializing new array list for which elements of the file will be stored&#xD;
	   ArrayList&lt;String> testFile = new ArrayList&lt;String>();&#xD;
	   //for loop to add elements from wldTest to Array list skipping the title line&#xD;
	   for(int i = 1 ; i &lt; wldTest.visualization().size(); i++) {&#xD;
		   testFile.add(wldTest.visualization().get(i));&#xD;
	   }&#xD;
	   //Sorting the new ArrayList&#xD;
	   Collections.sort(testFile);&#xD;
	   //Print out the input file name without suffix&#xD;
	   System.out.println(wldTest.getInputFileName().replace(&quot;.txt&quot;, &quot;&quot;));&#xD;
	   //for loop goes through the new ArrayList skipping the final &quot;}&quot;&#xD;
	   for(int i = 0 ; i &lt; testFile.size() - 1; i++ ) {&#xD;
		   //if condition skips blank lines&#xD;
		   if (testFile.get(i).isBlank()) {&#xD;
			   continue;&#xD;
		   }&#xD;
		   //Printing out results formatted to example, trimming leading or ending blank space&#xD;
		   System.out.println(&quot;Flow &quot; + (i + 1) +&quot;: &quot; + testFile.get(i).trim() );&#xD;
		   &#xD;
	   }&#xD;
	   &#xD;
	   &#xD;
	  &#xD;
	   &#xD;
	   &#xD;
	  &#xD;
&#xD;
	   	   &#xD;
	   &#xD;
	   </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RmhwoLxiEe2Pj61kfbEkwg" name="WorkLoadDescription" visibility="package" method="_R-ourLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RmhworxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Rmhwo7xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RmhwobxiEe2Pj61kfbEkwg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RmhwpLxiEe2Pj61kfbEkwg" type="_RmgigLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RmhwpbxiEe2Pj61kfbEkwg" name="visualization" method="_R-our7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R67TULxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rmi-wLxiEe2Pj61kfbEkwg" name="fileVisualization" method="_R-pVsLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R67TUbxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rmjl0rxiEe2Pj61kfbEkwg" name="toString" method="_R-pVsrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Rmjl07xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RmkM47xiEe2Pj61kfbEkwg" name="initialize" visibility="private" method="_R-pVtLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RmkM5LxiEe2Pj61kfbEkwg" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rmkz8LxiEe2Pj61kfbEkwg" name="main" isStatic="true" method="_R-pVtrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Rmkz8bxiEe2Pj61kfbEkwg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rmkz8rxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RmmpILxiEe2Pj61kfbEkwg" name="WarpSystem">
              <ownedComment xmi:id="_R_CXQ7xiEe2Pj61kfbEkwg">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R9zoMLxiEe2Pj61kfbEkwg" name="program" visibility="private" type="_RoNysLxiEe2Pj61kfbEkwg" association="_R_2PkbxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9zoMrxiEe2Pj61kfbEkwg" name="workLoad" visibility="private" type="_RnLQ4LxiEe2Pj61kfbEkwg" association="_R_2PlLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9zoNLxiEe2Pj61kfbEkwg" name="ra" visibility="private" type="_RlU2wLxiEe2Pj61kfbEkwg" association="_R_22obxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R90PQLxiEe2Pj61kfbEkwg" name="la" visibility="private" type="_RkXNdLxiEe2Pj61kfbEkwg" association="_R_22pLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R90PQrxiEe2Pj61kfbEkwg" name="ca" visibility="private" type="_RjLhsLxiEe2Pj61kfbEkwg" association="_R_3dsbxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R90PRLxiEe2Pj61kfbEkwg" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R91dYrxiEe2Pj61kfbEkwg" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R91dY7xiEe2Pj61kfbEkwg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R91dZbxiEe2Pj61kfbEkwg" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R91dZrxiEe2Pj61kfbEkwg" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_R67TU7xiEe2Pj61kfbEkwg" client="_RmmpILxiEe2Pj61kfbEkwg" supplier="_Rm2gwLxiEe2Pj61kfbEkwg" contract="_Rm2gwLxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-pVu7xiEe2Pj61kfbEkwg" name="WarpSystem" specification="_R8gAobxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-pVvLxiEe2Pj61kfbEkwg" name="workLoad" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-pVvbxiEe2Pj61kfbEkwg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-pVvrxiEe2Pj61kfbEkwg" name="choice" type="_R8fZkLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-pVv7xiEe2Pj61kfbEkwg" type="_RmmpILxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
 this.numChannels = numChannels;&#xD;
 createProgram(workLoad, numChannels, choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-p8wLxiEe2Pj61kfbEkwg" name="toWorkload" specification="_RmnQMLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-p8wbxiEe2Pj61kfbEkwg" type="_RnLQ4LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-p8wrxiEe2Pj61kfbEkwg" name="toProgram" specification="_RmoeULxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-p8w7xiEe2Pj61kfbEkwg" type="_RoNysLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return program;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-p8xLxiEe2Pj61kfbEkwg" name="toReliabilityAnalysis" specification="_RmpFY7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-p8xbxiEe2Pj61kfbEkwg" type="_RlU2wLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);&#xD;
 return ra;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-p8xrxiEe2Pj61kfbEkwg" name="toSimulator" specification="_Rmpsc7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-p8x7xiEe2Pj61kfbEkwg" type="_Rl9I4LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-p8yLxiEe2Pj61kfbEkwg" name="toLatencyAnalysis" specification="_RmqTgLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-p8ybxiEe2Pj61kfbEkwg" type="_RkXNdLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
 return la;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-p8yrxiEe2Pj61kfbEkwg" name="toChannelAnalysis" specification="_Rmq6kLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-p8y7xiEe2Pj61kfbEkwg" type="_RjLhsLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
 return ca;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-p8zLxiEe2Pj61kfbEkwg" name="reliabilitiesMet" specification="_RmrhorxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-p8zbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
   ra = new ReliabilityAnalysis(program);&#xD;
 }&#xD;
 return ra.verifyReliabilities();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-p8zrxiEe2Pj61kfbEkwg" name="deadlinesMet" specification="_Rmrhp7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-p8z7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
 if (program.deadlineMisses().size() > 0) {&#xD;
   result = false;&#xD;
 }&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-p80LxiEe2Pj61kfbEkwg" name="createProgram" specification="_R8gnsLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-p80bxiEe2Pj61kfbEkwg" name="workLoad" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-p80rxiEe2Pj61kfbEkwg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-p807xiEe2Pj61kfbEkwg" name="choice" type="_R8fZkLxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-p81LxiEe2Pj61kfbEkwg" name="getNumFaults" specification="_RmtW0LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-p81bxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-p81rxiEe2Pj61kfbEkwg" name="getMinPacketReceptionRate" specification="_RmtW1bxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-p817xiEe2Pj61kfbEkwg" type="_R8TMULxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-qj0LxiEe2Pj61kfbEkwg" name="getE2e" specification="_Rmt94bxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-qj0bxiEe2Pj61kfbEkwg" type="_R8TMULxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-qj0rxiEe2Pj61kfbEkwg" name="getName" specification="_Rmuk87xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-qj07xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-qj1LxiEe2Pj61kfbEkwg" name="getSchedulerName" specification="_RmvMA7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-qj1bxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-qj1rxiEe2Pj61kfbEkwg" name="getNumTransmissions" specification="_RmwaI7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-qj17xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-qj2LxiEe2Pj61kfbEkwg" name="getOptimizationFlag" specification="_RmwaKLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-qj2bxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RmnQMLxiEe2Pj61kfbEkwg" name="toWorkload" method="_R-p8wLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R676YLxiEe2Pj61kfbEkwg" type="_RnLQ4LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RmoeULxiEe2Pj61kfbEkwg" name="toProgram" method="_R-p8wrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R68hcLxiEe2Pj61kfbEkwg" type="_RoNysLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RmpFY7xiEe2Pj61kfbEkwg" name="toReliabilityAnalysis" method="_R-p8xLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R68hcbxiEe2Pj61kfbEkwg" type="_RlU2wLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rmpsc7xiEe2Pj61kfbEkwg" name="toSimulator" method="_R-p8xrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R68hcrxiEe2Pj61kfbEkwg" type="_Rl9I4LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RmqTgLxiEe2Pj61kfbEkwg" name="toLatencyAnalysis" method="_R-p8yLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R68hc7xiEe2Pj61kfbEkwg" type="_RkXNdLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rmq6kLxiEe2Pj61kfbEkwg" name="toChannelAnalysis" method="_R-p8yrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R68hdLxiEe2Pj61kfbEkwg" type="_RjLhsLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RmrhorxiEe2Pj61kfbEkwg" name="reliabilitiesMet" method="_R-p8zLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Rmrho7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rmrhp7xiEe2Pj61kfbEkwg" name="deadlinesMet" method="_R-p8zrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RmsvwLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RmtW0LxiEe2Pj61kfbEkwg" name="getNumFaults" method="_R-p81LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RmtW0bxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RmtW1bxiEe2Pj61kfbEkwg" name="getMinPacketReceptionRate" method="_R-p81rxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R8gntLxiEe2Pj61kfbEkwg" type="_R8TMULxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rmt94bxiEe2Pj61kfbEkwg" name="getE2e" method="_R-qj0LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R8gntbxiEe2Pj61kfbEkwg" type="_R8TMULxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rmuk87xiEe2Pj61kfbEkwg" name="getName" method="_R-qj0rxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Rmuk9LxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RmvMA7xiEe2Pj61kfbEkwg" name="getSchedulerName" method="_R-qj1LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RmvMBLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RmwaI7xiEe2Pj61kfbEkwg" name="getNumTransmissions" method="_R-qj1rxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RmwaJLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RmwaKLxiEe2Pj61kfbEkwg" name="getOptimizationFlag" method="_R-qj2LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RmxBMLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RmxBNLxiEe2Pj61kfbEkwg" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_R8gAobxiEe2Pj61kfbEkwg" name="WarpSystem" method="_R-pVu7xiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R8gApbxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R8gAprxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R8gAorxiEe2Pj61kfbEkwg" name="workLoad" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8gAo7xiEe2Pj61kfbEkwg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R8gApLxiEe2Pj61kfbEkwg" name="choice" type="_R8fZkLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8gAp7xiEe2Pj61kfbEkwg" type="_RmmpILxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R8gnsLxiEe2Pj61kfbEkwg" name="createProgram" visibility="private" method="_R-p80LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R8gnsbxiEe2Pj61kfbEkwg" name="workLoad" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8gnsrxiEe2Pj61kfbEkwg" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R8gns7xiEe2Pj61kfbEkwg" name="choice" type="_R8fZkLxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_Rm2gwLxiEe2Pj61kfbEkwg" name="WarpInterface">
              <ownedComment xmi:id="_R_CXRLxiEe2Pj61kfbEkwg">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_R6-WoLxiEe2Pj61kfbEkwg" general="_RmAMMLxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_Rm3H0LxiEe2Pj61kfbEkwg" name="toWorkload">
                <ownedParameter xmi:id="_R6-WobxiEe2Pj61kfbEkwg" type="_RnLQ4LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rm3H0bxiEe2Pj61kfbEkwg" name="toProgram">
                <ownedParameter xmi:id="_R6-9sLxiEe2Pj61kfbEkwg" type="_RoNysLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rm4V8LxiEe2Pj61kfbEkwg" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_R6-9sbxiEe2Pj61kfbEkwg" type="_RlU2wLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rm4V8bxiEe2Pj61kfbEkwg" name="toSimulator">
                <ownedParameter xmi:id="_R6-9srxiEe2Pj61kfbEkwg" type="_Rl9I4LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rm4V8rxiEe2Pj61kfbEkwg" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_R6-9s7xiEe2Pj61kfbEkwg" type="_RkXNdLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rm4V87xiEe2Pj61kfbEkwg" name="toChannelAnalysis">
                <ownedParameter xmi:id="_R6-9tLxiEe2Pj61kfbEkwg" type="_RjLhsLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rm49ALxiEe2Pj61kfbEkwg" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_Rm49AbxiEe2Pj61kfbEkwg" name="reliabilitiesMet">
                <ownedParameter xmi:id="_Rm49ArxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rm49A7xiEe2Pj61kfbEkwg" name="deadlinesMet">
                <ownedParameter xmi:id="_Rm49BLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rm6LILxiEe2Pj61kfbEkwg" name="WarpPoset">
              <ownedComment xmi:id="_R_CXRbxiEe2Pj61kfbEkwg">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_R6_kwLxiEe2Pj61kfbEkwg" general="_Rkvn8LxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-qj2rxiEe2Pj61kfbEkwg" name="WarpPoset" specification="_R6-9tbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-qj27xiEe2Pj61kfbEkwg" name="workload" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-qj3LxiEe2Pj61kfbEkwg" type="_Rm6LILxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-qj3bxiEe2Pj61kfbEkwg" name="findCoordinator" specification="_R8h10LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-qj3rxiEe2Pj61kfbEkwg" name="nodesInFlow" type="_R5gXALxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-qj37xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_R6-9tbxiEe2Pj61kfbEkwg" name="WarpPoset" visibility="package" method="_R-qj2rxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R6-9t7xiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R6-9uLxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R6-9trxiEe2Pj61kfbEkwg" name="workload" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R6-9ubxiEe2Pj61kfbEkwg" type="_Rm6LILxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R8h10LxiEe2Pj61kfbEkwg" name="findCoordinator" visibility="protected" method="_R-qj3bxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R8h10bxiEe2Pj61kfbEkwg" name="nodesInFlow" type="_R5gXALxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8h10rxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Rm8AULxiEe2Pj61kfbEkwg" name="WarpDSL">
              <ownedComment xmi:id="_R_CXRrxiEe2Pj61kfbEkwg">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R92rgLxiEe2Pj61kfbEkwg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R92rgbxiEe2Pj61kfbEkwg" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R92rgrxiEe2Pj61kfbEkwg" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R92rg7xiEe2Pj61kfbEkwg" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R92rhLxiEe2Pj61kfbEkwg" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R92rhbxiEe2Pj61kfbEkwg" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-rK8LxiEe2Pj61kfbEkwg" name="getInstructionParameters" specification="_RnBf4LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-rK8bxiEe2Pj61kfbEkwg" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-rK8rxiEe2Pj61kfbEkwg" type="_R5gXALxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RnBf4LxiEe2Pj61kfbEkwg" name="getInstructionParameters" method="_R-rK8LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RnCG8LxiEe2Pj61kfbEkwg" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R8jD8LxiEe2Pj61kfbEkwg" type="_R5gXALxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_Rm8nYLxiEe2Pj61kfbEkwg" name="InstructionParameters">
                <ownedAttribute xmi:id="_R92rhrxiEe2Pj61kfbEkwg" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_R92rh7xiEe2Pj61kfbEkwg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_R93SkLxiEe2Pj61kfbEkwg" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_R93SkbxiEe2Pj61kfbEkwg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_R93SkrxiEe2Pj61kfbEkwg" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_R93Sk7xiEe2Pj61kfbEkwg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_R93SlLxiEe2Pj61kfbEkwg" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_R93SlbxiEe2Pj61kfbEkwg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_R93SlrxiEe2Pj61kfbEkwg" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_R93Sl7xiEe2Pj61kfbEkwg" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_R93SmLxiEe2Pj61kfbEkwg" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_R93SmbxiEe2Pj61kfbEkwg" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_R935obxiEe2Pj61kfbEkwg" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_R935orxiEe2Pj61kfbEkwg" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-rK4LxiEe2Pj61kfbEkwg" name="getCoordinator" specification="_Rm91gLxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R-rK4bxiEe2Pj61kfbEkwg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-rK4rxiEe2Pj61kfbEkwg" name="setCoordinator" specification="_Rm-ckbxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R-rK47xiEe2Pj61kfbEkwg" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-rK5LxiEe2Pj61kfbEkwg" name="setName" specification="_Rm_DoLxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R-rK5bxiEe2Pj61kfbEkwg" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-rK5rxiEe2Pj61kfbEkwg" name="setFlow" specification="_Rm_DorxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R-rK57xiEe2Pj61kfbEkwg" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-rK6LxiEe2Pj61kfbEkwg" name="setSrc" specification="_Rm_qsbxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R-rK6bxiEe2Pj61kfbEkwg" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-rK6rxiEe2Pj61kfbEkwg" name="setSnk" specification="_RnARwLxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R-rK67xiEe2Pj61kfbEkwg" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-rK7LxiEe2Pj61kfbEkwg" name="setChannel" specification="_RnA40LxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R-rK7bxiEe2Pj61kfbEkwg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-rK7rxiEe2Pj61kfbEkwg" name="unused" specification="_RnA40rxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R-rK77xiEe2Pj61kfbEkwg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_Rm91gLxiEe2Pj61kfbEkwg" name="getCoordinator" method="_R-rK4LxiEe2Pj61kfbEkwg">
                  <ownedComment xmi:id="_R_CXR7xiEe2Pj61kfbEkwg">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Rm-ckLxiEe2Pj61kfbEkwg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Rm-ckbxiEe2Pj61kfbEkwg" name="setCoordinator" method="_R-rK4rxiEe2Pj61kfbEkwg">
                  <ownedComment xmi:id="_R_C-ULxiEe2Pj61kfbEkwg">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Rm-ckrxiEe2Pj61kfbEkwg" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Rm_DoLxiEe2Pj61kfbEkwg" name="setName" visibility="private" method="_R-rK5LxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_Rm_DobxiEe2Pj61kfbEkwg" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Rm_DorxiEe2Pj61kfbEkwg" name="setFlow" visibility="private" method="_R-rK5rxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_Rm_qsLxiEe2Pj61kfbEkwg" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Rm_qsbxiEe2Pj61kfbEkwg" name="setSrc" visibility="private" method="_R-rK6LxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_Rm_qsrxiEe2Pj61kfbEkwg" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_RnARwLxiEe2Pj61kfbEkwg" name="setSnk" visibility="private" method="_R-rK6rxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_RnARwbxiEe2Pj61kfbEkwg" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_RnA40LxiEe2Pj61kfbEkwg" name="setChannel" visibility="private" method="_R-rK7LxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_RnA40bxiEe2Pj61kfbEkwg" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_RnA40rxiEe2Pj61kfbEkwg" name="unused" method="_R-rK7rxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_RnA407xiEe2Pj61kfbEkwg" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_RnD8ILxiEe2Pj61kfbEkwg" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_R8jrAbxiEe2Pj61kfbEkwg" general="_R8jD8bxiEe2Pj61kfbEkwg"/>
                <ownedAttribute xmi:id="_R935o7xiEe2Pj61kfbEkwg" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_R94gsLxiEe2Pj61kfbEkwg" name="instructionParametersArrayList" visibility="package" type="_R5gXALxiEe2Pj61kfbEkwg" association="_R_4EwLxiEe2Pj61kfbEkwg"/>
                <ownedAttribute xmi:id="_R94gs7xiEe2Pj61kfbEkwg" name="instructionParameters" visibility="package" type="_Rm8nYLxiEe2Pj61kfbEkwg" association="_R_4Ew7xiEe2Pj61kfbEkwg"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-rx8LxiEe2Pj61kfbEkwg" name="ListenerDsl" specification="_RnD8IbxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R-rx8bxiEe2Pj61kfbEkwg" type="_RnD8ILxiEe2Pj61kfbEkwg" direction="return"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-rx8rxiEe2Pj61kfbEkwg" name="getInstructionParameters" specification="_RnFKQ7xiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R-rx87xiEe2Pj61kfbEkwg" type="_R5gXALxiEe2Pj61kfbEkwg" direction="return"/>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-rx9LxiEe2Pj61kfbEkwg" name="enterAction" specification="_R7Ay4rxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R-rx9bxiEe2Pj61kfbEkwg" name="ctx" type="_R7Ay4LxiEe2Pj61kfbEkwg"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-rx9rxiEe2Pj61kfbEkwg" name="exitAction" specification="_R7BZ8rxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R-rx97xiEe2Pj61kfbEkwg" name="ctx" type="_R7Ay4LxiEe2Pj61kfbEkwg"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-rx-LxiEe2Pj61kfbEkwg" name="exitFlowName" specification="_R7CoEbxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R-rx-bxiEe2Pj61kfbEkwg" name="ctx" type="_R7CBArxiEe2Pj61kfbEkwg"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-rx-rxiEe2Pj61kfbEkwg" name="exitCmd" specification="_R7DPJLxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R-rx-7xiEe2Pj61kfbEkwg" name="ctx" type="_R7DPIrxiEe2Pj61kfbEkwg"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-rx_LxiEe2Pj61kfbEkwg" name="exitSrcNode" specification="_R7EdQbxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R-rx_bxiEe2Pj61kfbEkwg" name="ctx" type="_R7D2NLxiEe2Pj61kfbEkwg"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-rx_rxiEe2Pj61kfbEkwg" name="exitSnkNode" specification="_R7FEVLxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R-rx_7xiEe2Pj61kfbEkwg" name="ctx" type="_R7FEUrxiEe2Pj61kfbEkwg"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-ryALxiEe2Pj61kfbEkwg" name="exitChannel" specification="_R7FrZLxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R-ryAbxiEe2Pj61kfbEkwg" name="ctx" type="_R7FrYrxiEe2Pj61kfbEkwg"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_RnD8IbxiEe2Pj61kfbEkwg" name="ListenerDsl" visibility="package" method="_R-rx8LxiEe2Pj61kfbEkwg">
                  <eAnnotations xmi:id="_RnFKQLxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_RnFKQbxiEe2Pj61kfbEkwg" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_RnFKQrxiEe2Pj61kfbEkwg" type="_RnD8ILxiEe2Pj61kfbEkwg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_RnFKQ7xiEe2Pj61kfbEkwg" name="getInstructionParameters" method="_R-rx8rxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R8jrALxiEe2Pj61kfbEkwg" type="_R5gXALxiEe2Pj61kfbEkwg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_R7Ay4rxiEe2Pj61kfbEkwg" name="enterAction" method="_R-rx9LxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R7Ay47xiEe2Pj61kfbEkwg" name="ctx" type="_R7Ay4LxiEe2Pj61kfbEkwg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_R7BZ8rxiEe2Pj61kfbEkwg" name="exitAction" method="_R-rx9rxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R7BZ87xiEe2Pj61kfbEkwg" name="ctx" type="_R7Ay4LxiEe2Pj61kfbEkwg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_R7CoEbxiEe2Pj61kfbEkwg" name="exitFlowName" method="_R-rx-LxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R7CoErxiEe2Pj61kfbEkwg" name="ctx" type="_R7CBArxiEe2Pj61kfbEkwg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_R7DPJLxiEe2Pj61kfbEkwg" name="exitCmd" method="_R-rx-rxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R7D2MLxiEe2Pj61kfbEkwg" name="ctx" type="_R7DPIrxiEe2Pj61kfbEkwg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_R7EdQbxiEe2Pj61kfbEkwg" name="exitSrcNode" method="_R-rx_LxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R7EdQrxiEe2Pj61kfbEkwg" name="ctx" type="_R7D2NLxiEe2Pj61kfbEkwg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_R7FEVLxiEe2Pj61kfbEkwg" name="exitSnkNode" method="_R-rx_rxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R7FEVbxiEe2Pj61kfbEkwg" name="ctx" type="_R7FEUrxiEe2Pj61kfbEkwg"/>
                </ownedOperation>
                <ownedOperation xmi:id="_R7FrZLxiEe2Pj61kfbEkwg" name="exitChannel" method="_R-ryALxiEe2Pj61kfbEkwg">
                  <ownedParameter xmi:id="_R7FrZbxiEe2Pj61kfbEkwg" name="ctx" type="_R7FrYrxiEe2Pj61kfbEkwg"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RnLQ4LxiEe2Pj61kfbEkwg" name="WorkLoad">
              <ownedComment xmi:id="_wRltAMqKEe2Q06zi9Lxc2Q">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_R7NAILxiEe2Pj61kfbEkwg" general="_RmgigLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R95u0LxiEe2Pj61kfbEkwg" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R95u0bxiEe2Pj61kfbEkwg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R95u0rxiEe2Pj61kfbEkwg" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R95u07xiEe2Pj61kfbEkwg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R95u1LxiEe2Pj61kfbEkwg" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R95u1bxiEe2Pj61kfbEkwg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R96V4LxiEe2Pj61kfbEkwg" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R96V4bxiEe2Pj61kfbEkwg" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R96V4rxiEe2Pj61kfbEkwg" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R96V47xiEe2Pj61kfbEkwg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R96V5LxiEe2Pj61kfbEkwg" name="minPacketReceptionRate" type="_R8TMULxiEe2Pj61kfbEkwg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R96V5bxiEe2Pj61kfbEkwg" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R96V5rxiEe2Pj61kfbEkwg" name="e2e" visibility="private" type="_R8TMULxiEe2Pj61kfbEkwg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R96V57xiEe2Pj61kfbEkwg" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9688LxiEe2Pj61kfbEkwg" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9688bxiEe2Pj61kfbEkwg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9688rxiEe2Pj61kfbEkwg" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R96887xiEe2Pj61kfbEkwg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9689bxiEe2Pj61kfbEkwg" name="flows" type="_RkDrcLxiEe2Pj61kfbEkwg" association="_R_C-UrxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9689rxiEe2Pj61kfbEkwg" name="nodes" type="_RknsILxiEe2Pj61kfbEkwg" association="_R_C-VLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R97kALxiEe2Pj61kfbEkwg" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R97kArxiEe2Pj61kfbEkwg" name="flowNamesInOriginalOrder" type="_R5gXALxiEe2Pj61kfbEkwg" association="_R_4r0bxiEe2Pj61kfbEkwg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R98LELxiEe2Pj61kfbEkwg" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R98LEbxiEe2Pj61kfbEkwg" name="flowNamesInPriorityOrder" type="_R5gXALxiEe2Pj61kfbEkwg" association="_R_5S4bxiEe2Pj61kfbEkwg">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R98LE7xiEe2Pj61kfbEkwg" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_R7J807xiEe2Pj61kfbEkwg" client="_RnLQ4LxiEe2Pj61kfbEkwg" supplier="_RlWE4LxiEe2Pj61kfbEkwg" contract="_RlWE4LxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-sZALxiEe2Pj61kfbEkwg" name="WorkLoad" specification="_R8lgMLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-sZAbxiEe2Pj61kfbEkwg" name="m" type="_R8TMULxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-sZArxiEe2Pj61kfbEkwg" name="e2e" type="_R8TMULxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-sZA7xiEe2Pj61kfbEkwg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-sZBLxiEe2Pj61kfbEkwg" type="_RnLQ4LxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-tAELxiEe2Pj61kfbEkwg" name="WorkLoad" specification="_R8mHRbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-tAEbxiEe2Pj61kfbEkwg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-tAErxiEe2Pj61kfbEkwg" name="m" type="_R8TMULxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-tAE7xiEe2Pj61kfbEkwg" name="e2e" type="_R8TMULxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-tAFLxiEe2Pj61kfbEkwg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-tAFbxiEe2Pj61kfbEkwg" type="_RnLQ4LxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(inputFileName);&#xD;
	&#xD;
 setDefaultParameters();&#xD;
	&#xD;
 this.numFaults = numFaults;&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
	&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-tAFrxiEe2Pj61kfbEkwg" name="setDefaultParameters" specification="_RnNtILxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-tAF7xiEe2Pj61kfbEkwg" name="getE2e" specification="_RnOUMLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-tAGLxiEe2Pj61kfbEkwg" type="_R8TMULxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-tAGbxiEe2Pj61kfbEkwg" name="getIntForFlowNames" specification="_RnOUMbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-tAGrxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-tAG7xiEe2Pj61kfbEkwg" name="getName" specification="_RnOUM7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-tAHLxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-tAHbxiEe2Pj61kfbEkwg" name="setMinPacketReceptionRate" specification="_R8muVLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-tAHrxiEe2Pj61kfbEkwg" name="minPacketReceptionRate" type="_R8TMULxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-tAH7xiEe2Pj61kfbEkwg" name="getMaxPhase" specification="_RnO7QbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-tAILxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-tAIbxiEe2Pj61kfbEkwg" name="getMinPeriod" specification="_RnO7Q7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-tAIrxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-tAI7xiEe2Pj61kfbEkwg" name="setE2e" specification="_R8muVrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-tAJLxiEe2Pj61kfbEkwg" name="e2e" type="_R8TMULxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-tAJbxiEe2Pj61kfbEkwg" name="setIntForFlowNames" specification="_RnPiULxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-tAJrxiEe2Pj61kfbEkwg" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-tAJ7xiEe2Pj61kfbEkwg" name="setName" specification="_RnPiUrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-tAKLxiEe2Pj61kfbEkwg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-tnILxiEe2Pj61kfbEkwg" name="setNodeChannel" specification="_RnQJYLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-tnIbxiEe2Pj61kfbEkwg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-tnIrxiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-tnI7xiEe2Pj61kfbEkwg" name="getNodeChannel" specification="_RnQJY7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-tnJLxiEe2Pj61kfbEkwg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-tnJbxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-tnJrxiEe2Pj61kfbEkwg" name="addFlow" specification="_RnQwcLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-tnJ7xiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
  * default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
  * This will create a default priority equal to the order listed in the input graph file. We&#xD;
  * also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
  * initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
  * optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
  * over written&#xD;
  */&#xD;
 if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-tnKLxiEe2Pj61kfbEkwg" name="isIntForNodeNames" specification="_RnQwcrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-tnKbxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints&#xD;
 return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-tnKrxiEe2Pj61kfbEkwg" name="isIntForFlowNames" specification="_RnQwdLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-tnK7xiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-tnLLxiEe2Pj61kfbEkwg" name="addNodeToFlow" specification="_RnRXgLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-tnLbxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-tnLrxiEe2Pj61kfbEkwg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-tnL7xiEe2Pj61kfbEkwg" name="getFlowPriority" specification="_RnR-kLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-tnMLxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-tnMbxiEe2Pj61kfbEkwg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-tnMrxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-tnM7xiEe2Pj61kfbEkwg" name="setFlowPriority" specification="_RnR-lLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-tnNLxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-tnNbxiEe2Pj61kfbEkwg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-tnNrxiEe2Pj61kfbEkwg" name="setFlowPeriod" specification="_RnSlobxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-tnN7xiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-tnOLxiEe2Pj61kfbEkwg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-tnObxiEe2Pj61kfbEkwg" name="setFlowDeadline" specification="_RnSlpLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-tnOrxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-tnO7xiEe2Pj61kfbEkwg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-tnPLxiEe2Pj61kfbEkwg" name="setFlowPhase" specification="_RnTMsrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-tnPbxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-tnPrxiEe2Pj61kfbEkwg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-uOMLxiEe2Pj61kfbEkwg" name="getFlowIndex" specification="_RnTMtbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-uOMbxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-uOMrxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-uOM7xiEe2Pj61kfbEkwg" name="getFlowPriority" specification="_RnTzwbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-uONLxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-uONbxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-uONrxiEe2Pj61kfbEkwg" name="getFlowPeriod" specification="_RnTzxLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-uON7xiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-uOOLxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-uOObxiEe2Pj61kfbEkwg" name="getFlowDeadline" specification="_RnUa0bxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-uOOrxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-uOO7xiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-uOPLxiEe2Pj61kfbEkwg" name="getFlowPhase" specification="_RnUa1LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-uOPbxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-uOPrxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-uOP7xiEe2Pj61kfbEkwg" name="getFlowTxAttemptsPerLink" specification="_RnVB4bxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-uOQLxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-uOQbxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-uOQrxiEe2Pj61kfbEkwg" name="setFlowsInPriorityOrder" specification="_RnVo8LxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-uOQ7xiEe2Pj61kfbEkwg" name="setFlowsInDMorder" specification="_RnVo8bxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-uORLxiEe2Pj61kfbEkwg" name="setFlowsInRMorder" specification="_RnVo8rxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-uORbxiEe2Pj61kfbEkwg" name="setFlowsInRealTimeHARTorder" specification="_RnWQALxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-uORrxiEe2Pj61kfbEkwg" name="finalizeCurrentFlow" specification="_RnWQAbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-uOR7xiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-uOSLxiEe2Pj61kfbEkwg" name="nextReleaseTime" specification="_RnWQA7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-uOSbxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-uOSrxiEe2Pj61kfbEkwg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-uOS7xiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-u1QLxiEe2Pj61kfbEkwg" name="nextAbsoluteDeadline" specification="_RnW3ELxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-u1QbxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-u1QrxiEe2Pj61kfbEkwg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-u1Q7xiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-u1RLxiEe2Pj61kfbEkwg" name="finalizeFlowWithE2eParameters" specification="_RnW3FLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-u1RbxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 var m = minPacketReceptionRate; // shorten the name :-)&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
                     // and when m == 1.0&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ReliabilityAnalysis linkTxAndTotalCost =&#xD;
       new ReliabilityAnalysis(e2e, m);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost.numTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-u1RrxiEe2Pj61kfbEkwg" name="finalizeFlowWithFixedFaultTolerance" specification="_RnXeILxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-u1R7xiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ReliabilityAnalysis linkTxAndTotalCost = new ReliabilityAnalysis(numFaults); &#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost.numTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-u1UbxiEe2Pj61kfbEkwg" name="getNodeNamesOrderedAlphabetically" specification="_RnYFMLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-u1UrxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-u1U7xiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-u1VLxiEe2Pj61kfbEkwg" name="getFlow" specification="_RnZTULxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-u1VbxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-u1VrxiEe2Pj61kfbEkwg" type="_Rj5TYLxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-u1V7xiEe2Pj61kfbEkwg" name="getFlowNames" specification="_RnZTUrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-u1WLxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-u1WbxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-u1WrxiEe2Pj61kfbEkwg" name="getNodeIndex" specification="_RnZ6YrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-u1W7xiEe2Pj61kfbEkwg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-u1XLxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-u1XbxiEe2Pj61kfbEkwg" name="getNodesInFlow" specification="_RnahcLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-u1XrxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-u1X7xiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-u1YLxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-vcULxiEe2Pj61kfbEkwg" name="getHyperPeriod" specification="_RnbIgLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-vcUbxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
   // var dm = new Utlitities();&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod&#xD;
                                                                      // so far and the current&#xD;
                                                                      // period, then update the&#xD;
                                                                      // hyperPeriod with that&#xD;
                                                                      // value&#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-vcUrxiEe2Pj61kfbEkwg" name="getTotalTxAttemptsInFlow" specification="_RnbIgrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-vcU7xiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-vcVLxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-vcVbxiEe2Pj61kfbEkwg" name="getNumTxAttemptsPerLink" specification="_RnbvkLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-vcVrxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-vcV7xiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-vcWLxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of&#xD;
                                         // others&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-vcWbxiEe2Pj61kfbEkwg" name="addEdge" specification="_R7MZEbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-vcWrxiEe2Pj61kfbEkwg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-vcW7xiEe2Pj61kfbEkwg" name="edge" type="_RjsfELxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-vcXLxiEe2Pj61kfbEkwg" name="maxFlowLength" specification="_RnbvlbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-vcXbxiEe2Pj61kfbEkwg" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RnNtILxiEe2Pj61kfbEkwg" name="setDefaultParameters" visibility="private" method="_R-tAFrxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRltA8qKEe2Q06zi9Lxc2Q">
                  <body>Sets the default parameters for the nodes and flows.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_RnOUMLxiEe2Pj61kfbEkwg" name="getE2e" method="_R-tAF7xiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRltBMqKEe2Q06zi9Lxc2Q">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_R8muU7xiEe2Pj61kfbEkwg" type="_R8TMULxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RnOUMbxiEe2Pj61kfbEkwg" name="getIntForFlowNames" method="_R-tAGbxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRltBcqKEe2Q06zi9Lxc2Q">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_RnOUMrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnOUM7xiEe2Pj61kfbEkwg" name="getName" method="_R-tAG7xiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRltBsqKEe2Q06zi9Lxc2Q">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_RnO7QLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnO7QbxiEe2Pj61kfbEkwg" name="getMaxPhase" method="_R-tAH7xiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRltCMqKEe2Q06zi9Lxc2Q">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_RnO7QrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnO7Q7xiEe2Pj61kfbEkwg" name="getMinPeriod" method="_R-tAIbxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRltCcqKEe2Q06zi9Lxc2Q">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_RnO7RLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnPiULxiEe2Pj61kfbEkwg" name="setIntForFlowNames" method="_R-tAJbxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRltC8qKEe2Q06zi9Lxc2Q">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_RnPiUbxiEe2Pj61kfbEkwg" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnPiUrxiEe2Pj61kfbEkwg" name="setName" method="_R-tAJ7xiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRltDMqKEe2Q06zi9Lxc2Q">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_RnPiU7xiEe2Pj61kfbEkwg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnQJYLxiEe2Pj61kfbEkwg" name="setNodeChannel" method="_R-tnILxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRltDcqKEe2Q06zi9Lxc2Q">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_RnQJYbxiEe2Pj61kfbEkwg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnQJYrxiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnQJY7xiEe2Pj61kfbEkwg" name="getNodeChannel" method="_R-tnI7xiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRltDsqKEe2Q06zi9Lxc2Q">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_RnQJZLxiEe2Pj61kfbEkwg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnQJZbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnQwcLxiEe2Pj61kfbEkwg" name="addFlow" method="_R-tnJrxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRltD8qKEe2Q06zi9Lxc2Q">
                  <body>Adds a new flow to the Flows dictionary.&#xD;
   * &#xD;
   * @param flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_RnQwcbxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnQwcrxiEe2Pj61kfbEkwg" name="isIntForNodeNames" method="_R-tnKLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RnQwc7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnQwdLxiEe2Pj61kfbEkwg" name="isIntForFlowNames" method="_R-tnKrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RnQwdbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnRXgLxiEe2Pj61kfbEkwg" name="addNodeToFlow" method="_R-tnLLxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRltEMqKEe2Q06zi9Lxc2Q">
                  <body>Adds a node to the specified flow. If the node is not in the flow, it will create &#xD;
   * a new Node.&#xD;
   * &#xD;
   * @param flowName the name of the flow to be added to&#xD;
   * @param nodeName the name of the node to be added</body>
                </ownedComment>
                <ownedParameter xmi:id="_RnRXgbxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnRXgrxiEe2Pj61kfbEkwg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnR-kLxiEe2Pj61kfbEkwg" name="getFlowPriority" method="_R-tnL7xiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRmUEMqKEe2Q06zi9Lxc2Q">
                  <body>Gets the flow priority of the node by finding the source node and setting its index.&#xD;
   * &#xD;
   * @param flowName the name of the flow to be searched&#xD;
   * @param nodeName the name of the node to be found&#xD;
   * @return priority the priority of the node</body>
                </ownedComment>
                <ownedParameter xmi:id="_RnR-kbxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnR-krxiEe2Pj61kfbEkwg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnR-k7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnR-lLxiEe2Pj61kfbEkwg" name="setFlowPriority" method="_R-tnM7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RnR-lbxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnSloLxiEe2Pj61kfbEkwg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnSlobxiEe2Pj61kfbEkwg" name="setFlowPeriod" method="_R-tnNrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RnSlorxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnSlo7xiEe2Pj61kfbEkwg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnSlpLxiEe2Pj61kfbEkwg" name="setFlowDeadline" method="_R-tnObxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RnTMsLxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnTMsbxiEe2Pj61kfbEkwg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnTMsrxiEe2Pj61kfbEkwg" name="setFlowPhase" method="_R-tnPLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RnTMs7xiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnTMtLxiEe2Pj61kfbEkwg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnTMtbxiEe2Pj61kfbEkwg" name="getFlowIndex" method="_R-uOMLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RnTMtrxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnTzwLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnTzwbxiEe2Pj61kfbEkwg" name="getFlowPriority" method="_R-uOM7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RnTzwrxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnTzw7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnTzxLxiEe2Pj61kfbEkwg" name="getFlowPeriod" method="_R-uONrxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRmUEcqKEe2Q06zi9Lxc2Q">
                  <body>Gets the period of the given flow.&#xD;
   *  &#xD;
   * @param flowName&#xD;
   * @return the period of the given flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_RnTzxbxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnUa0LxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnUa0bxiEe2Pj61kfbEkwg" name="getFlowDeadline" method="_R-uOObxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRmUEsqKEe2Q06zi9Lxc2Q">
                  <body>Gets the deadline of the given flow.&#xD;
   * &#xD;
   * @param flowName &#xD;
   * @return the deadline of the given flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_RnUa0rxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnUa07xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnUa1LxiEe2Pj61kfbEkwg" name="getFlowPhase" method="_R-uOPLxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRmUE8qKEe2Q06zi9Lxc2Q">
                  <body>Gets the phase of the given flow.&#xD;
   * &#xD;
   * @param flowName&#xD;
   * @return the phase of the given flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_RnUa1bxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnVB4LxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnVB4bxiEe2Pj61kfbEkwg" name="getFlowTxAttemptsPerLink" method="_R-uOP7xiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRmUFMqKEe2Q06zi9Lxc2Q">
                  <body>Gets the number of flow transmissions attempts per link.&#xD;
   * &#xD;
   * @param flowName&#xD;
   * @return numTxPerLink the value of transmission attempts per link</body>
                </ownedComment>
                <ownedParameter xmi:id="_RnVB4rxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnVB47xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnVo8LxiEe2Pj61kfbEkwg" name="setFlowsInPriorityOrder" method="_R-uOQrxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRmUFcqKEe2Q06zi9Lxc2Q">
                  <body>Sorts the flows in order based on priority, then puts the ordered flow names into an ArrayList.&#xD;
   *</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_RnVo8bxiEe2Pj61kfbEkwg" name="setFlowsInDMorder" method="_R-uOQ7xiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRmUFsqKEe2Q06zi9Lxc2Q">
                  <body>Sorts the flows based on deadline, putting ordered flow into an ArrayList.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_RnVo8rxiEe2Pj61kfbEkwg" name="setFlowsInRMorder" method="_R-uORLxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRmUF8qKEe2Q06zi9Lxc2Q">
                  <body>Sorts the flows in order based on period, putting ordered flow names into an ArrayList.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_RnWQALxiEe2Pj61kfbEkwg" name="setFlowsInRealTimeHARTorder" method="_R-uORbxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RnWQAbxiEe2Pj61kfbEkwg" name="finalizeCurrentFlow" method="_R-uORrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RnWQArxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnWQA7xiEe2Pj61kfbEkwg" name="nextReleaseTime" method="_R-uOSLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RnWQBLxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnWQBbxiEe2Pj61kfbEkwg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnWQBrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnW3ELxiEe2Pj61kfbEkwg" name="nextAbsoluteDeadline" method="_R-u1QLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RnW3EbxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnW3ErxiEe2Pj61kfbEkwg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnW3E7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnW3FLxiEe2Pj61kfbEkwg" name="finalizeFlowWithE2eParameters" visibility="private" method="_R-u1RLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RnW3FbxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnXeILxiEe2Pj61kfbEkwg" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_R-u1RrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RnXeIbxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnYFMLxiEe2Pj61kfbEkwg" name="getNodeNamesOrderedAlphabetically" method="_R-u1UbxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRmUGMqKEe2Q06zi9Lxc2Q">
                  <body>Calculates the fixed transmission per link, the total transmission cost, and returns it.&#xD;
   * &#xD;
   * @param flow the flow to be calculated&#xD;
   * @return txArrayList the ArrayList of fixed transmissions per link and total transmission cost values</body>
                </ownedComment>
                <ownedParameter xmi:id="_RnYFMbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RnYFMrxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnZTULxiEe2Pj61kfbEkwg" name="getFlow" visibility="private" method="_R-u1VLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RnZTUbxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R7MZELxiEe2Pj61kfbEkwg" type="_Rj5TYLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RnZTUrxiEe2Pj61kfbEkwg" name="getFlowNames" method="_R-u1V7xiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRmUGcqKEe2Q06zi9Lxc2Q">
                  <body>Gets an array of flow names in the order they were read from&#xD;
   * the graph file.&#xD;
   * &#xD;
   * @return the name of the flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_RnZTU7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RnZ6YLxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnZ6YrxiEe2Pj61kfbEkwg" name="getNodeIndex" method="_R-u1WrxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRmUGsqKEe2Q06zi9Lxc2Q">
                  <body>Returns the index of the node from the dictionary of nodes&#xD;
   * &#xD;
   * @param nodeName the name of the node to be found&#xD;
   * @return index the index of the found node</body>
                </ownedComment>
                <ownedParameter xmi:id="_RnZ6Y7xiEe2Pj61kfbEkwg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnZ6ZLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnahcLxiEe2Pj61kfbEkwg" name="getNodesInFlow" method="_R-u1XbxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRmUG8qKEe2Q06zi9Lxc2Q">
                  <body>Gets node names in order they appear in flow specification.&#xD;
   * &#xD;
   * @param flowName &#xD;
   * @return nodes array of node names in flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_RnahcbxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnahcrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rnahc7xiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnbIgLxiEe2Pj61kfbEkwg" name="getHyperPeriod" method="_R-vcULxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRmUHMqKEe2Q06zi9Lxc2Q">
                  <body>Gets the hyper period, the least common multiple of all the periods.&#xD;
   * &#xD;
   * @return hyperPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_RnbIgbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnbIgrxiEe2Pj61kfbEkwg" name="getTotalTxAttemptsInFlow" method="_R-vcUrxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRmUHcqKEe2Q06zi9Lxc2Q">
                  <body>Gets the total transmission attempts in the flow.&#xD;
   * &#xD;
   * @param flowName &#xD;
   * @return totalCost total transmission attempts</body>
                </ownedComment>
                <ownedParameter xmi:id="_RnbIg7xiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnbIhLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnbvkLxiEe2Pj61kfbEkwg" name="getNumTxAttemptsPerLink" method="_R-vcVbxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRmUHsqKEe2Q06zi9Lxc2Q">
                  <body>Gets an array of the number of transmissions needed for each link&#xD;
   * to meet E2E target. &#xD;
   * &#xD;
   * @param flowName&#xD;
   * @return Integer value of the number of transmission attempts per link</body>
                </ownedComment>
                <ownedParameter xmi:id="_RnbvkbxiEe2Pj61kfbEkwg" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnbvkrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rnbvk7xiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnbvlbxiEe2Pj61kfbEkwg" name="maxFlowLength" method="_R-vcXLxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRm7IMqKEe2Q06zi9Lxc2Q">
                  <body>Gets the max length of the flow. &#xD;
   * &#xD;
   * @return maxLength</body>
                </ownedComment>
                <ownedParameter xmi:id="_RncWoLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R7MZEbxiEe2Pj61kfbEkwg" name="addEdge" method="_R-vcWbxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRmUH8qKEe2Q06zi9Lxc2Q">
                  <body>Adds an edge to a node.&#xD;
&#xD;
@param nodeName&#xD;
@param edge</body>
                </ownedComment>
                <ownedParameter xmi:id="_R7MZErxiEe2Pj61kfbEkwg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R7MZE7xiEe2Pj61kfbEkwg" name="edge" type="_RjsfELxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R8lgMLxiEe2Pj61kfbEkwg" name="WorkLoad" visibility="package" method="_R-sZALxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R8mHQrxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R8mHQ7xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_wRltAcqKEe2Q06zi9Lxc2Q">
                  <body>&#xD;
   * Creates a Workload object using the parameters minimum packet reception rate, End-to-End, and the file name. &#xD;
   * Then builds nodes and flows.&#xD;
   * &#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_R8lgMbxiEe2Pj61kfbEkwg" name="m" type="_R8TMULxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8mHQLxiEe2Pj61kfbEkwg" name="e2e" type="_R8TMULxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8mHQbxiEe2Pj61kfbEkwg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R8mHRLxiEe2Pj61kfbEkwg" type="_RnLQ4LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R8mHRbxiEe2Pj61kfbEkwg" name="WorkLoad" visibility="package" method="_R-tAELxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R8muULxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R8muUbxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_wRltAsqKEe2Q06zi9Lxc2Q">
                  <body>&#xD;
   * Then builds the nodes and flows.&#xD;
   * &#xD;
   * @param numFaults&#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_R8mHRrxiEe2Pj61kfbEkwg" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R8mHR7xiEe2Pj61kfbEkwg" name="m" type="_R8TMULxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8mHSLxiEe2Pj61kfbEkwg" name="e2e" type="_R8TMULxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8mHSbxiEe2Pj61kfbEkwg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R8muUrxiEe2Pj61kfbEkwg" type="_RnLQ4LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R8muVLxiEe2Pj61kfbEkwg" name="setMinPacketReceptionRate" method="_R-tAHbxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRltB8qKEe2Q06zi9Lxc2Q">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_R8muVbxiEe2Pj61kfbEkwg" name="minPacketReceptionRate" type="_R8TMULxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R8muVrxiEe2Pj61kfbEkwg" name="setE2e" method="_R-tAI7xiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_wRltCsqKEe2Q06zi9Lxc2Q">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_R8muV7xiEe2Pj61kfbEkwg" name="e2e" type="_R8TMULxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RnkScLxiEe2Pj61kfbEkwg" name="Warp">
              <ownedComment xmi:id="_R_EMerxiEe2Pj61kfbEkwg">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R99ZMLxiEe2Pj61kfbEkwg" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9-AQLxiEe2Pj61kfbEkwg" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9-AQbxiEe2Pj61kfbEkwg" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_R8TMULxiEe2Pj61kfbEkwg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9-AQrxiEe2Pj61kfbEkwg" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9-AQ7xiEe2Pj61kfbEkwg" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_R8TMULxiEe2Pj61kfbEkwg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9-ARLxiEe2Pj61kfbEkwg" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9-ARbxiEe2Pj61kfbEkwg" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9-ARrxiEe2Pj61kfbEkwg" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9-AR7xiEe2Pj61kfbEkwg" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_RmAzQLxiEe2Pj61kfbEkwg" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9-ASLxiEe2Pj61kfbEkwg" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9-nULxiEe2Pj61kfbEkwg" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R9-nUbxiEe2Pj61kfbEkwg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9-nUrxiEe2Pj61kfbEkwg" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9-nVLxiEe2Pj61kfbEkwg" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9-nVrxiEe2Pj61kfbEkwg" name="minLQ" visibility="private" isStatic="true" type="_R8TMULxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9_OYbxiEe2Pj61kfbEkwg" name="e2e" visibility="private" isStatic="true" type="_R8TMULxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R9_OY7xiEe2Pj61kfbEkwg" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9_OZbxiEe2Pj61kfbEkwg" name="guiRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9_1cbxiEe2Pj61kfbEkwg" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9_1c7xiEe2Pj61kfbEkwg" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R9_1dbxiEe2Pj61kfbEkwg" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-AcgLxiEe2Pj61kfbEkwg" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-AcgrxiEe2Pj61kfbEkwg" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-AchLxiEe2Pj61kfbEkwg" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-BDkLxiEe2Pj61kfbEkwg" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-BDkrxiEe2Pj61kfbEkwg" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-BDlLxiEe2Pj61kfbEkwg" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R-BDlbxiEe2Pj61kfbEkwg" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-BqoLxiEe2Pj61kfbEkwg" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-BqorxiEe2Pj61kfbEkwg" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-BqpLxiEe2Pj61kfbEkwg" name="schedulerSelected" visibility="private" isStatic="true" type="_RmAzQLxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-wqcLxiEe2Pj61kfbEkwg" name="main" specification="_RnmusLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-wqcbxiEe2Pj61kfbEkwg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-wqcrxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
 setWarpParameters(args);&#xD;
&#xD;
 // and print out the values if in verbose mode&#xD;
 if (verboseMode) {&#xD;
   printWarpParameters();&#xD;
 }&#xD;
&#xD;
 // Create and visualize the workload&#xD;
 // inputFile string, which may be null,&#xD;
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
 if (allRequested) {&#xD;
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
     visualize(workLoad, choice); // visualize all Program choices&#xD;
   }&#xD;
   // Create and visualize the Warp System&#xD;
   if (schedulerRequested) {&#xD;
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
     verifyPerformanceRequirements(warp);&#xD;
     for (SystemChoices choice : SystemChoices.values()) {&#xD;
       visualize(warp, choice); // visualize all System choices&#xD;
     }&#xD;
   } else { // create a system for all scheduler choices&#xD;
     for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
       schedulerSelected = sch;&#xD;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
       verifyPerformanceRequirements(warp);&#xD;
       for (SystemChoices choice : SystemChoices.values()) {&#xD;
         visualize(warp, choice); // visualize all System choices&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 } else { // visualize warp workload, source program and other requested items&#xD;
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
   if (wfRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
   }&#xD;
   if (gvRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
   }&#xD;
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
   verifyPerformanceRequirements(warp);&#xD;
   visualize(warp, SystemChoices.SOURCE);&#xD;
   if (caRequested) {&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
   if (laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY);&#xD;
   }&#xD;
   if (latencyRequested || laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
   }&#xD;
   if (raRequested) {&#xD;
     visualize(warp, SystemChoices.RELIABILITIES);&#xD;
   }&#xD;
 }&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-wqc7xiEe2Pj61kfbEkwg" name="visualize" specification="_R7RRkLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-wqdLxiEe2Pj61kfbEkwg" name="workLoad" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-wqdbxiEe2Pj61kfbEkwg" name="choice" type="_RmLLULxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>var viz =&#xD;
     VisualizationFactory.createWorkLoadVisualization(workLoad, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   if (verboseMode) {&#xD;
     System.out.println(viz.toString());&#xD;
   }&#xD;
   viz.toFile();&#xD;
   if (guiRequested) {&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-wqdrxiEe2Pj61kfbEkwg" name="visualize" specification="_R7R4orxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-wqd7xiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-wqeLxiEe2Pj61kfbEkwg" name="choice" type="_RmJ9MLxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createProgramVisualization(warp, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   viz.toFile();&#xD;
   if (guiRequested &amp;&amp; schedulerRequested) {&#xD;
     /* Only display window when a specific scheduler has been requested */&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-wqebxiEe2Pj61kfbEkwg" name="verifyPerformanceRequirements" specification="_R7R4pbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-wqerxiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
 verifyReliabilities(warp);&#xD;
 verifyNoChannelConflicts(warp);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-wqe7xiEe2Pj61kfbEkwg" name="verifyReliabilities" specification="_R7R4p7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-wqfLxiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
   /* RealTime HART doesn't adhere to reliability targets */&#xD;
   if (!warp.reliabilitiesMet()) {&#xD;
     System.err.printf(&#xD;
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
             + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   } else if (verboseMode) {&#xD;
     System.out.printf(&#xD;
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-wqfbxiEe2Pj61kfbEkwg" name="verifyDeadlines" specification="_R7R4qbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-wqfrxiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
   visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-wqf7xiEe2Pj61kfbEkwg" name="verifyNoChannelConflicts" specification="_R7SfsLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-wqgLxiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
   System.err&#xD;
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
   if (!caRequested) { // only need to create the visualization if not already requested&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-wqgbxiEe2Pj61kfbEkwg" name="setWarpParameters" specification="_Rnn80LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-wqgrxiEe2Pj61kfbEkwg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-wqg7xiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this&#xD;
                                                      // function--need to set up globals?&#xD;
&#xD;
 // create holder objects for storing results ...&#xD;
 // BooleanHolder debug = new BooleanHolder();&#xD;
 StringHolder schedulerSelected = new StringHolder();&#xD;
 IntHolder channels = new IntHolder();&#xD;
 IntHolder faults = new IntHolder();&#xD;
 DoubleHolder m = new DoubleHolder();&#xD;
 DoubleHolder end2end = new DoubleHolder();&#xD;
 BooleanHolder gui = new BooleanHolder();&#xD;
 BooleanHolder gv = new BooleanHolder();&#xD;
 BooleanHolder wf = new BooleanHolder();&#xD;
 BooleanHolder ra = new BooleanHolder();&#xD;
 BooleanHolder la = new BooleanHolder();&#xD;
 BooleanHolder ca = new BooleanHolder();&#xD;
 BooleanHolder s = new BooleanHolder();&#xD;
 BooleanHolder all = new BooleanHolder();&#xD;
 BooleanHolder latency = new BooleanHolder();&#xD;
 BooleanHolder verbose = new BooleanHolder();&#xD;
 StringHolder input = new StringHolder();&#xD;
 StringHolder output = new StringHolder();&#xD;
&#xD;
 // create the parser and specify the allowed options ...&#xD;
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,&#xD;
     schedulerSelected);&#xD;
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
 parser.addOption(&#xD;
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,&#xD;
     end2end);&#xD;
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,&#xD;
     faults);&#xD;
 parser.addOption(&quot;-gui %v #create a gui visualizations&quot;, gui);&#xD;
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
 parser.addOption(&#xD;
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
     wf);&#xD;
 parser.addOption(&#xD;
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,&#xD;
     ra);&#xD;
 parser.addOption(&#xD;
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
 parser.addOption(&#xD;
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,&#xD;
     output);&#xD;
 parser.addOption(&#xD;
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
     verbose);&#xD;
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
 // $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
&#xD;
 // match the arguments ...&#xD;
 parser.matchAllArgs(args);&#xD;
&#xD;
 // Set WARP system configuration options&#xD;
 if (channels.value > 0) {&#xD;
   nChannels = channels.value; // set option specified&#xD;
 } else {&#xD;
   nChannels = NUM_CHANNELS; // set to default&#xD;
 }&#xD;
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
   numFaults = faults.value; // set option specified&#xD;
 } else {&#xD;
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
 }&#xD;
 if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   minLQ = m.value; // set option specified&#xD;
 } else {&#xD;
   minLQ = MIN_LQ; // set to default&#xD;
 }&#xD;
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   e2e = end2end.value; // set option specified&#xD;
 } else {&#xD;
   e2e = E2E; // set to default&#xD;
 }&#xD;
 if (output.value != null) { // default output subdirectory (from working directory)&#xD;
   outputSubDirectory = output.value; // set option specified&#xD;
 } else {&#xD;
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
 }&#xD;
&#xD;
 guiRequested = gui.value; // GraphVis file requested flag&#xD;
 gvRequested = gv.value; // GraphVis file requested flag&#xD;
 wfRequested = wf.value; // WARP file requested flag&#xD;
 raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
 laRequested = la.value; // Latency Analysis file requested flag&#xD;
 caRequested = ca.value; // Latency Analysis file requested flag&#xD;
 simRequested = s.value; // Simulation file requested flag&#xD;
 allRequested = all.value; // all out files requested flag&#xD;
 latencyRequested = latency.value; // latency report requested flag&#xD;
 verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
 inputFile = input.value; // input file specified&#xD;
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
   schedulerRequested = true;&#xD;
   switch (schedulerSelected.value) {&#xD;
     case &quot;priority&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
&#xD;
     case &quot;rm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
       break;&#xD;
&#xD;
     case &quot;dm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
       break;&#xD;
&#xD;
     case &quot;rtHart&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
       break;&#xD;
&#xD;
     case &quot;poset&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
       break;&#xD;
&#xD;
     default:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
   }&#xD;
 } else { // null value when no scheduler specified; so use default&#xD;
   Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-wqhLxiEe2Pj61kfbEkwg" name="printWarpParameters" specification="_Rnoj4rxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>// print all system configuration parameters&#xD;
 // Print out each of the system configuration values&#xD;
 System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
 System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
 System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
 System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
 System.out.println(&quot;\tguiRequest flag=&quot; + guiRequested);&#xD;
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
 if (inputFile != null) {&#xD;
   System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
 } else {&#xD;
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
 }&#xD;
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RnmusLxiEe2Pj61kfbEkwg" name="main" isStatic="true" method="_R-wqcLxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_EMe7xiEe2Pj61kfbEkwg">
                  <body>The main entry point for the application.&#xD;
   * Run with -help argument for more information about commands.&#xD;
   * @param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_RnmusbxiEe2Pj61kfbEkwg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RnmusrxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rnn80LxiEe2Pj61kfbEkwg" name="setWarpParameters" visibility="private" isStatic="true" method="_R-wqgbxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_EzhrxiEe2Pj61kfbEkwg">
                  <body>Parses program arguments and assigns each attribute.&#xD;
   * &#xD;
   * @param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rnn80bxiEe2Pj61kfbEkwg" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Rnoj4LxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rnoj4rxiEe2Pj61kfbEkwg" name="printWarpParameters" visibility="private" isStatic="true" method="_R-wqhLxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_Ezh7xiEe2Pj61kfbEkwg">
                  <body>Displays warp parameters to console.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_R7RRkLxiEe2Pj61kfbEkwg" name="visualize" visibility="private" isStatic="true" method="_R-wqc7xiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_EzgLxiEe2Pj61kfbEkwg">
                  <body>Visualizes workload by creating visualization object from workload object.&#xD;
   * Either prints to console or displays GUI depending on workload choice.&#xD;
   * &#xD;
   * @param workLoad&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_R7R4oLxiEe2Pj61kfbEkwg" name="workLoad" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R7R4obxiEe2Pj61kfbEkwg" name="choice" type="_RmLLULxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R7R4orxiEe2Pj61kfbEkwg" name="visualize" visibility="private" isStatic="true" method="_R-wqdrxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_EzgbxiEe2Pj61kfbEkwg">
                  <body>Visualizes workload by creating visualization object from WarpInterface object.&#xD;
   * Saves visualization to file.&#xD;
   * &#xD;
   * @param workLoad&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_R7R4o7xiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R7R4pLxiEe2Pj61kfbEkwg" name="choice" type="_RmJ9MLxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R7R4pbxiEe2Pj61kfbEkwg" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_R-wqebxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_EzgrxiEe2Pj61kfbEkwg">
                  <body>Verifies deadlines, reliabilities, and channel conflicts.&#xD;
   * &#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_R7R4prxiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R7R4p7xiEe2Pj61kfbEkwg" name="verifyReliabilities" visibility="private" isStatic="true" method="_R-wqe7xiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_Ezg7xiEe2Pj61kfbEkwg">
                  <body>Verifies end to end reliabilities and displays to console.&#xD;
   * &#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_R7R4qLxiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R7R4qbxiEe2Pj61kfbEkwg" name="verifyDeadlines" visibility="private" isStatic="true" method="_R-wqfbxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_EzhLxiEe2Pj61kfbEkwg">
                  <body>Verifies that all flows meet their deadlines.&#xD;
   * &#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_R7R4qrxiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R7SfsLxiEe2Pj61kfbEkwg" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_R-wqf7xiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_EzhbxiEe2Pj61kfbEkwg">
                  <body>Checks for conflicts between channels and prints to console.&#xD;
   * &#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_R7SfsbxiEe2Pj61kfbEkwg" name="warp" type="_Rm2gwLxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RnuDcLxiEe2Pj61kfbEkwg" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_R-C4wLxiEe2Pj61kfbEkwg" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R-C4wbxiEe2Pj61kfbEkwg" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-C4wrxiEe2Pj61kfbEkwg" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R-C4w7xiEe2Pj61kfbEkwg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-C4xLxiEe2Pj61kfbEkwg" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R-C4xbxiEe2Pj61kfbEkwg" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-C4xrxiEe2Pj61kfbEkwg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R-C4x7xiEe2Pj61kfbEkwg" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-C4yLxiEe2Pj61kfbEkwg" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R-Df0LxiEe2Pj61kfbEkwg" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-Df0bxiEe2Pj61kfbEkwg" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-Df07xiEe2Pj61kfbEkwg" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-Df1LxiEe2Pj61kfbEkwg" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-Df1bxiEe2Pj61kfbEkwg" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-EG4LxiEe2Pj61kfbEkwg" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-EG4rxiEe2Pj61kfbEkwg" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-EG5LxiEe2Pj61kfbEkwg" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-Et8LxiEe2Pj61kfbEkwg" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-Et8bxiEe2Pj61kfbEkwg" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R-Et8rxiEe2Pj61kfbEkwg" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-Et87xiEe2Pj61kfbEkwg" name="predecessor" type="_RnuDcLxiEe2Pj61kfbEkwg" association="_R_EziLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R-Et9LxiEe2Pj61kfbEkwg" name="endTimes" visibility="private" type="_RlTBlLxiEe2Pj61kfbEkwg" association="_SAQfQLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R-FVArxiEe2Pj61kfbEkwg" name="subObjects" type="_R7U78bxiEe2Pj61kfbEkwg" isReadOnly="true" association="_SARtYLxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-xRgLxiEe2Pj61kfbEkwg" name="SchedulableObject" specification="_RnwfsLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-xRgbxiEe2Pj61kfbEkwg" type="_RnuDcLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-x4kLxiEe2Pj61kfbEkwg" name="SchedulableObject" specification="_R7U787xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-x4kbxiEe2Pj61kfbEkwg" name="obj" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-x4krxiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-x4k7xiEe2Pj61kfbEkwg" type="_RnuDcLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-x4lLxiEe2Pj61kfbEkwg" name="SchedulableObject" specification="_RnxGwLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-x4lbxiEe2Pj61kfbEkwg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-x4lrxiEe2Pj61kfbEkwg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-x4l7xiEe2Pj61kfbEkwg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-x4mLxiEe2Pj61kfbEkwg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-x4mbxiEe2Pj61kfbEkwg" type="_RnuDcLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-x4mrxiEe2Pj61kfbEkwg" name="SchedulableObject" specification="_Rnxt0bxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-x4m7xiEe2Pj61kfbEkwg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-x4nLxiEe2Pj61kfbEkwg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-x4nbxiEe2Pj61kfbEkwg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-x4nrxiEe2Pj61kfbEkwg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-x4n7xiEe2Pj61kfbEkwg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-x4oLxiEe2Pj61kfbEkwg" type="_RnuDcLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-x4obxiEe2Pj61kfbEkwg" name="setDefaultParameters" specification="_RnyU5LxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-x4orxiEe2Pj61kfbEkwg" name="getAllEndTimes" specification="_RnyU5bxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-x4o7xiEe2Pj61kfbEkwg" type="_RlTBlLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-x4pLxiEe2Pj61kfbEkwg" name="addToEndTimes" specification="_RnzjALxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-x4pbxiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-x4prxiEe2Pj61kfbEkwg" name="peekEndTimes" specification="_RnzjArxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-x4p7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-x4qLxiEe2Pj61kfbEkwg" name="pollEndTimes" specification="_RnzjBLxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-x4qbxiEe2Pj61kfbEkwg" name="addSubObject" specification="_R7VjAbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-x4qrxiEe2Pj61kfbEkwg" name="obj" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-x4q7xiEe2Pj61kfbEkwg" name="getName" specification="_Rn0KELxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-x4rLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-x4rbxiEe2Pj61kfbEkwg" name="setName" specification="_Rn0KErxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-x4rrxiEe2Pj61kfbEkwg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-yfoLxiEe2Pj61kfbEkwg" name="getReleaseTime" specification="_Rn0xIbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-yfobxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-yforxiEe2Pj61kfbEkwg" name="getPhase" specification="_Rn1YMLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-yfo7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-yfpLxiEe2Pj61kfbEkwg" name="getStartTime" specification="_Rn1YMrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-yfpbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-yfprxiEe2Pj61kfbEkwg" name="setEndTime" specification="_Rn1_QbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-yfp7xiEe2Pj61kfbEkwg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-yfqLxiEe2Pj61kfbEkwg" name="setStartTime" specification="_Rn1_Q7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-yfqbxiEe2Pj61kfbEkwg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-yfqrxiEe2Pj61kfbEkwg" name="setReleaseTime" specification="_Rn2mULxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-yfq7xiEe2Pj61kfbEkwg" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-yfrLxiEe2Pj61kfbEkwg" name="setPeriod" specification="_Rn3NYLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-yfrbxiEe2Pj61kfbEkwg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-yfrrxiEe2Pj61kfbEkwg" name="setPhase" specification="_Rn3NYrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-yfr7xiEe2Pj61kfbEkwg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-yfsLxiEe2Pj61kfbEkwg" name="setNextReleaseTime" specification="_Rn30cLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-yfsbxiEe2Pj61kfbEkwg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-yfsrxiEe2Pj61kfbEkwg" name="maxPhaseComparison" specification="_R7VjA7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-yfs7xiEe2Pj61kfbEkwg" name="obj2" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-yftLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-yftbxiEe2Pj61kfbEkwg" name="maxPhaseComparison" specification="_R7WKELxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-yftrxiEe2Pj61kfbEkwg" name="obj1" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-yft7xiEe2Pj61kfbEkwg" name="obj2" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-yfuLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-yfubxiEe2Pj61kfbEkwg" name="deadlineComparison" specification="_R7WKFLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-yfurxiEe2Pj61kfbEkwg" name="obj2" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-yfu7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-zGsLxiEe2Pj61kfbEkwg" name="deadlineComparison" specification="_R7WKF7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-zGsbxiEe2Pj61kfbEkwg" name="obj1" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-zGsrxiEe2Pj61kfbEkwg" name="obj2" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-zGs7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-zGtLxiEe2Pj61kfbEkwg" name="periodComparison" specification="_R7WxILxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-zGtbxiEe2Pj61kfbEkwg" name="obj2" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-zGtrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-zGt7xiEe2Pj61kfbEkwg" name="periodComparison" specification="_R7WxI7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-zGuLxiEe2Pj61kfbEkwg" name="obj1" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-zGubxiEe2Pj61kfbEkwg" name="obj2" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-zGurxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-zGu7xiEe2Pj61kfbEkwg" name="priorityComparison" specification="_R7WxJ7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-zGvLxiEe2Pj61kfbEkwg" name="obj2" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-zGvbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-zGvrxiEe2Pj61kfbEkwg" name="priorityComparison" specification="_R7WxKrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-zGv7xiEe2Pj61kfbEkwg" name="obj1" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-zGwLxiEe2Pj61kfbEkwg" name="obj2" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-zGwbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-zGwrxiEe2Pj61kfbEkwg" name="releaseTimeComparison" specification="_R7XYM7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-zGw7xiEe2Pj61kfbEkwg" name="obj2" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-zGxLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-zGxbxiEe2Pj61kfbEkwg" name="releaseTimeComparison" specification="_R7XYNrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-zGxrxiEe2Pj61kfbEkwg" name="obj1" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-zGx7xiEe2Pj61kfbEkwg" name="obj2" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-zGyLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-zGybxiEe2Pj61kfbEkwg" name="LatestReleaseTimeComparison" specification="_R7XYOrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-zGyrxiEe2Pj61kfbEkwg" name="obj2" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-zGy7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-zGzLxiEe2Pj61kfbEkwg" name="LatestReleaseTimeComparison" specification="_R7X_QrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-zGzbxiEe2Pj61kfbEkwg" name="obj1" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-zGzrxiEe2Pj61kfbEkwg" name="obj2" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-zGz7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-zG0LxiEe2Pj61kfbEkwg" name="compareAscendingOrder" specification="_Rn5poLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-zG0bxiEe2Pj61kfbEkwg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-zG0rxiEe2Pj61kfbEkwg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-zG07xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-ztwLxiEe2Pj61kfbEkwg" name="compareDescendingOrder" specification="_Rn5ppLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-ztwbxiEe2Pj61kfbEkwg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-ztwrxiEe2Pj61kfbEkwg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-ztw7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-ztxLxiEe2Pj61kfbEkwg" name="print" specification="_Rn6QsbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-ztxbxiEe2Pj61kfbEkwg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-ztxrxiEe2Pj61kfbEkwg" name="print" specification="_Rn6Qs7xiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RnwfsLxiEe2Pj61kfbEkwg" name="SchedulableObject" visibility="package" method="_R-xRgLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RnwfsbxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RnwfsrxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Rnwfs7xiEe2Pj61kfbEkwg" type="_RnuDcLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RnxGwLxiEe2Pj61kfbEkwg" name="SchedulableObject" visibility="package" method="_R-x4lLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RnxGxbxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RnxGxrxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RnxGwbxiEe2Pj61kfbEkwg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnxGwrxiEe2Pj61kfbEkwg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnxGw7xiEe2Pj61kfbEkwg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnxGxLxiEe2Pj61kfbEkwg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rnxt0LxiEe2Pj61kfbEkwg" type="_RnuDcLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Rnxt0bxiEe2Pj61kfbEkwg" name="SchedulableObject" visibility="package" method="_R-x4mrxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_RnyU4bxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RnyU4rxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Rnxt0rxiEe2Pj61kfbEkwg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rnxt07xiEe2Pj61kfbEkwg" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rnxt1LxiEe2Pj61kfbEkwg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rnxt1bxiEe2Pj61kfbEkwg" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnyU4LxiEe2Pj61kfbEkwg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RnyU47xiEe2Pj61kfbEkwg" type="_RnuDcLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RnyU5LxiEe2Pj61kfbEkwg" name="setDefaultParameters" visibility="private" method="_R-x4obxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RnyU5bxiEe2Pj61kfbEkwg" name="getAllEndTimes" method="_R-x4orxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_Ezi7xiEe2Pj61kfbEkwg">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_R7VjALxiEe2Pj61kfbEkwg" type="_RlTBlLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RnzjALxiEe2Pj61kfbEkwg" name="addToEndTimes" method="_R-x4pLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RnzjAbxiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnzjArxiEe2Pj61kfbEkwg" name="peekEndTimes" method="_R-x4prxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RnzjA7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RnzjBLxiEe2Pj61kfbEkwg" name="pollEndTimes" method="_R-x4qLxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_Rn0KELxiEe2Pj61kfbEkwg" name="getName" method="_R-x4q7xiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_EzjLxiEe2Pj61kfbEkwg">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rn0KEbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rn0KErxiEe2Pj61kfbEkwg" name="setName" method="_R-x4rbxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_FakLxiEe2Pj61kfbEkwg">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rn0xILxiEe2Pj61kfbEkwg" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rn0xIbxiEe2Pj61kfbEkwg" name="getReleaseTime" method="_R-yfoLxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_FakbxiEe2Pj61kfbEkwg">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rn0xIrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rn1YMLxiEe2Pj61kfbEkwg" name="getPhase" method="_R-yforxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_FakrxiEe2Pj61kfbEkwg">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rn1YMbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rn1YMrxiEe2Pj61kfbEkwg" name="getStartTime" method="_R-yfpLxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_Fak7xiEe2Pj61kfbEkwg">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rn1_QLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rn1_QbxiEe2Pj61kfbEkwg" name="setEndTime" method="_R-yfprxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_FalLxiEe2Pj61kfbEkwg">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rn1_QrxiEe2Pj61kfbEkwg" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rn1_Q7xiEe2Pj61kfbEkwg" name="setStartTime" method="_R-yfqLxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_FalbxiEe2Pj61kfbEkwg">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rn1_RLxiEe2Pj61kfbEkwg" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rn2mULxiEe2Pj61kfbEkwg" name="setReleaseTime" method="_R-yfqrxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_FalrxiEe2Pj61kfbEkwg">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rn2mUbxiEe2Pj61kfbEkwg" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rn3NYLxiEe2Pj61kfbEkwg" name="setPeriod" method="_R-yfrLxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_Fal7xiEe2Pj61kfbEkwg">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rn3NYbxiEe2Pj61kfbEkwg" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rn3NYrxiEe2Pj61kfbEkwg" name="setPhase" method="_R-yfrrxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_FamLxiEe2Pj61kfbEkwg">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rn3NY7xiEe2Pj61kfbEkwg" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rn30cLxiEe2Pj61kfbEkwg" name="setNextReleaseTime" method="_R-yfsLxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_FambxiEe2Pj61kfbEkwg">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Rn30cbxiEe2Pj61kfbEkwg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rn5poLxiEe2Pj61kfbEkwg" name="compareAscendingOrder" method="_R-zG0LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Rn5pobxiEe2Pj61kfbEkwg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rn5porxiEe2Pj61kfbEkwg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rn5po7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rn5ppLxiEe2Pj61kfbEkwg" name="compareDescendingOrder" method="_R-ztwLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Rn5ppbxiEe2Pj61kfbEkwg" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rn5pprxiEe2Pj61kfbEkwg" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Rn6QsLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rn6QsbxiEe2Pj61kfbEkwg" name="print" method="_R-ztxLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_Rn6QsrxiEe2Pj61kfbEkwg" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Rn6Qs7xiEe2Pj61kfbEkwg" name="print" method="_R-ztxrxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_R7U787xiEe2Pj61kfbEkwg" name="SchedulableObject" visibility="package" method="_R-x4kLxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R7U79rxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R7U797xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_R_EzirxiEe2Pj61kfbEkwg">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_R7U79LxiEe2Pj61kfbEkwg" name="obj" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R7U79bxiEe2Pj61kfbEkwg" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R7U7-LxiEe2Pj61kfbEkwg" type="_RnuDcLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R7VjAbxiEe2Pj61kfbEkwg" name="addSubObject" method="_R-x4qbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R7VjArxiEe2Pj61kfbEkwg" name="obj" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R7VjA7xiEe2Pj61kfbEkwg" name="maxPhaseComparison" method="_R-yfsrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R7VjBLxiEe2Pj61kfbEkwg" name="obj2" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R7VjBbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R7WKELxiEe2Pj61kfbEkwg" name="maxPhaseComparison" method="_R-yftbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R7WKEbxiEe2Pj61kfbEkwg" name="obj1" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R7WKErxiEe2Pj61kfbEkwg" name="obj2" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R7WKE7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R7WKFLxiEe2Pj61kfbEkwg" name="deadlineComparison" method="_R-yfubxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R7WKFbxiEe2Pj61kfbEkwg" name="obj2" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R7WKFrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R7WKF7xiEe2Pj61kfbEkwg" name="deadlineComparison" method="_R-zGsLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R7WKGLxiEe2Pj61kfbEkwg" name="obj1" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R7WKGbxiEe2Pj61kfbEkwg" name="obj2" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R7WKGrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R7WxILxiEe2Pj61kfbEkwg" name="periodComparison" method="_R-zGtLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R7WxIbxiEe2Pj61kfbEkwg" name="obj2" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R7WxIrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R7WxI7xiEe2Pj61kfbEkwg" name="periodComparison" method="_R-zGt7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R7WxJLxiEe2Pj61kfbEkwg" name="obj1" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R7WxJbxiEe2Pj61kfbEkwg" name="obj2" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R7WxJrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R7WxJ7xiEe2Pj61kfbEkwg" name="priorityComparison" method="_R-zGu7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R7WxKLxiEe2Pj61kfbEkwg" name="obj2" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R7WxKbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R7WxKrxiEe2Pj61kfbEkwg" name="priorityComparison" method="_R-zGvrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R7XYMLxiEe2Pj61kfbEkwg" name="obj1" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R7XYMbxiEe2Pj61kfbEkwg" name="obj2" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R7XYMrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R7XYM7xiEe2Pj61kfbEkwg" name="releaseTimeComparison" method="_R-zGwrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R7XYNLxiEe2Pj61kfbEkwg" name="obj2" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R7XYNbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R7XYNrxiEe2Pj61kfbEkwg" name="releaseTimeComparison" method="_R-zGxbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R7XYN7xiEe2Pj61kfbEkwg" name="obj1" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R7XYOLxiEe2Pj61kfbEkwg" name="obj2" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R7XYObxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R7XYOrxiEe2Pj61kfbEkwg" name="LatestReleaseTimeComparison" method="_R-zGybxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R7X_QLxiEe2Pj61kfbEkwg" name="obj2" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R7X_QbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R7X_QrxiEe2Pj61kfbEkwg" name="LatestReleaseTimeComparison" method="_R-zGzLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R7X_Q7xiEe2Pj61kfbEkwg" name="obj1" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R7YmULxiEe2Pj61kfbEkwg" name="obj2" type="_RnuDcLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R7YmUbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RoCMgLxiEe2Pj61kfbEkwg" name="WorkLoadTest" visibility="package">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-ztx7xiEe2Pj61kfbEkwg" name="createDefaultWorkload" specification="_RoCzkLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-ztyLxiEe2Pj61kfbEkwg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-ztybxiEe2Pj61kfbEkwg" type="_RnLQ4LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>int numFaults = 0;&#xD;
		double minLQ = 0.9;&#xD;
		double e2e = 0.99;&#xD;
		WorkLoad workload = new WorkLoad(numFaults, minLQ, e2e, inputFileName);&#xD;
		return workload;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-0U0LxiEe2Pj61kfbEkwg" name="testAddFlow" specification="_RoDaoLxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addFlow(&quot;F2&quot;);&#xD;
		workload.addFlow(&quot;F3&quot;);&#xD;
		workload.addFlow(&quot;F4&quot;);&#xD;
		workload.addFlow(&quot;F5&quot;);&#xD;
		workload.addFlow(&quot;F6&quot;);&#xD;
		var expected = new String[] {&quot;F0&quot;, &quot;F1&quot;, &quot;F2&quot;, &quot;F3&quot;, &quot;F4&quot;, &quot;F5&quot;, &quot;F6&quot;};&#xD;
		var flows = workload.getFlowNamesInOriginalOrder();&#xD;
		for(int i = 0; i &lt; flows.size(); i++) {&#xD;
			var msg = String.format(&quot;At index %d: Flow expected: %s, was: %s.&quot;, i, expected[i], flows.get(i));&#xD;
			assertEquals(msg, flows.get(i), expected[i] );&#xD;
		}&#xD;
		&#xD;
			&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-0U0bxiEe2Pj61kfbEkwg" name="testAddFlowJustNumbers" specification="_RoEBsLxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addFlow(&quot;2&quot;);&#xD;
		workload.addFlow(&quot;3&quot;);&#xD;
		workload.addFlow(&quot;4&quot;);&#xD;
		workload.addFlow(&quot;5&quot;);&#xD;
		workload.addFlow(&quot;6&quot;);&#xD;
		workload.addFlow(&quot;7&quot;);&#xD;
		var expected = new String[] {&quot;F0&quot;, &quot;F1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;};&#xD;
		var flows = workload.getFlowNamesInOriginalOrder();&#xD;
		for(int i = 0; i &lt; flows.size(); i++) {&#xD;
			var msg = String.format(&quot;At index %d: Flow expected: %s, was: %s.&quot;, i, expected[i], flows.get(i));&#xD;
			assertEquals(msg, flows.get(i), expected[i] );&#xD;
		}	&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-0U0rxiEe2Pj61kfbEkwg" name="testAddNodeToFlow" specification="_RoEBtLxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addNodeToFlow(&quot;F1&quot;, &quot;D&quot;);&#xD;
		workload.addNodeToFlow(&quot;F1&quot;, &quot;E&quot;);&#xD;
		workload.addNodeToFlow(&quot;F1&quot;, &quot;F&quot;);&#xD;
		var expected = new String[] {&quot;C&quot;, &quot;B&quot;, &quot;A&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;};&#xD;
		var nodes = workload.getNodesInFlow(&quot;F1&quot;);&#xD;
		for(int i = 0; i &lt; nodes.length; i++) {&#xD;
			var msg = String.format(&quot;At index %d: Node expected: %s was: %s&quot;, i, expected[i], nodes[i]);&#xD;
			assertEquals(msg, expected[i], nodes[i]);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-0U07xiEe2Pj61kfbEkwg" name="testAddNodeToFlowAddingToNewFlow" specification="_RoEow7xiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addFlow(&quot;testFlow&quot;);&#xD;
		workload.addNodeToFlow(&quot;testFlow&quot;, &quot;A&quot;);&#xD;
		workload.addNodeToFlow(&quot;testFlow&quot;, &quot;B&quot;);&#xD;
		workload.addNodeToFlow(&quot;testFlow&quot;, &quot;C&quot;);&#xD;
		var expected = new String[] {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;};&#xD;
		var nodes = workload.getNodesInFlow(&quot;testFlow&quot;);&#xD;
		for(int i = 0; i &lt; nodes.length; i++) {&#xD;
			var msg = String.format(&quot;At index %d: Node expected: %s was: %s&quot;, i, expected[i], nodes[i]);&#xD;
			assertEquals(msg, expected[i], nodes[i]);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-0U1LxiEe2Pj61kfbEkwg" name="testGetTotalTxAttemptsInFlow" specification="_RoFP0rxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		var expected = new int[] {5, 4};&#xD;
		var flows = workload.getFlowNames();&#xD;
		for(int i = 0; i &lt; flows.length; i++) {&#xD;
			int attempts = workload.getTotalTxAttemptsInFlow(flows[i]);&#xD;
			var msg = String.format(&quot;expected Tx Attempts: %d was: %d&quot;, expected[i], attempts);&#xD;
&#xD;
			assertEquals(msg, expected[i], attempts); &#xD;
		}&#xD;
		&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-0U1bxiEe2Pj61kfbEkwg" name="testGetFlowPriority" specification="_RoF24rxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		var flows = workload.getFlowNamesInPriorityOrder();&#xD;
		var expectedP = new int[] {0, 1};&#xD;
		for(int i = 0; i &lt; flows.size(); i++) {&#xD;
			int flowPriority = workload.getFlowPriority(flows.get(i));&#xD;
			var msg = String.format(&quot;Expected Priority: %d Actual Priority: %d &quot;, expectedP[i], flowPriority);&#xD;
			assertEquals(msg, expectedP[i], flowPriority);	&#xD;
		}	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-0U1rxiEe2Pj61kfbEkwg" name="testSetFlowPriority" specification="_RoGd8LxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		//set integer to set the priority&#xD;
		Integer j = 0;&#xD;
		var flows = workload.getFlowNamesInPriorityOrder();&#xD;
		//for loops starts at the end of the list&#xD;
		for(int i = flows.size(); i > 0; i-- ) {&#xD;
			//sets the priority using j then increases j by 1&#xD;
			workload.setFlowPriority(flows.get(i), j );&#xD;
			j++;&#xD;
			var priority = workload.getFlowPriority(flows.get(i));&#xD;
			var msg = String.format(&quot;Expected Priority: %d Actual Priority: %d &quot;, j, priority);&#xD;
			assertEquals(msg, j, priority);&#xD;
		}&#xD;
		&#xD;
		&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-0U17xiEe2Pj61kfbEkwg" name="testGetFlowTxAttemptsPerLink" specification="_RoGd9LxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addFlow(&quot;test&quot;);&#xD;
		var flows = workload.getFlowNames();&#xD;
		var expected = new int[] {3, 3, 1};&#xD;
		for(int i = 0; i &lt; flows.length; i++) {&#xD;
		int attempts = workload.getFlowTxAttemptsPerLink(flows[i]);&#xD;
		String msg = String.format(&quot;Expected No. of Tx: %d Actual No. of Tx: %d &quot;, expected[i], attempts);&#xD;
		assertEquals(msg, expected[i], attempts);&#xD;
		}&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-0U2LxiEe2Pj61kfbEkwg" name="testSetFlowsInRMOrder" specification="_RoHFArxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
	    workload.setFlowsInRMorder();&#xD;
	    var flows = workload.getFlowNamesInPriorityOrder();&#xD;
		var expected = new String[] {&quot;F0&quot;, &quot;F1&quot; };&#xD;
		for(int i = 0; i &lt; flows.size(); i++ ) {&#xD;
			var msg = String.format(&quot;Expected Flow at index %d: %s Actual Flow: %s &quot;,i, expected[i], flows.get(i));&#xD;
			&#xD;
			assertEquals(msg, expected[i], flows.get(i).toString());&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-0U2bxiEe2Pj61kfbEkwg" name="testSetFlowsInRMOrderChangePriorityandPeriod" specification="_RoHFBrxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.setFlowPriority(&quot;F1&quot;, 0);&#xD;
		workload.setFlowPeriod(&quot;F1&quot;, 5);&#xD;
		workload.setFlowsInRMorder();&#xD;
		var flows = workload.getFlowNamesInPriorityOrder();&#xD;
		var expected = new String[] {&quot;F1&quot;, &quot;F0&quot; };&#xD;
		  for(int i = 0; i &lt; flows.size(); i++ ) {&#xD;
			var msg = String.format(&quot;Expected Flow at index %d: %s Actual Flow: %s &quot;,i, expected[i], flows.get(i));&#xD;
				&#xD;
			assertEquals(msg, expected[i], flows.get(i).toString());&#xD;
	}&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-0U2rxiEe2Pj61kfbEkwg" name="testGetNodeNamesInAlphabeticalOrder" specification="_RoHsE7xiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		var expected = new String[] {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;,};&#xD;
		var actual = workload.getNodeNamesOrderedAlphabetically();&#xD;
		for(int i = 0; i &lt; actual.length; i++) {&#xD;
			var node = actual[i];&#xD;
			var msg = String.format(&quot;At index: %d Node expected: %s Actual Node: %s&quot;, i, expected[i], node);&#xD;
			assertEquals(msg, expected[i], node);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-0U27xiEe2Pj61kfbEkwg" name="testGetNodeNamesInAlphabeticalOrderExtraNodes" specification="_RoITI7xiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addNodeToFlow(&quot;F0&quot;, &quot;1&quot;);&#xD;
		workload.addNodeToFlow(&quot;F1&quot;, &quot;O&quot;);&#xD;
		workload.addNodeToFlow(&quot;F0&quot;, &quot;N&quot;);&#xD;
		workload.addNodeToFlow(&quot;F1&quot;, &quot;2&quot;);&#xD;
		var expected = new String[] {&quot;1&quot;, &quot;2&quot;, &quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;N&quot;, &quot;O&quot;};&#xD;
		var actual = workload.getNodeNamesOrderedAlphabetically();&#xD;
		for(int i = 0; i &lt; actual.length; i++) {&#xD;
			var node = actual[i];&#xD;
			var msg = String.format(&quot;At index: %d Node expected: %s Actual Node: %s&quot;, i, expected[i], node);&#xD;
			assertEquals(msg, expected[i], node);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-0U3LxiEe2Pj61kfbEkwg" name="getFlowNames" specification="_RoITJLxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		String[] actual = workload.getFlowNames();&#xD;
		String[] expected = {&quot;F0&quot;, &quot;F1&quot;};&#xD;
		assertArrayEquals(actual, expected, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-0U3bxiEe2Pj61kfbEkwg" name="getNodeIndex_exists" specification="_RoI6MrxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int actual = workload.getNodeIndex(&quot;D&quot;);&#xD;
		int expected = 3;&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-0U3rxiEe2Pj61kfbEkwg" name="getNodeIndex_doesNotExist" specification="_RoI6NrxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int actual = workload.getNodeIndex(&quot;&quot;);&#xD;
		int expected = 0;&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-0U37xiEe2Pj61kfbEkwg" name="getNodesInFlow" specification="_RoJhQ7xiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		String[] actual = workload.getNodesInFlow(&quot;F0&quot;);&#xD;
		String[] expected = {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;};&#xD;
		assertArrayEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-0U4LxiEe2Pj61kfbEkwg" name="getHyperPeriod_Short" specification="_RoKIU7xiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int actual = workload.getHyperPeriod();&#xD;
		int expected = 20;&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-074LxiEe2Pj61kfbEkwg" name="getHyperPeriod_Long" specification="_RoKvYrxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>String fileName = &quot;StressTest.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int actual = workload.getHyperPeriod();&#xD;
		int expected = 300;&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-074bxiEe2Pj61kfbEkwg" name="getNumTxAttemptsPerLink" specification="_RoKvZrxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>String fileName = &quot;StressTest.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		Integer[] actual = workload.getNumTxAttemptsPerLink(&quot;F1&quot;);&#xD;
		Integer[] expected = {3, 3, 0};&#xD;
		assertArrayEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-074rxiEe2Pj61kfbEkwg" name="maxFlowLength_StressTest" specification="_RoLWc7xiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>String fileName = &quot;StressTest.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int expected = 8;&#xD;
		int actual = workload.maxFlowLength();&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-0747xiEe2Pj61kfbEkwg" name="maxFlowLength_LongChain" specification="_RoL9grxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>String fileName = &quot;LongChain.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int expected = 26;&#xD;
		int actual = workload.maxFlowLength();&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-075LxiEe2Pj61kfbEkwg" name="getFlowDeadline" specification="_RoL9hrxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>String fileName = &quot;Example.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		&#xD;
		String flow = &quot;F0&quot;;&#xD;
		int expected = 10;&#xD;
		&#xD;
		workload.setFlowDeadline(flow, expected);&#xD;
		int actual = workload.getFlowDeadline(flow);&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-075bxiEe2Pj61kfbEkwg" name="setFlowDeadline" specification="_RoMkk7xiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>String fileName = &quot;Example.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		&#xD;
		String flow = &quot;F0&quot;;&#xD;
		int expected = 10;&#xD;
		&#xD;
		workload.setFlowDeadline(flow, expected);&#xD;
		int actual = workload.getFlowDeadline(flow);&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RoCzkLxiEe2Pj61kfbEkwg" name="createDefaultWorkload" visibility="private" method="_R-ztx7xiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_GBoLxiEe2Pj61kfbEkwg">
                  <body>Helper method to setup workload object depending on filename.&#xD;
	 * @param inputFileName name of file to use.&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_RoCzkbxiEe2Pj61kfbEkwg" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R7cQsLxiEe2Pj61kfbEkwg" type="_RnLQ4LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RoDaoLxiEe2Pj61kfbEkwg" name="testAddFlow" visibility="package" method="_R-0U0LxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoEBsLxiEe2Pj61kfbEkwg" name="testAddFlowJustNumbers" visibility="package" method="_R-0U0bxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoEBtLxiEe2Pj61kfbEkwg" name="testAddNodeToFlow" visibility="package" method="_R-0U0rxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoEow7xiEe2Pj61kfbEkwg" name="testAddNodeToFlowAddingToNewFlow" visibility="package" method="_R-0U07xiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoFP0rxiEe2Pj61kfbEkwg" name="testGetTotalTxAttemptsInFlow" visibility="package" method="_R-0U1LxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoF24rxiEe2Pj61kfbEkwg" name="testGetFlowPriority" visibility="package" method="_R-0U1bxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoGd8LxiEe2Pj61kfbEkwg" name="testSetFlowPriority" visibility="package" method="_R-0U1rxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoGd9LxiEe2Pj61kfbEkwg" name="testGetFlowTxAttemptsPerLink" visibility="package" method="_R-0U17xiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoHFArxiEe2Pj61kfbEkwg" name="testSetFlowsInRMOrder" visibility="package" method="_R-0U2LxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoHFBrxiEe2Pj61kfbEkwg" name="testSetFlowsInRMOrderChangePriorityandPeriod" visibility="package" method="_R-0U2bxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoHsE7xiEe2Pj61kfbEkwg" name="testGetNodeNamesInAlphabeticalOrder" visibility="package" method="_R-0U2rxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoITI7xiEe2Pj61kfbEkwg" name="testGetNodeNamesInAlphabeticalOrderExtraNodes" visibility="package" method="_R-0U27xiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_GBobxiEe2Pj61kfbEkwg">
                  <body>tests the getNodeNamesOrderedAlphabetically method in WorkLoad.java class. Adds extra Nodes&#xD;
	 * with names not present in the original file, then tests to see if they are sorted properly.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_RoITJLxiEe2Pj61kfbEkwg" name="getFlowNames" visibility="package" method="_R-0U3LxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoI6MrxiEe2Pj61kfbEkwg" name="getNodeIndex_exists" visibility="package" method="_R-0U3bxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoI6NrxiEe2Pj61kfbEkwg" name="getNodeIndex_doesNotExist" visibility="package" method="_R-0U3rxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoJhQ7xiEe2Pj61kfbEkwg" name="getNodesInFlow" visibility="package" method="_R-0U37xiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoKIU7xiEe2Pj61kfbEkwg" name="getHyperPeriod_Short" visibility="package" method="_R-0U4LxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoKvYrxiEe2Pj61kfbEkwg" name="getHyperPeriod_Long" visibility="package" method="_R-074LxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoKvZrxiEe2Pj61kfbEkwg" name="getNumTxAttemptsPerLink" visibility="package" method="_R-074bxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoLWc7xiEe2Pj61kfbEkwg" name="maxFlowLength_StressTest" visibility="package" method="_R-074rxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoL9grxiEe2Pj61kfbEkwg" name="maxFlowLength_LongChain" visibility="package" method="_R-0747xiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoL9hrxiEe2Pj61kfbEkwg" name="getFlowDeadline" visibility="package" method="_R-075LxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoMkk7xiEe2Pj61kfbEkwg" name="setFlowDeadline" visibility="package" method="_R-075bxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RoNysLxiEe2Pj61kfbEkwg" name="Program">
              <ownedComment xmi:id="_R_GBorxiEe2Pj61kfbEkwg">
                <body>Contains the main logic for constructing schedules given a schedule choice and number of channels.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_R-GjILxiEe2Pj61kfbEkwg" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R-HKMLxiEe2Pj61kfbEkwg" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-HKMbxiEe2Pj61kfbEkwg" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R-HKMrxiEe2Pj61kfbEkwg" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-HKM7xiEe2Pj61kfbEkwg" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R-HKNLxiEe2Pj61kfbEkwg" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-HKNbxiEe2Pj61kfbEkwg" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_R-HKNrxiEe2Pj61kfbEkwg" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-HKN7xiEe2Pj61kfbEkwg" name="workLoad" visibility="package" type="_RnLQ4LxiEe2Pj61kfbEkwg" association="_SARtY7xiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R-HxQbxiEe2Pj61kfbEkwg" name="scheduleBuilt" visibility="package" type="_RlG0ULxiEe2Pj61kfbEkwg" association="_SASUcbxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R-HxQ7xiEe2Pj61kfbEkwg" name="SchedulerSelected" visibility="package" type="_R8fZkLxiEe2Pj61kfbEkwg" association="_SAS7gLxiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R-HxRbxiEe2Pj61kfbEkwg" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-IYUbxiEe2Pj61kfbEkwg" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-IYU7xiEe2Pj61kfbEkwg" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-IYVbxiEe2Pj61kfbEkwg" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-I_YbxiEe2Pj61kfbEkwg" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-I_Y7xiEe2Pj61kfbEkwg" name="channelsAvailable" visibility="package" type="_RjQaMLxiEe2Pj61kfbEkwg" association="_SAS7g7xiEe2Pj61kfbEkwg"/>
              <ownedAttribute xmi:id="_R-JmcLxiEe2Pj61kfbEkwg" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-JmcrxiEe2Pj61kfbEkwg" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-JmdLxiEe2Pj61kfbEkwg" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_R-KNgLxiEe2Pj61kfbEkwg" name="deadlineMisses" visibility="private" type="_RjqC0LxiEe2Pj61kfbEkwg" association="_SAUJoLxiEe2Pj61kfbEkwg"/>
              <interfaceRealization xmi:id="_R7cQsbxiEe2Pj61kfbEkwg" client="_RoNysLxiEe2Pj61kfbEkwg" supplier="_RmAMMLxiEe2Pj61kfbEkwg" contract="_RmAMMLxiEe2Pj61kfbEkwg"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-075rxiEe2Pj61kfbEkwg" name="Program" specification="_R8tcALxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-0757xiEe2Pj61kfbEkwg" name="workLoad" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-076LxiEe2Pj61kfbEkwg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-076bxiEe2Pj61kfbEkwg" name="choice" type="_R8fZkLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-076rxiEe2Pj61kfbEkwg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-0767xiEe2Pj61kfbEkwg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-077LxiEe2Pj61kfbEkwg" type="_RoNysLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-1i8LxiEe2Pj61kfbEkwg" name="Program" specification="_R8uDFrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-1i8bxiEe2Pj61kfbEkwg" name="workLoad" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-1i8rxiEe2Pj61kfbEkwg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-1i87xiEe2Pj61kfbEkwg" name="choice" type="_R8fZkLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-1i9LxiEe2Pj61kfbEkwg" type="_RoNysLxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-1i9bxiEe2Pj61kfbEkwg" name="setDefaultParameters" specification="_R7c3wLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-1i9rxiEe2Pj61kfbEkwg" name="workLoad" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-1i97xiEe2Pj61kfbEkwg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-1i-LxiEe2Pj61kfbEkwg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-1i-bxiEe2Pj61kfbEkwg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-1i-rxiEe2Pj61kfbEkwg" name="toWorkLoad" specification="_RoQ2ALxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-1i-7xiEe2Pj61kfbEkwg" type="_RnLQ4LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-1i_LxiEe2Pj61kfbEkwg" name="buildProgram" specification="_R8uqIbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-1i_bxiEe2Pj61kfbEkwg" name="choice" type="_R8fZkLxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-1i_rxiEe2Pj61kfbEkwg" name="buildOriginalProgram" specification="_RoQ2AbxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); &#xD;
   // create a time slot for nNodes, each initialized with a SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { &#xD;
     	// don't push for last node, so stop at node n-1, which is 2 less than count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); &#xD;
         // make sure precedence constraints on flow are preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { &#xD;
         	// instructionIndex is beyond current schedule length. Increase schedule and channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); &#xD;
             // create a time slot for nNodes, each initialized with a SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); &#xD;
             // need make sure we have channels available for all slots. instructionIndex may be >&#xD;
             // initialized size of array because of phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); &#xD;
               // create a time slot for nNodes, each initialized with a SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; &#xD;
           // get instruction scheduled for snk to execute in the prior time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { &#xD;
             	// The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; &#xD;
               // get instruction scheduled for sink/curentNodeName) to execute in the prior time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { &#xD;
             	  // will try to push and pull to/from the same node, so use the prior instruction channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-1i_7xiEe2Pj61kfbEkwg" name="waitInstruction" specification="_RoQ2ArxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-1jALxiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-1jAbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-1jArxiEe2Pj61kfbEkwg" name="elseWaitInstruction" specification="_RoRdEbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-1jA7xiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-1jBLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-1jBbxiEe2Pj61kfbEkwg" name="elsePullClause" specification="_RoSEILxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-1jBrxiEe2Pj61kfbEkwg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-1jB7xiEe2Pj61kfbEkwg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-1jCLxiEe2Pj61kfbEkwg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-1jCbxiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-1jCrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-1jC7xiEe2Pj61kfbEkwg" name="hasPushInstruction" specification="_RoSEJrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-1jDLxiEe2Pj61kfbEkwg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-1jDbxiEe2Pj61kfbEkwg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-1jDrxiEe2Pj61kfbEkwg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-1jD7xiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-1jELxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-2KALxiEe2Pj61kfbEkwg" name="pushInstruction" specification="_RoSrNLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-2KAbxiEe2Pj61kfbEkwg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-2KArxiEe2Pj61kfbEkwg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-2KA7xiEe2Pj61kfbEkwg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-2KBLxiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-2KBbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-2KBrxiEe2Pj61kfbEkwg" name="getFirstChannelInInstruction" specification="_RoTSRbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-2KB7xiEe2Pj61kfbEkwg" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-2KCLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-2KCbxiEe2Pj61kfbEkwg" name="findNextAvailableInstructionTimeSlot" specification="_R7de1LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-2KCrxiEe2Pj61kfbEkwg" name="schedule" type="_RlG0ULxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-2KC7xiEe2Pj61kfbEkwg" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-2KDLxiEe2Pj61kfbEkwg" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-2KDbxiEe2Pj61kfbEkwg" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-2KDrxiEe2Pj61kfbEkwg" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-2KD7xiEe2Pj61kfbEkwg" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-2KELxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-2KEbxiEe2Pj61kfbEkwg" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R-2KErxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-2KE7xiEe2Pj61kfbEkwg" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-2KFLxiEe2Pj61kfbEkwg" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-2KFbxiEe2Pj61kfbEkwg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-2KFrxiEe2Pj61kfbEkwg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-2KF7xiEe2Pj61kfbEkwg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-2KGLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-2KGbxiEe2Pj61kfbEkwg" name="slotIsAvailable" specification="_R7es8LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-2KGrxiEe2Pj61kfbEkwg" name="currentInstructionTimeSlot" type="_RkVYQLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-2KG7xiEe2Pj61kfbEkwg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-2KHLxiEe2Pj61kfbEkwg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-2KHbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-2KHrxiEe2Pj61kfbEkwg" name="findNextAvailableChannel" specification="_R7es9bxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-2KH7xiEe2Pj61kfbEkwg" name="schedule" type="_RlG0ULxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R-2KILxiEe2Pj61kfbEkwg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-2KIbxiEe2Pj61kfbEkwg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-2KIrxiEe2Pj61kfbEkwg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-2KI7xiEe2Pj61kfbEkwg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R-2KJLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check&#xD;
                           // this result&#xD;
&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
 InstructionTimeSlot priorInstructionTimeSlot;&#xD;
&#xD;
 var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
 if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in&#xD;
                        // that slot, which have to be avoided here&#xD;
   Integer priorTime = currentTime - 1;&#xD;
   priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
   var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
   var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
   // extract the channels used by the src and snk nodes in the prior time slot and store them in&#xD;
   // an array&#xD;
   var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get&#xD;
                                                                                           // the&#xD;
                                                                                           // parameters&#xD;
                                                                                           // from&#xD;
                                                                                           // the&#xD;
                                                                                           // instruction&#xD;
                                                                                           // in&#xD;
                                                                                           // the&#xD;
                                                                                           // src&#xD;
                                                                                           // node's&#xD;
                                                                                           // prior&#xD;
                                                                                           // time&#xD;
                                                                                           // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
   instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the&#xD;
                                                                                       // parameters&#xD;
                                                                                       // from&#xD;
                                                                                       // the&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in the&#xD;
                                                                                       // snk&#xD;
                                                                                       // node's&#xD;
                                                                                       // prior&#xD;
                                                                                       // time&#xD;
                                                                                       // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
 }&#xD;
 Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node&#xD;
 channel++; // increment the channel because we don't use the same channel in consecutive time&#xD;
            // slots for the same node&#xD;
 if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits&#xD;
                                    // max&#xD;
   channel = 0;&#xD;
 }&#xD;
 var channelFound = false;&#xD;
 while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of&#xD;
                                                // channels to assign&#xD;
   var channelString = String.valueOf(channel);&#xD;
   var channelRemoved = channels.remove(channelString);&#xD;
   if (channelRemoved) {&#xD;
     // newChannel has the channel&#xD;
     newChannel = channelString;&#xD;
     channelFound = true;&#xD;
   } else {&#xD;
     // try another channel&#xD;
     channel += 1;&#xD;
     if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel&#xD;
                                        // hits max&#xD;
       channel = 0;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-2KJbxiEe2Pj61kfbEkwg" name="selectPriority" specification="_RoUgYLxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-2KJrxiEe2Pj61kfbEkwg" name="selectRM" specification="_RoUgYbxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-2KJ7xiEe2Pj61kfbEkwg" name="selectDM" specification="_RoUgYrxiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-2xELxiEe2Pj61kfbEkwg" name="selectRtHART" specification="_RoUgY7xiEe2Pj61kfbEkwg">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-2xEbxiEe2Pj61kfbEkwg" name="setScheduleSelected" specification="_R8uqI7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-2xErxiEe2Pj61kfbEkwg" name="choice" type="_R8fZkLxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-2xE7xiEe2Pj61kfbEkwg" name="setSchedule" specification="_R7fUAbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-2xFLxiEe2Pj61kfbEkwg" name="schedule" type="_RlG0ULxiEe2Pj61kfbEkwg"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-2xFbxiEe2Pj61kfbEkwg" name="getSchedule" specification="_RoVHcLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-2xFrxiEe2Pj61kfbEkwg" type="_RlG0ULxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-2xF7xiEe2Pj61kfbEkwg" name="getSchedulerName" specification="_RoVHcbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-2xGLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-2xGbxiEe2Pj61kfbEkwg" name="getSchChoice" specification="_RoVug7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-2xGrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-3YILxiEe2Pj61kfbEkwg" name="getNumChannels" specification="_RoVuhbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-3YIbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-3YIrxiEe2Pj61kfbEkwg" name="getNumTransmissions" specification="_RoWVlLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-3YI7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-3YJLxiEe2Pj61kfbEkwg" name="getRealTimeHartFlag" specification="_RoW8pLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-3YJbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-3YJrxiEe2Pj61kfbEkwg" name="setRealTimeHartFlag" specification="_RoXjsLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-3YJ7xiEe2Pj61kfbEkwg" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-3YKLxiEe2Pj61kfbEkwg" name="getMinPacketReceptionRate" specification="_RoXjsrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-3YKbxiEe2Pj61kfbEkwg" type="_R8TMULxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-3YKrxiEe2Pj61kfbEkwg" name="getE2e" specification="_RoYKw7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-3YK7xiEe2Pj61kfbEkwg" type="_R8TMULxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-3YLLxiEe2Pj61kfbEkwg" name="getName" specification="_RoYx0rxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-3YLbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-3YLrxiEe2Pj61kfbEkwg" name="getOptimizationFlag" specification="_RoZY4rxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-3YL7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-3YMLxiEe2Pj61kfbEkwg" name="deadlineMisses" specification="_RoZ_8rxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-3YMbxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-3YMrxiEe2Pj61kfbEkwg" name="getNumFaults" specification="_RoZ_87xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-3YM7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_R-3YNLxiEe2Pj61kfbEkwg" name="getNodeMapIndex" specification="_RoanArxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R-3YNbxiEe2Pj61kfbEkwg" type="_R5fI4LxiEe2Pj61kfbEkwg" direction="return"/>
                <language>java</language>
                <body>var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
                                                                  // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndexMap = new HashMap&lt;String, Integer>(); // create a new mapping from node names to&#xD;
                                                    // index in schedule&#xD;
 // table&#xD;
 var nNodes = orderedNodes.length;&#xD;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
   var name = orderedNodes[index];&#xD;
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
 }&#xD;
 return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RoQ2ALxiEe2Pj61kfbEkwg" name="toWorkLoad" method="_R-1i-rxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_GBo7xiEe2Pj61kfbEkwg">
                  <body>Getter method to retrieve workLoad from which schedules are built.</body>
                </ownedComment>
                <ownedParameter xmi:id="_R7de07xiEe2Pj61kfbEkwg" type="_RnLQ4LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RoQ2AbxiEe2Pj61kfbEkwg" name="buildOriginalProgram" method="_R-1i_rxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoQ2ArxiEe2Pj61kfbEkwg" name="waitInstruction" visibility="private" method="_R-1i_7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RoQ2A7xiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RoRdELxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RoRdEbxiEe2Pj61kfbEkwg" name="elseWaitInstruction" visibility="private" method="_R-1jArxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RoRdErxiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RoRdE7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RoSEILxiEe2Pj61kfbEkwg" name="elsePullClause" visibility="private" method="_R-1jBbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RoSEIbxiEe2Pj61kfbEkwg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RoSEIrxiEe2Pj61kfbEkwg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RoSEI7xiEe2Pj61kfbEkwg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RoSEJLxiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RoSEJbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RoSEJrxiEe2Pj61kfbEkwg" name="hasPushInstruction" visibility="private" method="_R-1jC7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RoSEJ7xiEe2Pj61kfbEkwg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RoSrMLxiEe2Pj61kfbEkwg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RoSrMbxiEe2Pj61kfbEkwg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RoSrMrxiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RoSrM7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RoSrNLxiEe2Pj61kfbEkwg" name="pushInstruction" visibility="private" method="_R-2KALxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RoTSQLxiEe2Pj61kfbEkwg" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RoTSQbxiEe2Pj61kfbEkwg" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RoTSQrxiEe2Pj61kfbEkwg" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RoTSQ7xiEe2Pj61kfbEkwg" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RoTSRLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RoTSRbxiEe2Pj61kfbEkwg" name="getFirstChannelInInstruction" visibility="private" method="_R-2KBrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RoTSRrxiEe2Pj61kfbEkwg" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RoTSR7xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RoUgYLxiEe2Pj61kfbEkwg" name="selectPriority" method="_R-2KJbxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoUgYbxiEe2Pj61kfbEkwg" name="selectRM" method="_R-2KJrxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoUgYrxiEe2Pj61kfbEkwg" name="selectDM" method="_R-2KJ7xiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoUgY7xiEe2Pj61kfbEkwg" name="selectRtHART" method="_R-2xELxiEe2Pj61kfbEkwg"/>
              <ownedOperation xmi:id="_RoVHcLxiEe2Pj61kfbEkwg" name="getSchedule" method="_R-2xFbxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_GBpLxiEe2Pj61kfbEkwg">
                  <body>Getter method to retrieve built schedule from program.</body>
                </ownedComment>
                <ownedParameter xmi:id="_R7fUA7xiEe2Pj61kfbEkwg" type="_RlG0ULxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RoVHcbxiEe2Pj61kfbEkwg" name="getSchedulerName" method="_R-2xF7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RoVHcrxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RoVug7xiEe2Pj61kfbEkwg" name="getSchChoice" method="_R-2xGbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RoVuhLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RoVuhbxiEe2Pj61kfbEkwg" name="getNumChannels" method="_R-3YILxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RoWVkLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RoWVlLxiEe2Pj61kfbEkwg" name="getNumTransmissions" method="_R-3YIrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RoW8oLxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RoW8pLxiEe2Pj61kfbEkwg" name="getRealTimeHartFlag" visibility="private" method="_R-3YJLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RoW8pbxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RoXjsLxiEe2Pj61kfbEkwg" name="setRealTimeHartFlag" visibility="private" method="_R-3YJrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RoXjsbxiEe2Pj61kfbEkwg" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RoXjsrxiEe2Pj61kfbEkwg" name="getMinPacketReceptionRate" method="_R-3YKLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R8vRMbxiEe2Pj61kfbEkwg" type="_R8TMULxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RoYKw7xiEe2Pj61kfbEkwg" name="getE2e" method="_R-3YKrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R8vRMrxiEe2Pj61kfbEkwg" type="_R8TMULxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RoYx0rxiEe2Pj61kfbEkwg" name="getName" method="_R-3YLLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RoYx07xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RoZY4rxiEe2Pj61kfbEkwg" name="getOptimizationFlag" method="_R-3YLrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RoZY47xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RoZ_8rxiEe2Pj61kfbEkwg" name="deadlineMisses" method="_R-3YMLxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R7f7ELxiEe2Pj61kfbEkwg" type="_RjqC0LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RoZ_87xiEe2Pj61kfbEkwg" name="getNumFaults" method="_R-3YMrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_RoZ_9LxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RoanArxiEe2Pj61kfbEkwg" name="getNodeMapIndex" method="_R-3YNLxiEe2Pj61kfbEkwg">
                <ownedComment xmi:id="_R_GBpbxiEe2Pj61kfbEkwg">
                  <body>Maps nodes from workload to their respective indexes.&#xD;
   * &#xD;
   * @return HashMap of node indexes</body>
                </ownedComment>
                <ownedParameter xmi:id="_R8vRM7xiEe2Pj61kfbEkwg" type="_R5fI4LxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R7c3wLxiEe2Pj61kfbEkwg" name="setDefaultParameters" visibility="private" method="_R-1i9bxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R7c3wbxiEe2Pj61kfbEkwg" name="workLoad" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R7de0LxiEe2Pj61kfbEkwg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R7de0bxiEe2Pj61kfbEkwg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R7de0rxiEe2Pj61kfbEkwg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R7de1LxiEe2Pj61kfbEkwg" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_R-2KCbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R7de1bxiEe2Pj61kfbEkwg" name="schedule" type="_RlG0ULxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R7eF4LxiEe2Pj61kfbEkwg" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R7eF4bxiEe2Pj61kfbEkwg" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R7eF4rxiEe2Pj61kfbEkwg" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R7eF47xiEe2Pj61kfbEkwg" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R7eF5LxiEe2Pj61kfbEkwg" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R7eF7LxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R7eF5bxiEe2Pj61kfbEkwg" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_R7eF7bxiEe2Pj61kfbEkwg" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R7eF5rxiEe2Pj61kfbEkwg" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R7eF57xiEe2Pj61kfbEkwg" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R7eF6LxiEe2Pj61kfbEkwg" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R7eF6bxiEe2Pj61kfbEkwg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R7eF6rxiEe2Pj61kfbEkwg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R7eF67xiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R7es8LxiEe2Pj61kfbEkwg" name="slotIsAvailable" visibility="private" method="_R-2KGbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R7es8bxiEe2Pj61kfbEkwg" name="currentInstructionTimeSlot" type="_RkVYQLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R7es8rxiEe2Pj61kfbEkwg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R7es87xiEe2Pj61kfbEkwg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R7es9LxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R7es9bxiEe2Pj61kfbEkwg" name="findNextAvailableChannel" visibility="private" method="_R-2KHrxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R7es9rxiEe2Pj61kfbEkwg" name="schedule" type="_RlG0ULxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R7es97xiEe2Pj61kfbEkwg" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R7es-LxiEe2Pj61kfbEkwg" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R7es-bxiEe2Pj61kfbEkwg" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R7es-rxiEe2Pj61kfbEkwg" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R7fUALxiEe2Pj61kfbEkwg" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_R7fUAbxiEe2Pj61kfbEkwg" name="setSchedule" visibility="private" method="_R-2xE7xiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R7fUArxiEe2Pj61kfbEkwg" name="schedule" type="_RlG0ULxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R8tcALxiEe2Pj61kfbEkwg" name="Program" visibility="package" method="_R-075rxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R8uDE7xiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R8uDFLxiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R8tcAbxiEe2Pj61kfbEkwg" name="workLoad" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8tcArxiEe2Pj61kfbEkwg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R8uDELxiEe2Pj61kfbEkwg" name="choice" type="_R8fZkLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8uDEbxiEe2Pj61kfbEkwg" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R8uDErxiEe2Pj61kfbEkwg" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R8uDFbxiEe2Pj61kfbEkwg" type="_RoNysLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R8uDFrxiEe2Pj61kfbEkwg" name="Program" visibility="package" method="_R-1i8LxiEe2Pj61kfbEkwg">
                <eAnnotations xmi:id="_R8uDGrxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_R8uDG7xiEe2Pj61kfbEkwg" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_R8uDF7xiEe2Pj61kfbEkwg" name="workLoad" type="_RnLQ4LxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8uDGLxiEe2Pj61kfbEkwg" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_R8uDGbxiEe2Pj61kfbEkwg" name="choice" type="_R8fZkLxiEe2Pj61kfbEkwg"/>
                <ownedParameter xmi:id="_R8uqILxiEe2Pj61kfbEkwg" type="_RoNysLxiEe2Pj61kfbEkwg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R8uqIbxiEe2Pj61kfbEkwg" name="buildProgram" method="_R-1i_LxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R8uqIrxiEe2Pj61kfbEkwg" name="choice" type="_R8fZkLxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
              <ownedOperation xmi:id="_R8uqI7xiEe2Pj61kfbEkwg" name="setScheduleSelected" visibility="private" method="_R-2xEbxiEe2Pj61kfbEkwg">
                <ownedParameter xmi:id="_R8vRMLxiEe2Pj61kfbEkwg" name="choice" type="_R8fZkLxiEe2Pj61kfbEkwg"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_R76KwLxiEe2Pj61kfbEkwg" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_R8O64LxiEe2Pj61kfbEkwg" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_R8bIILxiEe2Pj61kfbEkwg" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_R8bvOLxiEe2Pj61kfbEkwg" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_R8fZkLxiEe2Pj61kfbEkwg" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_R--F0LxiEe2Pj61kfbEkwg" name="" memberEnd="_R9L9IrxiEe2Pj61kfbEkwg _R--s4LxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R--s4LxiEe2Pj61kfbEkwg" name="" type="_RjsfELxiEe2Pj61kfbEkwg" association="_R--F0LxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_C-UrxiEe2Pj61kfbEkwg" name="" memberEnd="_R9689bxiEe2Pj61kfbEkwg _R_C-U7xiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_C-U7xiEe2Pj61kfbEkwg" name="" type="_RnLQ4LxiEe2Pj61kfbEkwg" association="_R_C-UrxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_C-VLxiEe2Pj61kfbEkwg" name="" memberEnd="_R9689rxiEe2Pj61kfbEkwg _R_C-VbxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_C-VbxiEe2Pj61kfbEkwg" name="" type="_RnLQ4LxiEe2Pj61kfbEkwg" association="_R_C-VLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_EziLxiEe2Pj61kfbEkwg" name="" memberEnd="_R-Et87xiEe2Pj61kfbEkwg _R_EzibxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_EzibxiEe2Pj61kfbEkwg" name="" type="_RnuDcLxiEe2Pj61kfbEkwg" association="_R_EziLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_hfcLxiEe2Pj61kfbEkwg" name="" memberEnd="_R_hfcbxiEe2Pj61kfbEkwg _R84bIbxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_hfcbxiEe2Pj61kfbEkwg" name="" type="_Ri2Kg7xiEe2Pj61kfbEkwg" association="_R_hfcLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_iGgbxiEe2Pj61kfbEkwg" name="" memberEnd="_R_iGgrxiEe2Pj61kfbEkwg _R85CMbxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_iGgrxiEe2Pj61kfbEkwg" name="" type="_Ri2Kg7xiEe2Pj61kfbEkwg" association="_R_iGgbxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_iGhLxiEe2Pj61kfbEkwg" name="" memberEnd="_R_iGhbxiEe2Pj61kfbEkwg _R85pQbxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_iGhbxiEe2Pj61kfbEkwg" name="" type="_Ri2Kg7xiEe2Pj61kfbEkwg" association="_R_iGhLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_itkbxiEe2Pj61kfbEkwg" name="" memberEnd="_R_itkrxiEe2Pj61kfbEkwg _R88skrxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_itkrxiEe2Pj61kfbEkwg" name="" type="_RjLhsLxiEe2Pj61kfbEkwg" association="_R_itkbxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_itlLxiEe2Pj61kfbEkwg" name="" memberEnd="_R_itlbxiEe2Pj61kfbEkwg _R89TobxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_itlbxiEe2Pj61kfbEkwg" name="" type="_RjLhsLxiEe2Pj61kfbEkwg" association="_R_itlLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_jUobxiEe2Pj61kfbEkwg" name="" memberEnd="_R_jUorxiEe2Pj61kfbEkwg _R8_I0bxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_jUorxiEe2Pj61kfbEkwg" name="" type="_RjN98LxiEe2Pj61kfbEkwg" association="_R_jUobxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_jUpLxiEe2Pj61kfbEkwg" name="" memberEnd="_R_jUpbxiEe2Pj61kfbEkwg _R8_I07xiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_jUpbxiEe2Pj61kfbEkwg" name="" type="_RjN98LxiEe2Pj61kfbEkwg" association="_R_jUpLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_jUp7xiEe2Pj61kfbEkwg" name="" memberEnd="_R_jUqLxiEe2Pj61kfbEkwg _R9BlELxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_jUqLxiEe2Pj61kfbEkwg" name="" type="_RjQaMLxiEe2Pj61kfbEkwg" association="_R_jUp7xiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_j7sbxiEe2Pj61kfbEkwg" name="" memberEnd="_R_j7srxiEe2Pj61kfbEkwg _R9DaQrxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_j7srxiEe2Pj61kfbEkwg" name="" type="_RjWg0LxiEe2Pj61kfbEkwg" association="_R_j7sbxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_kiwLxiEe2Pj61kfbEkwg" name="" memberEnd="_R_kiwbxiEe2Pj61kfbEkwg _R9EoYbxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_kiwbxiEe2Pj61kfbEkwg" name="" type="_RjWg0LxiEe2Pj61kfbEkwg" association="_R_kiwLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_lJ0bxiEe2Pj61kfbEkwg" name="" memberEnd="_R_lJ0rxiEe2Pj61kfbEkwg _R9ISwLxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_lJ0rxiEe2Pj61kfbEkwg" name="" type="_Rjhf8LxiEe2Pj61kfbEkwg" association="_R_lJ0bxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_lJ1LxiEe2Pj61kfbEkwg" name="" memberEnd="_R_lJ1bxiEe2Pj61kfbEkwg _R9KH8LxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_lJ1bxiEe2Pj61kfbEkwg" name="" type="_Rjhf8LxiEe2Pj61kfbEkwg" association="_R_lJ1LxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_lw4bxiEe2Pj61kfbEkwg" name="" memberEnd="_R_lw4rxiEe2Pj61kfbEkwg _R9Q1o7xiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_lw4rxiEe2Pj61kfbEkwg" name="" type="_Rj5TYLxiEe2Pj61kfbEkwg" association="_R_lw4bxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_lw5LxiEe2Pj61kfbEkwg" name="" memberEnd="_R_lw5bxiEe2Pj61kfbEkwg _R9RcsrxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_lw5bxiEe2Pj61kfbEkwg" name="" type="_Rj5TYLxiEe2Pj61kfbEkwg" association="_R_lw5LxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_mX8bxiEe2Pj61kfbEkwg" name="" memberEnd="_R_mX8rxiEe2Pj61kfbEkwg _R9SDwrxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_mX8rxiEe2Pj61kfbEkwg" name="" type="_Rj5TYLxiEe2Pj61kfbEkwg" association="_R_mX8bxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_mX9LxiEe2Pj61kfbEkwg" name="" memberEnd="_R_mX9bxiEe2Pj61kfbEkwg _R9Sq0rxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_mX9bxiEe2Pj61kfbEkwg" name="" type="_Rj5TYLxiEe2Pj61kfbEkwg" association="_R_mX9LxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_mX97xiEe2Pj61kfbEkwg" name="" memberEnd="_R_mX-LxiEe2Pj61kfbEkwg _R9TR4bxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_mX-LxiEe2Pj61kfbEkwg" name="" type="_Rj5TYLxiEe2Pj61kfbEkwg" association="_R_mX97xiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_m_AbxiEe2Pj61kfbEkwg" name="" memberEnd="_R_m_ArxiEe2Pj61kfbEkwg _R9VHELxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_m_ArxiEe2Pj61kfbEkwg" name="" type="_RkE5kLxiEe2Pj61kfbEkwg" association="_R_m_AbxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_nmEbxiEe2Pj61kfbEkwg" name="" memberEnd="_R_nmErxiEe2Pj61kfbEkwg _R9VuIbxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_nmErxiEe2Pj61kfbEkwg" name="" type="_RkE5kLxiEe2Pj61kfbEkwg" association="_R_nmEbxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_nmFLxiEe2Pj61kfbEkwg" name="" memberEnd="_R_nmFbxiEe2Pj61kfbEkwg _R9VuI7xiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_nmFbxiEe2Pj61kfbEkwg" name="" type="_RkLnQLxiEe2Pj61kfbEkwg" association="_R_nmFLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_oNIbxiEe2Pj61kfbEkwg" name="" memberEnd="_R_oNIrxiEe2Pj61kfbEkwg _R9W8QLxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_oNIrxiEe2Pj61kfbEkwg" name="" type="_RkODgLxiEe2Pj61kfbEkwg" association="_R_oNIbxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_oNJLxiEe2Pj61kfbEkwg" name="" memberEnd="_R_oNJbxiEe2Pj61kfbEkwg _R9W8QrxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_oNJbxiEe2Pj61kfbEkwg" name="" type="_RkODgLxiEe2Pj61kfbEkwg" association="_R_oNJLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_oNJ7xiEe2Pj61kfbEkwg" name="" memberEnd="_R_oNKLxiEe2Pj61kfbEkwg _R9XjUrxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_oNKLxiEe2Pj61kfbEkwg" name="" type="_RkQfwLxiEe2Pj61kfbEkwg" association="_R_oNJ7xiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_o0MbxiEe2Pj61kfbEkwg" name="" memberEnd="_R_o0MrxiEe2Pj61kfbEkwg _R9ZYgrxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_o0MrxiEe2Pj61kfbEkwg" name="" type="_RkXNdLxiEe2Pj61kfbEkwg" association="_R_o0MbxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_o0NLxiEe2Pj61kfbEkwg" name="" memberEnd="_R_o0NbxiEe2Pj61kfbEkwg _R9ZYhLxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_o0NbxiEe2Pj61kfbEkwg" name="" type="_RkXNdLxiEe2Pj61kfbEkwg" association="_R_o0NLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_pbQbxiEe2Pj61kfbEkwg" name="" memberEnd="_R_pbQrxiEe2Pj61kfbEkwg _R9Z_kbxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_pbQrxiEe2Pj61kfbEkwg" name="" type="_RkXNdLxiEe2Pj61kfbEkwg" association="_R_pbQbxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_pbRLxiEe2Pj61kfbEkwg" name="" memberEnd="_R_pbRbxiEe2Pj61kfbEkwg _R9Z_k7xiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_pbRbxiEe2Pj61kfbEkwg" name="" type="_RkXNdLxiEe2Pj61kfbEkwg" association="_R_pbRLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_qCUbxiEe2Pj61kfbEkwg" name="" memberEnd="_R_qCUrxiEe2Pj61kfbEkwg _R9amoLxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_qCUrxiEe2Pj61kfbEkwg" name="" type="_RkXNdLxiEe2Pj61kfbEkwg" association="_R_qCUbxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_qCVLxiEe2Pj61kfbEkwg" name="" memberEnd="_R_qCVbxiEe2Pj61kfbEkwg _R9b0wLxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_qCVbxiEe2Pj61kfbEkwg" name="" type="_RkcF8LxiEe2Pj61kfbEkwg" association="_R_qCVLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_qpYbxiEe2Pj61kfbEkwg" name="" memberEnd="_R_qpYrxiEe2Pj61kfbEkwg _R9b0wrxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_qpYrxiEe2Pj61kfbEkwg" name="" type="_RkcF8LxiEe2Pj61kfbEkwg" association="_R_qpYbxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_qpZLxiEe2Pj61kfbEkwg" name="" memberEnd="_R_qpZbxiEe2Pj61kfbEkwg _R9dC4bxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_qpZbxiEe2Pj61kfbEkwg" name="" type="_RkhlgLxiEe2Pj61kfbEkwg" association="_R_qpZLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_rQcbxiEe2Pj61kfbEkwg" name="" memberEnd="_R_rQcrxiEe2Pj61kfbEkwg _R9e4FLxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_rQcrxiEe2Pj61kfbEkwg" name="" type="_Rkvn8LxiEe2Pj61kfbEkwg" association="_R_rQcbxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_r3gLxiEe2Pj61kfbEkwg" name="" memberEnd="_R_r3gbxiEe2Pj61kfbEkwg _R9ffIbxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_r3gbxiEe2Pj61kfbEkwg" name="" type="_Rkvn8LxiEe2Pj61kfbEkwg" association="_R_r3gLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_sekbxiEe2Pj61kfbEkwg" name="" memberEnd="_R_sekrxiEe2Pj61kfbEkwg _R9gGMLxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_sekrxiEe2Pj61kfbEkwg" name="" type="_Rkvn8LxiEe2Pj61kfbEkwg" association="_R_sekbxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_selLxiEe2Pj61kfbEkwg" name="" memberEnd="_R_selbxiEe2Pj61kfbEkwg _R9gtQbxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_selbxiEe2Pj61kfbEkwg" name="" type="_Rkvn8LxiEe2Pj61kfbEkwg" association="_R_selLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_tFobxiEe2Pj61kfbEkwg" name="" memberEnd="_R_tForxiEe2Pj61kfbEkwg _R9hUULxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_tForxiEe2Pj61kfbEkwg" name="" type="_Rkvn8LxiEe2Pj61kfbEkwg" association="_R_tFobxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_tssbxiEe2Pj61kfbEkwg" name="" memberEnd="_R_tssrxiEe2Pj61kfbEkwg _R9hUUrxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_tssrxiEe2Pj61kfbEkwg" name="" type="_Rkvn8LxiEe2Pj61kfbEkwg" association="_R_tssbxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_uTwbxiEe2Pj61kfbEkwg" name="" memberEnd="_R_uTwrxiEe2Pj61kfbEkwg _R9h7YrxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_uTwrxiEe2Pj61kfbEkwg" name="" type="_Rkvn8LxiEe2Pj61kfbEkwg" association="_R_uTwbxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_uTxLxiEe2Pj61kfbEkwg" name="" memberEnd="_R_uTxbxiEe2Pj61kfbEkwg _R9jJgbxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_uTxbxiEe2Pj61kfbEkwg" name="" type="_Rkvn8LxiEe2Pj61kfbEkwg" association="_R_uTxLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_u60bxiEe2Pj61kfbEkwg" name="" memberEnd="_R_u60rxiEe2Pj61kfbEkwg _R9k-srxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_u60rxiEe2Pj61kfbEkwg" name="" type="_RlIpgLxiEe2Pj61kfbEkwg" association="_R_u60bxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_vh4bxiEe2Pj61kfbEkwg" name="" memberEnd="_R_vh4rxiEe2Pj61kfbEkwg _R9llwLxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_vh4rxiEe2Pj61kfbEkwg" name="" type="_RlIpgLxiEe2Pj61kfbEkwg" association="_R_vh4bxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_wI8bxiEe2Pj61kfbEkwg" name="" memberEnd="_R_wI8rxiEe2Pj61kfbEkwg _R9na8rxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_wI8rxiEe2Pj61kfbEkwg" name="" type="_Rla9YLxiEe2Pj61kfbEkwg" association="_R_wI8bxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_wI9LxiEe2Pj61kfbEkwg" name="" memberEnd="_R_wI9bxiEe2Pj61kfbEkwg _R9na9LxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_wI9bxiEe2Pj61kfbEkwg" name="" type="_Rla9YLxiEe2Pj61kfbEkwg" association="_R_wI9LxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_wwAbxiEe2Pj61kfbEkwg" name="" memberEnd="_R_wwArxiEe2Pj61kfbEkwg _R9oCArxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_wwArxiEe2Pj61kfbEkwg" name="" type="_RldZoLxiEe2Pj61kfbEkwg" association="_R_wwAbxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_xXEbxiEe2Pj61kfbEkwg" name="" memberEnd="_R_xXErxiEe2Pj61kfbEkwg _R9opE7xiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_xXErxiEe2Pj61kfbEkwg" name="" type="_RlkHULxiEe2Pj61kfbEkwg" association="_R_xXEbxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_x-IbxiEe2Pj61kfbEkwg" name="" memberEnd="_R_x-IrxiEe2Pj61kfbEkwg _R9rFUrxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_x-IrxiEe2Pj61kfbEkwg" name="" type="_RltRQLxiEe2Pj61kfbEkwg" association="_R_x-IbxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_ylMbxiEe2Pj61kfbEkwg" name="" memberEnd="_R_ylMrxiEe2Pj61kfbEkwg _R9rFVLxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_ylMrxiEe2Pj61kfbEkwg" name="" type="_RltRQLxiEe2Pj61kfbEkwg" association="_R_ylMbxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_ylNLxiEe2Pj61kfbEkwg" name="" memberEnd="_R_ylNbxiEe2Pj61kfbEkwg _R9uIoLxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_ylNbxiEe2Pj61kfbEkwg" name="" type="_RmO1sLxiEe2Pj61kfbEkwg" association="_R_ylNLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_zMQbxiEe2Pj61kfbEkwg" name="" memberEnd="_R_zMQrxiEe2Pj61kfbEkwg _R9uIorxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_zMQrxiEe2Pj61kfbEkwg" name="" type="_RmO1sLxiEe2Pj61kfbEkwg" association="_R_zMQbxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_zzULxiEe2Pj61kfbEkwg" name="" memberEnd="_R_zzUbxiEe2Pj61kfbEkwg _R9uIpLxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_zzUbxiEe2Pj61kfbEkwg" name="" type="_RmO1sLxiEe2Pj61kfbEkwg" association="_R_zzULxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_zzU7xiEe2Pj61kfbEkwg" name="" memberEnd="_R_zzVLxiEe2Pj61kfbEkwg _R9vWwbxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_zzVLxiEe2Pj61kfbEkwg" name="" type="_RmO1sLxiEe2Pj61kfbEkwg" association="_R_zzU7xiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_0aYbxiEe2Pj61kfbEkwg" name="" memberEnd="_R_0aYrxiEe2Pj61kfbEkwg _R9vWxLxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_0aYrxiEe2Pj61kfbEkwg" name="" type="_RmO1sLxiEe2Pj61kfbEkwg" association="_R_0aYbxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_0aZLxiEe2Pj61kfbEkwg" name="" memberEnd="_R_0aZbxiEe2Pj61kfbEkwg _R9v90LxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_0aZbxiEe2Pj61kfbEkwg" name="" type="_RmO1sLxiEe2Pj61kfbEkwg" association="_R_0aZLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_1BcbxiEe2Pj61kfbEkwg" name="" memberEnd="_R_1BcrxiEe2Pj61kfbEkwg _R9v907xiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_1BcrxiEe2Pj61kfbEkwg" name="" type="_RmO1sLxiEe2Pj61kfbEkwg" association="_R_1BcbxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_1BdLxiEe2Pj61kfbEkwg" name="" memberEnd="_R_1BdbxiEe2Pj61kfbEkwg _R9wk4LxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_1BdbxiEe2Pj61kfbEkwg" name="" type="_RmX_oLxiEe2Pj61kfbEkwg" association="_R_1BdLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_1ogbxiEe2Pj61kfbEkwg" name="" memberEnd="_R_1ogrxiEe2Pj61kfbEkwg _R9yaFLxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_1ogrxiEe2Pj61kfbEkwg" name="" type="_RmgigLxiEe2Pj61kfbEkwg" association="_R_1ogbxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_1ohLxiEe2Pj61kfbEkwg" name="" memberEnd="_R_1ohbxiEe2Pj61kfbEkwg _R9zBIbxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_1ohbxiEe2Pj61kfbEkwg" name="" type="_RmgigLxiEe2Pj61kfbEkwg" association="_R_1ohLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_2PkbxiEe2Pj61kfbEkwg" name="" memberEnd="_R_2PkrxiEe2Pj61kfbEkwg _R9zoMLxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_2PkrxiEe2Pj61kfbEkwg" name="" type="_RmmpILxiEe2Pj61kfbEkwg" association="_R_2PkbxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_2PlLxiEe2Pj61kfbEkwg" name="" memberEnd="_R_2PlbxiEe2Pj61kfbEkwg _R9zoMrxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_2PlbxiEe2Pj61kfbEkwg" name="" type="_RmmpILxiEe2Pj61kfbEkwg" association="_R_2PlLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_22obxiEe2Pj61kfbEkwg" name="" memberEnd="_R_22orxiEe2Pj61kfbEkwg _R9zoNLxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_22orxiEe2Pj61kfbEkwg" name="" type="_RmmpILxiEe2Pj61kfbEkwg" association="_R_22obxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_22pLxiEe2Pj61kfbEkwg" name="" memberEnd="_R_22pbxiEe2Pj61kfbEkwg _R90PQLxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_22pbxiEe2Pj61kfbEkwg" name="" type="_RmmpILxiEe2Pj61kfbEkwg" association="_R_22pLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_3dsbxiEe2Pj61kfbEkwg" name="" memberEnd="_R_3dsrxiEe2Pj61kfbEkwg _R90PQrxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_3dsrxiEe2Pj61kfbEkwg" name="" type="_RmmpILxiEe2Pj61kfbEkwg" association="_R_3dsbxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_4EwLxiEe2Pj61kfbEkwg" name="" memberEnd="_R_4EwbxiEe2Pj61kfbEkwg _R94gsLxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_4EwbxiEe2Pj61kfbEkwg" name="" type="_RnD8ILxiEe2Pj61kfbEkwg" association="_R_4EwLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_4Ew7xiEe2Pj61kfbEkwg" name="" memberEnd="_R_4ExLxiEe2Pj61kfbEkwg _R94gs7xiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_4ExLxiEe2Pj61kfbEkwg" name="" type="_RnD8ILxiEe2Pj61kfbEkwg" association="_R_4Ew7xiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_4r0bxiEe2Pj61kfbEkwg" name="" memberEnd="_R_4r0rxiEe2Pj61kfbEkwg _R97kArxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_4r0rxiEe2Pj61kfbEkwg" name="" type="_RnLQ4LxiEe2Pj61kfbEkwg" association="_R_4r0bxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_R_5S4bxiEe2Pj61kfbEkwg" name="" memberEnd="_R_5S4rxiEe2Pj61kfbEkwg _R98LEbxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_R_5S4rxiEe2Pj61kfbEkwg" name="" type="_RnLQ4LxiEe2Pj61kfbEkwg" association="_R_5S4bxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SAQfQLxiEe2Pj61kfbEkwg" name="" memberEnd="_SAQfQbxiEe2Pj61kfbEkwg _R-Et9LxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_SAQfQbxiEe2Pj61kfbEkwg" name="" type="_RnuDcLxiEe2Pj61kfbEkwg" association="_SAQfQLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SARtYLxiEe2Pj61kfbEkwg" name="" memberEnd="_SARtYbxiEe2Pj61kfbEkwg _R-FVArxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_SARtYbxiEe2Pj61kfbEkwg" name="" type="_RnuDcLxiEe2Pj61kfbEkwg" association="_SARtYLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SARtY7xiEe2Pj61kfbEkwg" name="" memberEnd="_SARtZLxiEe2Pj61kfbEkwg _R-HKN7xiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_SARtZLxiEe2Pj61kfbEkwg" name="" type="_RoNysLxiEe2Pj61kfbEkwg" association="_SARtY7xiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SASUcbxiEe2Pj61kfbEkwg" name="" memberEnd="_SASUcrxiEe2Pj61kfbEkwg _R-HxQbxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_SASUcrxiEe2Pj61kfbEkwg" name="" type="_RoNysLxiEe2Pj61kfbEkwg" association="_SASUcbxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SAS7gLxiEe2Pj61kfbEkwg" name="" memberEnd="_SAS7gbxiEe2Pj61kfbEkwg _R-HxQ7xiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_SAS7gbxiEe2Pj61kfbEkwg" name="" type="_RoNysLxiEe2Pj61kfbEkwg" association="_SAS7gLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SAS7g7xiEe2Pj61kfbEkwg" name="" memberEnd="_SAS7hLxiEe2Pj61kfbEkwg _R-I_Y7xiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_SAS7hLxiEe2Pj61kfbEkwg" name="" type="_RoNysLxiEe2Pj61kfbEkwg" association="_SAS7g7xiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_SAUJoLxiEe2Pj61kfbEkwg" name="" memberEnd="_SAUJobxiEe2Pj61kfbEkwg _R-KNgLxiEe2Pj61kfbEkwg">
              <ownedEnd xmi:id="_SAUJobxiEe2Pj61kfbEkwg" name="" type="_RoNysLxiEe2Pj61kfbEkwg" association="_SAUJoLxiEe2Pj61kfbEkwg"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_xfKDYMjJEe2Q06zi9Lxc2Q" name="" memberEnd="_xfKDYcjJEe2Q06zi9Lxc2Q _xfFK4MjJEe2Q06zi9Lxc2Q">
              <ownedEnd xmi:id="_xfKDYcjJEe2Q06zi9Lxc2Q" name="" type="_RlU2wLxiEe2Pj61kfbEkwg" association="_xfKDYMjJEe2Q06zi9Lxc2Q"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_RfD2tLxiEe2Pj61kfbEkwg" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_R5-4IbxiEe2Pj61kfbEkwg" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_R5_fMbxiEe2Pj61kfbEkwg" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_R6AGQbxiEe2Pj61kfbEkwg" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_R8jD8bxiEe2Pj61kfbEkwg" name="WARPdslBaseListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_RgahkLxiEe2Pj61kfbEkwg" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_R7HgkLxiEe2Pj61kfbEkwg" name="Utilities"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ReCjAbxiEe2Pj61kfbEkwg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_ReDKELxiEe2Pj61kfbEkwg" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_RehrMLxiEe2Pj61kfbEkwg" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_R5qvELxiEe2Pj61kfbEkwg" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_RgahkbxiEe2Pj61kfbEkwg" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_R7J80bxiEe2Pj61kfbEkwg" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_RlTBlLxiEe2Pj61kfbEkwg" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R5fI4LxiEe2Pj61kfbEkwg" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R5gXALxiEe2Pj61kfbEkwg" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R5gXArxiEe2Pj61kfbEkwg" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_R5hlILxiEe2Pj61kfbEkwg" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_R5hlIrxiEe2Pj61kfbEkwg" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_R5vnlLxiEe2Pj61kfbEkwg" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_R6WrkLxiEe2Pj61kfbEkwg" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R7IHobxiEe2Pj61kfbEkwg" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R7IHo7xiEe2Pj61kfbEkwg" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_R7IusbxiEe2Pj61kfbEkwg" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R7JVwLxiEe2Pj61kfbEkwg" name="Vector"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R7Tt0LxiEe2Pj61kfbEkwg" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_R7U78bxiEe2Pj61kfbEkwg" name="Queue"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_RezYA7xiEe2Pj61kfbEkwg" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_R5z5AbxiEe2Pj61kfbEkwg" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R5z5A7xiEe2Pj61kfbEkwg" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R6LscLxiEe2Pj61kfbEkwg" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R6LscrxiEe2Pj61kfbEkwg" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_RezYBLxiEe2Pj61kfbEkwg" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_Rez_ELxiEe2Pj61kfbEkwg" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_R5z5BbxiEe2Pj61kfbEkwg" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_R50gEbxiEe2Pj61kfbEkwg" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_R51HILxiEe2Pj61kfbEkwg" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_RfHhELxiEe2Pj61kfbEkwg" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_R6ICELxiEe2Pj61kfbEkwg" name="Component"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_R7t9gLxiEe2Pj61kfbEkwg" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_R7t9gbxiEe2Pj61kfbEkwg" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R8DUsbxiEe2Pj61kfbEkwg" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_R8TMULxiEe2Pj61kfbEkwg" name="Double"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_RezYALxiEe2Pj61kfbEkwg" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_RezYAbxiEe2Pj61kfbEkwg" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_RezYArxiEe2Pj61kfbEkwg" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_R5yq4LxiEe2Pj61kfbEkwg" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_Rez_EbxiEe2Pj61kfbEkwg" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_Rez_ErxiEe2Pj61kfbEkwg" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_RfIIILxiEe2Pj61kfbEkwg" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_R6J3Q7xiEe2Pj61kfbEkwg" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_R6KeUbxiEe2Pj61kfbEkwg" name="TableColumnModel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_R51HIrxiEe2Pj61kfbEkwg" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R6IpIbxiEe2Pj61kfbEkwg" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R6JQMbxiEe2Pj61kfbEkwg" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_R6J3QbxiEe2Pj61kfbEkwg" name="JTable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_RfDPoLxiEe2Pj61kfbEkwg" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_RfD2sLxiEe2Pj61kfbEkwg" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_RfD2sbxiEe2Pj61kfbEkwg" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_RfD2srxiEe2Pj61kfbEkwg" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_RfD2s7xiEe2Pj61kfbEkwg" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_R59qAbxiEe2Pj61kfbEkwg" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_R5-RELxiEe2Pj61kfbEkwg" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_R58b4LxiEe2Pj61kfbEkwg" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_R59C8bxiEe2Pj61kfbEkwg" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_R59C87xiEe2Pj61kfbEkwg" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Rg4boLxiEe2Pj61kfbEkwg" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_Rg5CsLxiEe2Pj61kfbEkwg" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_Rg5CsbxiEe2Pj61kfbEkwg" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_R7bCkLxiEe2Pj61kfbEkwg" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_R7bCkrxiEe2Pj61kfbEkwg" name="Test"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_R7Z0cLxiEe2Pj61kfbEkwg" name="Assert"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_RfFr4LxiEe2Pj61kfbEkwg" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_R6BUZbxiEe2Pj61kfbEkwg" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R6Cig7xiEe2Pj61kfbEkwg" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R6Dwo7xiEe2Pj61kfbEkwg" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R6E-wLxiEe2Pj61kfbEkwg" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R6Fl0rxiEe2Pj61kfbEkwg" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R6Gz8LxiEe2Pj61kfbEkwg" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R6nKR7xiEe2Pj61kfbEkwg" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R6oYYrxiEe2Pj61kfbEkwg" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R6o_dbxiEe2Pj61kfbEkwg" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R6pmhrxiEe2Pj61kfbEkwg" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_RgVCALxiEe2Pj61kfbEkwg" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_R7Ay4LxiEe2Pj61kfbEkwg" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R7CBArxiEe2Pj61kfbEkwg" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R7DPIrxiEe2Pj61kfbEkwg" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R7D2NLxiEe2Pj61kfbEkwg" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R7FEUrxiEe2Pj61kfbEkwg" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R7FrYrxiEe2Pj61kfbEkwg" name="ChannelContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_RgokALxiEe2Pj61kfbEkwg" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_R7PcYLxiEe2Pj61kfbEkwg" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R7QDcbxiEe2Pj61kfbEkwg" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R7QDc7xiEe2Pj61kfbEkwg" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R7QDdbxiEe2Pj61kfbEkwg" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_R7QqgbxiEe2Pj61kfbEkwg" name="StringHolder"/>
    </packagedElement>
    <packagedElement xmi:type="uml:DataType" xmi:id="_-Ou44Mi_Ee2Q06zi9Lxc2Q" name="flow"/>
    <profileApplication xmi:id="_QdaMcLxiEe2Pj61kfbEkwg">
      <eAnnotations xmi:id="_QdaMcbxiEe2Pj61kfbEkwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_QdazgLxiEe2Pj61kfbEkwg" base_Package="_QYU4ILxiEe2Pj61kfbEkwg">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_Ri08YLxiEe2Pj61kfbEkwg" genericsValue="T,E" base_Element="_RizuQLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ri5N0LxiEe2Pj61kfbEkwg" base_Element="_Ri4mwLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_Ri5N0bxiEe2Pj61kfbEkwg" base_Element="_Ri4mwLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_Ri5N0rxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Ri504LxiEe2Pj61kfbEkwg" genericsValue="Edge" base_Element="_Ri5N07xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_Ri7DALxiEe2Pj61kfbEkwg" genericsValue="Edge" base_Element="_Ri504bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_Ri7DArxiEe2Pj61kfbEkwg" genericsValue="Edge" base_Element="_Ri7DAbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_Ri8RILxiEe2Pj61kfbEkwg" genericsValue="Edge" base_Element="_Ri7DA7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_Ri8RIrxiEe2Pj61kfbEkwg" genericsValue="Edge" base_Element="_Ri8RIbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_RjUEkLxiEe2Pj61kfbEkwg" genericsValue="String" base_Element="_RjTdg7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_RjYWA7xiEe2Pj61kfbEkwg" genericsValue="String" base_Element="_RjYWArxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RjiuELxiEe2Pj61kfbEkwg" base_Element="_RjiHALxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RjiuEbxiEe2Pj61kfbEkwg" base_Element="_RjiHALxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RjiuErxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RjjVILxiEe2Pj61kfbEkwg" base_Element="_RjiuE7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RjjVIbxiEe2Pj61kfbEkwg" base_Element="_RjiuE7xiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RjjVIrxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rjj8MLxiEe2Pj61kfbEkwg" base_Element="_RjjVI7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_Rjj8MbxiEe2Pj61kfbEkwg" base_Element="_RjjVI7xiEe2Pj61kfbEkwg">
    <annotations xmi:id="_Rjj8MrxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Rjo0sLxiEe2Pj61kfbEkwg" genericsValue="T extends SchedulableObject" base_Element="_RjoNoLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rjr4AbxiEe2Pj61kfbEkwg" base_Element="_RjrQ9bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_Rjr4ArxiEe2Pj61kfbEkwg" base_Element="_RjrQ9bxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_Rjr4A7xiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rju7ULxiEe2Pj61kfbEkwg" base_Element="_RjttMLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RjwwgrxiEe2Pj61kfbEkwg" base_Element="_RjwwgLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_Rjwwg7xiEe2Pj61kfbEkwg" base_Element="_RjwwgLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RjwwhLxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RjxXkrxiEe2Pj61kfbEkwg" base_Element="_RjxXkLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_Rjx-oLxiEe2Pj61kfbEkwg" base_Element="_RjxXkLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_Rjx-obxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rjx-o7xiEe2Pj61kfbEkwg" base_Element="_Rjx-orxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_Rjx-pLxiEe2Pj61kfbEkwg" base_Element="_Rjx-orxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_Rjx-pbxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Rj8WsLxiEe2Pj61kfbEkwg" genericsValue="Node" base_Element="_Rj7vprxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_Rj89wLxiEe2Pj61kfbEkwg" genericsValue="Edge" base_Element="_Rj8WsbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_Rj-L4LxiEe2Pj61kfbEkwg" genericsValue="Integer" base_Element="_Rj9k0LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RkABELxiEe2Pj61kfbEkwg" base_Element="_Rj_aALxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RkABEbxiEe2Pj61kfbEkwg" base_Element="_Rj_aALxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RkABErxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RkGuwLxiEe2Pj61kfbEkwg" base_Element="_RkGHsLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RkGuwbxiEe2Pj61kfbEkwg" base_Element="_RkGHsLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RkGuwrxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_RkP4srxiEe2Pj61kfbEkwg" dimensions="2" base_Element="_RkPRo7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_RkeiMLxiEe2Pj61kfbEkwg" genericsValue="T extends SchedulableObject" base_Element="_Rkd7ILxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_RkgXYLxiEe2Pj61kfbEkwg" genericsValue="T extends SchedulableObject" base_Element="_RkfwULxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RkkBwbxiEe2Pj61kfbEkwg" base_Element="_RkjasLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RkkBwrxiEe2Pj61kfbEkwg" base_Element="_RkjasLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RkkBw7xiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rkko1LxiEe2Pj61kfbEkwg" base_Element="_Rkko0rxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RklP4LxiEe2Pj61kfbEkwg" base_Element="_Rkko0rxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RklP4bxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RklP47xiEe2Pj61kfbEkwg" base_Element="_RklP4rxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_Rkl28LxiEe2Pj61kfbEkwg" base_Element="_RklP4rxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_Rkl28bxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RkrWh7xiEe2Pj61kfbEkwg" base_Element="_RkrWhrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RkskoLxiEe2Pj61kfbEkwg" base_Element="_RkrWhrxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RkskobxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_RkuZ0LxiEe2Pj61kfbEkwg" genericsValue="T extends SchedulableObject" base_Element="_RktLsLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_RkzSULxiEe2Pj61kfbEkwg" genericsValue="String, Integer" base_Element="_RkxdILxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_RkzSUrxiEe2Pj61kfbEkwg" genericsValue="String" base_Element="_RkzSUbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Array xmi:id="_Rk0gcLxiEe2Pj61kfbEkwg" base_Element="_Rkz5YLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RlAGoLxiEe2Pj61kfbEkwg" base_Element="_Rk_fkLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RlAGobxiEe2Pj61kfbEkwg" base_Element="_Rk_fkLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RlAGorxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_RlE_ILxiEe2Pj61kfbEkwg" genericsValue="T extends SchedulableObject" base_Element="_RlEYELxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RlKesLxiEe2Pj61kfbEkwg" base_Element="_RlJ3oLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RlKesbxiEe2Pj61kfbEkwg" base_Element="_RlJ3oLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RlKesrxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RlLFwbxiEe2Pj61kfbEkwg" base_Element="_RlLFwLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RlLs0LxiEe2Pj61kfbEkwg" base_Element="_RlLFwLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RlLs0bxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RlMT4LxiEe2Pj61kfbEkwg" base_Element="_RlLs0rxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RlMT4bxiEe2Pj61kfbEkwg" base_Element="_RlLs0rxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RlMT4rxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_RlM68rxiEe2Pj61kfbEkwg" dimensions="1" base_Element="_RlMT47xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RlM687xiEe2Pj61kfbEkwg" base_Element="_RlMT47xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RlM69LxiEe2Pj61kfbEkwg" base_Element="_RlMT47xiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RlM69bxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_RlNiArxiEe2Pj61kfbEkwg" dimensions="2" base_Element="_RlM69rxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RlNiA7xiEe2Pj61kfbEkwg" base_Element="_RlM69rxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RlNiBLxiEe2Pj61kfbEkwg" base_Element="_RlM69rxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RlOJELxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_RlQlULxiEe2Pj61kfbEkwg" genericsValue="T extends SchedulableObject" base_Element="_RlP-QLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_RlSagLxiEe2Pj61kfbEkwg" genericsValue="T extends SchedulableObject" base_Element="_RlRzcLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_RlUPsLxiEe2Pj61kfbEkwg" base_Element="_RlTBlLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_RlUPsrxiEe2Pj61kfbEkwg" genericsValue="T" base_Element="_RlUPsbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RlfO0LxiEe2Pj61kfbEkwg" base_Element="_RlenwLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RlfO0bxiEe2Pj61kfbEkwg" base_Element="_RlenwLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RlfO0rxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_RlhrELxiEe2Pj61kfbEkwg" genericsValue="T" base_Element="_RlhEALxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_Rlq1ALxiEe2Pj61kfbEkwg" genericsValue="T extends SchedulableObject" base_Element="_RlqN8LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_RlsqMLxiEe2Pj61kfbEkwg" genericsValue="T" base_Element="_RlsDILxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_Rl-XALxiEe2Pj61kfbEkwg" genericsValue="T extends SchedulableObject" base_Element="_Rl9v8LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_Rl_lILxiEe2Pj61kfbEkwg" genericsValue="T" base_Element="_Rl--FLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RmBaULxiEe2Pj61kfbEkwg" base_Element="_RmAzQLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_RmG54LxiEe2Pj61kfbEkwg" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_RmGS0LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RmJ9MbxiEe2Pj61kfbEkwg" base_Element="_RmJ9MLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RmLLUbxiEe2Pj61kfbEkwg" base_Element="_RmLLULxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RmRR8bxiEe2Pj61kfbEkwg" base_Element="_RmRR8LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RmR5ALxiEe2Pj61kfbEkwg" base_Element="_RmRR8LxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RmR5AbxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RmR5A7xiEe2Pj61kfbEkwg" base_Element="_RmR5ArxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RmR5BLxiEe2Pj61kfbEkwg" base_Element="_RmR5ArxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RmSgELxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RmSgE7xiEe2Pj61kfbEkwg" base_Element="_RmSgEbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RmSgFLxiEe2Pj61kfbEkwg" base_Element="_RmSgEbxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RmSgFbxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_Rmc4IrxiEe2Pj61kfbEkwg" base_Element="_RmcRErxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Array xmi:id="_Rmc4JrxiEe2Pj61kfbEkwg" dimensions="2" base_Element="_Rmc4I7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RmiXsLxiEe2Pj61kfbEkwg" base_Element="_RmhwpbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RmiXsbxiEe2Pj61kfbEkwg" base_Element="_RmhwpbxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RmiXsrxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rmi-wbxiEe2Pj61kfbEkwg" base_Element="_Rmi-wLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_Rmjl0LxiEe2Pj61kfbEkwg" base_Element="_Rmi-wLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_Rmjl0bxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RmkM4LxiEe2Pj61kfbEkwg" base_Element="_Rmjl0rxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RmkM4bxiEe2Pj61kfbEkwg" base_Element="_Rmjl0rxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RmkM4rxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rmn3QLxiEe2Pj61kfbEkwg" base_Element="_RmnQMLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_Rmn3QbxiEe2Pj61kfbEkwg" base_Element="_RmnQMLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_Rmn3QrxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RmpFYLxiEe2Pj61kfbEkwg" base_Element="_RmoeULxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RmpFYbxiEe2Pj61kfbEkwg" base_Element="_RmoeULxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RmpFYrxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RmpscLxiEe2Pj61kfbEkwg" base_Element="_RmpFY7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RmpscbxiEe2Pj61kfbEkwg" base_Element="_RmpFY7xiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RmpscrxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RmpsdLxiEe2Pj61kfbEkwg" base_Element="_Rmpsc7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RmpsdbxiEe2Pj61kfbEkwg" base_Element="_Rmpsc7xiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RmpsdrxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RmqTgbxiEe2Pj61kfbEkwg" base_Element="_RmqTgLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RmqTgrxiEe2Pj61kfbEkwg" base_Element="_RmqTgLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RmqTg7xiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rmq6kbxiEe2Pj61kfbEkwg" base_Element="_Rmq6kLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RmrhoLxiEe2Pj61kfbEkwg" base_Element="_Rmq6kLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RmrhobxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RmrhpLxiEe2Pj61kfbEkwg" base_Element="_RmrhorxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RmrhpbxiEe2Pj61kfbEkwg" base_Element="_RmrhorxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RmrhprxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RmsvwbxiEe2Pj61kfbEkwg" base_Element="_Rmrhp7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RmsvwrxiEe2Pj61kfbEkwg" base_Element="_Rmrhp7xiEe2Pj61kfbEkwg">
    <annotations xmi:id="_Rmsvw7xiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RmtW0rxiEe2Pj61kfbEkwg" base_Element="_RmtW0LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RmtW07xiEe2Pj61kfbEkwg" base_Element="_RmtW0LxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RmtW1LxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RmtW1rxiEe2Pj61kfbEkwg" base_Element="_RmtW1bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RmtW17xiEe2Pj61kfbEkwg" base_Element="_RmtW1bxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_Rmt94LxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Rmuk8LxiEe2Pj61kfbEkwg" base_Element="_Rmt94bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_Rmuk8bxiEe2Pj61kfbEkwg" base_Element="_Rmt94bxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_Rmuk8rxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RmvMALxiEe2Pj61kfbEkwg" base_Element="_Rmuk87xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RmvMAbxiEe2Pj61kfbEkwg" base_Element="_Rmuk87xiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RmvMArxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RmwaILxiEe2Pj61kfbEkwg" base_Element="_RmvMA7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RmwaIbxiEe2Pj61kfbEkwg" base_Element="_RmvMA7xiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RmwaIrxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RmwaJbxiEe2Pj61kfbEkwg" base_Element="_RmwaI7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RmwaJrxiEe2Pj61kfbEkwg" base_Element="_RmwaI7xiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RmwaJ7xiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RmxBMbxiEe2Pj61kfbEkwg" base_Element="_RmwaKLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RmxBMrxiEe2Pj61kfbEkwg" base_Element="_RmwaKLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RmxBM7xiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RmyPULxiEe2Pj61kfbEkwg" base_Element="_RmxBNLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RmyPUbxiEe2Pj61kfbEkwg" base_Element="_RmxBNLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RmyPUrxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_RnDVELxiEe2Pj61kfbEkwg" genericsValue="InstructionParameters" base_Element="_RnBf4LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_RnFKRLxiEe2Pj61kfbEkwg" genericsValue="InstructionParameters" base_Element="_RnFKQ7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Array xmi:id="_RnYFM7xiEe2Pj61kfbEkwg" base_Element="_RnYFMLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Array xmi:id="_RnZ6YbxiEe2Pj61kfbEkwg" base_Element="_RnZTUrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Array xmi:id="_RnahdLxiEe2Pj61kfbEkwg" dimensions="1" base_Element="_RnahcLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Array xmi:id="_RnbvlLxiEe2Pj61kfbEkwg" base_Element="_RnbvkLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Array xmi:id="_RnnVwLxiEe2Pj61kfbEkwg" base_Element="_RnmusbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Array xmi:id="_Rnoj4bxiEe2Pj61kfbEkwg" base_Element="_Rnn80bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_Rny78LxiEe2Pj61kfbEkwg" genericsValue="Integer" base_Element="_RnyU5bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoDaobxiEe2Pj61kfbEkwg" base_Element="_RoDaoLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoDaorxiEe2Pj61kfbEkwg" base_Element="_RoDaoLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoDao7xiEe2Pj61kfbEkwg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoEBsbxiEe2Pj61kfbEkwg" base_Element="_RoEBsLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoEBsrxiEe2Pj61kfbEkwg" base_Element="_RoEBsLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoEBs7xiEe2Pj61kfbEkwg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoEowLxiEe2Pj61kfbEkwg" base_Element="_RoEBtLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoEowbxiEe2Pj61kfbEkwg" base_Element="_RoEBtLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoEowrxiEe2Pj61kfbEkwg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoEoxLxiEe2Pj61kfbEkwg" base_Element="_RoEow7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoFP0LxiEe2Pj61kfbEkwg" base_Element="_RoEow7xiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoFP0bxiEe2Pj61kfbEkwg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoFP07xiEe2Pj61kfbEkwg" base_Element="_RoFP0rxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoF24LxiEe2Pj61kfbEkwg" base_Element="_RoFP0rxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoF24bxiEe2Pj61kfbEkwg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoF247xiEe2Pj61kfbEkwg" base_Element="_RoF24rxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoF25LxiEe2Pj61kfbEkwg" base_Element="_RoF24rxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoF25bxiEe2Pj61kfbEkwg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoGd8bxiEe2Pj61kfbEkwg" base_Element="_RoGd8LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoGd8rxiEe2Pj61kfbEkwg" base_Element="_RoGd8LxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoGd87xiEe2Pj61kfbEkwg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoGd9bxiEe2Pj61kfbEkwg" base_Element="_RoGd9LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoHFALxiEe2Pj61kfbEkwg" base_Element="_RoGd9LxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoHFAbxiEe2Pj61kfbEkwg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoHFA7xiEe2Pj61kfbEkwg" base_Element="_RoHFArxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoHFBLxiEe2Pj61kfbEkwg" base_Element="_RoHFArxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoHFBbxiEe2Pj61kfbEkwg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoHsELxiEe2Pj61kfbEkwg" base_Element="_RoHFBrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoHsEbxiEe2Pj61kfbEkwg" base_Element="_RoHFBrxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoHsErxiEe2Pj61kfbEkwg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoITILxiEe2Pj61kfbEkwg" base_Element="_RoHsE7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoITIbxiEe2Pj61kfbEkwg" base_Element="_RoHsE7xiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoITIrxiEe2Pj61kfbEkwg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoITJbxiEe2Pj61kfbEkwg" base_Element="_RoITJLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoI6MLxiEe2Pj61kfbEkwg" base_Element="_RoITJLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoI6MbxiEe2Pj61kfbEkwg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoI6M7xiEe2Pj61kfbEkwg" base_Element="_RoI6MrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoI6NLxiEe2Pj61kfbEkwg" base_Element="_RoI6MrxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoI6NbxiEe2Pj61kfbEkwg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoJhQLxiEe2Pj61kfbEkwg" base_Element="_RoI6NrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoJhQbxiEe2Pj61kfbEkwg" base_Element="_RoI6NrxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoJhQrxiEe2Pj61kfbEkwg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoKIULxiEe2Pj61kfbEkwg" base_Element="_RoJhQ7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoKIUbxiEe2Pj61kfbEkwg" base_Element="_RoJhQ7xiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoKIUrxiEe2Pj61kfbEkwg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoKIVLxiEe2Pj61kfbEkwg" base_Element="_RoKIU7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoKvYLxiEe2Pj61kfbEkwg" base_Element="_RoKIU7xiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoKvYbxiEe2Pj61kfbEkwg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoKvY7xiEe2Pj61kfbEkwg" base_Element="_RoKvYrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoKvZLxiEe2Pj61kfbEkwg" base_Element="_RoKvYrxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoKvZbxiEe2Pj61kfbEkwg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoLWcLxiEe2Pj61kfbEkwg" base_Element="_RoKvZrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoLWcbxiEe2Pj61kfbEkwg" base_Element="_RoKvZrxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoLWcrxiEe2Pj61kfbEkwg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoLWdLxiEe2Pj61kfbEkwg" base_Element="_RoLWc7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoL9gLxiEe2Pj61kfbEkwg" base_Element="_RoLWc7xiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoL9gbxiEe2Pj61kfbEkwg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoL9g7xiEe2Pj61kfbEkwg" base_Element="_RoL9grxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoL9hLxiEe2Pj61kfbEkwg" base_Element="_RoL9grxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoL9hbxiEe2Pj61kfbEkwg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoMkkLxiEe2Pj61kfbEkwg" base_Element="_RoL9hrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoMkkbxiEe2Pj61kfbEkwg" base_Element="_RoL9hrxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoMkkrxiEe2Pj61kfbEkwg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoMklLxiEe2Pj61kfbEkwg" base_Element="_RoMkk7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoNLoLxiEe2Pj61kfbEkwg" base_Element="_RoMkk7xiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoNLobxiEe2Pj61kfbEkwg" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoVugLxiEe2Pj61kfbEkwg" base_Element="_RoVHcbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoVugbxiEe2Pj61kfbEkwg" base_Element="_RoVHcbxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoVugrxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoWVkbxiEe2Pj61kfbEkwg" base_Element="_RoVuhbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoWVkrxiEe2Pj61kfbEkwg" base_Element="_RoVuhbxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoWVk7xiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoW8obxiEe2Pj61kfbEkwg" base_Element="_RoWVlLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoW8orxiEe2Pj61kfbEkwg" base_Element="_RoWVlLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoW8o7xiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoYKwLxiEe2Pj61kfbEkwg" base_Element="_RoXjsrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoYKwbxiEe2Pj61kfbEkwg" base_Element="_RoXjsrxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoYKwrxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoYKxLxiEe2Pj61kfbEkwg" base_Element="_RoYKw7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoYx0LxiEe2Pj61kfbEkwg" base_Element="_RoYKw7xiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoYx0bxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoYx1LxiEe2Pj61kfbEkwg" base_Element="_RoYx0rxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoZY4LxiEe2Pj61kfbEkwg" base_Element="_RoYx0rxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoZY4bxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoZY5LxiEe2Pj61kfbEkwg" base_Element="_RoZY4rxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoZ_8LxiEe2Pj61kfbEkwg" base_Element="_RoZY4rxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoZ_8bxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RoZ_9bxiEe2Pj61kfbEkwg" base_Element="_RoZ_87xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_RoanALxiEe2Pj61kfbEkwg" base_Element="_RoZ_87xiEe2Pj61kfbEkwg">
    <annotations xmi:id="_RoanAbxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_RobOELxiEe2Pj61kfbEkwg" genericsValue="String, Integer" base_Element="_RoanArxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R5fv8LxiEe2Pj61kfbEkwg" base_Element="_R5fI4LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R5gXAbxiEe2Pj61kfbEkwg" base_Element="_R5gXALxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R5g-ELxiEe2Pj61kfbEkwg" base_Element="_R5gXArxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R5hlIbxiEe2Pj61kfbEkwg" base_Element="_R5hlILxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R5hlI7xiEe2Pj61kfbEkwg" base_Element="_R5hlIrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5kBYbxiEe2Pj61kfbEkwg" base_Element="_R5jaU7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R5kBYrxiEe2Pj61kfbEkwg" base_Element="_R5jaU7xiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R5kBY7xiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_R5lPhLxiEe2Pj61kfbEkwg" genericsValue="Edge" base_Element="_R5lPg7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R5l2kLxiEe2Pj61kfbEkwg" genericsValue="Edge" base_Element="_R5lPhrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R5nrwbxiEe2Pj61kfbEkwg" genericsValue="String, Activation" base_Element="_R5nrwLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R5rWILxiEe2Pj61kfbEkwg" base_Element="_R5qvELxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5tyYbxiEe2Pj61kfbEkwg" base_Element="_R5tLW7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R5tyYrxiEe2Pj61kfbEkwg" base_Element="_R5tLW7xiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R5tyY7xiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R5wOoLxiEe2Pj61kfbEkwg" base_Element="_R5vnlLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R5yD0rxiEe2Pj61kfbEkwg" base_Element="_R5xcwLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R5yD07xiEe2Pj61kfbEkwg" base_Element="_R5xcwLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R5yD1LxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R5z5ALxiEe2Pj61kfbEkwg" base_Element="_R5yq4LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R5z5ArxiEe2Pj61kfbEkwg" base_Element="_R5z5AbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R5z5BLxiEe2Pj61kfbEkwg" base_Element="_R5z5A7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R50gELxiEe2Pj61kfbEkwg" base_Element="_R5z5BbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R50gErxiEe2Pj61kfbEkwg" base_Element="_R50gEbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R51HIbxiEe2Pj61kfbEkwg" base_Element="_R51HILxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R51uMLxiEe2Pj61kfbEkwg" base_Element="_R51HIrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R53jZbxiEe2Pj61kfbEkwg" base_Element="_R53jYrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R54KcLxiEe2Pj61kfbEkwg" base_Element="_R53jYrxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R54KcbxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_R55_oLxiEe2Pj61kfbEkwg" genericsValue="String, Flow" base_Element="_R55YkLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R56msbxiEe2Pj61kfbEkwg" genericsValue="Node, Activation" base_Element="_R56msLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R59C8LxiEe2Pj61kfbEkwg" base_Element="_R58b4LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R59C8rxiEe2Pj61kfbEkwg" base_Element="_R59C8bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R59qALxiEe2Pj61kfbEkwg" base_Element="_R59C87xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R59qArxiEe2Pj61kfbEkwg" base_Element="_R59qAbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R5-4ILxiEe2Pj61kfbEkwg" base_Element="_R5-RELxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R5_fMLxiEe2Pj61kfbEkwg" base_Element="_R5-4IbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R6AGQLxiEe2Pj61kfbEkwg" base_Element="_R5_fMbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R6AtULxiEe2Pj61kfbEkwg" base_Element="_R6AGQbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R6B7cLxiEe2Pj61kfbEkwg" base_Element="_R6BUZbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R6CigLxiEe2Pj61kfbEkwg" base_Element="_R6B7cbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R6CigbxiEe2Pj61kfbEkwg" base_Element="_R6B7cbxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R6CigrxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R6DJkLxiEe2Pj61kfbEkwg" base_Element="_R6Cig7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R6DwoLxiEe2Pj61kfbEkwg" base_Element="_R6DJkbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R6DwobxiEe2Pj61kfbEkwg" base_Element="_R6DJkbxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R6DworxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R6EXsLxiEe2Pj61kfbEkwg" base_Element="_R6Dwo7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R6EXs7xiEe2Pj61kfbEkwg" base_Element="_R6EXsbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R6EXtLxiEe2Pj61kfbEkwg" base_Element="_R6EXsbxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R6EXtbxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R6E-wbxiEe2Pj61kfbEkwg" base_Element="_R6E-wLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R6E-xLxiEe2Pj61kfbEkwg" base_Element="_R6E-wrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R6Fl0LxiEe2Pj61kfbEkwg" base_Element="_R6E-wrxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R6Fl0bxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R6Fl07xiEe2Pj61kfbEkwg" base_Element="_R6Fl0rxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R6GM4rxiEe2Pj61kfbEkwg" base_Element="_R6GM4LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R6GM47xiEe2Pj61kfbEkwg" base_Element="_R6GM4LxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R6GM5LxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R6Gz8bxiEe2Pj61kfbEkwg" base_Element="_R6Gz8LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R6HbALxiEe2Pj61kfbEkwg" base_Element="_R6Gz8rxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R6HbAbxiEe2Pj61kfbEkwg" base_Element="_R6Gz8rxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R6HbArxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R6IpILxiEe2Pj61kfbEkwg" base_Element="_R6ICELxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R6JQMLxiEe2Pj61kfbEkwg" base_Element="_R6IpIbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R6J3QLxiEe2Pj61kfbEkwg" base_Element="_R6JQMbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R6J3QrxiEe2Pj61kfbEkwg" base_Element="_R6J3QbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R6KeULxiEe2Pj61kfbEkwg" base_Element="_R6J3Q7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R6LFYLxiEe2Pj61kfbEkwg" base_Element="_R6KeUbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R6LscbxiEe2Pj61kfbEkwg" base_Element="_R6LscLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R6MTgLxiEe2Pj61kfbEkwg" base_Element="_R6LscrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R6OIsLxiEe2Pj61kfbEkwg" genericsValue="String" base_Element="_R6NhoLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R6OvwbxiEe2Pj61kfbEkwg" base_Element="_R6OvwLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R6ToQLxiEe2Pj61kfbEkwg" base_Element="_R6TBMLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R6ToQbxiEe2Pj61kfbEkwg" base_Element="_R6TBMLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R6ToQrxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_R6VdcbxiEe2Pj61kfbEkwg" genericsValue="String, Node" base_Element="_R6VdcLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R6X5sLxiEe2Pj61kfbEkwg" base_Element="_R6WrkLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R6bkELxiEe2Pj61kfbEkwg" base_Element="_R6a9BbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R6bkEbxiEe2Pj61kfbEkwg" base_Element="_R6a9BbxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R6bkErxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_R6cyMLxiEe2Pj61kfbEkwg" genericsValue="ScheduleTime" base_Element="_R6cLIrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R6eAU7xiEe2Pj61kfbEkwg" base_Element="_R6eAULxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R6eAVLxiEe2Pj61kfbEkwg" base_Element="_R6eAULxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R6eAVbxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_R6fOcbxiEe2Pj61kfbEkwg" genericsValue="String,InstructionTimeSlot" base_Element="_R6fOcLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R6hqsLxiEe2Pj61kfbEkwg" genericsValue="T" base_Element="_R6hDobxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R6i40LxiEe2Pj61kfbEkwg" genericsValue="Double" base_Element="_R6iRwbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R6jf4LxiEe2Pj61kfbEkwg" genericsValue="Double,ReliabilityRow" base_Element="_R6i40bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R6mjN7xiEe2Pj61kfbEkwg" base_Element="_R6mjNbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R6nKQLxiEe2Pj61kfbEkwg" base_Element="_R6mjNbxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R6nKQbxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R6nKRLxiEe2Pj61kfbEkwg" base_Element="_R6nKQrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R6nKRbxiEe2Pj61kfbEkwg" base_Element="_R6nKQrxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R6nKRrxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R6nxULxiEe2Pj61kfbEkwg" base_Element="_R6nKR7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R6nxU7xiEe2Pj61kfbEkwg" base_Element="_R6nxUbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R6oYYLxiEe2Pj61kfbEkwg" base_Element="_R6nxUbxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R6oYYbxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R6oYY7xiEe2Pj61kfbEkwg" base_Element="_R6oYYrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R6o_crxiEe2Pj61kfbEkwg" base_Element="_R6o_cLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R6o_c7xiEe2Pj61kfbEkwg" base_Element="_R6o_cLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R6o_dLxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R6pmgLxiEe2Pj61kfbEkwg" base_Element="_R6o_dbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R6pmg7xiEe2Pj61kfbEkwg" base_Element="_R6pmgbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R6pmhLxiEe2Pj61kfbEkwg" base_Element="_R6pmgbxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R6pmhbxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R6qNkLxiEe2Pj61kfbEkwg" base_Element="_R6pmhrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R6qNk7xiEe2Pj61kfbEkwg" base_Element="_R6qNkbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R6q0oLxiEe2Pj61kfbEkwg" base_Element="_R6qNkbxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R6q0obxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R6q0pLxiEe2Pj61kfbEkwg" base_Element="_R6q0orxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R6q0pbxiEe2Pj61kfbEkwg" base_Element="_R6q0orxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R6q0prxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R6rbsbxiEe2Pj61kfbEkwg" base_Element="_R6q0p7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R6rbsrxiEe2Pj61kfbEkwg" base_Element="_R6q0p7xiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R6rbs7xiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R6rbtrxiEe2Pj61kfbEkwg" base_Element="_R6rbtLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R6sCwLxiEe2Pj61kfbEkwg" base_Element="_R6rbtLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R6sCwbxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_R6xiUbxiEe2Pj61kfbEkwg" genericsValue="Activation,Row&lt;Activation>" base_Element="_R6xiULxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R6ywcLxiEe2Pj61kfbEkwg" genericsValue="T" base_Element="_R6yJYbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R6zXgLxiEe2Pj61kfbEkwg" base_Element="_R6ywcrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R61MsLxiEe2Pj61kfbEkwg" base_Element="_R60loLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R61MsrxiEe2Pj61kfbEkwg" base_Element="_R61MsbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R7Ay4bxiEe2Pj61kfbEkwg" base_Element="_R7Ay4LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R7Ay5LxiEe2Pj61kfbEkwg" base_Element="_R7Ay4rxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R7BZ8LxiEe2Pj61kfbEkwg" base_Element="_R7Ay4rxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R7BZ8bxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R7BZ9LxiEe2Pj61kfbEkwg" base_Element="_R7BZ8rxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R7CBALxiEe2Pj61kfbEkwg" base_Element="_R7BZ8rxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R7CBAbxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R7CoELxiEe2Pj61kfbEkwg" base_Element="_R7CBArxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R7CoE7xiEe2Pj61kfbEkwg" base_Element="_R7CoEbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R7DPILxiEe2Pj61kfbEkwg" base_Element="_R7CoEbxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R7DPIbxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R7DPI7xiEe2Pj61kfbEkwg" base_Element="_R7DPIrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R7D2MbxiEe2Pj61kfbEkwg" base_Element="_R7DPJLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R7D2MrxiEe2Pj61kfbEkwg" base_Element="_R7DPJLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R7D2M7xiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R7EdQLxiEe2Pj61kfbEkwg" base_Element="_R7D2NLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R7EdQ7xiEe2Pj61kfbEkwg" base_Element="_R7EdQbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R7FEULxiEe2Pj61kfbEkwg" base_Element="_R7EdQbxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R7FEUbxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R7FEU7xiEe2Pj61kfbEkwg" base_Element="_R7FEUrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R7FEVrxiEe2Pj61kfbEkwg" base_Element="_R7FEVLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R7FrYLxiEe2Pj61kfbEkwg" base_Element="_R7FEVLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R7FrYbxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R7FrY7xiEe2Pj61kfbEkwg" base_Element="_R7FrYrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R7GScLxiEe2Pj61kfbEkwg" base_Element="_R7FrZLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R7GScbxiEe2Pj61kfbEkwg" base_Element="_R7FrZLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R7GScrxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R7IHoLxiEe2Pj61kfbEkwg" base_Element="_R7HgkLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R7IHorxiEe2Pj61kfbEkwg" base_Element="_R7IHobxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R7IusLxiEe2Pj61kfbEkwg" base_Element="_R7IHo7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R7IusrxiEe2Pj61kfbEkwg" base_Element="_R7IusbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R7J80LxiEe2Pj61kfbEkwg" base_Element="_R7JVwLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R7J80rxiEe2Pj61kfbEkwg" base_Element="_R7J80bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R7QDcLxiEe2Pj61kfbEkwg" base_Element="_R7PcYLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R7QDcrxiEe2Pj61kfbEkwg" base_Element="_R7QDcbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R7QDdLxiEe2Pj61kfbEkwg" base_Element="_R7QDc7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R7QqgLxiEe2Pj61kfbEkwg" base_Element="_R7QDdbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R7QqgrxiEe2Pj61kfbEkwg" base_Element="_R7QqgbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R7U78LxiEe2Pj61kfbEkwg" base_Element="_R7Tt0LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R7U78rxiEe2Pj61kfbEkwg" base_Element="_R7U78bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R7abgLxiEe2Pj61kfbEkwg" base_Element="_R7Z0cLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R7bCkbxiEe2Pj61kfbEkwg" base_Element="_R7bCkLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R7bpoLxiEe2Pj61kfbEkwg" base_Element="_R7bCkrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R7tWcbxiEe2Pj61kfbEkwg" genericsValue="T, E" base_Element="_R7tWcLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R7t9grxiEe2Pj61kfbEkwg" base_Element="_R7t9gbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R7ukkLxiEe2Pj61kfbEkwg" genericsValue="Activation" base_Element="_R7t9g7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R7vysLxiEe2Pj61kfbEkwg" genericsValue="Edge" base_Element="_R7vLobxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R7wZwLxiEe2Pj61kfbEkwg" genericsValue="String" base_Element="_R7vysrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R7xA0LxiEe2Pj61kfbEkwg" genericsValue="String" base_Element="_R7wZwrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R7xn4LxiEe2Pj61kfbEkwg" genericsValue="ScheduleTime" base_Element="_R7xA0rxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R7y2AbxiEe2Pj61kfbEkwg" genericsValue="String" base_Element="_R7y2ALxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R70rN7xiEe2Pj61kfbEkwg" genericsValue="Edge" base_Element="_R70rMbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R71SQLxiEe2Pj61kfbEkwg" genericsValue="String" base_Element="_R70rMrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R715U7xiEe2Pj61kfbEkwg" genericsValue="String" base_Element="_R715UrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R72gY7xiEe2Pj61kfbEkwg" genericsValue="String" base_Element="_R72gYbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R73ugbxiEe2Pj61kfbEkwg" genericsValue="Activation" base_Element="_R73ugLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R74Vk7xiEe2Pj61kfbEkwg" base_Element="_R74VkLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R748oLxiEe2Pj61kfbEkwg" genericsValue="Node" base_Element="_R74VkbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R748obxiEe2Pj61kfbEkwg" base_Element="_R74VkLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R748orxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_R75jsbxiEe2Pj61kfbEkwg" genericsValue="T" base_Element="_R75jsLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R76KwbxiEe2Pj61kfbEkwg" base_Element="_R76KwLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R76x07xiEe2Pj61kfbEkwg" base_Element="_R76KwrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R76x1LxiEe2Pj61kfbEkwg" base_Element="_R76KwrxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R76x1bxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_R77_8LxiEe2Pj61kfbEkwg" genericsValue="String" base_Element="_R77Y4LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R78nALxiEe2Pj61kfbEkwg" genericsValue="Edge" base_Element="_R77_8bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R791IbxiEe2Pj61kfbEkwg" genericsValue="Flow" base_Element="_R791ILxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R8ARYLxiEe2Pj61kfbEkwg" genericsValue="Node" base_Element="_R7_qUrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R8A4crxiEe2Pj61kfbEkwg" genericsValue="Integer" base_Element="_R8A4cbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R8D7wLxiEe2Pj61kfbEkwg" base_Element="_R8DUsbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R8Fw8LxiEe2Pj61kfbEkwg" genericsValue="T" base_Element="_R8Ei0LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R8GYALxiEe2Pj61kfbEkwg" base_Element="_R8Fw8bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R8GYAbxiEe2Pj61kfbEkwg" base_Element="_R8Fw8bxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R8GYArxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_R8G_ELxiEe2Pj61kfbEkwg" genericsValue="T" base_Element="_R8GYA7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R8HmIbxiEe2Pj61kfbEkwg" base_Element="_R8G_EbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R8HmIrxiEe2Pj61kfbEkwg" base_Element="_R8G_EbxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R8HmI7xiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_R8INMbxiEe2Pj61kfbEkwg" genericsValue="Node" base_Element="_R8INMLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R8JbUbxiEe2Pj61kfbEkwg" genericsValue="T" base_Element="_R8JbULxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R8KpcrxiEe2Pj61kfbEkwg" base_Element="_R8KCYLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R8Kpc7xiEe2Pj61kfbEkwg" base_Element="_R8KCYLxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R8KpdLxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_R8MeoLxiEe2Pj61kfbEkwg" genericsValue="Node" base_Element="_R8L3krxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Array xmi:id="_R8NFtLxiEe2Pj61kfbEkwg" base_Element="_R8NFsLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R8NswLxiEe2Pj61kfbEkwg" genericsValue="Node" base_Element="_R8NFsbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R8O64bxiEe2Pj61kfbEkwg" base_Element="_R8O64LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R8QJALxiEe2Pj61kfbEkwg" genericsValue="T" base_Element="_R8Ph87xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R8QwFLxiEe2Pj61kfbEkwg" base_Element="_R8QwELxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R8RXILxiEe2Pj61kfbEkwg" base_Element="_R8QwELxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R8RXIbxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_R8R-MbxiEe2Pj61kfbEkwg" genericsValue="T" base_Element="_R8R-MLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R8SlQbxiEe2Pj61kfbEkwg" base_Element="_R8R-MrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R8SlQrxiEe2Pj61kfbEkwg" base_Element="_R8R-MrxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R8SlQ7xiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R8TMUbxiEe2Pj61kfbEkwg" base_Element="_R8TMULxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R8WPorxiEe2Pj61kfbEkwg" genericsValue="T" base_Element="_R8WPobxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R8XdxLxiEe2Pj61kfbEkwg" genericsValue="T" base_Element="_R8XdwLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R8Yr4LxiEe2Pj61kfbEkwg" genericsValue="T" base_Element="_R8YE0bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R8Yr4bxiEe2Pj61kfbEkwg" genericsValue="T" base_Element="_R8YE0rxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R8ahErxiEe2Pj61kfbEkwg" genericsValue="E" base_Element="_R8ahEbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R8bvMLxiEe2Pj61kfbEkwg" base_Element="_R8bIILxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R8cWQLxiEe2Pj61kfbEkwg" base_Element="_R8bvOLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_R8dkZLxiEe2Pj61kfbEkwg" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_R8dkYrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R8eLcLxiEe2Pj61kfbEkwg" base_Element="_R8dkYrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R8gAoLxiEe2Pj61kfbEkwg" base_Element="_R8fZkLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R8h107xiEe2Pj61kfbEkwg" base_Element="_R8h10LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R8ic4LxiEe2Pj61kfbEkwg" genericsValue="Node" base_Element="_R8h10bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Annotations xmi:id="_R8ic4bxiEe2Pj61kfbEkwg" base_Element="_R8h10LxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R8ic4rxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_R8jD8rxiEe2Pj61kfbEkwg" base_Element="_R8jD8bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R85CMLxiEe2Pj61kfbEkwg" genericsValue="String" base_Element="_R84bIbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R85pQLxiEe2Pj61kfbEkwg" genericsValue="Edge" base_Element="_R85CMbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R85pQrxiEe2Pj61kfbEkwg" genericsValue="ScheduleTime" base_Element="_R85pQbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R89ToLxiEe2Pj61kfbEkwg" base_Element="_R88skrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R89TorxiEe2Pj61kfbEkwg" base_Element="_R89TobxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R896sbxiEe2Pj61kfbEkwg" base_Element="_R896sLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R8_I0rxiEe2Pj61kfbEkwg" base_Element="_R8_I0bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R8_v4LxiEe2Pj61kfbEkwg" base_Element="_R8_I07xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9A-ALxiEe2Pj61kfbEkwg" base_Element="_R9AW8rxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9A-ArxiEe2Pj61kfbEkwg" base_Element="_R9A-AbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R9BlEbxiEe2Pj61kfbEkwg" genericsValue="ChannelSet" base_Element="_R9BlELxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9CMILxiEe2Pj61kfbEkwg" base_Element="_R9BlELxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R9EBULxiEe2Pj61kfbEkwg" genericsValue="Edge" base_Element="_R9DaQrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9EBUbxiEe2Pj61kfbEkwg" base_Element="_R9DaQrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9EoYLxiEe2Pj61kfbEkwg" base_Element="_R9EBUrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R9FPcLxiEe2Pj61kfbEkwg" genericsValue="String" base_Element="_R9EoYbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9FPcbxiEe2Pj61kfbEkwg" base_Element="_R9EoYbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9F2gLxiEe2Pj61kfbEkwg" base_Element="_R9FPcrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9GdkLxiEe2Pj61kfbEkwg" base_Element="_R9F2gbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9ISwbxiEe2Pj61kfbEkwg" base_Element="_R9ISwLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9I50LxiEe2Pj61kfbEkwg" base_Element="_R9ISwrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9Jg4LxiEe2Pj61kfbEkwg" base_Element="_R9I50bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9KH8bxiEe2Pj61kfbEkwg" base_Element="_R9KH8LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9NyUbxiEe2Pj61kfbEkwg" base_Element="_R9NyULxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9QOkbxiEe2Pj61kfbEkwg" base_Element="_R9PnhrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9Q1oLxiEe2Pj61kfbEkwg" base_Element="_R9QOkrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9Q1orxiEe2Pj61kfbEkwg" base_Element="_R9Q1obxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R9RcsLxiEe2Pj61kfbEkwg" genericsValue="Node" base_Element="_R9Q1o7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9RcsbxiEe2Pj61kfbEkwg" base_Element="_R9Q1o7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R9SDwLxiEe2Pj61kfbEkwg" genericsValue="Integer" base_Element="_R9RcsrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9SDwbxiEe2Pj61kfbEkwg" base_Element="_R9RcsrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R9Sq0LxiEe2Pj61kfbEkwg" genericsValue="Edge" base_Element="_R9SDwrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9Sq0bxiEe2Pj61kfbEkwg" base_Element="_R9SDwrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9TR4LxiEe2Pj61kfbEkwg" base_Element="_R9Sq0rxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9TR4rxiEe2Pj61kfbEkwg" base_Element="_R9TR4bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9UgA7xiEe2Pj61kfbEkwg" base_Element="_R9UgArxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9UgBbxiEe2Pj61kfbEkwg" base_Element="_R9UgBLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9VHEbxiEe2Pj61kfbEkwg" base_Element="_R9VHELxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9VHE7xiEe2Pj61kfbEkwg" base_Element="_R9VHErxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9VuILxiEe2Pj61kfbEkwg" base_Element="_R9VHFLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9VuIrxiEe2Pj61kfbEkwg" base_Element="_R9VuIbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9WVMLxiEe2Pj61kfbEkwg" base_Element="_R9VuI7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9W8QbxiEe2Pj61kfbEkwg" base_Element="_R9W8QLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9W8Q7xiEe2Pj61kfbEkwg" base_Element="_R9W8QrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9XjU7xiEe2Pj61kfbEkwg" base_Element="_R9XjUrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9YKYLxiEe2Pj61kfbEkwg" base_Element="_R9XjVbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9YKY7xiEe2Pj61kfbEkwg" base_Element="_R9YKYbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9YxdLxiEe2Pj61kfbEkwg" base_Element="_R9YxcrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9ZYgLxiEe2Pj61kfbEkwg" base_Element="_R9YxdbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9ZYg7xiEe2Pj61kfbEkwg" base_Element="_R9ZYgrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9Z_kLxiEe2Pj61kfbEkwg" base_Element="_R9ZYhLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9Z_krxiEe2Pj61kfbEkwg" base_Element="_R9Z_kbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9Z_lLxiEe2Pj61kfbEkwg" base_Element="_R9Z_k7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R9amobxiEe2Pj61kfbEkwg" genericsValue="String, Integer" base_Element="_R9amoLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9amorxiEe2Pj61kfbEkwg" base_Element="_R9amoLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9b0wbxiEe2Pj61kfbEkwg" base_Element="_R9b0wLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9b0w7xiEe2Pj61kfbEkwg" base_Element="_R9b0wrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R9dC4rxiEe2Pj61kfbEkwg" genericsValue="Edge" base_Element="_R9dC4bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9ffILxiEe2Pj61kfbEkwg" base_Element="_R9e4FLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9ffIrxiEe2Pj61kfbEkwg" base_Element="_R9ffIbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9gtQLxiEe2Pj61kfbEkwg" base_Element="_R9gGMLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9gtRbxiEe2Pj61kfbEkwg" base_Element="_R9gtQbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9hUUbxiEe2Pj61kfbEkwg" base_Element="_R9hUULxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R9h7YLxiEe2Pj61kfbEkwg" genericsValue="Activation" base_Element="_R9hUUrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9h7YbxiEe2Pj61kfbEkwg" base_Element="_R9hUUrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R9iicLxiEe2Pj61kfbEkwg" genericsValue="String, Integer" base_Element="_R9h7YrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9jJgLxiEe2Pj61kfbEkwg" base_Element="_R9h7YrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9jwkLxiEe2Pj61kfbEkwg" base_Element="_R9jJgbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9k-s7xiEe2Pj61kfbEkwg" base_Element="_R9k-srxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9llwbxiEe2Pj61kfbEkwg" base_Element="_R9llwLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9llw7xiEe2Pj61kfbEkwg" base_Element="_R9llwrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9na87xiEe2Pj61kfbEkwg" base_Element="_R9na8rxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9na9bxiEe2Pj61kfbEkwg" base_Element="_R9na9LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9oCA7xiEe2Pj61kfbEkwg" base_Element="_R9oCArxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9opELxiEe2Pj61kfbEkwg" base_Element="_R9oCBLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9pQILxiEe2Pj61kfbEkwg" base_Element="_R9opE7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9pQIrxiEe2Pj61kfbEkwg" base_Element="_R9pQIbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9qeQLxiEe2Pj61kfbEkwg" base_Element="_R9p3NLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9qeQrxiEe2Pj61kfbEkwg" base_Element="_R9qeQbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9qeRbxiEe2Pj61kfbEkwg" base_Element="_R9qeQ7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9rFUbxiEe2Pj61kfbEkwg" base_Element="_R9rFULxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9rFU7xiEe2Pj61kfbEkwg" base_Element="_R9rFUrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9rFVbxiEe2Pj61kfbEkwg" base_Element="_R9rFVLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9rsYbxiEe2Pj61kfbEkwg" base_Element="_R9rsYLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9rsY7xiEe2Pj61kfbEkwg" base_Element="_R9rsYrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9uIobxiEe2Pj61kfbEkwg" base_Element="_R9uIoLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9uIo7xiEe2Pj61kfbEkwg" base_Element="_R9uIorxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9uvsLxiEe2Pj61kfbEkwg" base_Element="_R9uIpLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9uvsrxiEe2Pj61kfbEkwg" base_Element="_R9uvsbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9uvtLxiEe2Pj61kfbEkwg" base_Element="_R9uvs7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9vWwLxiEe2Pj61kfbEkwg" base_Element="_R9uvtbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9vWw7xiEe2Pj61kfbEkwg" base_Element="_R9vWwbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9vWxrxiEe2Pj61kfbEkwg" base_Element="_R9vWxLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9v90rxiEe2Pj61kfbEkwg" base_Element="_R9v90LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9v91LxiEe2Pj61kfbEkwg" base_Element="_R9v907xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9wk4bxiEe2Pj61kfbEkwg" base_Element="_R9wk4LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9wk47xiEe2Pj61kfbEkwg" base_Element="_R9wk4rxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9xL8bxiEe2Pj61kfbEkwg" base_Element="_R9xL8LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Array xmi:id="_R9xL9rxiEe2Pj61kfbEkwg" dimensions="2" base_Element="_R9xL9LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9xzALxiEe2Pj61kfbEkwg" base_Element="_R9xL9LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9yaFbxiEe2Pj61kfbEkwg" base_Element="_R9yaFLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9zBILxiEe2Pj61kfbEkwg" base_Element="_R9yaFrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9zBIrxiEe2Pj61kfbEkwg" base_Element="_R9zBIbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9zoMbxiEe2Pj61kfbEkwg" base_Element="_R9zoMLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9zoM7xiEe2Pj61kfbEkwg" base_Element="_R9zoMrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9zoNbxiEe2Pj61kfbEkwg" base_Element="_R9zoNLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R90PQbxiEe2Pj61kfbEkwg" base_Element="_R90PQLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R90PQ7xiEe2Pj61kfbEkwg" base_Element="_R90PQrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R90PRbxiEe2Pj61kfbEkwg" base_Element="_R90PRLxiEe2Pj61kfbEkwg">
    <associatedElement xmi:type="uml:Operation" xmi:id="_R902ULxiEe2Pj61kfbEkwg" name="getNumChannels" method="_R-pVubxiEe2Pj61kfbEkwg">
      <ownedParameter xmi:id="_R902UbxiEe2Pj61kfbEkwg" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_R91dYLxiEe2Pj61kfbEkwg" base_Element="_R902ULxiEe2Pj61kfbEkwg">
    <annotations xmi:id="_R91dYbxiEe2Pj61kfbEkwg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R91dZLxiEe2Pj61kfbEkwg" base_Element="_R91dYrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R92EcLxiEe2Pj61kfbEkwg" base_Element="_R91dZbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R935oLxiEe2Pj61kfbEkwg" base_Element="_R93SmLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R935pLxiEe2Pj61kfbEkwg" base_Element="_R935o7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R94gsbxiEe2Pj61kfbEkwg" genericsValue="InstructionParameters" base_Element="_R94gsLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R94gsrxiEe2Pj61kfbEkwg" base_Element="_R94gsLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R95HwLxiEe2Pj61kfbEkwg" base_Element="_R94gs7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R96V6LxiEe2Pj61kfbEkwg" base_Element="_R96V5rxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9689LxiEe2Pj61kfbEkwg" base_Element="_R9688rxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R97kAbxiEe2Pj61kfbEkwg" base_Element="_R97kALxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R97kA7xiEe2Pj61kfbEkwg" genericsValue="String" base_Element="_R97kArxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R98LErxiEe2Pj61kfbEkwg" genericsValue="String" base_Element="_R98LEbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9-nU7xiEe2Pj61kfbEkwg" base_Element="_R9-nUrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9-nVbxiEe2Pj61kfbEkwg" base_Element="_R9-nVLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9_OYLxiEe2Pj61kfbEkwg" base_Element="_R9-nVrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9_OYrxiEe2Pj61kfbEkwg" base_Element="_R9_OYbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9_OZLxiEe2Pj61kfbEkwg" base_Element="_R9_OY7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9_1cLxiEe2Pj61kfbEkwg" base_Element="_R9_OZbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9_1crxiEe2Pj61kfbEkwg" base_Element="_R9_1cbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9_1dLxiEe2Pj61kfbEkwg" base_Element="_R9_1c7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R9_1drxiEe2Pj61kfbEkwg" base_Element="_R9_1dbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-AcgbxiEe2Pj61kfbEkwg" base_Element="_R-AcgLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-Acg7xiEe2Pj61kfbEkwg" base_Element="_R-AcgrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-AchbxiEe2Pj61kfbEkwg" base_Element="_R-AchLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-BDkbxiEe2Pj61kfbEkwg" base_Element="_R-BDkLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-BDk7xiEe2Pj61kfbEkwg" base_Element="_R-BDkrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-BDlrxiEe2Pj61kfbEkwg" base_Element="_R-BDlLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-BqobxiEe2Pj61kfbEkwg" base_Element="_R-BqoLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-Bqo7xiEe2Pj61kfbEkwg" base_Element="_R-BqorxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-CRsLxiEe2Pj61kfbEkwg" base_Element="_R-BqpLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-Df0rxiEe2Pj61kfbEkwg" base_Element="_R-Df0bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-EG4bxiEe2Pj61kfbEkwg" base_Element="_R-EG4LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-EG47xiEe2Pj61kfbEkwg" base_Element="_R-EG4rxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-EG5bxiEe2Pj61kfbEkwg" base_Element="_R-EG5LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R-FVALxiEe2Pj61kfbEkwg" genericsValue="Integer" base_Element="_R-Et9LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-FVAbxiEe2Pj61kfbEkwg" base_Element="_R-Et9LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Generics xmi:id="_R-FVA7xiEe2Pj61kfbEkwg" genericsValue="SchedulableObject" base_Element="_R-FVArxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-HxQLxiEe2Pj61kfbEkwg" base_Element="_R-HKN7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-HxQrxiEe2Pj61kfbEkwg" base_Element="_R-HxQbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-HxRLxiEe2Pj61kfbEkwg" base_Element="_R-HxQ7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-IYULxiEe2Pj61kfbEkwg" base_Element="_R-HxRbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-IYUrxiEe2Pj61kfbEkwg" base_Element="_R-IYUbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-IYVLxiEe2Pj61kfbEkwg" base_Element="_R-IYU7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-I_YLxiEe2Pj61kfbEkwg" base_Element="_R-IYVbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-I_YrxiEe2Pj61kfbEkwg" base_Element="_R-I_YbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-I_ZLxiEe2Pj61kfbEkwg" base_Element="_R-I_Y7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-JmcbxiEe2Pj61kfbEkwg" base_Element="_R-JmcLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-Jmc7xiEe2Pj61kfbEkwg" base_Element="_R-JmcrxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-JmdbxiEe2Pj61kfbEkwg" base_Element="_R-JmdLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_R-KNgbxiEe2Pj61kfbEkwg" base_Element="_R-KNgLxiEe2Pj61kfbEkwg"/>
  <uml:OpaqueBehavior xmi:id="_R-pVubxiEe2Pj61kfbEkwg" name="getNumChannels" specification="_R902ULxiEe2Pj61kfbEkwg">
    <ownedParameter xmi:id="_R-pVurxiEe2Pj61kfbEkwg" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_R_iGgLxiEe2Pj61kfbEkwg" base_Element="_R_hfcLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_iGg7xiEe2Pj61kfbEkwg" base_Element="_R_iGgbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_itkLxiEe2Pj61kfbEkwg" base_Element="_R_iGhLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_itk7xiEe2Pj61kfbEkwg" base_Element="_R_itkbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_jUoLxiEe2Pj61kfbEkwg" base_Element="_R_itlLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_jUo7xiEe2Pj61kfbEkwg" base_Element="_R_jUobxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_jUprxiEe2Pj61kfbEkwg" base_Element="_R_jUpLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_j7sLxiEe2Pj61kfbEkwg" base_Element="_R_jUp7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_j7s7xiEe2Pj61kfbEkwg" base_Element="_R_j7sbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_lJ0LxiEe2Pj61kfbEkwg" base_Element="_R_kiwLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_lJ07xiEe2Pj61kfbEkwg" base_Element="_R_lJ0bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_lw4LxiEe2Pj61kfbEkwg" base_Element="_R_lJ1LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_lw47xiEe2Pj61kfbEkwg" base_Element="_R_lw4bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_mX8LxiEe2Pj61kfbEkwg" base_Element="_R_lw5LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_mX87xiEe2Pj61kfbEkwg" base_Element="_R_mX8bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_mX9rxiEe2Pj61kfbEkwg" base_Element="_R_mX9LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_m_ALxiEe2Pj61kfbEkwg" base_Element="_R_mX97xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_nmELxiEe2Pj61kfbEkwg" base_Element="_R_m_AbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_nmE7xiEe2Pj61kfbEkwg" base_Element="_R_nmEbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_oNILxiEe2Pj61kfbEkwg" base_Element="_R_nmFLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_oNI7xiEe2Pj61kfbEkwg" base_Element="_R_oNIbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_oNJrxiEe2Pj61kfbEkwg" base_Element="_R_oNJLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_o0MLxiEe2Pj61kfbEkwg" base_Element="_R_oNJ7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_o0M7xiEe2Pj61kfbEkwg" base_Element="_R_o0MbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_pbQLxiEe2Pj61kfbEkwg" base_Element="_R_o0NLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_pbQ7xiEe2Pj61kfbEkwg" base_Element="_R_pbQbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_qCULxiEe2Pj61kfbEkwg" base_Element="_R_pbRLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_qCU7xiEe2Pj61kfbEkwg" base_Element="_R_qCUbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_qpYLxiEe2Pj61kfbEkwg" base_Element="_R_qCVLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_qpY7xiEe2Pj61kfbEkwg" base_Element="_R_qpYbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_rQcLxiEe2Pj61kfbEkwg" base_Element="_R_qpZLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_rQc7xiEe2Pj61kfbEkwg" base_Element="_R_rQcbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_sekLxiEe2Pj61kfbEkwg" base_Element="_R_r3gLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_sek7xiEe2Pj61kfbEkwg" base_Element="_R_sekbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_tFoLxiEe2Pj61kfbEkwg" base_Element="_R_selLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_tssLxiEe2Pj61kfbEkwg" base_Element="_R_tFobxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_uTwLxiEe2Pj61kfbEkwg" base_Element="_R_tssbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_uTw7xiEe2Pj61kfbEkwg" base_Element="_R_uTwbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_u60LxiEe2Pj61kfbEkwg" base_Element="_R_uTxLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_vh4LxiEe2Pj61kfbEkwg" base_Element="_R_u60bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_wI8LxiEe2Pj61kfbEkwg" base_Element="_R_vh4bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_wI87xiEe2Pj61kfbEkwg" base_Element="_R_wI8bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_wwALxiEe2Pj61kfbEkwg" base_Element="_R_wI9LxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_xXELxiEe2Pj61kfbEkwg" base_Element="_R_wwAbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_x-ILxiEe2Pj61kfbEkwg" base_Element="_R_xXEbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_ylMLxiEe2Pj61kfbEkwg" base_Element="_R_x-IbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_ylM7xiEe2Pj61kfbEkwg" base_Element="_R_ylMbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_zMQLxiEe2Pj61kfbEkwg" base_Element="_R_ylNLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_zMQ7xiEe2Pj61kfbEkwg" base_Element="_R_zMQbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_zzUrxiEe2Pj61kfbEkwg" base_Element="_R_zzULxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_0aYLxiEe2Pj61kfbEkwg" base_Element="_R_zzU7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_0aY7xiEe2Pj61kfbEkwg" base_Element="_R_0aYbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_1BcLxiEe2Pj61kfbEkwg" base_Element="_R_0aZLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_1Bc7xiEe2Pj61kfbEkwg" base_Element="_R_1BcbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_1ogLxiEe2Pj61kfbEkwg" base_Element="_R_1BdLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_1og7xiEe2Pj61kfbEkwg" base_Element="_R_1ogbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_2PkLxiEe2Pj61kfbEkwg" base_Element="_R_1ohLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_2Pk7xiEe2Pj61kfbEkwg" base_Element="_R_2PkbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_22oLxiEe2Pj61kfbEkwg" base_Element="_R_2PlLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_22o7xiEe2Pj61kfbEkwg" base_Element="_R_22obxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_3dsLxiEe2Pj61kfbEkwg" base_Element="_R_22pLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_3ds7xiEe2Pj61kfbEkwg" base_Element="_R_3dsbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_4EwrxiEe2Pj61kfbEkwg" base_Element="_R_4EwLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_4r0LxiEe2Pj61kfbEkwg" base_Element="_R_4Ew7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_R_5S4LxiEe2Pj61kfbEkwg" base_Element="_R_4r0bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_SAP4MLxiEe2Pj61kfbEkwg" base_Element="_R_5S4bxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_SARGULxiEe2Pj61kfbEkwg" base_Element="_SAQfQLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_SARtYrxiEe2Pj61kfbEkwg" base_Element="_SARtYLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_SASUcLxiEe2Pj61kfbEkwg" base_Element="_SARtY7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_SASUc7xiEe2Pj61kfbEkwg" base_Element="_SASUcbxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_SAS7grxiEe2Pj61kfbEkwg" base_Element="_SAS7gLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_SATikLxiEe2Pj61kfbEkwg" base_Element="_SAS7g7xiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Reference xmi:id="_SAUJorxiEe2Pj61kfbEkwg" base_Element="_SAUJoLxiEe2Pj61kfbEkwg"/>
  <UMLLabProfile:Patch xmi:id="_S_w0cLxiEe2Pj61kfbEkwg" base_Element="_RjsfELxiEe2Pj61kfbEkwg" patchText="@@ -351,26 +351,24 @@&#xA; um EdgeState&#xA;-()&#xA;  %7B%0D%0A%09%09RELEAS&#xA;" conflicting="true"/>
  <UMLLabProfile:Patch xmi:id="_S_yCkLxiEe2Pj61kfbEkwg" base_Element="_RkXNdLxiEe2Pj61kfbEkwg" patchText="@@ -254,22 +254,25 @@&#xA; MISS%22;%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_S_ypoLxiEe2Pj61kfbEkwg" base_Element="_RmAMMLxiEe2Pj61kfbEkwg" patchText="@@ -113,18 +113,16 @@&#xA; eChoices&#xA;-()&#xA;  %7B%0D%0A%09   &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_S_zQsLxiEe2Pj61kfbEkwg" base_Element="_RmJWILxiEe2Pj61kfbEkwg" patchText="@@ -145,26 +145,24 @@&#xA; ystemChoices&#xA;-()&#xA;  %7B%0D%0A    SOUR&#xA;@@ -284,18 +284,16 @@&#xA; dChoices&#xA;-()&#xA;  %7B%0D%0A    &#xA;" conflicting="false"/>
  <UMLLabProfile:UnresolvedElement xmi:id="_-OxVIMi_Ee2Q06zi9Lxc2Q" base_Element="_-Ou44Mi_Ee2Q06zi9Lxc2Q"/>
  <UMLLabProfile:Generics xmi:id="_xe16UMjJEe2Q06zi9Lxc2Q" genericsValue="Integer" base_Element="_-Om9EMi_Ee2Q06zi9Lxc2Q"/>
  <UMLLabProfile:Generics xmi:id="_xe49oMjJEe2Q06zi9Lxc2Q" genericsValue="Integer" base_Element="_xe4WkMjJEe2Q06zi9Lxc2Q"/>
  <UMLLabProfile:Generics xmi:id="_xe_rUcjJEe2Q06zi9Lxc2Q" genericsValue="Integer" base_Element="_xe-dMMjJEe2Q06zi9Lxc2Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xfDVscjJEe2Q06zi9Lxc2Q" base_Element="_xfCuoMjJEe2Q06zi9Lxc2Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xfEj0MjJEe2Q06zi9Lxc2Q" base_Element="_xfD8wMjJEe2Q06zi9Lxc2Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xfEj08jJEe2Q06zi9Lxc2Q" base_Element="_xfEj0cjJEe2Q06zi9Lxc2Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_xfFx8MjJEe2Q06zi9Lxc2Q" base_Element="_xfFK4MjJEe2Q06zi9Lxc2Q"/>
  <UMLLabProfile:Reference xmi:id="_xfKqcMjJEe2Q06zi9Lxc2Q" base_Element="_xfKDYMjJEe2Q06zi9Lxc2Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Eyi6hMqJEe2Q06zi9Lxc2Q" base_Element="_Eyi6gsqJEe2Q06zi9Lxc2Q"/>
  <UMLLabProfile:Annotations xmi:id="_6lZyQNu5Ee2RlunxwnVSag" base_Element="_6lZLMNu5Ee2RlunxwnVSag">
    <annotations xmi:id="_6laZUNu5Ee2RlunxwnVSag" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_6lbAYtu5Ee2RlunxwnVSag" dimensions="1" base_Element="_6laZUdu5Ee2RlunxwnVSag"/>
  <UMLLabProfile:Annotations xmi:id="_6lbncNu5Ee2RlunxwnVSag" base_Element="_6laZUdu5Ee2RlunxwnVSag">
    <annotations xmi:id="_6lbncdu5Ee2RlunxwnVSag" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_6lc1kNu5Ee2RlunxwnVSag" base_Element="_6lcOgNu5Ee2RlunxwnVSag">
    <annotations xmi:id="_6lc1kdu5Ee2RlunxwnVSag" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_6ldcotu5Ee2RlunxwnVSag" dimensions="2" base_Element="_6lc1ktu5Ee2RlunxwnVSag"/>
  <UMLLabProfile:Annotations xmi:id="_6leDsNu5Ee2RlunxwnVSag" base_Element="_6lc1ktu5Ee2RlunxwnVSag">
    <annotations xmi:id="_6leDsdu5Ee2RlunxwnVSag" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6leqwNu5Ee2RlunxwnVSag" base_Element="_6lZLMNu5Ee2RlunxwnVSag"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6lfR0Nu5Ee2RlunxwnVSag" base_Element="_6laZUdu5Ee2RlunxwnVSag"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6lf44Nu5Ee2RlunxwnVSag" base_Element="_6lcOgNu5Ee2RlunxwnVSag"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6lf44du5Ee2RlunxwnVSag" base_Element="_6lc1ktu5Ee2RlunxwnVSag"/>
</xmi:XMI>
