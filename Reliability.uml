<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_q-17QLkWEe26eKBxVz0OTQ" name="Reliability">
    <eAnnotations xmi:id="_rERN0LkWEe26eKBxVz0OTQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_rERN0bkWEe26eKBxVz0OTQ" source="codegen">
        <details xmi:id="_rER04LkWEe26eKBxVz0OTQ" key="codegenDirectory" value="/cs2820-spring23/src"/>
        <details xmi:id="_spYKcLkWEe26eKBxVz0OTQ" key="AssociatedSourceCode" value="/cs2820-spring23/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Activations.java;3305092594/1;/cs2820-spring23/src/edu/uiowa/cs/warp/BasicPoset.java;3238489715/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ChannelAnalysis.java;1217720653/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ChannelVisualization.java;2873127052/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Channels.java;3701064188/1;/cs2820-spring23/src/edu/uiowa/cs/warp/CodeFragment.java;1941462046/1;/cs2820-spring23/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820-spring23/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ConnectivityPoset.java;3754377617/1;/cs2820-spring23/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Description.java;2596849957/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Edge.java;1242144003/1;/cs2820-spring23/src/edu/uiowa/cs/warp/FileManager.java;1791012323/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Flow.java;1068535148/1;/cs2820-spring23/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820-spring23/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820-spring23/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820-spring23/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820-spring23/src/edu/uiowa/cs/warp/GuiVisualization.java;654882569/1;/cs2820-spring23/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820-spring23/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820-spring23/src/edu/uiowa/cs/warp/LatencyAnalysis.java;2064230864/1;/cs2820-spring23/src/edu/uiowa/cs/warp/LatencyVisualization.java;2426998793/1;/cs2820-spring23/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820-spring23/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Node.java;1243472081/1;/cs2820-spring23/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/cs2820-spring23/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820-spring23/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820-spring23/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;/cs2820-spring23/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820-spring23/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Program.java;765069261/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ProgramVisualization.java;108384050/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;2919449855/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityParameters.java;1976749484/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;4166646452/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Row.java;3413533457/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820-spring23/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SystemFactory.java;4134708055/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/cs2820-spring23/src/edu/uiowa/cs/warp/VisualizationFactory.java;1134295780/1;/cs2820-spring23/src/edu/uiowa/cs/warp/VisualizationImplementation.java;1783231272/1;/cs2820-spring23/src/edu/uiowa/cs/warp/VisualizationObject.java;1022989847/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WorkLoadListener.java;195958787/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WorkLoadDescription.java;3097834434/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WarpInterface.java;2926400465/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WarpSystem.java;1603794739/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WorkLoad.java;4087709754/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/cs2820-spring23/src/edu/uiowa/cs/warp/Warp.java;2175298915/1;/cs2820-spring23/src/edu/uiowa/cs/warp/WorkLoadTest.java;250494534/1;/cs2820-spring23/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_rynhkLkWEe26eKBxVz0OTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_rynhkbkWEe26eKBxVz0OTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_rynhkrkWEe26eKBxVz0OTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_rynhk7kWEe26eKBxVz0OTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_rynhlLkWEe26eKBxVz0OTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_rynhlbkWEe26eKBxVz0OTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_rynhlrkWEe26eKBxVz0OTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_rynhl7kWEe26eKBxVz0OTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_ryoIoLkWEe26eKBxVz0OTQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_rx0QULkWEe26eKBxVz0OTQ" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_rx0QUbkWEe26eKBxVz0OTQ" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_rx0QUrkWEe26eKBxVz0OTQ" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_rx2FgLkWEe26eKBxVz0OTQ" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_ryvdYLkWEe26eKBxVz0OTQ" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_sCphobkWEe26eKBxVz0OTQ" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_rzhggLkWEe26eKBxVz0OTQ" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_sDGNkLkWEe26eKBxVz0OTQ" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_rzkj0LkWEe26eKBxVz0OTQ" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_sDG0oLkWEe26eKBxVz0OTQ" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_sDHbsbkWEe26eKBxVz0OTQ" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r177ULkWEe26eKBxVz0OTQ" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_sDxjALkWEe26eKBxVz0OTQ" general="_sCABYLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sExBgLkWEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sExBgbkWEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFnWELkWEe26eKBxVz0OTQ" name="AbstractMap" specification="_r19JcLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFnWEbkWEe26eKBxVz0OTQ" type="_r177ULkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r19JcLkWEe26eKBxVz0OTQ" name="AbstractMap" method="_sFnWELkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r19JcbkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r19JcrkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r19Jc7kWEe26eKBxVz0OTQ" type="_r177ULkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r19wgLkWEe26eKBxVz0OTQ" name="Activation">
              <generalization xmi:id="_sCHWIbkWEe26eKBxVz0OTQ" general="_r45vwLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sExokLkWEe26eKBxVz0OTQ" name="coordinators" type="_sCBPgLkWEe26eKBxVz0OTQ" isReadOnly="true" association="_sGrtELkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sExokrkWEe26eKBxVz0OTQ" name="edges" type="_sCBPgLkWEe26eKBxVz0OTQ" isReadOnly="true" association="_sGs7MLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sEyPobkWEe26eKBxVz0OTQ" name="additionalScheduleTimes" type="_sCBPgLkWEe26eKBxVz0OTQ" isReadOnly="true" association="_sGtiQLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sEyPo7kWEe26eKBxVz0OTQ" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sEyPpLkWEe26eKBxVz0OTQ" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_sDyxIbkWEe26eKBxVz0OTQ" client="_r19wgLkWEe26eKBxVz0OTQ" supplier="_sDyKErkWEe26eKBxVz0OTQ" contract="_sDyKErkWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFnWErkWEe26eKBxVz0OTQ" name="Activation" specification="_r1-XkLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFnWE7kWEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFnWFLkWEe26eKBxVz0OTQ" type="_r19wgLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFn9ILkWEe26eKBxVz0OTQ" name="Activation" specification="_sCDrwLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFn9IbkWEe26eKBxVz0OTQ" name="elem" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFn9IrkWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFn9I7kWEe26eKBxVz0OTQ" type="_r19wgLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFn9JLkWEe26eKBxVz0OTQ" name="clone" specification="_r1--oLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFn9JbkWEe26eKBxVz0OTQ" type="_r19wgLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFn9JrkWEe26eKBxVz0OTQ" name="getEdgesByReleaseTime" specification="_r1_lsrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFn9J7kWEe26eKBxVz0OTQ" type="_r3okcLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFn9KLkWEe26eKBxVz0OTQ" name="getEdgesByLatestReleaseTime" specification="_r2AMwbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFn9KbkWEe26eKBxVz0OTQ" type="_r3okcLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFn9KrkWEe26eKBxVz0OTQ" name="getEdgesByPeriod" specification="_r2Az0bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFn9K7kWEe26eKBxVz0OTQ" type="_r3okcLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFn9LLkWEe26eKBxVz0OTQ" name="getEdgesByDeadline" specification="_r2Ba4bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFn9LbkWEe26eKBxVz0OTQ" type="_r3okcLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFn9LrkWEe26eKBxVz0OTQ" name="getEdgesByPriority" specification="_r2CB8bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFn9L7kWEe26eKBxVz0OTQ" type="_r3okcLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFn9MLkWEe26eKBxVz0OTQ" name="addEdges" specification="_sDzYMLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFn9MbkWEe26eKBxVz0OTQ" name="edges" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFn9MrkWEe26eKBxVz0OTQ" name="addEdge" specification="_sCES07kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFn9M7kWEe26eKBxVz0OTQ" name="edge" type="_r2eG07kWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFn9NLkWEe26eKBxVz0OTQ" name="increaseEdgePhases" specification="_r2CpALkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFn9NbkWEe26eKBxVz0OTQ" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFn9NrkWEe26eKBxVz0OTQ" name="updatePriorityAndRelease" specification="_r2CpArkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFn9N7kWEe26eKBxVz0OTQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFn9OLkWEe26eKBxVz0OTQ" name="addConflict" specification="_r2DQELkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFn9ObkWEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFn9OrkWEe26eKBxVz0OTQ" name="addConflicts" specification="_sDz_QrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFn9O7kWEe26eKBxVz0OTQ" name="conflicts" type="_sCCdorkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFokMLkWEe26eKBxVz0OTQ" name="addCoordinator" specification="_r2DQErkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFokMbkWEe26eKBxVz0OTQ" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFokMrkWEe26eKBxVz0OTQ" name="addCoordinators" specification="_sD0mUbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFokM7kWEe26eKBxVz0OTQ" name="coordinators" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFokNLkWEe26eKBxVz0OTQ" name="addScheduleTimes" specification="_sD1NYLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFokNbkWEe26eKBxVz0OTQ" name="scheduleTime" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFokNrkWEe26eKBxVz0OTQ" name="getNextScheduleTime" specification="_r2D3ILkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFokN7kWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFokOLkWEe26eKBxVz0OTQ" type="_r36RQLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFokObkWEe26eKBxVz0OTQ" name="getMatchingEndTime" specification="_r2D3IrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFokOrkWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFokO7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFokPLkWEe26eKBxVz0OTQ" name="getNextStartTime" specification="_r2D3JbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFokPbkWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFokPrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFokP7kWEe26eKBxVz0OTQ" name="getNextEndTime" specification="_r2EeMLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFokQLkWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFokQbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFokQrkWEe26eKBxVz0OTQ" name="getNumEdges" specification="_r2EeM7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFokQ7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFokRLkWEe26eKBxVz0OTQ" name="compareTo" specification="_sCE54bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFokRbkWEe26eKBxVz0OTQ" name="obj" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFokRrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFokR7kWEe26eKBxVz0OTQ" name="conflictExists" specification="_sCFg8bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFokSLkWEe26eKBxVz0OTQ" name="obj" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFokSbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFokSrkWEe26eKBxVz0OTQ" name="canCombine" specification="_sCFg9LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFokS7kWEe26eKBxVz0OTQ" name="a2" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFokTLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFokTbkWEe26eKBxVz0OTQ" name="getDelta" specification="_r2EeNbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFokTrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFpLQLkWEe26eKBxVz0OTQ" name="getExecutionDuration" specification="_r2FFQbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFpLQbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFpLQrkWEe26eKBxVz0OTQ" name="getCombinedExecutionDuration" specification="_sCFg97kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFpLQ7kWEe26eKBxVz0OTQ" name="a2" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFpLRLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFpLRbkWEe26eKBxVz0OTQ" name="printAll" specification="_r2FFQ7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFpLRrkWEe26eKBxVz0OTQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFpLR7kWEe26eKBxVz0OTQ" name="printAll" specification="_r2FFRbkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFpLSLkWEe26eKBxVz0OTQ" name="printEdges" specification="_sCGIAbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFpLSbkWEe26eKBxVz0OTQ" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFpLSrkWEe26eKBxVz0OTQ" name="edges" type="_r3nWULkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFpLS7kWEe26eKBxVz0OTQ" name="printEdges" specification="_sCGvEbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFpLTLkWEe26eKBxVz0OTQ" name="edges" type="_r3nWULkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r1-XkLkWEe26eKBxVz0OTQ" name="Activation" visibility="package" method="_sFnWErkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r1-XkrkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r1-Xk7kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r1-XkbkWEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r1-XlLkWEe26eKBxVz0OTQ" type="_r19wgLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r1--oLkWEe26eKBxVz0OTQ" name="clone" method="_sFn9JLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCDrxrkWEe26eKBxVz0OTQ" type="_r19wgLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r1_lsrkWEe26eKBxVz0OTQ" name="getEdgesByReleaseTime" method="_sFn9JrkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGL90LkWEe26eKBxVz0OTQ">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_sCDrx7kWEe26eKBxVz0OTQ" type="_r3okcLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2AMwbkWEe26eKBxVz0OTQ" name="getEdgesByLatestReleaseTime" method="_sFn9KLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGL90bkWEe26eKBxVz0OTQ">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_sCDryLkWEe26eKBxVz0OTQ" type="_r3okcLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2Az0bkWEe26eKBxVz0OTQ" name="getEdgesByPeriod" method="_sFn9KrkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGL90rkWEe26eKBxVz0OTQ">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_sCES0LkWEe26eKBxVz0OTQ" type="_r3okcLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2Ba4bkWEe26eKBxVz0OTQ" name="getEdgesByDeadline" method="_sFn9LLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGL907kWEe26eKBxVz0OTQ">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_sCES0bkWEe26eKBxVz0OTQ" type="_r3okcLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2CB8bkWEe26eKBxVz0OTQ" name="getEdgesByPriority" method="_sFn9LrkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGL91LkWEe26eKBxVz0OTQ">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_sCES0rkWEe26eKBxVz0OTQ" type="_r3okcLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2CpALkWEe26eKBxVz0OTQ" name="increaseEdgePhases" method="_sFn9NLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGL91bkWEe26eKBxVz0OTQ">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_r2CpAbkWEe26eKBxVz0OTQ" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2CpArkWEe26eKBxVz0OTQ" name="updatePriorityAndRelease" method="_sFn9NrkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGL91rkWEe26eKBxVz0OTQ">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_r2CpA7kWEe26eKBxVz0OTQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2DQELkWEe26eKBxVz0OTQ" name="addConflict" method="_sFn9OLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2DQEbkWEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2DQErkWEe26eKBxVz0OTQ" name="addCoordinator" method="_sFokMLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2DQE7kWEe26eKBxVz0OTQ" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2D3ILkWEe26eKBxVz0OTQ" name="getNextScheduleTime" method="_sFokNrkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGL92LkWEe26eKBxVz0OTQ">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_r2D3IbkWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sCE54LkWEe26eKBxVz0OTQ" type="_r36RQLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2D3IrkWEe26eKBxVz0OTQ" name="getMatchingEndTime" method="_sFokObkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGL92bkWEe26eKBxVz0OTQ">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_r2D3I7kWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2D3JLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2D3JbkWEe26eKBxVz0OTQ" name="getNextStartTime" method="_sFokPLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGL92rkWEe26eKBxVz0OTQ">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_r2D3JrkWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2D3J7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2EeMLkWEe26eKBxVz0OTQ" name="getNextEndTime" method="_sFokP7kWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGL927kWEe26eKBxVz0OTQ">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_r2EeMbkWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2EeMrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2EeM7kWEe26eKBxVz0OTQ" name="getNumEdges" method="_sFokQrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2EeNLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2EeNbkWEe26eKBxVz0OTQ" name="getDelta" method="_sFokTbkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGL93LkWEe26eKBxVz0OTQ">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r2FFQLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2FFQbkWEe26eKBxVz0OTQ" name="getExecutionDuration" method="_sFpLQLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2FFQrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2FFQ7kWEe26eKBxVz0OTQ" name="printAll" method="_sFpLRbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2FFRLkWEe26eKBxVz0OTQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2FFRbkWEe26eKBxVz0OTQ" name="printAll" method="_sFpLR7kWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_sCDrwLkWEe26eKBxVz0OTQ" name="Activation" visibility="package" method="_sFn9ILkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sCDrw7kWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sCDrxLkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sCDrwbkWEe26eKBxVz0OTQ" name="elem" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCDrwrkWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sCDrxbkWEe26eKBxVz0OTQ" type="_r19wgLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCES07kWEe26eKBxVz0OTQ" name="addEdge" method="_sFn9MrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCES1LkWEe26eKBxVz0OTQ" name="edge" type="_r2eG07kWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCE54bkWEe26eKBxVz0OTQ" name="compareTo" method="_sFokRLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCE54rkWEe26eKBxVz0OTQ" name="obj" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCE547kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sCFg8bkWEe26eKBxVz0OTQ" name="conflictExists" method="_sFokR7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCFg8rkWEe26eKBxVz0OTQ" name="obj" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCFg87kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sCFg9LkWEe26eKBxVz0OTQ" name="canCombine" method="_sFokSrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCFg9bkWEe26eKBxVz0OTQ" name="a2" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCFg9rkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sCFg97kWEe26eKBxVz0OTQ" name="getCombinedExecutionDuration" method="_sFpLQrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCFg-LkWEe26eKBxVz0OTQ" name="a2" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCGIALkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sCGIAbkWEe26eKBxVz0OTQ" name="printEdges" visibility="private" method="_sFpLSLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCGIArkWEe26eKBxVz0OTQ" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sCGIA7kWEe26eKBxVz0OTQ" name="edges" type="_r3nWULkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCGvEbkWEe26eKBxVz0OTQ" name="printEdges" visibility="private" method="_sFpLS7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCGvErkWEe26eKBxVz0OTQ" name="edges" type="_r3nWULkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDzYMLkWEe26eKBxVz0OTQ" name="addEdges" method="_sFn9MLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDz_QLkWEe26eKBxVz0OTQ" name="edges" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDz_QrkWEe26eKBxVz0OTQ" name="addConflicts" method="_sFn9OrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDz_Q7kWEe26eKBxVz0OTQ" name="conflicts" type="_sCCdorkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sD0mUbkWEe26eKBxVz0OTQ" name="addCoordinators" method="_sFokMrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sD0mUrkWEe26eKBxVz0OTQ" name="coordinators" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sD1NYLkWEe26eKBxVz0OTQ" name="addScheduleTimes" method="_sFokNLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGL917kWEe26eKBxVz0OTQ">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_sD1NYbkWEe26eKBxVz0OTQ" name="scheduleTime" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r2IvoLkWEe26eKBxVz0OTQ" name="Activations">
              <generalization xmi:id="_sCJLULkWEe26eKBxVz0OTQ" general="_r177ULkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sEy2sLkWEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sEy2sbkWEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r2IvobkWEe26eKBxVz0OTQ" name="BasicPoset">
              <ownedComment xmi:id="_sGMk4LkWEe26eKBxVz0OTQ">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_sCKZdLkWEe26eKBxVz0OTQ" general="_r3HnELkWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFpLTbkWEe26eKBxVz0OTQ" name="BasicPoset" specification="_sCJyYbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFpLTrkWEe26eKBxVz0OTQ" name="workload" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFpLT7kWEe26eKBxVz0OTQ" type="_r2IvobkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_sCJyYbkWEe26eKBxVz0OTQ" name="BasicPoset" visibility="package" method="_sFpLTbkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sCKZcbkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sCKZcrkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sCKZcLkWEe26eKBxVz0OTQ" name="workload" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCKZc7kWEe26eKBxVz0OTQ" type="_r2IvobkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r2JWsLkWEe26eKBxVz0OTQ" name="ChannelAnalysis">
              <ownedComment xmi:id="_sGMk4bkWEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sEzdwLkWEe26eKBxVz0OTQ" name="program" visibility="private" type="_r3VCcLkWEe26eKBxVz0OTQ" association="_sGtiQ7kWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sEzdwrkWEe26eKBxVz0OTQ" name="programTable" visibility="private" type="_r3h2wLkWEe26eKBxVz0OTQ" association="_sGuJULkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sEzdxLkWEe26eKBxVz0OTQ" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFpLULkWEe26eKBxVz0OTQ" name="ChannelAnalysis" specification="_sCLAgLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFpLUbkWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFpLUrkWEe26eKBxVz0OTQ" type="_r2JWsLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.program = warp.toProgram();&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFpLU7kWEe26eKBxVz0OTQ" name="ChannelAnalysis" specification="_sCLAhbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFpLVLkWEe26eKBxVz0OTQ" name="program" type="_r3VCcLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFpLVbkWEe26eKBxVz0OTQ" type="_r2JWsLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFpLVrkWEe26eKBxVz0OTQ" name="isChannelConflict" specification="_r2J9wLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFpLV7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r2J9wLkWEe26eKBxVz0OTQ" name="isChannelConflict" method="_sFpLVrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2Kk0LkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sCLAgLkWEe26eKBxVz0OTQ" name="ChannelAnalysis" visibility="package" method="_sFpLULkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sCLAgrkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sCLAg7kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sCLAgbkWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCLAhLkWEe26eKBxVz0OTQ" type="_r2JWsLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCLAhbkWEe26eKBxVz0OTQ" name="ChannelAnalysis" visibility="package" method="_sFpLU7kWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sCLnkLkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sCLnkbkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sCLAhrkWEe26eKBxVz0OTQ" name="program" type="_r3VCcLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCLnkrkWEe26eKBxVz0OTQ" type="_r2JWsLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r2LL4LkWEe26eKBxVz0OTQ" name="ChannelVisualization">
              <ownedComment xmi:id="_sGMk4rkWEe26eKBxVz0OTQ">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_sCMOpLkWEe26eKBxVz0OTQ" general="_r4I6wLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sEzdxrkWEe26eKBxVz0OTQ" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sE0E0LkWEe26eKBxVz0OTQ" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE0E0bkWEe26eKBxVz0OTQ" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sE0E0rkWEe26eKBxVz0OTQ" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE0E07kWEe26eKBxVz0OTQ" name="warp" visibility="private" type="_r4SEsLkWEe26eKBxVz0OTQ" association="_sGuJU7kWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sE0r4bkWEe26eKBxVz0OTQ" name="ca" visibility="private" type="_r2JWsLkWEe26eKBxVz0OTQ" association="_sGuwYbkWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFpyULkWEe26eKBxVz0OTQ" name="ChannelVisualization" specification="_sCLnk7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFpyUbkWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFpyUrkWEe26eKBxVz0OTQ" type="_r2LL4LkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_sCLnk7kWEe26eKBxVz0OTQ" name="ChannelVisualization" visibility="package" method="_sFpyULkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sCMOobkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sCMOorkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sCMOoLkWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCMOo7kWEe26eKBxVz0OTQ" type="_r2LL4LkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r2Ly8LkWEe26eKBxVz0OTQ" name="Channels">
              <ownedComment xmi:id="_sGMk47kWEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sE0r5bkWEe26eKBxVz0OTQ" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE0r57kWEe26eKBxVz0OTQ" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE0r6bkWEe26eKBxVz0OTQ" name="channelsAvailable" visibility="package" type="_sCBPgLkWEe26eKBxVz0OTQ" association="_sGuwZLkWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFpyWLkWEe26eKBxVz0OTQ" name="Channels" specification="_r2NoILkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFpyWbkWEe26eKBxVz0OTQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFpyWrkWEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFpyW7kWEe26eKBxVz0OTQ" type="_r2Ly8LkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFpyXLkWEe26eKBxVz0OTQ" name="getChannelSet" specification="_r2OPMLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFpyXbkWEe26eKBxVz0OTQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFpyXrkWEe26eKBxVz0OTQ" type="_sCB2kbkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>/* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFpyX7kWEe26eKBxVz0OTQ" name="addNewChannelSet" specification="_r2OPM7kWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFpyYLkWEe26eKBxVz0OTQ" name="isEmpty" specification="_r2O2QLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFpyYbkWEe26eKBxVz0OTQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFpyYrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFpyY7kWEe26eKBxVz0OTQ" name="removeChannel" specification="_r2O2Q7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFpyZLkWEe26eKBxVz0OTQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFpyZbkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFpyZrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFqZYLkWEe26eKBxVz0OTQ" name="addChannel" specification="_r2O2R7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFqZYbkWEe26eKBxVz0OTQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFqZYrkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFqZY7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFqZZLkWEe26eKBxVz0OTQ" name="getNumChannels" specification="_r2PdUbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFqZZbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r2NoILkWEe26eKBxVz0OTQ" name="Channels" visibility="package" method="_sFpyWLkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r2NoI7kWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r2NoJLkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r2NoIbkWEe26eKBxVz0OTQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2NoIrkWEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2NoJbkWEe26eKBxVz0OTQ" type="_r2Ly8LkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2OPMLkWEe26eKBxVz0OTQ" name="getChannelSet" method="_sFpyXLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2OPMbkWEe26eKBxVz0OTQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sD3CkLkWEe26eKBxVz0OTQ" type="_sCB2kbkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2OPM7kWEe26eKBxVz0OTQ" name="addNewChannelSet" method="_sFpyX7kWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r2O2QLkWEe26eKBxVz0OTQ" name="isEmpty" method="_sFpyYLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2O2QbkWEe26eKBxVz0OTQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2O2QrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2O2Q7kWEe26eKBxVz0OTQ" name="removeChannel" method="_sFpyY7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2O2RLkWEe26eKBxVz0OTQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2O2RbkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2O2RrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2O2R7kWEe26eKBxVz0OTQ" name="addChannel" method="_sFqZYLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2O2SLkWEe26eKBxVz0OTQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2O2SbkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2PdULkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2PdUbkWEe26eKBxVz0OTQ" name="getNumChannels" method="_sFqZZLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2PdUrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_r2MaALkWEe26eKBxVz0OTQ" name="ChannelSet" visibility="private">
                <generalization xmi:id="_sD2bgLkWEe26eKBxVz0OTQ" general="_sCB2kbkWEe26eKBxVz0OTQ"/>
                <ownedAttribute xmi:id="_sE0r47kWEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sE0r5LkWEe26eKBxVz0OTQ" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFpyU7kWEe26eKBxVz0OTQ" name="ChannelSet" specification="_r2NBELkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sFpyVLkWEe26eKBxVz0OTQ" type="_r2MaALkWEe26eKBxVz0OTQ" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFpyVbkWEe26eKBxVz0OTQ" name="ChannelSet" specification="_r2NBFLkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sFpyVrkWEe26eKBxVz0OTQ" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sFpyV7kWEe26eKBxVz0OTQ" type="_r2MaALkWEe26eKBxVz0OTQ" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_r2NBELkWEe26eKBxVz0OTQ" name="ChannelSet" visibility="private" method="_sFpyU7kWEe26eKBxVz0OTQ">
                  <eAnnotations xmi:id="_r2NBEbkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r2NBErkWEe26eKBxVz0OTQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r2NBE7kWEe26eKBxVz0OTQ" type="_r2MaALkWEe26eKBxVz0OTQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r2NBFLkWEe26eKBxVz0OTQ" name="ChannelSet" visibility="private" method="_sFpyVbkWEe26eKBxVz0OTQ">
                  <eAnnotations xmi:id="_r2NBFrkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r2NBF7kWEe26eKBxVz0OTQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r2NBFbkWEe26eKBxVz0OTQ" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r2NBGLkWEe26eKBxVz0OTQ" type="_r2MaALkWEe26eKBxVz0OTQ" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r2QEYLkWEe26eKBxVz0OTQ" name="CodeFragment">
              <ownedAttribute xmi:id="_sE16ALkWEe26eKBxVz0OTQ" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sE16AbkWEe26eKBxVz0OTQ" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE16ArkWEe26eKBxVz0OTQ" name="edges" visibility="package" type="_sCBPgLkWEe26eKBxVz0OTQ" association="_sGvXcLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sE16BbkWEe26eKBxVz0OTQ" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE2hEbkWEe26eKBxVz0OTQ" name="codeFragment" visibility="package" type="_sCBPgLkWEe26eKBxVz0OTQ" association="_sGvXc7kWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sE2hFLkWEe26eKBxVz0OTQ" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE3IILkWEe26eKBxVz0OTQ" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFqZZrkWEe26eKBxVz0OTQ" name="CodeFragment" specification="_r2QrcLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFqZZ7kWEe26eKBxVz0OTQ" type="_r2QEYLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFqZaLkWEe26eKBxVz0OTQ" name="CodeFragment" specification="_sD3poLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFqZabkWEe26eKBxVz0OTQ" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFqZarkWEe26eKBxVz0OTQ" name="edges" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFqZa7kWEe26eKBxVz0OTQ" name="coordinators" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFqZbLkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFqZbbkWEe26eKBxVz0OTQ" type="_r2QEYLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFqZbrkWEe26eKBxVz0OTQ" name="getCoordinator" specification="_r2RSg7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFqZb7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFqZcLkWEe26eKBxVz0OTQ" name="instructions" specification="_r2R5kLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFqZcbkWEe26eKBxVz0OTQ" type="_sCBPgLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFqZcrkWEe26eKBxVz0OTQ" name="size" specification="_r2R5krkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFqZc7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFqZdLkWEe26eKBxVz0OTQ" name="generateCodeFragment" specification="_r2R5lLkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFqZdbkWEe26eKBxVz0OTQ" name="getBaseInstruction" specification="_r2SgoLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFqZdrkWEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFqZd7kWEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFqZeLkWEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFqZebkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFqZerkWEe26eKBxVz0OTQ" name="push" specification="_r2SgpbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFqZe7kWEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFqZfLkWEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFqZfbkWEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFqZfrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFqZf7kWEe26eKBxVz0OTQ" name="pull" specification="_r2THsbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFqZgLkWEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFqZgbkWEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFqZgrkWEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFqZg7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFqZhLkWEe26eKBxVz0OTQ" name="ifHas" specification="_r2TuwLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFqZhbkWEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFqZhrkWEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFqZh7kWEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFqZiLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFrAcLkWEe26eKBxVz0OTQ" name="ifNotHas" specification="_r2TuxbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFrAcbkWEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFrAcrkWEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFrAc7kWEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFrAdLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFrAdbkWEe26eKBxVz0OTQ" name="wait" specification="_r2UV0LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFrAdrkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFrAd7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFrAeLkWEe26eKBxVz0OTQ" name="sleep" specification="_r2UV07kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFrAebkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFrAerkWEe26eKBxVz0OTQ" name="reportIfDifferentCoordinators" specification="_sD43wrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFrAe7kWEe26eKBxVz0OTQ" name="coordinators" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFrAfLkWEe26eKBxVz0OTQ" name="multipleCoordinators" specification="_sD5e0rkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFrAfbkWEe26eKBxVz0OTQ" name="coordinators" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFrAfrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r2QrcLkWEe26eKBxVz0OTQ" name="CodeFragment" visibility="package" method="_sFqZZrkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r2RSgLkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r2RSgbkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_sGMk5LkWEe26eKBxVz0OTQ">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r2RSgrkWEe26eKBxVz0OTQ" type="_r2QEYLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2RSg7kWEe26eKBxVz0OTQ" name="getCoordinator" method="_sFqZbrkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGMk5rkWEe26eKBxVz0OTQ">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_r2RShLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2R5kLkWEe26eKBxVz0OTQ" name="instructions" method="_sFqZcLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGMk57kWEe26eKBxVz0OTQ">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_sD43wbkWEe26eKBxVz0OTQ" type="_sCBPgLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2R5krkWEe26eKBxVz0OTQ" name="size" method="_sFqZcrkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGMk6LkWEe26eKBxVz0OTQ">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_r2R5k7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2R5lLkWEe26eKBxVz0OTQ" name="generateCodeFragment" visibility="private" method="_sFqZdLkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r2SgoLkWEe26eKBxVz0OTQ" name="getBaseInstruction" visibility="private" method="_sFqZdbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2SgobkWEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2SgorkWEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2Sgo7kWEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2SgpLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2SgpbkWEe26eKBxVz0OTQ" name="push" visibility="private" method="_sFqZerkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2SgprkWEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2Sgp7kWEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2SgqLkWEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2THsLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2THsbkWEe26eKBxVz0OTQ" name="pull" visibility="private" method="_sFqZf7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2THsrkWEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2THs7kWEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2THtLkWEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2THtbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2TuwLkWEe26eKBxVz0OTQ" name="ifHas" visibility="private" method="_sFqZhLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2TuwbkWEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2TuwrkWEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2Tuw7kWEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2TuxLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2TuxbkWEe26eKBxVz0OTQ" name="ifNotHas" visibility="private" method="_sFrAcLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2TuxrkWEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2Tux7kWEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2TuyLkWEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2TuybkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2UV0LkWEe26eKBxVz0OTQ" name="wait" method="_sFrAdbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2UV0bkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2UV0rkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2UV07kWEe26eKBxVz0OTQ" name="sleep" isStatic="true" method="_sFrAeLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2UV1LkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sD3poLkWEe26eKBxVz0OTQ" name="CodeFragment" visibility="package" method="_sFqZaLkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sD3ppbkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sD3pprkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_sGMk5bkWEe26eKBxVz0OTQ">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_sD3pobkWEe26eKBxVz0OTQ" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sD3porkWEe26eKBxVz0OTQ" name="edges" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sD3po7kWEe26eKBxVz0OTQ" name="coordinators" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sD3ppLkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sD3pp7kWEe26eKBxVz0OTQ" type="_r2QEYLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sD43wrkWEe26eKBxVz0OTQ" name="reportIfDifferentCoordinators" visibility="private" method="_sFrAerkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sD5e0LkWEe26eKBxVz0OTQ" name="coordinators" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sD5e0rkWEe26eKBxVz0OTQ" name="multipleCoordinators" visibility="private" method="_sFrAfLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sD5e07kWEe26eKBxVz0OTQ" name="coordinators" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sD5e1LkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r2Vj8LkWEe26eKBxVz0OTQ" name="CombinedActivation">
              <generalization xmi:id="_sCQgE7kWEe26eKBxVz0OTQ" general="_r19wgLkWEe26eKBxVz0OTQ"/>
              <interfaceRealization xmi:id="_sD6F4LkWEe26eKBxVz0OTQ" client="_r2Vj8LkWEe26eKBxVz0OTQ" supplier="_sDyKErkWEe26eKBxVz0OTQ" contract="_sDyKErkWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFrAf7kWEe26eKBxVz0OTQ" name="CombinedActivation" specification="_r2WLALkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFrAgLkWEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFrAgbkWEe26eKBxVz0OTQ" type="_r2Vj8LkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFrAgrkWEe26eKBxVz0OTQ" name="CombinedActivation" specification="_sCPR8LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFrAg7kWEe26eKBxVz0OTQ" name="elem" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFrAhLkWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFrAhbkWEe26eKBxVz0OTQ" type="_r2Vj8LkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFrAhrkWEe26eKBxVz0OTQ" name="CombinedActivation" specification="_sCP5BLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFrAh7kWEe26eKBxVz0OTQ" name="priorEntry" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFrAiLkWEe26eKBxVz0OTQ" name="next" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFrAibkWEe26eKBxVz0OTQ" type="_r2Vj8LkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFrAirkWEe26eKBxVz0OTQ" name="canCombine" specification="_sCP5CrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFrAi7kWEe26eKBxVz0OTQ" name="a2" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFrAjLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r2WLALkWEe26eKBxVz0OTQ" name="CombinedActivation" visibility="package" method="_sFrAf7kWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r2WLArkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r2WLA7kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r2WLAbkWEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2WLBLkWEe26eKBxVz0OTQ" type="_r2Vj8LkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCPR8LkWEe26eKBxVz0OTQ" name="CombinedActivation" visibility="package" method="_sFrAgrkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sCP5AbkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sCP5ArkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sCPR8bkWEe26eKBxVz0OTQ" name="elem" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCP5ALkWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sCP5A7kWEe26eKBxVz0OTQ" type="_r2Vj8LkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCP5BLkWEe26eKBxVz0OTQ" name="CombinedActivation" visibility="package" method="_sFrAhrkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sCP5B7kWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sCP5CLkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sCP5BbkWEe26eKBxVz0OTQ" name="priorEntry" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCP5BrkWEe26eKBxVz0OTQ" name="next" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCP5CbkWEe26eKBxVz0OTQ" type="_r2Vj8LkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCP5CrkWEe26eKBxVz0OTQ" name="canCombine" method="_sFrAirkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCP5C7kWEe26eKBxVz0OTQ" name="a2" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCP5DLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r2XZILkWEe26eKBxVz0OTQ" name="CommunicationGraph">
              <ownedComment xmi:id="_sGMk6bkWEe26eKBxVz0OTQ">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_sCRuNrkWEe26eKBxVz0OTQ" general="_r4I6wLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sE3IIrkWEe26eKBxVz0OTQ" name="wfm" visibility="package" type="_r2jmYLkWEe26eKBxVz0OTQ" association="_sGv-gLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sE3IJLkWEe26eKBxVz0OTQ" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE3vMbkWEe26eKBxVz0OTQ" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE3vM7kWEe26eKBxVz0OTQ" name="workLoad" visibility="package" type="_r4b1sLkWEe26eKBxVz0OTQ" association="_sGv-g7kWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFrAjbkWEe26eKBxVz0OTQ" name="CommunicationGraph" specification="_sCRHILkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFrAjrkWEe26eKBxVz0OTQ" name="fm" type="_r2jmYLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFrAj7kWEe26eKBxVz0OTQ" name="workLoad" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFrAkLkWEe26eKBxVz0OTQ" type="_r2XZILkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFrngLkWEe26eKBxVz0OTQ" name="CommunicationGraph" specification="_sCRHJrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFrngbkWEe26eKBxVz0OTQ" name="fm" type="_r2jmYLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFrngrkWEe26eKBxVz0OTQ" name="workLoad" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFrng7kWEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFrnhLkWEe26eKBxVz0OTQ" type="_r2XZILkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFrnhbkWEe26eKBxVz0OTQ" name="createHeader" specification="_r2YAMLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFrnhrkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFrnh7kWEe26eKBxVz0OTQ" name="createFooter" specification="_r2YnQ7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFrniLkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFrnibkWEe26eKBxVz0OTQ" name="visualization" specification="_r2ZOU7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFrnirkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFrni7kWEe26eKBxVz0OTQ" name="createWarpFileContent" specification="_r2Z1YbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFrnjLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r2YAMLkWEe26eKBxVz0OTQ" name="createHeader" method="_sFrnhbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCRuM7kWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2YnQ7kWEe26eKBxVz0OTQ" name="createFooter" method="_sFrnh7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCRuNLkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2ZOU7kWEe26eKBxVz0OTQ" name="visualization" method="_sFrnibkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCRuNbkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2Z1YbkWEe26eKBxVz0OTQ" name="createWarpFileContent" method="_sFrni7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2Z1YrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sCRHILkWEe26eKBxVz0OTQ" name="CommunicationGraph" method="_sFrAjbkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sCRHI7kWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sCRHJLkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sCRHIbkWEe26eKBxVz0OTQ" name="fm" type="_r2jmYLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCRHIrkWEe26eKBxVz0OTQ" name="workLoad" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCRHJbkWEe26eKBxVz0OTQ" type="_r2XZILkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCRHJrkWEe26eKBxVz0OTQ" name="CommunicationGraph" method="_sFrngLkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sCRuMLkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sCRuMbkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sCRHJ7kWEe26eKBxVz0OTQ" name="fm" type="_r2jmYLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCRHKLkWEe26eKBxVz0OTQ" name="workLoad" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCRHKbkWEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sCRuMrkWEe26eKBxVz0OTQ" type="_r2XZILkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r2bDgLkWEe26eKBxVz0OTQ" name="ConnectivityPoset">
              <ownedComment xmi:id="_sGNL8LkWEe26eKBxVz0OTQ">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_sCSVQrkWEe26eKBxVz0OTQ" general="_r3HnELkWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFrnjbkWEe26eKBxVz0OTQ" name="ConnectivityPoset" specification="_sCRuN7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFrnjrkWEe26eKBxVz0OTQ" name="workload" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFrnj7kWEe26eKBxVz0OTQ" type="_r2bDgLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFrnkLkWEe26eKBxVz0OTQ" name="findCoordinator" specification="_sD6s8bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFrnkbkWEe26eKBxVz0OTQ" name="nodesInFlow" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFrnkrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_sCRuN7kWEe26eKBxVz0OTQ" name="ConnectivityPoset" visibility="package" method="_sFrnjbkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sCRuObkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sCSVQLkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sCRuOLkWEe26eKBxVz0OTQ" name="workload" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCSVQbkWEe26eKBxVz0OTQ" type="_r2bDgLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sD6s8bkWEe26eKBxVz0OTQ" name="findCoordinator" visibility="protected" method="_sFrnkLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sD6s8rkWEe26eKBxVz0OTQ" name="nodesInFlow" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sD7UALkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r2bqkLkWEe26eKBxVz0OTQ" name="DeadlineComparator">
              <interfaceRealization xmi:id="_sD77ELkWEe26eKBxVz0OTQ" client="_r2bqkLkWEe26eKBxVz0OTQ" supplier="_sCSVQ7kWEe26eKBxVz0OTQ" contract="_sCSVQ7kWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFrnk7kWEe26eKBxVz0OTQ" name="compare" specification="_sD8iI7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFrnlLkWEe26eKBxVz0OTQ" name="obj1" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFrnlbkWEe26eKBxVz0OTQ" name="obj2" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFrnlrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_sD8iI7kWEe26eKBxVz0OTQ" name="compare" method="_sFrnk7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sD8iJLkWEe26eKBxVz0OTQ" name="obj1" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sD8iJbkWEe26eKBxVz0OTQ" name="obj2" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sD8iJrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r2c4sLkWEe26eKBxVz0OTQ" name="Description">
              <ownedComment xmi:id="_sGNL8bkWEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_sD9JMrkWEe26eKBxVz0OTQ" general="_sCBPgLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sE3vNbkWEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sE3vNrkWEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFrnl7kWEe26eKBxVz0OTQ" name="Description" specification="_r2c4sbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFsOkLkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFsOkbkWEe26eKBxVz0OTQ" name="Description" specification="_r2dfwLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFsOkrkWEe26eKBxVz0OTQ" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFsOk7kWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFsOlLkWEe26eKBxVz0OTQ" name="toString" specification="_r2dfxbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFsOlbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r2c4sbkWEe26eKBxVz0OTQ" name="Description" method="_sFrnl7kWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r2c4srkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r2c4s7kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r2c4tLkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2dfwLkWEe26eKBxVz0OTQ" name="Description" method="_sFsOkbkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r2dfwrkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r2dfw7kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r2dfwbkWEe26eKBxVz0OTQ" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2dfxLkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2dfxbkWEe26eKBxVz0OTQ" name="toString" method="_sFsOlLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2dfxrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r2eG07kWEe26eKBxVz0OTQ" name="Edge">
              <generalization xmi:id="_sCUKcrkWEe26eKBxVz0OTQ" general="_r45vwLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sE4WQLkWEe26eKBxVz0OTQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sE4WQbkWEe26eKBxVz0OTQ" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE4WQrkWEe26eKBxVz0OTQ" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE4WQ7kWEe26eKBxVz0OTQ" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE4WRLkWEe26eKBxVz0OTQ" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE4WRbkWEe26eKBxVz0OTQ" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE4WRrkWEe26eKBxVz0OTQ" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE4WR7kWEe26eKBxVz0OTQ" name="state" type="_r2fU8LkWEe26eKBxVz0OTQ" association="_sGNL8rkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sE49ULkWEe26eKBxVz0OTQ" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_sD9wQLkWEe26eKBxVz0OTQ" client="_r2eG07kWEe26eKBxVz0OTQ" supplier="_sDyKErkWEe26eKBxVz0OTQ" contract="_sDyKErkWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFsOlrkWEe26eKBxVz0OTQ" name="Edge" specification="_r2f8AbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFsOl7kWEe26eKBxVz0OTQ" type="_r2eG07kWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFs1oLkWEe26eKBxVz0OTQ" name="Edge" specification="_r2gjELkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFs1obkWEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFs1orkWEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFs1o7kWEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFs1pLkWEe26eKBxVz0OTQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFs1pbkWEe26eKBxVz0OTQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFs1prkWEe26eKBxVz0OTQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFs1p7kWEe26eKBxVz0OTQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFs1qLkWEe26eKBxVz0OTQ" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFs1qbkWEe26eKBxVz0OTQ" type="_r2eG07kWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFs1qrkWEe26eKBxVz0OTQ" name="compareTo" specification="_sCTjYLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFs1q7kWEe26eKBxVz0OTQ" name="edge" type="_r2eG07kWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFs1rLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFs1rbkWEe26eKBxVz0OTQ" name="toString" specification="_r2hKI7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFs1rrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFs1r7kWEe26eKBxVz0OTQ" name="print" specification="_r2hxNLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFs1sLkWEe26eKBxVz0OTQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFs1sbkWEe26eKBxVz0OTQ" name="print" specification="_r2iYQ7kWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r2f8AbkWEe26eKBxVz0OTQ" name="Edge" visibility="package" method="_sFsOlrkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r2f8ArkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r2f8A7kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r2f8BLkWEe26eKBxVz0OTQ" type="_r2eG07kWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2gjELkWEe26eKBxVz0OTQ" name="Edge" visibility="package" method="_sFs1oLkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r2hKILkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r2hKIbkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r2gjEbkWEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2gjErkWEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2gjE7kWEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2gjFLkWEe26eKBxVz0OTQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2gjFbkWEe26eKBxVz0OTQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2gjFrkWEe26eKBxVz0OTQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2gjF7kWEe26eKBxVz0OTQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2gjGLkWEe26eKBxVz0OTQ" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2hKIrkWEe26eKBxVz0OTQ" type="_r2eG07kWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2hKI7kWEe26eKBxVz0OTQ" name="toString" method="_sFs1rbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2hxMLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2hxNLkWEe26eKBxVz0OTQ" name="print" method="_sFs1r7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2hxNbkWEe26eKBxVz0OTQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2iYQ7kWEe26eKBxVz0OTQ" name="print" method="_sFs1sbkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_sCTjYLkWEe26eKBxVz0OTQ" name="compareTo" method="_sFs1qrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCTjYbkWEe26eKBxVz0OTQ" name="edge" type="_r2eG07kWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCTjYrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_r2fU8LkWEe26eKBxVz0OTQ" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_r2fU8rkWEe26eKBxVz0OTQ" name="RELEASED"/>
                <ownedLiteral xmi:id="_r2fU87kWEe26eKBxVz0OTQ" name="EXECUTING"/>
                <ownedLiteral xmi:id="_r2f8ALkWEe26eKBxVz0OTQ" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r2jmYLkWEe26eKBxVz0OTQ" name="FileManager">
              <ownedComment xmi:id="_sGNzALkWEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sE49UbkWEe26eKBxVz0OTQ" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE49UrkWEe26eKBxVz0OTQ" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFs1srkWEe26eKBxVz0OTQ" name="FileManager" specification="_r2k0gLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFs1s7kWEe26eKBxVz0OTQ" type="_r2jmYLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 verbose = false; // initialize verbose to false&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFs1tLkWEe26eKBxVz0OTQ" name="FileManager" specification="_r2lbkrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFs1tbkWEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFs1trkWEe26eKBxVz0OTQ" type="_r2jmYLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFs1t7kWEe26eKBxVz0OTQ" name="getDocumentsDirectory" specification="_r2lbl7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFs1uLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
 String documentsDirectory;&#xD;
 if (OSValidator.isWindows()) {&#xD;
   documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
 } else if (OSValidator.isMac()) {&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;) + File.separator + &quot;Documents&quot;;&#xD;
 } else { // for all other Unix systems&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not&#xD;
                                                         // MACOS)&#xD;
 }&#xD;
 return documentsDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFs1ubkWEe26eKBxVz0OTQ" name="getCurrentDirectory" specification="_r2mCoLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFs1urkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFs1u7kWEe26eKBxVz0OTQ" name="createFile" specification="_r2mCorkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFs1vLkWEe26eKBxVz0OTQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFs1vbkWEe26eKBxVz0OTQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFs1vrkWEe26eKBxVz0OTQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFs1v7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * we don't actually create the file...it will be created when written to this routine really&#xD;
  * just creates the file name ;-)&#xD;
  */&#xD;
 Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex); // get the file string sans the suffix&#xD;
 }&#xD;
 /*&#xD;
  * fileString has no suffix at this point (removed if it existed) Now add file name extension&#xD;
  * and suffix&#xD;
  */&#xD;
 fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFtcsLkWEe26eKBxVz0OTQ" name="createFile" specification="_r2mCp7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFtcsbkWEe26eKBxVz0OTQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFtcsrkWEe26eKBxVz0OTQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFtcs7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex - 1); // get the file string sans the suffix&#xD;
 }&#xD;
 // fileString has no suffix at this point (removed if it existed)&#xD;
 // Now add file name extension and suffix&#xD;
 fileString = fileString + suffix;&#xD;
 // we don't actually create the file...it will be created when written to&#xD;
 // this routine really just creates the file name ;-)&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFtctLkWEe26eKBxVz0OTQ" name="createDirectory" specification="_r2mps7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFtctbkWEe26eKBxVz0OTQ" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFtctrkWEe26eKBxVz0OTQ" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFtct7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory;&#xD;
 if (subDirectory.startsWith(&quot;/&quot;)) { // check if full path provided&#xD;
   newDirectory = subDirectory; // if subDirectory is a full path, use it.&#xD;
 } else { // subDirectory has relative path, so just append&#xD;
   newDirectory = directory + File.separator + subDirectory;&#xD;
 }&#xD;
 try {&#xD;
   Path path = Paths.get(newDirectory);&#xD;
   Files.createDirectories(path);&#xD;
   if (verbose) {&#xD;
     System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
   }&#xD;
 } catch (IOException e) {&#xD;
   System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
   newDirectory = directory; // in case of error, just use the initial directory&#xD;
 }&#xD;
 return newDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFtcuLkWEe26eKBxVz0OTQ" name="writeFile" specification="_r2nQwrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFtcubkWEe26eKBxVz0OTQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFtcurkWEe26eKBxVz0OTQ" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Authentication tag = new Authentication(COURSE_TAG);&#xD;
 Path fileName = Path.of(file);&#xD;
 try {&#xD;
   // Files.writeString(fileName, tag.sign(fileContents)); // uncomment to tag course file&#xD;
   Files.writeString(fileName, fileContents); // comment out if tag is being used (line above)&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFtcu7kWEe26eKBxVz0OTQ" name="readFile" specification="_r2nQxbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFtcvLkWEe26eKBxVz0OTQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFtcvbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
 Path fileName = Path.of(file);&#xD;
 String contents = null;&#xD;
 try {&#xD;
   contents = Files.readString(fileName);&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on reading file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
 return contents;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r2k0gLkWEe26eKBxVz0OTQ" name="FileManager" method="_sFs1srkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r2k0gbkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r2lbkLkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_sGNzAbkWEe26eKBxVz0OTQ">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_r2lbkbkWEe26eKBxVz0OTQ" type="_r2jmYLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2lbkrkWEe26eKBxVz0OTQ" name="FileManager" method="_sFs1tLkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r2lblLkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r2lblbkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r2lbk7kWEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2lblrkWEe26eKBxVz0OTQ" type="_r2jmYLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2lbl7kWEe26eKBxVz0OTQ" name="getDocumentsDirectory" method="_sFs1t7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2lbmLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2mCoLkWEe26eKBxVz0OTQ" name="getCurrentDirectory" method="_sFs1ubkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2mCobkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2mCorkWEe26eKBxVz0OTQ" name="createFile" method="_sFs1u7kWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGNzArkWEe26eKBxVz0OTQ">
                  <body>Build the name extension used for all files created by this tool. The nameExtension will be&#xD;
   * added to the base input file name so that all of the output files can be associated with the&#xD;
   * input file The file naming pattern is: baseFileNameFileType-NonDefaultParameterList where&#xD;
   * FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray Default parameters are&#xD;
   * not identified in the NameExtension All parameters used to create the file, should be listed&#xD;
   * near the top of the file in the Parameter Section, followed by the file contents.&#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_r2mCo7kWEe26eKBxVz0OTQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2mCpLkWEe26eKBxVz0OTQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2mCpbkWEe26eKBxVz0OTQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2mCprkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2mCp7kWEe26eKBxVz0OTQ" name="createFile" method="_sFtcsLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2mpsLkWEe26eKBxVz0OTQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2mpsbkWEe26eKBxVz0OTQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2mpsrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2mps7kWEe26eKBxVz0OTQ" name="createDirectory" method="_sFtctLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2mptLkWEe26eKBxVz0OTQ" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2nQwLkWEe26eKBxVz0OTQ" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2nQwbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2nQwrkWEe26eKBxVz0OTQ" name="writeFile" method="_sFtcuLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2nQw7kWEe26eKBxVz0OTQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2nQxLkWEe26eKBxVz0OTQ" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2nQxbkWEe26eKBxVz0OTQ" name="readFile" method="_sFtcu7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2nQxrkWEe26eKBxVz0OTQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2n30LkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r2n30bkWEe26eKBxVz0OTQ" name="Flow">
              <ownedComment xmi:id="_sGNzA7kWEe26eKBxVz0OTQ">
                <body>Flow is a java class in which the user creates a flow object based on the graph file provided.&#xD;
The flows, edges, link transmission and total cost are all added to separate ArrayLists which are stored and can&#xD;
be accessed if needed. Methods inside the class allow the user to manipulate certain aspects of the flow and return&#xD;
certain values.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_sCYb4rkWEe26eKBxVz0OTQ" general="_r45vwLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sE5kYLkWEe26eKBxVz0OTQ" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sE5kYbkWEe26eKBxVz0OTQ" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE5kYrkWEe26eKBxVz0OTQ" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sE5kY7kWEe26eKBxVz0OTQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE5kZLkWEe26eKBxVz0OTQ" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sE5kZbkWEe26eKBxVz0OTQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE5kZrkWEe26eKBxVz0OTQ" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sE5kZ7kWEe26eKBxVz0OTQ" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE5kaLkWEe26eKBxVz0OTQ" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sE6LcLkWEe26eKBxVz0OTQ" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE6LcbkWEe26eKBxVz0OTQ" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sE6LcrkWEe26eKBxVz0OTQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE6Lc7kWEe26eKBxVz0OTQ" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sE6LdLkWEe26eKBxVz0OTQ" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE6LdrkWEe26eKBxVz0OTQ" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE6ygLkWEe26eKBxVz0OTQ" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE6ygrkWEe26eKBxVz0OTQ" name="nodes" visibility="package" type="_sCBPgLkWEe26eKBxVz0OTQ" association="_sGwlkLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sE7ZkLkWEe26eKBxVz0OTQ" name="linkTxAndTotalCost" visibility="package" type="_sCBPgLkWEe26eKBxVz0OTQ" association="_sGwlk7kWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sE7Zk7kWEe26eKBxVz0OTQ" name="edges" visibility="package" type="_sCBPgLkWEe26eKBxVz0OTQ" association="_sGwllrkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sE8AorkWEe26eKBxVz0OTQ" name="nodePredecessor" visibility="package" type="_r3ASULkWEe26eKBxVz0OTQ" association="_sGxMobkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sE8ApLkWEe26eKBxVz0OTQ" name="edgePredecessor" visibility="package" type="_r2eG07kWEe26eKBxVz0OTQ" association="_sGxMpLkWEe26eKBxVz0OTQ"/>
              <interfaceRealization xmi:id="_sD--YLkWEe26eKBxVz0OTQ" client="_r2n30bkWEe26eKBxVz0OTQ" supplier="_sDyKErkWEe26eKBxVz0OTQ" contract="_sDyKErkWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFtcvrkWEe26eKBxVz0OTQ" name="Flow" specification="_r2pF8LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFtcv7kWEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFtcwLkWEe26eKBxVz0OTQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFtcwbkWEe26eKBxVz0OTQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFtcwrkWEe26eKBxVz0OTQ" type="_r2n30bkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 	this.index = index;&#xD;
     /*&#xD;
      *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
      *  on flow updated based on flow length and reliability parameters&#xD;
      */&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges  = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();	&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFtcw7kWEe26eKBxVz0OTQ" name="Flow" specification="_r2ptBrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFtcxLkWEe26eKBxVz0OTQ" type="_r2n30bkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	this.index = DEFAULT_INDEX;&#xD;
 	/*&#xD;
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
 	 *  on flow updated based on flow length and reliability parameters&#xD;
 	 */&#xD;
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 	this.nodes = new ArrayList&lt;>();&#xD;
 	this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 	this.edges = new ArrayList&lt;>();&#xD;
 	this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFtcxbkWEe26eKBxVz0OTQ" name="getInitialPriority" specification="_r2ptCrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFtcxrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFtcx7kWEe26eKBxVz0OTQ" name="getIndex" specification="_r2qUELkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFtcyLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFuDwLkWEe26eKBxVz0OTQ" name="getNumTxPerLink" specification="_r2qUErkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFuDwbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFuDwrkWEe26eKBxVz0OTQ" name="getNodes" specification="_r2qUFLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFuDw7kWEe26eKBxVz0OTQ" type="_sCBPgLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFuDxLkWEe26eKBxVz0OTQ" name="getEdges" specification="_r2q7ILkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFuDxbkWEe26eKBxVz0OTQ" type="_sCBPgLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFuDxrkWEe26eKBxVz0OTQ" name="addEdge" specification="_sCXNwLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFuDx7kWEe26eKBxVz0OTQ" name="edge" type="_r2eG07kWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFuDyLkWEe26eKBxVz0OTQ" name="addNode" specification="_sCXNwrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFuDybkWEe26eKBxVz0OTQ" name="node" type="_r3ASULkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFuDyrkWEe26eKBxVz0OTQ" name="getLinkTxAndTotalCost" specification="_r2q7IrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFuDy7kWEe26eKBxVz0OTQ" type="_sCBPgLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFuDzLkWEe26eKBxVz0OTQ" name="setInitialPriority" specification="_r2riMbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFuDzbkWEe26eKBxVz0OTQ" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFuDzrkWEe26eKBxVz0OTQ" name="setIndex" specification="_r2swULkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFuDz7kWEe26eKBxVz0OTQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFuq0LkWEe26eKBxVz0OTQ" name="setNumTxPerLink" specification="_r2swUrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFuq0bkWEe26eKBxVz0OTQ" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFuq0rkWEe26eKBxVz0OTQ" name="setNodes" specification="_sEAzkLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFuq07kWEe26eKBxVz0OTQ" name="nodes" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFuq1LkWEe26eKBxVz0OTQ" name="setLinkTxAndTotalCost" specification="_sEAzk7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFuq1bkWEe26eKBxVz0OTQ" name="linkTxAndTotalCost" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFuq1rkWEe26eKBxVz0OTQ" name="compareTo" specification="_sCX00bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFuq17kWEe26eKBxVz0OTQ" name="flow" type="_r2n30bkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFuq2LkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFuq2bkWEe26eKBxVz0OTQ" name="toString" specification="_r2swVLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFuq2rkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r2pF8LkWEe26eKBxVz0OTQ" name="Flow" visibility="package" method="_sFtcvrkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r2ptA7kWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r2ptBLkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_sGNzBLkWEe26eKBxVz0OTQ">
                  <body>Constructor that sets name, priority, and index of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_r2ptALkWEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2ptAbkWEe26eKBxVz0OTQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2ptArkWEe26eKBxVz0OTQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2ptBbkWEe26eKBxVz0OTQ" type="_r2n30bkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2ptBrkWEe26eKBxVz0OTQ" name="Flow" visibility="package" method="_sFtcw7kWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r2ptB7kWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r2ptCLkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_sGNzBbkWEe26eKBxVz0OTQ">
                  <body>Constructor</body>
                </ownedComment>
                <ownedParameter xmi:id="_r2ptCbkWEe26eKBxVz0OTQ" type="_r2n30bkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2ptCrkWEe26eKBxVz0OTQ" name="getInitialPriority" method="_sFtcxbkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGNzBrkWEe26eKBxVz0OTQ">
                  <body>Gets the initial priority of the flow.&#xD;
	 * &#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_r2ptC7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2qUELkWEe26eKBxVz0OTQ" name="getIndex" method="_sFtcx7kWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGNzB7kWEe26eKBxVz0OTQ">
                  <body>Gets the index of the flow. The order in which the node was read from the &#xD;
	 * graph file.&#xD;
	 *  &#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_r2qUEbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2qUErkWEe26eKBxVz0OTQ" name="getNumTxPerLink" method="_sFuDwLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGNzCLkWEe26eKBxVz0OTQ">
                  <body>Gets the number of transmissions per link of the flow.&#xD;
	 * Defaulted to 1.&#xD;
	 * &#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_r2qUE7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2qUFLkWEe26eKBxVz0OTQ" name="getNodes" method="_sFuDwrkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGNzCbkWEe26eKBxVz0OTQ">
                  <body>Gets an ArrayList of nodes in the flow.&#xD;
	 * &#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_sD_lcLkWEe26eKBxVz0OTQ" type="_sCBPgLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2q7ILkWEe26eKBxVz0OTQ" name="getEdges" method="_sFuDxLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGNzCrkWEe26eKBxVz0OTQ">
                  <body>Gets and ArrayList of edges in the flow.&#xD;
	 * &#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_sD_lcbkWEe26eKBxVz0OTQ" type="_sCBPgLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2q7IrkWEe26eKBxVz0OTQ" name="getLinkTxAndTotalCost" method="_sFuDyrkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGNzDbkWEe26eKBxVz0OTQ">
                  <body>Gets the link transmission and total cost of the flow.&#xD;
	 * &#xD;
	 * @return ArrayList of link transmission and total cost values.</body>
                </ownedComment>
                <ownedParameter xmi:id="_sEAMgLkWEe26eKBxVz0OTQ" type="_sCBPgLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2riMbkWEe26eKBxVz0OTQ" name="setInitialPriority" method="_sFuDzLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGNzDrkWEe26eKBxVz0OTQ">
                  <body>Sets the initial priority of the flow. Default is -1.&#xD;
	 * &#xD;
	 * @param initialPriority the initial priority to be set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r2riMrkWEe26eKBxVz0OTQ" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2swULkWEe26eKBxVz0OTQ" name="setIndex" method="_sFuDzrkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGNzD7kWEe26eKBxVz0OTQ">
                  <body>Sets the index of a node in the flow. Default is 0.&#xD;
	 * &#xD;
	 * @param index the index to be set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r2swUbkWEe26eKBxVz0OTQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2swUrkWEe26eKBxVz0OTQ" name="setNumTxPerLink" method="_sFuq0LkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGNzELkWEe26eKBxVz0OTQ">
                  <body>Sets the number of transmissions per link. Determined by the fault model.&#xD;
	 * &#xD;
	 * @param numTxPerLink the number of transmissions per link to be set.</body>
                </ownedComment>
                <ownedParameter xmi:id="_r2swU7kWEe26eKBxVz0OTQ" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2swVLkWEe26eKBxVz0OTQ" name="toString" method="_sFuq2bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2tXYLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sCXNwLkWEe26eKBxVz0OTQ" name="addEdge" method="_sFuDxrkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGNzC7kWEe26eKBxVz0OTQ">
                  <body>Add an edge to the flow by first setting the edge predecessor, adding the edge, then&#xD;
	 * updating the predecessor for the next node.&#xD;
	 * &#xD;
	 * @param edge the edge to added</body>
                </ownedComment>
                <ownedParameter xmi:id="_sCXNwbkWEe26eKBxVz0OTQ" name="edge" type="_r2eG07kWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCXNwrkWEe26eKBxVz0OTQ" name="addNode" method="_sFuDyLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGNzDLkWEe26eKBxVz0OTQ">
                  <body>Add a node to the flow by first setting its predecessor, adding the node, then &#xD;
	 * updating the predecessor for the next node.&#xD;
	 * &#xD;
	 * @param node the node to be added</body>
                </ownedComment>
                <ownedParameter xmi:id="_sCX00LkWEe26eKBxVz0OTQ" name="node" type="_r3ASULkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCX00bkWEe26eKBxVz0OTQ" name="compareTo" method="_sFuq1rkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCX00rkWEe26eKBxVz0OTQ" name="flow" type="_r2n30bkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCX007kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sEAzkLkWEe26eKBxVz0OTQ" name="setNodes" method="_sFuq0rkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGNzEbkWEe26eKBxVz0OTQ">
                  <body>Sets a list of nodes to the flow.&#xD;
	 * &#xD;
	 * @param nodes the ArrayList of nodes to be set.</body>
                </ownedComment>
                <ownedParameter xmi:id="_sEAzkbkWEe26eKBxVz0OTQ" name="nodes" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sEAzk7kWEe26eKBxVz0OTQ" name="setLinkTxAndTotalCost" method="_sFuq1LkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGNzErkWEe26eKBxVz0OTQ">
                  <body>Sets a list of link transmission and total cost to the flow.&#xD;
	 * &#xD;
	 * @param linkTxAndTotalCost the ArrayList of values to set.</body>
                </ownedComment>
                <ownedParameter xmi:id="_sEAzlLkWEe26eKBxVz0OTQ" name="linkTxAndTotalCost" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r2vzoLkWEe26eKBxVz0OTQ" name="FlowMap">
              <ownedComment xmi:id="_sGNzE7kWEe26eKBxVz0OTQ">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_sCZqALkWEe26eKBxVz0OTQ" general="_r177ULkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sE8nsLkWEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sE8nsbkWEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r2wasLkWEe26eKBxVz0OTQ" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_sGOaELkWEe26eKBxVz0OTQ">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_sCaRELkWEe26eKBxVz0OTQ" general="_r177ULkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sE8nsrkWEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sE8ns7kWEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r2wasbkWEe26eKBxVz0OTQ" name="GraphViz">
              <ownedComment xmi:id="_sGOaEbkWEe26eKBxVz0OTQ">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_sCbfPLkWEe26eKBxVz0OTQ" general="_r4I6wLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sE8ntLkWEe26eKBxVz0OTQ" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sE8ntbkWEe26eKBxVz0OTQ" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE8ntrkWEe26eKBxVz0OTQ" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sE9OwLkWEe26eKBxVz0OTQ" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE9OwbkWEe26eKBxVz0OTQ" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE9Ow7kWEe26eKBxVz0OTQ" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE910bkWEe26eKBxVz0OTQ" name="wfm" visibility="package" type="_r2jmYLkWEe26eKBxVz0OTQ" association="_sGxzsbkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sE9107kWEe26eKBxVz0OTQ" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE911bkWEe26eKBxVz0OTQ" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE9117kWEe26eKBxVz0OTQ" name="gv" visibility="package" type="_r2wasbkWEe26eKBxVz0OTQ" association="_sGxztLkWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFvR4LkWEe26eKBxVz0OTQ" name="GraphViz" specification="_sCa4ILkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFvR4bkWEe26eKBxVz0OTQ" name="wfm" type="_r2jmYLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFvR4rkWEe26eKBxVz0OTQ" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFvR47kWEe26eKBxVz0OTQ" type="_r2wasbkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFvR5LkWEe26eKBxVz0OTQ" name="GraphViz" specification="_sCbfNLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFvR5bkWEe26eKBxVz0OTQ" name="wfm" type="_r2jmYLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFvR5rkWEe26eKBxVz0OTQ" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFvR57kWEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFvR6LkWEe26eKBxVz0OTQ" type="_r2wasbkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFvR6bkWEe26eKBxVz0OTQ" name="visualization" specification="_r2xBwLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFvR6rkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFvR67kWEe26eKBxVz0OTQ" name="initializeGraphVizContent" specification="_r2xo07kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFvR7LkWEe26eKBxVz0OTQ" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFvR7bkWEe26eKBxVz0OTQ" name="finalizeGraphVizContent" specification="_r2xo1bkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFvR7rkWEe26eKBxVz0OTQ" name="getGraphVizContent" specification="_r2xo1rkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFvR77kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFvR8LkWEe26eKBxVz0OTQ" name="createGraphVizContent" specification="_r2yP4bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFvR8bkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFvR8rkWEe26eKBxVz0OTQ" name="addFlowToGraphViz" specification="_r2yP47kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFvR87kWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFv48LkWEe26eKBxVz0OTQ" name="addSrcNodeToGraphViz" specification="_r2yP5bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFv48bkWEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFv48rkWEe26eKBxVz0OTQ" name="addSnkNodeToGraphViz" specification="_r2yP57kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFv487kWEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFv49LkWEe26eKBxVz0OTQ" name="finalizeCurrentFlowInGraphViz" specification="_r2y28LkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFv49bkWEe26eKBxVz0OTQ" name="addNodeName" specification="_r2y28bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFv49rkWEe26eKBxVz0OTQ" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFv497kWEe26eKBxVz0OTQ" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r2xBwLkWEe26eKBxVz0OTQ" name="visualization" method="_sFvR6bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCbfO7kWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r2xo07kWEe26eKBxVz0OTQ" name="initializeGraphVizContent" method="_sFvR67kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2xo1LkWEe26eKBxVz0OTQ" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2xo1bkWEe26eKBxVz0OTQ" name="finalizeGraphVizContent" method="_sFvR7bkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r2xo1rkWEe26eKBxVz0OTQ" name="getGraphVizContent" method="_sFvR7rkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGOaErkWEe26eKBxVz0OTQ">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_r2yP4LkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2yP4bkWEe26eKBxVz0OTQ" name="createGraphVizContent" method="_sFvR8LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2yP4rkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2yP47kWEe26eKBxVz0OTQ" name="addFlowToGraphViz" method="_sFvR8rkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2yP5LkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2yP5bkWEe26eKBxVz0OTQ" name="addSrcNodeToGraphViz" method="_sFv48LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2yP5rkWEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2yP57kWEe26eKBxVz0OTQ" name="addSnkNodeToGraphViz" method="_sFv48rkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2yP6LkWEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r2y28LkWEe26eKBxVz0OTQ" name="finalizeCurrentFlowInGraphViz" method="_sFv49LkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r2y28bkWEe26eKBxVz0OTQ" name="addNodeName" visibility="private" method="_sFv49bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r2y28rkWEe26eKBxVz0OTQ" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r2y287kWEe26eKBxVz0OTQ" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sCa4ILkWEe26eKBxVz0OTQ" name="GraphViz" visibility="package" method="_sFvR4LkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sCbfMbkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sCbfMrkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sCa4IbkWEe26eKBxVz0OTQ" name="wfm" type="_r2jmYLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCbfMLkWEe26eKBxVz0OTQ" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sCbfM7kWEe26eKBxVz0OTQ" type="_r2wasbkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCbfNLkWEe26eKBxVz0OTQ" name="GraphViz" visibility="package" method="_sFvR5LkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sCbfOLkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sCbfObkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sCbfNbkWEe26eKBxVz0OTQ" name="wfm" type="_r2jmYLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCbfNrkWEe26eKBxVz0OTQ" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sCbfN7kWEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sCbfOrkWEe26eKBxVz0OTQ" type="_r2wasbkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r20FELkWEe26eKBxVz0OTQ" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_sGOaE7kWEe26eKBxVz0OTQ">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_sECBsLkWEe26eKBxVz0OTQ" general="_sCdUY7kWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sE-c4bkWEe26eKBxVz0OTQ" name="gv" visibility="package" type="_r2wasbkWEe26eKBxVz0OTQ" association="_sGyawbkWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFv4-LkWEe26eKBxVz0OTQ" name="GraphVizListener" specification="_sCeigLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFv4-bkWEe26eKBxVz0OTQ" name="gv" type="_r2wasbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFv4-rkWEe26eKBxVz0OTQ" type="_r20FELkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFv4-7kWEe26eKBxVz0OTQ" name="buildGraphViz" specification="_sCeihbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFv4_LkWEe26eKBxVz0OTQ" name="gv" type="_r2wasbkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFv4_bkWEe26eKBxVz0OTQ" name="enterWarpName" specification="_sCfJkbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFv4_rkWEe26eKBxVz0OTQ" name="ctx" type="_sCeih7kWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFv4_7kWEe26eKBxVz0OTQ" name="exitWarp" specification="_sCfwo7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFv5ALkWEe26eKBxVz0OTQ" name="ctx" type="_sCfwobkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFv5AbkWEe26eKBxVz0OTQ" name="enterFlowName" specification="_sCg-wbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFv5ArkWEe26eKBxVz0OTQ" name="ctx" type="_sCgXs7kWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFv5A7kWEe26eKBxVz0OTQ" name="exitSrcNode" specification="_sChl0bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFv5BLkWEe26eKBxVz0OTQ" name="ctx" type="_sCg-xrkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFv5BbkWEe26eKBxVz0OTQ" name="exitSnkNode" specification="_sCiM4bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFv5BrkWEe26eKBxVz0OTQ" name="ctx" type="_sChl1rkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFwgALkWEe26eKBxVz0OTQ" name="exitFlow" specification="_sCjbALkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFwgAbkWEe26eKBxVz0OTQ" name="ctx" type="_sCiz8rkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_sCeigLkWEe26eKBxVz0OTQ" name="GraphVizListener" visibility="private" method="_sFv4-LkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sCeigrkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sCeig7kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sCeigbkWEe26eKBxVz0OTQ" name="gv" type="_r2wasbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCeihLkWEe26eKBxVz0OTQ" type="_r20FELkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCeihbkWEe26eKBxVz0OTQ" name="buildGraphViz" isStatic="true" method="_sFv4-7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCeihrkWEe26eKBxVz0OTQ" name="gv" type="_r2wasbkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCfJkbkWEe26eKBxVz0OTQ" name="enterWarpName" method="_sFv4_bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCfJkrkWEe26eKBxVz0OTQ" name="ctx" type="_sCeih7kWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCfwo7kWEe26eKBxVz0OTQ" name="exitWarp" method="_sFv4_7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCfwpLkWEe26eKBxVz0OTQ" name="ctx" type="_sCfwobkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCg-wbkWEe26eKBxVz0OTQ" name="enterFlowName" method="_sFv5AbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCg-wrkWEe26eKBxVz0OTQ" name="ctx" type="_sCgXs7kWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sChl0bkWEe26eKBxVz0OTQ" name="exitSrcNode" method="_sFv5A7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sChl0rkWEe26eKBxVz0OTQ" name="ctx" type="_sCg-xrkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCiM4bkWEe26eKBxVz0OTQ" name="exitSnkNode" method="_sFv5BbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCiM4rkWEe26eKBxVz0OTQ" name="ctx" type="_sChl1rkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCjbALkWEe26eKBxVz0OTQ" name="exitFlow" method="_sFwgALkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCjbAbkWEe26eKBxVz0OTQ" name="ctx" type="_sCiz8rkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r21TMLkWEe26eKBxVz0OTQ" name="GuiVisualization">
              <ownedComment xmi:id="_sGOaFLkWEe26eKBxVz0OTQ">
                <body>GuiVisualization Class to create a Java Swing window that displays a table of data with column&#xD;
headings.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sE-c47kWEe26eKBxVz0OTQ" name="frame" visibility="package" type="_sCkCErkWEe26eKBxVz0OTQ" association="_sGyaxLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sE-c5bkWEe26eKBxVz0OTQ" name="jtable" visibility="package" type="_sCkpI7kWEe26eKBxVz0OTQ" association="_sGzB0LkWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFwgArkWEe26eKBxVz0OTQ" name="GuiVisualization" specification="_r216QLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFwgA7kWEe26eKBxVz0OTQ" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFwgBLkWEe26eKBxVz0OTQ" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sFwgBbkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFwgBrkWEe26eKBxVz0OTQ" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sFwgB7kWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFwgCLkWEe26eKBxVz0OTQ" type="_r21TMLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>// Frame initialization&#xD;
 frame = new JFrame();&#xD;
&#xD;
 // Frame Title&#xD;
 frame.setTitle(title);&#xD;
&#xD;
 // Initializing the JTable with input parameters&#xD;
 jtable = new JTable(table, columnNames);&#xD;
 jtable.setBounds(30, 40, 200, 300); // default size&#xD;
 // resizeColumnWidth(jtable); // uncomment to auto size column widths&#xD;
&#xD;
 // attached the table to a JScrollPane and then add both to the frame&#xD;
 JScrollPane sp = new JScrollPane(jtable); // gives table a vertical scrollbar&#xD;
 frame.add(sp);&#xD;
 // Frame Size&#xD;
 frame.setSize(500, 200);&#xD;
 jtable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); // creates horizontal scrollbar&#xD;
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
 // Frame Visible = false&#xD;
 frame.setVisible(false);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFwgCbkWEe26eKBxVz0OTQ" name="setVisible" specification="_r22hU7kWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>frame.setVisible(true);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFwgCrkWEe26eKBxVz0OTQ" name="resizeColumnWidth" specification="_sECowLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFwgC7kWEe26eKBxVz0OTQ" name="table" type="_sCkpI7kWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>final TableColumnModel columnModel = table.getColumnModel();&#xD;
 for (int column = 0; column &lt; table.getColumnCount(); column++) {&#xD;
   int width = 70; // Min width&#xD;
   for (int row = 0; row &lt; table.getRowCount(); row++) {&#xD;
     TableCellRenderer renderer = table.getCellRenderer(row, column);&#xD;
     Component comp = table.prepareRenderer(renderer, row, column);&#xD;
     width = Math.max(comp.getPreferredSize().width + 5, width);&#xD;
   }&#xD;
   if (width > 300)&#xD;
     width = 300;&#xD;
   columnModel.getColumn(column).setPreferredWidth(width);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r216QLkWEe26eKBxVz0OTQ" name="GuiVisualization" method="_sFwgArkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r216RLkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r216RbkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_sGOaFbkWEe26eKBxVz0OTQ">
                  <body>Constructor to create a Java Swing Window for a table of data with column headings. The window&#xD;
   * is initially not visible, and is made visible by a call to setVisible().&#xD;
   * &#xD;
   * @param title Window title&#xD;
   * @param columnNames Column heading names&#xD;
   * @param table table of strings representing the data</body>
                </ownedComment>
                <ownedParameter xmi:id="_r216QbkWEe26eKBxVz0OTQ" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r216QrkWEe26eKBxVz0OTQ" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r22hULkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r216Q7kWEe26eKBxVz0OTQ" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r22hUbkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r216RrkWEe26eKBxVz0OTQ" type="_r21TMLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r22hU7kWEe26eKBxVz0OTQ" name="setVisible" method="_sFwgCbkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGOaFrkWEe26eKBxVz0OTQ">
                  <body>Make the table visible.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_sECowLkWEe26eKBxVz0OTQ" name="resizeColumnWidth" visibility="private" method="_sFwgCrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sEDP0LkWEe26eKBxVz0OTQ" name="table" type="_sCkpI7kWEe26eKBxVz0OTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r23vcLkWEe26eKBxVz0OTQ" name="InputGraphFile">
              <ownedComment xmi:id="_sGOaF7kWEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sE_D8bkWEe26eKBxVz0OTQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sE_D8rkWEe26eKBxVz0OTQ" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE_D87kWEe26eKBxVz0OTQ" name="wfm" visibility="private" type="_r2jmYLkWEe26eKBxVz0OTQ" association="_sGzB07kWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sE_D9bkWEe26eKBxVz0OTQ" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE_D9rkWEe26eKBxVz0OTQ" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sE_rAbkWEe26eKBxVz0OTQ" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sE_rArkWEe26eKBxVz0OTQ" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFwgDLkWEe26eKBxVz0OTQ" name="InputGraphFile" specification="_sCnscLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFwgDbkWEe26eKBxVz0OTQ" name="fm" type="_r2jmYLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFwgDrkWEe26eKBxVz0OTQ" type="_r23vcLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFwgD7kWEe26eKBxVz0OTQ" name="InputGraphFile" specification="_sCnsdbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFwgELkWEe26eKBxVz0OTQ" name="fm" type="_r2jmYLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFwgEbkWEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFwgErkWEe26eKBxVz0OTQ" type="_r23vcLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFwgE7kWEe26eKBxVz0OTQ" name="setGraphFileName" specification="_r23vcbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFwgFLkWEe26eKBxVz0OTQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFwgFbkWEe26eKBxVz0OTQ" name="verifyGraphFileName" specification="_r24WgLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFwgFrkWEe26eKBxVz0OTQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFxHELkWEe26eKBxVz0OTQ" name="readGraphFile" specification="_r24WgrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFxHEbkWEe26eKBxVz0OTQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFxHErkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFxHE7kWEe26eKBxVz0OTQ" name="getInputGraphFileName" specification="_r24WhbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFxHFLkWEe26eKBxVz0OTQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFxHFbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFxHFrkWEe26eKBxVz0OTQ" name="readGraphFileContents" specification="_r249kLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFxHF7kWEe26eKBxVz0OTQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFxHGLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFxHGbkWEe26eKBxVz0OTQ" name="printVerboseMessage" specification="_r249k7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFxHGrkWEe26eKBxVz0OTQ" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFxHG7kWEe26eKBxVz0OTQ" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFxHHLkWEe26eKBxVz0OTQ" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r23vcbkWEe26eKBxVz0OTQ" name="setGraphFileName" visibility="private" method="_sFwgE7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r23vcrkWEe26eKBxVz0OTQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r24WgLkWEe26eKBxVz0OTQ" name="verifyGraphFileName" visibility="private" method="_sFwgFbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r24WgbkWEe26eKBxVz0OTQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r24WgrkWEe26eKBxVz0OTQ" name="readGraphFile" method="_sFxHELkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r24Wg7kWEe26eKBxVz0OTQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r24WhLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r24WhbkWEe26eKBxVz0OTQ" name="getInputGraphFileName" visibility="private" method="_sFxHE7kWEe26eKBxVz0OTQ" raisedException="_sEDP0bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r24WhrkWEe26eKBxVz0OTQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r24Wh7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r249kLkWEe26eKBxVz0OTQ" name="readGraphFileContents" visibility="private" method="_sFxHFrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r249kbkWEe26eKBxVz0OTQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r249krkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r249k7kWEe26eKBxVz0OTQ" name="printVerboseMessage" visibility="private" method="_sFxHGbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r249lLkWEe26eKBxVz0OTQ" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r249lbkWEe26eKBxVz0OTQ" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r249lrkWEe26eKBxVz0OTQ" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sCnscLkWEe26eKBxVz0OTQ" name="InputGraphFile" method="_sFwgDLkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sCnscrkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sCnsc7kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sCnscbkWEe26eKBxVz0OTQ" name="fm" type="_r2jmYLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCnsdLkWEe26eKBxVz0OTQ" type="_r23vcLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCnsdbkWEe26eKBxVz0OTQ" name="InputGraphFile" method="_sFwgD7kWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sCnseLkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sCnsebkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sCnsdrkWEe26eKBxVz0OTQ" name="fm" type="_r2jmYLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCnsd7kWEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sCnserkWEe26eKBxVz0OTQ" type="_r23vcLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r25koLkWEe26eKBxVz0OTQ" name="InstructionTimeSlot">
              <generalization xmi:id="_sCo6kLkWEe26eKBxVz0OTQ" general="_r3vSILkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFASELkWEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFASEbkWEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFxHHbkWEe26eKBxVz0OTQ" name="InstructionTimeSlot" specification="_r26LsLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFxHHrkWEe26eKBxVz0OTQ" type="_r25koLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFxHH7kWEe26eKBxVz0OTQ" name="InstructionTimeSlot" specification="_r26LtLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFxHILkWEe26eKBxVz0OTQ" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFxHIbkWEe26eKBxVz0OTQ" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFxHIrkWEe26eKBxVz0OTQ" type="_r25koLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFxHI7kWEe26eKBxVz0OTQ" name="InstructionTimeSlot" specification="_r27Z0LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFxHJLkWEe26eKBxVz0OTQ" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sFxHJbkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFxHJrkWEe26eKBxVz0OTQ" type="_r25koLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r26LsLkWEe26eKBxVz0OTQ" name="InstructionTimeSlot" method="_sFxHHbkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r26LsbkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r26LsrkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r26Ls7kWEe26eKBxVz0OTQ" type="_r25koLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r26LtLkWEe26eKBxVz0OTQ" name="InstructionTimeSlot" visibility="package" method="_sFxHH7kWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r26ywLkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r26ywbkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r26LtbkWEe26eKBxVz0OTQ" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r26LtrkWEe26eKBxVz0OTQ" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r26ywrkWEe26eKBxVz0OTQ" type="_r25koLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r27Z0LkWEe26eKBxVz0OTQ" name="InstructionTimeSlot" visibility="package" method="_sFxHI7kWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r27Z0rkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r27Z07kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r27Z0bkWEe26eKBxVz0OTQ" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r27Z1bkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r27Z1LkWEe26eKBxVz0OTQ" type="_r25koLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r27Z1rkWEe26eKBxVz0OTQ" name="LatencyAnalysis">
              <ownedComment xmi:id="_sGOaGLkWEe26eKBxVz0OTQ">
                <body>@author sgoddard2&#xD;
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sFASErkWEe26eKBxVz0OTQ" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFASE7kWEe26eKBxVz0OTQ" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFASFbkWEe26eKBxVz0OTQ" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFASF7kWEe26eKBxVz0OTQ" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFA5ILkWEe26eKBxVz0OTQ" name="latencyReport" visibility="private" type="_r2c4sLkWEe26eKBxVz0OTQ" association="_sGzB1rkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFA5IrkWEe26eKBxVz0OTQ" name="program" visibility="private" type="_r3VCcLkWEe26eKBxVz0OTQ" association="_sGzo4bkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFA5JLkWEe26eKBxVz0OTQ" name="workload" visibility="private" type="_r4b1sLkWEe26eKBxVz0OTQ" association="_sGzo5LkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFA5JrkWEe26eKBxVz0OTQ" name="programTable" visibility="private" type="_r3h2wLkWEe26eKBxVz0OTQ" association="_sG0P8bkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFA5KLkWEe26eKBxVz0OTQ" name="nodeIndex" visibility="private" type="_sCABYLkWEe26eKBxVz0OTQ" association="_sG0P9LkWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFxHJ7kWEe26eKBxVz0OTQ" name="LatencyAnalysis" specification="_sCqIsLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFxHKLkWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFxHKbkWEe26eKBxVz0OTQ" type="_r27Z1rkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = warp.toProgram();&#xD;
 this.workload = warp.toWorkload();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFxHKrkWEe26eKBxVz0OTQ" name="LatencyAnalysis" specification="_sCqItbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFxHK7kWEe26eKBxVz0OTQ" name="program" type="_r3VCcLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFxHLLkWEe26eKBxVz0OTQ" type="_r27Z1rkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFxuILkWEe26eKBxVz0OTQ" name="latencyReport" specification="_r28A4LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFxuIbkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>/*&#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
&#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {&#xD;
   var time = 0;&#xD;
&#xD;
   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   /* get snk of last link in the flow, which is also the Flow snk node */&#xD;
   String snk = nodes[flowSnkIndex];&#xD;
   /* get the src of last link in the flow */&#xD;
   String src = nodes[flowSnkIndex - 1];&#xD;
   /* get (column) indexes into programTable of these nodes */&#xD;
   var snkIndex = nodeIndex.get(snk);&#xD;
   var srcIndex = nodeIndex.get(src);&#xD;
   /* get the array containing the number of transmissions required for each link in the flow */&#xD;
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
   /* get the number of transmission required for the last link in the flow */&#xD;
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
   var instance = 0;&#xD;
   while (time &lt; workload.getHyperPeriod()) {&#xD;
     /* get next release time and absolute deadline of the flow */&#xD;
     var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
     // var latency = 0;&#xD;
     time = releaseTime;&#xD;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
     while (time &lt; nextReleaseTime) {&#xD;
       /* get instruction strings at these to locations */&#xD;
       String instr1 = programTable.get(time, srcIndex);&#xD;
       String instr2 = programTable.get(time, snkIndex);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
       if (numTxProcessed == numTxRequired) {&#xD;
         /*&#xD;
          * all required Tx attempts have been made compute and record latency&#xD;
          */&#xD;
         var latency = time - releaseTime + 1;&#xD;
         // report latency&#xD;
         String latencyMsg =&#xD;
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
         if (latency > deadline) {&#xD;
           /* deadline missed, so color the text red */&#xD;
           latencyMsg += DEADLINE_MISS;&#xD;
         }&#xD;
         latencyMsg += &quot;\n&quot;;&#xD;
         latencyReport.add(latencyMsg);&#xD;
         time = nextReleaseTime;&#xD;
       } else {&#xD;
         time++;&#xD;
       }&#xD;
&#xD;
     }&#xD;
     if (numTxProcessed &lt; numTxRequired) {&#xD;
       /*&#xD;
        * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
        * printed with the schedulers built&#xD;
        */&#xD;
       String latencyMsg =&#xD;
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
               flowName, instance);&#xD;
       latencyReport.add(latencyMsg);&#xD;
     }&#xD;
     instance++;&#xD;
   }&#xD;
   String flowSeparator = FLOW_SEPARATOR;&#xD;
   latencyReport.add(flowSeparator);&#xD;
 }&#xD;
 return latencyReport;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFxuIrkWEe26eKBxVz0OTQ" name="numMatchingTx" specification="_r28n8LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFxuI7kWEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFxuJLkWEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFxuJbkWEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFxuJrkWEe26eKBxVz0OTQ" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFxuJ7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var dsl = new WarpDSL();&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r28A4LkWEe26eKBxVz0OTQ" name="latencyReport" method="_sFxuILkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCqvw7kWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r28n8LkWEe26eKBxVz0OTQ" name="numMatchingTx" method="_sFxuIrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r28n8bkWEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r28n8rkWEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r28n87kWEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r28n9LkWEe26eKBxVz0OTQ" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r28n9bkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sCqIsLkWEe26eKBxVz0OTQ" name="LatencyAnalysis" visibility="package" method="_sFxHJ7kWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sCqIsrkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sCqIs7kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sCqIsbkWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCqItLkWEe26eKBxVz0OTQ" type="_r27Z1rkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCqItbkWEe26eKBxVz0OTQ" name="LatencyAnalysis" visibility="package" method="_sFxHKrkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sCqvwLkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sCqvwbkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sCqItrkWEe26eKBxVz0OTQ" name="program" type="_r3VCcLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCqvwrkWEe26eKBxVz0OTQ" type="_r27Z1rkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r292ELkWEe26eKBxVz0OTQ" name="LatencyVisualization">
              <ownedComment xmi:id="_sGPBILkWEe26eKBxVz0OTQ">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2022 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.3&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_sCrW1bkWEe26eKBxVz0OTQ" general="_r4I6wLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFBgMbkWEe26eKBxVz0OTQ" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFBgMrkWEe26eKBxVz0OTQ" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFBgM7kWEe26eKBxVz0OTQ" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFBgNLkWEe26eKBxVz0OTQ" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFBgNbkWEe26eKBxVz0OTQ" name="warp" visibility="private" type="_r4SEsLkWEe26eKBxVz0OTQ" association="_sG03AbkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFBgN7kWEe26eKBxVz0OTQ" name="la" visibility="private" type="_r27Z1rkWEe26eKBxVz0OTQ" association="_sG03BLkWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFxuKLkWEe26eKBxVz0OTQ" name="LatencyVisualization" specification="_sCrW0LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFxuKbkWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFxuKrkWEe26eKBxVz0OTQ" type="_r292ELkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_sCrW0LkWEe26eKBxVz0OTQ" name="LatencyVisualization" visibility="package" method="_sFxuKLkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sCrW0rkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sCrW07kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sCrW0bkWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCrW1LkWEe26eKBxVz0OTQ" type="_r292ELkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r2-dILkWEe26eKBxVz0OTQ" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_sEFFALkWEe26eKBxVz0OTQ" client="_r2-dILkWEe26eKBxVz0OTQ" supplier="_sCSVQ7kWEe26eKBxVz0OTQ" contract="_sCSVQ7kWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFxuK7kWEe26eKBxVz0OTQ" name="compare" specification="_sEFsELkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFxuLLkWEe26eKBxVz0OTQ" name="obj1" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFxuLbkWEe26eKBxVz0OTQ" name="obj2" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFxuLrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_sEFsELkWEe26eKBxVz0OTQ" name="compare" method="_sFxuK7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sEFsEbkWEe26eKBxVz0OTQ" name="obj1" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEFsErkWEe26eKBxVz0OTQ" name="obj2" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEGTILkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r2_EMbkWEe26eKBxVz0OTQ" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_sEGTJLkWEe26eKBxVz0OTQ" client="_r2_EMbkWEe26eKBxVz0OTQ" supplier="_sCSVQ7kWEe26eKBxVz0OTQ" contract="_sCSVQ7kWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFxuL7kWEe26eKBxVz0OTQ" name="compare" specification="_sEHhQbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFxuMLkWEe26eKBxVz0OTQ" name="obj1" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFxuMbkWEe26eKBxVz0OTQ" name="obj2" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFxuMrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_sEHhQbkWEe26eKBxVz0OTQ" name="compare" method="_sFxuL7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sEHhQrkWEe26eKBxVz0OTQ" name="obj1" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEHhQ7kWEe26eKBxVz0OTQ" name="obj2" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEHhRLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r3ASULkWEe26eKBxVz0OTQ" name="Node">
              <generalization xmi:id="_sCtMBLkWEe26eKBxVz0OTQ" general="_r45vwLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFCHQbkWEe26eKBxVz0OTQ" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFCHQrkWEe26eKBxVz0OTQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFCHQ7kWEe26eKBxVz0OTQ" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFCHRLkWEe26eKBxVz0OTQ" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFCHRbkWEe26eKBxVz0OTQ" name="edges" type="_sCBPgLkWEe26eKBxVz0OTQ" isReadOnly="true" association="_sG1eEbkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFCuUbkWEe26eKBxVz0OTQ" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sFCuUrkWEe26eKBxVz0OTQ" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_sEIIUrkWEe26eKBxVz0OTQ" client="_r3ASULkWEe26eKBxVz0OTQ" supplier="_sDyKErkWEe26eKBxVz0OTQ" contract="_sDyKErkWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFxuM7kWEe26eKBxVz0OTQ" name="Node" specification="_r3A5YLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFxuNLkWEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFxuNbkWEe26eKBxVz0OTQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFxuNrkWEe26eKBxVz0OTQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFxuN7kWEe26eKBxVz0OTQ" type="_r3ASULkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFxuOLkWEe26eKBxVz0OTQ" name="compareTo" specification="_sCsk8LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFxuObkWEe26eKBxVz0OTQ" name="node" type="_r3ASULkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFxuOrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFxuO7kWEe26eKBxVz0OTQ" name="toString" specification="_r3BgcLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFxuPLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFyVMLkWEe26eKBxVz0OTQ" name="addEdge" specification="_sCtMArkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFyVMbkWEe26eKBxVz0OTQ" name="edge" type="_r2eG07kWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFyVMrkWEe26eKBxVz0OTQ" name="addConflict" specification="_r3BgdbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFyVM7kWEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFyVNLkWEe26eKBxVz0OTQ" name="numEdges" specification="_r3CHgLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFyVNbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFyVNrkWEe26eKBxVz0OTQ" name="print" specification="_r3CHgrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFyVN7kWEe26eKBxVz0OTQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFyVOLkWEe26eKBxVz0OTQ" name="print" specification="_r3CukrkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r3A5YLkWEe26eKBxVz0OTQ" name="Node" visibility="package" method="_sFxuM7kWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r3A5ZLkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r3A5ZbkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r3A5YbkWEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3A5YrkWEe26eKBxVz0OTQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3A5Y7kWEe26eKBxVz0OTQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3A5ZrkWEe26eKBxVz0OTQ" type="_r3ASULkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3BgcLkWEe26eKBxVz0OTQ" name="toString" method="_sFxuO7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r3BgcbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r3BgdbkWEe26eKBxVz0OTQ" name="addConflict" method="_sFyVMrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r3BgdrkWEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r3CHgLkWEe26eKBxVz0OTQ" name="numEdges" method="_sFyVNLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r3CHgbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r3CHgrkWEe26eKBxVz0OTQ" name="print" method="_sFyVNrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r3CHg7kWEe26eKBxVz0OTQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r3CukrkWEe26eKBxVz0OTQ" name="print" method="_sFyVOLkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_sCsk8LkWEe26eKBxVz0OTQ" name="compareTo" method="_sFxuOLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCsk8bkWEe26eKBxVz0OTQ" name="node" type="_r3ASULkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCsk8rkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sCtMArkWEe26eKBxVz0OTQ" name="addEdge" method="_sFyVMLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCtMA7kWEe26eKBxVz0OTQ" name="edge" type="_r2eG07kWEe26eKBxVz0OTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r3DVoLkWEe26eKBxVz0OTQ" name="NodeMap">
              <ownedComment xmi:id="_sGPBIbkWEe26eKBxVz0OTQ">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_sCtzELkWEe26eKBxVz0OTQ" general="_r177ULkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFCuU7kWEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFCuVLkWEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r3D8sLkWEe26eKBxVz0OTQ" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_sGPBIrkWEe26eKBxVz0OTQ">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_sCuaJrkWEe26eKBxVz0OTQ" general="_r3y8gLkWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFyVObkWEe26eKBxVz0OTQ" name="NonPreemptiveSchedule" specification="_sCuaILkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFyVOrkWEe26eKBxVz0OTQ" name="poset" type="_r3HnELkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFyVO7kWEe26eKBxVz0OTQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFyVPLkWEe26eKBxVz0OTQ" type="_r3D8sLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_sCuaILkWEe26eKBxVz0OTQ" name="NonPreemptiveSchedule" visibility="package" method="_sFyVObkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sCuaI7kWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sCuaJLkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sCuaIbkWEe26eKBxVz0OTQ" name="poset" type="_r3HnELkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCuaIrkWEe26eKBxVz0OTQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sCuaJbkWEe26eKBxVz0OTQ" type="_r3D8sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r3EjwLkWEe26eKBxVz0OTQ" name="NotImplentedVisualization">
              <generalization xmi:id="_sCvBMLkWEe26eKBxVz0OTQ" general="_r4I6wLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFCuVbkWEe26eKBxVz0OTQ" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFCuVrkWEe26eKBxVz0OTQ" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFDVYLkWEe26eKBxVz0OTQ" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFDVYbkWEe26eKBxVz0OTQ" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFDVYrkWEe26eKBxVz0OTQ" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFDVY7kWEe26eKBxVz0OTQ" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFyVPbkWEe26eKBxVz0OTQ" name="NotImplentedVisualization" specification="_r3FK0LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFyVPrkWEe26eKBxVz0OTQ" type="_r3EjwLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFyVP7kWEe26eKBxVz0OTQ" name="NotImplentedVisualization" specification="_r3FK1LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFyVQLkWEe26eKBxVz0OTQ" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFyVQbkWEe26eKBxVz0OTQ" type="_r3EjwLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFyVQrkWEe26eKBxVz0OTQ" name="visualization" specification="_r3Fx4LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFyVQ7kWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r3FK0LkWEe26eKBxVz0OTQ" name="NotImplentedVisualization" visibility="package" method="_sFyVPbkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r3FK0bkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r3FK0rkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r3FK07kWEe26eKBxVz0OTQ" type="_r3EjwLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3FK1LkWEe26eKBxVz0OTQ" name="NotImplentedVisualization" visibility="package" method="_sFyVP7kWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r3FK1rkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r3FK17kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r3FK1bkWEe26eKBxVz0OTQ" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3FK2LkWEe26eKBxVz0OTQ" type="_r3EjwLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3Fx4LkWEe26eKBxVz0OTQ" name="visualization" method="_sFyVQrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCuaJ7kWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r3GY8LkWEe26eKBxVz0OTQ" name="PeriodComparator">
              <interfaceRealization xmi:id="_sEJ9gLkWEe26eKBxVz0OTQ" client="_r3GY8LkWEe26eKBxVz0OTQ" supplier="_sCSVQ7kWEe26eKBxVz0OTQ" contract="_sCSVQ7kWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFyVRLkWEe26eKBxVz0OTQ" name="compare" specification="_sEJ9grkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFyVRbkWEe26eKBxVz0OTQ" name="obj1" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFyVRrkWEe26eKBxVz0OTQ" name="obj2" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFyVR7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_sEJ9grkWEe26eKBxVz0OTQ" name="compare" method="_sFyVRLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sEJ9g7kWEe26eKBxVz0OTQ" name="obj1" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEJ9hLkWEe26eKBxVz0OTQ" name="obj2" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEKkkLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r3HnELkWEe26eKBxVz0OTQ" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_sGPBI7kWEe26eKBxVz0OTQ">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sFDVZLkWEe26eKBxVz0OTQ" name="activations" visibility="private" type="_r2IvoLkWEe26eKBxVz0OTQ" association="_sG2FIbkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFDVZrkWEe26eKBxVz0OTQ" name="workload" visibility="private" type="_r4b1sLkWEe26eKBxVz0OTQ" association="_sG2FJLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFD8cLkWEe26eKBxVz0OTQ" name="flows" visibility="protected" type="_r2n30bkWEe26eKBxVz0OTQ" association="_sG2sMbkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sFD8crkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sFD8c7kWEe26eKBxVz0OTQ" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sFD8cbkWEe26eKBxVz0OTQ" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFD8dbkWEe26eKBxVz0OTQ" name="nodes" visibility="private" type="_r3ASULkWEe26eKBxVz0OTQ" association="_sG2sNLkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sFD8d7kWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sFD8eLkWEe26eKBxVz0OTQ" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sFD8drkWEe26eKBxVz0OTQ" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFEjgLkWEe26eKBxVz0OTQ" name="nodeMap" visibility="private" type="_r3DVoLkWEe26eKBxVz0OTQ" association="_sG3TQbkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFEjgrkWEe26eKBxVz0OTQ" name="priorityQueue" visibility="private" type="_r3okcLkWEe26eKBxVz0OTQ" association="_sG3TRLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFFKkLkWEe26eKBxVz0OTQ" name="nodeConnectivityMap" visibility="protected" type="_sCABYLkWEe26eKBxVz0OTQ" association="_sG36ULkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFFxobkWEe26eKBxVz0OTQ" name="activationMap" visibility="package" type="_r2wasLkWEe26eKBxVz0OTQ" association="_sG36U7kWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFy8QLkWEe26eKBxVz0OTQ" name="Poset" specification="_sCwPULkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFy8QbkWEe26eKBxVz0OTQ" name="workload" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFy8QrkWEe26eKBxVz0OTQ" type="_r3HnELkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFy8Q7kWEe26eKBxVz0OTQ" name="getNodeConnectivity" specification="_r3I1MLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFy8RLkWEe26eKBxVz0OTQ" type="_sCABYLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFy8RbkWEe26eKBxVz0OTQ" name="getNodeNames" specification="_r3JcQbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFy8RrkWEe26eKBxVz0OTQ" type="_sCBPgLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFy8R7kWEe26eKBxVz0OTQ" name="getNodesNamesOrderedAlphabetically" specification="_r3KDUbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFy8SLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sFy8SbkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFy8SrkWEe26eKBxVz0OTQ" name="buildPosetOfActivations" specification="_r3KqYLkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFy8S7kWEe26eKBxVz0OTQ" name="createEdgeLists" specification="_r3KqYbkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFy8TLkWEe26eKBxVz0OTQ" name="createConflictLists" specification="_r3KqYrkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFy8TbkWEe26eKBxVz0OTQ" name="createGlobalConflictLists" specification="_r3KqY7kWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFy8TrkWEe26eKBxVz0OTQ" name="createLocalConflictLists" specification="_r3KqZLkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFy8T7kWEe26eKBxVz0OTQ" name="findCoordinator" specification="_sELLorkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFy8ULkWEe26eKBxVz0OTQ" name="nodesInFlow" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFy8UbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFy8UrkWEe26eKBxVz0OTQ" name="buildTxArray" specification="_sELysbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFy8U7kWEe26eKBxVz0OTQ" name="nodesInFlow" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFy8VLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sFy8VbkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFy8VrkWEe26eKBxVz0OTQ" name="createInitialActivations" specification="_r3LRcLkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFzjULkWEe26eKBxVz0OTQ" name="getMaxTx" specification="_sCwPVbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFzjUbkWEe26eKBxVz0OTQ" name="node" type="_r3ASULkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFzjUrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFzjU7kWEe26eKBxVz0OTQ" name="getActivation" specification="_sCw2YLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFzjVLkWEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sFzjVbkWEe26eKBxVz0OTQ" name="node" type="_r3ASULkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sFzjVrkWEe26eKBxVz0OTQ" type="_r19wgLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFzjV7kWEe26eKBxVz0OTQ" name="getHyperPeriod" specification="_r3L4gLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFzjWLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFzjWbkWEe26eKBxVz0OTQ" name="getMaxPhase" specification="_r3L4grkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFzjWrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFzjW7kWEe26eKBxVz0OTQ" name="orderActivations" specification="_r3L4hLkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFzjXLkWEe26eKBxVz0OTQ" name="getNextActivation" specification="_r3L4hbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFzjXbkWEe26eKBxVz0OTQ" type="_r19wgLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFzjXrkWEe26eKBxVz0OTQ" name="addActivation" specification="_sCw2ZbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFzjX7kWEe26eKBxVz0OTQ" name="activation" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sFzjYLkWEe26eKBxVz0OTQ" name="findBaseStation" specification="_r3MfkLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sFzjYbkWEe26eKBxVz0OTQ" type="_r3ASULkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r3I1MLkWEe26eKBxVz0OTQ" name="getNodeConnectivity" visibility="private" method="_sFy8Q7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sELLoLkWEe26eKBxVz0OTQ" type="_sCABYLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3JcQbkWEe26eKBxVz0OTQ" name="getNodeNames" method="_sFy8RbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sELLobkWEe26eKBxVz0OTQ" type="_sCBPgLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3KDUbkWEe26eKBxVz0OTQ" name="getNodesNamesOrderedAlphabetically" method="_sFy8R7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r3KDUrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r3KDU7kWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r3KqYLkWEe26eKBxVz0OTQ" name="buildPosetOfActivations" method="_sFy8SrkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r3KqYbkWEe26eKBxVz0OTQ" name="createEdgeLists" visibility="private" method="_sFy8S7kWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r3KqYrkWEe26eKBxVz0OTQ" name="createConflictLists" visibility="private" method="_sFy8TLkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r3KqY7kWEe26eKBxVz0OTQ" name="createGlobalConflictLists" visibility="private" method="_sFy8TbkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r3KqZLkWEe26eKBxVz0OTQ" name="createLocalConflictLists" visibility="private" method="_sFy8TrkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r3LRcLkWEe26eKBxVz0OTQ" name="createInitialActivations" visibility="private" method="_sFy8VrkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r3L4gLkWEe26eKBxVz0OTQ" name="getHyperPeriod" method="_sFzjV7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r3L4gbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r3L4grkWEe26eKBxVz0OTQ" name="getMaxPhase" method="_sFzjWbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r3L4g7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r3L4hLkWEe26eKBxVz0OTQ" name="orderActivations" method="_sFzjW7kWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r3L4hbkWEe26eKBxVz0OTQ" name="getNextActivation" method="_sFzjXLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGPBJrkWEe26eKBxVz0OTQ">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_sCw2ZLkWEe26eKBxVz0OTQ" type="_r19wgLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3MfkLkWEe26eKBxVz0OTQ" name="findBaseStation" visibility="protected" method="_sFzjYLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGPBKLkWEe26eKBxVz0OTQ">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_sCw2Z7kWEe26eKBxVz0OTQ" type="_r3ASULkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCwPULkWEe26eKBxVz0OTQ" name="Poset" visibility="package" method="_sFy8QLkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sCwPUrkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sCwPU7kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_sGPBJLkWEe26eKBxVz0OTQ">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_sCwPUbkWEe26eKBxVz0OTQ" name="workload" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCwPVLkWEe26eKBxVz0OTQ" type="_r3HnELkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCwPVbkWEe26eKBxVz0OTQ" name="getMaxTx" visibility="private" method="_sFzjULkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCwPVrkWEe26eKBxVz0OTQ" name="node" type="_r3ASULkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCwPV7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sCw2YLkWEe26eKBxVz0OTQ" name="getActivation" visibility="private" method="_sFzjU7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCw2YbkWEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sCw2YrkWEe26eKBxVz0OTQ" name="node" type="_r3ASULkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCw2Y7kWEe26eKBxVz0OTQ" type="_r19wgLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCw2ZbkWEe26eKBxVz0OTQ" name="addActivation" method="_sFzjXrkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGPBJ7kWEe26eKBxVz0OTQ">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_sCw2ZrkWEe26eKBxVz0OTQ" name="activation" type="_r19wgLkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sELLorkWEe26eKBxVz0OTQ" name="findCoordinator" visibility="protected" method="_sFy8T7kWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGPBJbkWEe26eKBxVz0OTQ">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_sELLo7kWEe26eKBxVz0OTQ" name="nodesInFlow" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sELLpLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sELysbkWEe26eKBxVz0OTQ" name="buildTxArray" visibility="private" method="_sFy8UrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sELysrkWEe26eKBxVz0OTQ" name="nodesInFlow" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sELys7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sELytLkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r3Pi4LkWEe26eKBxVz0OTQ" name="PreemptiveSchedule">
              <ownedComment xmi:id="_sGPoMLkWEe26eKBxVz0OTQ">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_sC0gw7kWEe26eKBxVz0OTQ" general="_r3y8gLkWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF0KYLkWEe26eKBxVz0OTQ" name="PreemptiveSchedule" specification="_sCxdcLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF0KYbkWEe26eKBxVz0OTQ" name="poset" type="_r3HnELkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF0KYrkWEe26eKBxVz0OTQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF0KY7kWEe26eKBxVz0OTQ" type="_r3Pi4LkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF0KZLkWEe26eKBxVz0OTQ" name="continueSearch" specification="_sCyEhbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF0KZbkWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF0KZrkWEe26eKBxVz0OTQ" name="activation" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF0KZ7kWEe26eKBxVz0OTQ" type="_sENn4LkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF0KaLkWEe26eKBxVz0OTQ" name="toProgram" specification="_r3QJ8LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF0KabkWEe26eKBxVz0OTQ" type="_r3h2wLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF0KarkWEe26eKBxVz0OTQ" name="findPreeptiveChannelAndTime" specification="_sCyrk7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF0Ka7kWEe26eKBxVz0OTQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF0KbLkWEe26eKBxVz0OTQ" name="schedulableObject" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF0KbbkWEe26eKBxVz0OTQ" type="_sENn4LkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF0KbrkWEe26eKBxVz0OTQ" name="findAdditionalTime" specification="_sCyrlrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF0Kb7kWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF0KcLkWEe26eKBxVz0OTQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF0KcbkWEe26eKBxVz0OTQ" name="a1" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF0KcrkWEe26eKBxVz0OTQ" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF0Kc7kWEe26eKBxVz0OTQ" type="_sCBPgLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF0KdLkWEe26eKBxVz0OTQ" name="findMaxTimeAvailable" specification="_sCzSobkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF0KdbkWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF0KdrkWEe26eKBxVz0OTQ" name="schedulableObject" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF0Kd7kWEe26eKBxVz0OTQ" type="_sENn4LkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF0KeLkWEe26eKBxVz0OTQ" name="availableTime" specification="_sCzSpLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF0KebkWEe26eKBxVz0OTQ" name="a1" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF0KerkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF0Ke7kWEe26eKBxVz0OTQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF0KfLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF0KfbkWEe26eKBxVz0OTQ" name="addToSchedule" specification="_sCz5s7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF0KfrkWEe26eKBxVz0OTQ" name="next" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF0Kf7kWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF0KgLkWEe26eKBxVz0OTQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF0KgbkWEe26eKBxVz0OTQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF0KgrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF0xcLkWEe26eKBxVz0OTQ" name="addToSchedule" specification="_sCz5ubkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF0xcbkWEe26eKBxVz0OTQ" name="next" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF0xcrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r3QJ8LkWEe26eKBxVz0OTQ" name="toProgram" method="_sF0KaLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCyrkrkWEe26eKBxVz0OTQ" type="_r3h2wLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCxdcLkWEe26eKBxVz0OTQ" name="PreemptiveSchedule" visibility="package" method="_sF0KYLkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sCyEgrkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sCyEg7kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sCyEgLkWEe26eKBxVz0OTQ" name="poset" type="_r3HnELkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCyEgbkWEe26eKBxVz0OTQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sCyEhLkWEe26eKBxVz0OTQ" type="_r3Pi4LkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCyEhbkWEe26eKBxVz0OTQ" name="continueSearch" visibility="protected" method="_sF0KZLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCyEhrkWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sCyEh7kWEe26eKBxVz0OTQ" name="activation" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEOO8bkWEe26eKBxVz0OTQ" type="_sENn4LkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCyrk7kWEe26eKBxVz0OTQ" name="findPreeptiveChannelAndTime" visibility="private" method="_sF0KarkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCyrlLkWEe26eKBxVz0OTQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sCyrlbkWEe26eKBxVz0OTQ" name="schedulableObject" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEOO8rkWEe26eKBxVz0OTQ" type="_sENn4LkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCyrlrkWEe26eKBxVz0OTQ" name="findAdditionalTime" visibility="private" method="_sF0KbrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCyrl7kWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sCyrmLkWEe26eKBxVz0OTQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sCyrmbkWEe26eKBxVz0OTQ" name="a1" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCyrmrkWEe26eKBxVz0OTQ" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sEOO87kWEe26eKBxVz0OTQ" type="_sCBPgLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCzSobkWEe26eKBxVz0OTQ" name="findMaxTimeAvailable" visibility="private" method="_sF0KdLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCzSorkWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sCzSo7kWEe26eKBxVz0OTQ" name="schedulableObject" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEOO9LkWEe26eKBxVz0OTQ" type="_sENn4LkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sCzSpLkWEe26eKBxVz0OTQ" name="availableTime" visibility="private" method="_sF0KeLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCzSpbkWEe26eKBxVz0OTQ" name="a1" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCz5sLkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sCz5sbkWEe26eKBxVz0OTQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sCz5srkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sCz5s7kWEe26eKBxVz0OTQ" name="addToSchedule" visibility="private" method="_sF0KfbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCz5tLkWEe26eKBxVz0OTQ" name="next" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCz5tbkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sCz5trkWEe26eKBxVz0OTQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sCz5t7kWEe26eKBxVz0OTQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sCz5uLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sCz5ubkWEe26eKBxVz0OTQ" name="addToSchedule" visibility="protected" method="_sF0xcLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sCz5urkWEe26eKBxVz0OTQ" name="next" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sCz5u7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r3T0ULkWEe26eKBxVz0OTQ" name="PriorityComparator">
              <interfaceRealization xmi:id="_sEO2ALkWEe26eKBxVz0OTQ" client="_r3T0ULkWEe26eKBxVz0OTQ" supplier="_sCSVQ7kWEe26eKBxVz0OTQ" contract="_sCSVQ7kWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF0xc7kWEe26eKBxVz0OTQ" name="compare" specification="_sEO2ArkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF0xdLkWEe26eKBxVz0OTQ" name="obj1" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF0xdbkWEe26eKBxVz0OTQ" name="obj2" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF0xdrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_sEO2ArkWEe26eKBxVz0OTQ" name="compare" method="_sF0xc7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sEO2A7kWEe26eKBxVz0OTQ" name="obj1" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEPdELkWEe26eKBxVz0OTQ" name="obj2" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEPdEbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r3VCcLkWEe26eKBxVz0OTQ" name="Program">
              <ownedComment xmi:id="_sGPoMbkWEe26eKBxVz0OTQ">
                <body>Contains the main logic for constructing schedules given a schedule choice and number of channels.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sFGYsLkWEe26eKBxVz0OTQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFGYsbkWEe26eKBxVz0OTQ" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFGYsrkWEe26eKBxVz0OTQ" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFG_wLkWEe26eKBxVz0OTQ" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFG_wbkWEe26eKBxVz0OTQ" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFG_wrkWEe26eKBxVz0OTQ" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFG_w7kWEe26eKBxVz0OTQ" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFG_xLkWEe26eKBxVz0OTQ" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFG_xbkWEe26eKBxVz0OTQ" name="workLoad" visibility="package" type="_r4b1sLkWEe26eKBxVz0OTQ" association="_sG4hYLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFHm0LkWEe26eKBxVz0OTQ" name="scheduleBuilt" visibility="package" type="_r3h2wLkWEe26eKBxVz0OTQ" association="_sG4hY7kWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFHm0rkWEe26eKBxVz0OTQ" name="SchedulerSelected" visibility="package" type="_sEQEILkWEe26eKBxVz0OTQ" association="_sG5IcbkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFHm1LkWEe26eKBxVz0OTQ" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFIN4bkWEe26eKBxVz0OTQ" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFIN47kWEe26eKBxVz0OTQ" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFI08bkWEe26eKBxVz0OTQ" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFI087kWEe26eKBxVz0OTQ" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFI09bkWEe26eKBxVz0OTQ" name="channelsAvailable" visibility="package" type="_r2Ly8LkWEe26eKBxVz0OTQ" association="_sG5vgLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFJcALkWEe26eKBxVz0OTQ" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFJcArkWEe26eKBxVz0OTQ" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFJcBLkWEe26eKBxVz0OTQ" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFJcBrkWEe26eKBxVz0OTQ" name="deadlineMisses" visibility="private" type="_r2c4sLkWEe26eKBxVz0OTQ" association="_sG5vg7kWEe26eKBxVz0OTQ"/>
              <interfaceRealization xmi:id="_sC2V8bkWEe26eKBxVz0OTQ" client="_r3VCcLkWEe26eKBxVz0OTQ" supplier="_r38tgbkWEe26eKBxVz0OTQ" contract="_r38tgbkWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF0xd7kWEe26eKBxVz0OTQ" name="Program" specification="_sEQrMLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF0xeLkWEe26eKBxVz0OTQ" name="workLoad" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF0xebkWEe26eKBxVz0OTQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF0xerkWEe26eKBxVz0OTQ" name="choice" type="_sEQEILkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF0xe7kWEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF0xfLkWEe26eKBxVz0OTQ" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF0xfbkWEe26eKBxVz0OTQ" type="_r3VCcLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF0xfrkWEe26eKBxVz0OTQ" name="Program" specification="_sERSQLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF0xf7kWEe26eKBxVz0OTQ" name="workLoad" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF0xgLkWEe26eKBxVz0OTQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF0xgbkWEe26eKBxVz0OTQ" name="choice" type="_sEQEILkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF0xgrkWEe26eKBxVz0OTQ" type="_r3VCcLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF1YgLkWEe26eKBxVz0OTQ" name="setDefaultParameters" specification="_sC3kELkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF1YgbkWEe26eKBxVz0OTQ" name="workLoad" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF1YgrkWEe26eKBxVz0OTQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1Yg7kWEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1YhLkWEe26eKBxVz0OTQ" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF1YhbkWEe26eKBxVz0OTQ" name="toWorkLoad" specification="_r3WQkLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF1YhrkWEe26eKBxVz0OTQ" type="_r4b1sLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF1Yh7kWEe26eKBxVz0OTQ" name="buildProgram" specification="_sERSR7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF1YiLkWEe26eKBxVz0OTQ" name="choice" type="_sEQEILkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF1YibkWEe26eKBxVz0OTQ" name="buildOriginalProgram" specification="_r3W3oLkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); &#xD;
   // create a time slot for nNodes, each initialized with a SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { &#xD;
     	// don't push for last node, so stop at node n-1, which is 2 less than count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); &#xD;
         // make sure precedence constraints on flow are preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { &#xD;
         	// instructionIndex is beyond current schedule length. Increase schedule and channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); &#xD;
             // create a time slot for nNodes, each initialized with a SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); &#xD;
             // need make sure we have channels available for all slots. instructionIndex may be >&#xD;
             // initialized size of array because of phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); &#xD;
               // create a time slot for nNodes, each initialized with a SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; &#xD;
           // get instruction scheduled for snk to execute in the prior time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { &#xD;
             	// The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; &#xD;
               // get instruction scheduled for sink/curentNodeName) to execute in the prior time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { &#xD;
             	  // will try to push and pull to/from the same node, so use the prior instruction channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF1YirkWEe26eKBxVz0OTQ" name="waitInstruction" specification="_r3W3obkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF1Yi7kWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1YjLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF1YjbkWEe26eKBxVz0OTQ" name="elseWaitInstruction" specification="_r3W3pLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF1YjrkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1Yj7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF1YkLkWEe26eKBxVz0OTQ" name="elsePullClause" specification="_r3XesLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF1YkbkWEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1YkrkWEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1Yk7kWEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1YlLkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1YlbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF1YlrkWEe26eKBxVz0OTQ" name="hasPushInstruction" specification="_r3XetrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF1Yl7kWEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1YmLkWEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1YmbkWEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1YmrkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1Ym7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF1YnLkWEe26eKBxVz0OTQ" name="pushInstruction" specification="_r3YFwbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF1YnbkWEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1YnrkWEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1Yn7kWEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1YoLkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1YobkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF1_kLkWEe26eKBxVz0OTQ" name="getFirstChannelInInstruction" specification="_r3YFx7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF1_kbkWEe26eKBxVz0OTQ" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1_krkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF1_k7kWEe26eKBxVz0OTQ" name="findNextAvailableInstructionTimeSlot" specification="_sC4LILkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF1_lLkWEe26eKBxVz0OTQ" name="schedule" type="_r3h2wLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF1_lbkWEe26eKBxVz0OTQ" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1_lrkWEe26eKBxVz0OTQ" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1_l7kWEe26eKBxVz0OTQ" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1_mLkWEe26eKBxVz0OTQ" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1_mbkWEe26eKBxVz0OTQ" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sF1_mrkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1_m7kWEe26eKBxVz0OTQ" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sF1_nLkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1_nbkWEe26eKBxVz0OTQ" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1_nrkWEe26eKBxVz0OTQ" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1_n7kWEe26eKBxVz0OTQ" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1_oLkWEe26eKBxVz0OTQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1_obkWEe26eKBxVz0OTQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1_orkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF1_o7kWEe26eKBxVz0OTQ" name="slotIsAvailable" specification="_sC4yMrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF1_pLkWEe26eKBxVz0OTQ" name="currentInstructionTimeSlot" type="_r25koLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF1_pbkWEe26eKBxVz0OTQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1_prkWEe26eKBxVz0OTQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF1_p7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF2moLkWEe26eKBxVz0OTQ" name="findNextAvailableChannel" specification="_sC5ZQLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF2mobkWEe26eKBxVz0OTQ" name="schedule" type="_r3h2wLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF2morkWEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF2mo7kWEe26eKBxVz0OTQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF2mpLkWEe26eKBxVz0OTQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF2mpbkWEe26eKBxVz0OTQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF2mprkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check&#xD;
                           // this result&#xD;
&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
 InstructionTimeSlot priorInstructionTimeSlot;&#xD;
&#xD;
 var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
 if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in&#xD;
                        // that slot, which have to be avoided here&#xD;
   Integer priorTime = currentTime - 1;&#xD;
   priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
   var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
   var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
   // extract the channels used by the src and snk nodes in the prior time slot and store them in&#xD;
   // an array&#xD;
   var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get&#xD;
                                                                                           // the&#xD;
                                                                                           // parameters&#xD;
                                                                                           // from&#xD;
                                                                                           // the&#xD;
                                                                                           // instruction&#xD;
                                                                                           // in&#xD;
                                                                                           // the&#xD;
                                                                                           // src&#xD;
                                                                                           // node's&#xD;
                                                                                           // prior&#xD;
                                                                                           // time&#xD;
                                                                                           // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
   instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the&#xD;
                                                                                       // parameters&#xD;
                                                                                       // from&#xD;
                                                                                       // the&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in the&#xD;
                                                                                       // snk&#xD;
                                                                                       // node's&#xD;
                                                                                       // prior&#xD;
                                                                                       // time&#xD;
                                                                                       // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
 }&#xD;
 Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node&#xD;
 channel++; // increment the channel because we don't use the same channel in consecutive time&#xD;
            // slots for the same node&#xD;
 if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits&#xD;
                                    // max&#xD;
   channel = 0;&#xD;
 }&#xD;
 var channelFound = false;&#xD;
 while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of&#xD;
                                                // channels to assign&#xD;
   var channelString = String.valueOf(channel);&#xD;
   var channelRemoved = channels.remove(channelString);&#xD;
   if (channelRemoved) {&#xD;
     // newChannel has the channel&#xD;
     newChannel = channelString;&#xD;
     channelFound = true;&#xD;
   } else {&#xD;
     // try another channel&#xD;
     channel += 1;&#xD;
     if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel&#xD;
                                        // hits max&#xD;
       channel = 0;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF2mp7kWEe26eKBxVz0OTQ" name="selectPriority" specification="_r3ZT4LkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF2mqLkWEe26eKBxVz0OTQ" name="selectRM" specification="_r3ZT4bkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF2mqbkWEe26eKBxVz0OTQ" name="selectDM" specification="_r3ZT4rkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF2mqrkWEe26eKBxVz0OTQ" name="selectRtHART" specification="_r3ZT47kWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF2mq7kWEe26eKBxVz0OTQ" name="setScheduleSelected" specification="_sER5ULkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF2mrLkWEe26eKBxVz0OTQ" name="choice" type="_sEQEILkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF2mrbkWEe26eKBxVz0OTQ" name="setSchedule" specification="_sC5ZR7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF2mrrkWEe26eKBxVz0OTQ" name="schedule" type="_r3h2wLkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF2mr7kWEe26eKBxVz0OTQ" name="getSchedule" specification="_r3Z68LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF2msLkWEe26eKBxVz0OTQ" type="_r3h2wLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF2msbkWEe26eKBxVz0OTQ" name="getSchedulerName" specification="_r3Z68bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF2msrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF3NsLkWEe26eKBxVz0OTQ" name="getSchChoice" specification="_r3aiALkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF3NsbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF3NsrkWEe26eKBxVz0OTQ" name="getNumChannels" specification="_r3bJELkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF3Ns7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF3NtLkWEe26eKBxVz0OTQ" name="getNumTransmissions" specification="_r3bJFbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF3NtbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF3NtrkWEe26eKBxVz0OTQ" name="getRealTimeHartFlag" specification="_r3bwIrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF3Nt7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF3NuLkWEe26eKBxVz0OTQ" name="setRealTimeHartFlag" specification="_r3bwJLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF3NubkWEe26eKBxVz0OTQ" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF3NurkWEe26eKBxVz0OTQ" name="getMinPacketReceptionRate" specification="_r3bwJrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF3Nu7kWEe26eKBxVz0OTQ" type="_sER5UrkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF3NvLkWEe26eKBxVz0OTQ" name="getE2e" specification="_r3cXMrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF3NvbkWEe26eKBxVz0OTQ" type="_sER5UrkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF3NvrkWEe26eKBxVz0OTQ" name="getName" specification="_r3cXNrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF3Nv7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF30wLkWEe26eKBxVz0OTQ" name="getOptimizationFlag" specification="_r3c-QrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF30wbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF30wrkWEe26eKBxVz0OTQ" name="deadlineMisses" specification="_r3c-R7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF30w7kWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF30xLkWEe26eKBxVz0OTQ" name="getNumFaults" specification="_r3c-SLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF30xbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF30xrkWEe26eKBxVz0OTQ" name="getNodeMapIndex" specification="_r3dlU7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF30x7kWEe26eKBxVz0OTQ" type="_sCABYLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
                                                                  // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndexMap = new HashMap&lt;String, Integer>(); // create a new mapping from node names to&#xD;
                                                    // index in schedule&#xD;
 // table&#xD;
 var nNodes = orderedNodes.length;&#xD;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
   var name = orderedNodes[index];&#xD;
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
 }&#xD;
 return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r3WQkLkWEe26eKBxVz0OTQ" name="toWorkLoad" method="_sF1YhbkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGPoMrkWEe26eKBxVz0OTQ">
                  <body>Getter method to retrieve workLoad from which schedules are built.</body>
                </ownedComment>
                <ownedParameter xmi:id="_sC3kFbkWEe26eKBxVz0OTQ" type="_r4b1sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3W3oLkWEe26eKBxVz0OTQ" name="buildOriginalProgram" method="_sF1YibkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r3W3obkWEe26eKBxVz0OTQ" name="waitInstruction" visibility="private" method="_sF1YirkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r3W3orkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3W3o7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r3W3pLkWEe26eKBxVz0OTQ" name="elseWaitInstruction" visibility="private" method="_sF1YjbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r3W3pbkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3W3prkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r3XesLkWEe26eKBxVz0OTQ" name="elsePullClause" visibility="private" method="_sF1YkLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r3XesbkWEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3XesrkWEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3Xes7kWEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3XetLkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3XetbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r3XetrkWEe26eKBxVz0OTQ" name="hasPushInstruction" visibility="private" method="_sF1YlrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r3Xet7kWEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3XeuLkWEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3XeubkWEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3XeurkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3YFwLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r3YFwbkWEe26eKBxVz0OTQ" name="pushInstruction" visibility="private" method="_sF1YnLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r3YFwrkWEe26eKBxVz0OTQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3YFw7kWEe26eKBxVz0OTQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3YFxLkWEe26eKBxVz0OTQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3YFxbkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3YFxrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r3YFx7kWEe26eKBxVz0OTQ" name="getFirstChannelInInstruction" visibility="private" method="_sF1_kLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r3YFyLkWEe26eKBxVz0OTQ" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3YFybkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r3ZT4LkWEe26eKBxVz0OTQ" name="selectPriority" method="_sF2mp7kWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r3ZT4bkWEe26eKBxVz0OTQ" name="selectRM" method="_sF2mqLkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r3ZT4rkWEe26eKBxVz0OTQ" name="selectDM" method="_sF2mqbkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r3ZT47kWEe26eKBxVz0OTQ" name="selectRtHART" method="_sF2mqrkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r3Z68LkWEe26eKBxVz0OTQ" name="getSchedule" method="_sF2mr7kWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGPoM7kWEe26eKBxVz0OTQ">
                  <body>Getter method to retrieve built schedule from program.</body>
                </ownedComment>
                <ownedParameter xmi:id="_sC5ZSbkWEe26eKBxVz0OTQ" type="_r3h2wLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3Z68bkWEe26eKBxVz0OTQ" name="getSchedulerName" method="_sF2msbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r3Z68rkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r3aiALkWEe26eKBxVz0OTQ" name="getSchChoice" method="_sF3NsLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r3aiAbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r3bJELkWEe26eKBxVz0OTQ" name="getNumChannels" method="_sF3NsrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r3bJEbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r3bJFbkWEe26eKBxVz0OTQ" name="getNumTransmissions" method="_sF3NtLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r3bJFrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r3bwIrkWEe26eKBxVz0OTQ" name="getRealTimeHartFlag" visibility="private" method="_sF3NtrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r3bwI7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r3bwJLkWEe26eKBxVz0OTQ" name="setRealTimeHartFlag" visibility="private" method="_sF3NuLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r3bwJbkWEe26eKBxVz0OTQ" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r3bwJrkWEe26eKBxVz0OTQ" name="getMinPacketReceptionRate" method="_sF3NurkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sESgYbkWEe26eKBxVz0OTQ" type="_sER5UrkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3cXMrkWEe26eKBxVz0OTQ" name="getE2e" method="_sF3NvLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sESgYrkWEe26eKBxVz0OTQ" type="_sER5UrkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3cXNrkWEe26eKBxVz0OTQ" name="getName" method="_sF3NvrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r3cXN7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r3c-QrkWEe26eKBxVz0OTQ" name="getOptimizationFlag" method="_sF30wLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r3c-Q7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r3c-R7kWEe26eKBxVz0OTQ" name="deadlineMisses" method="_sF30wrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sC6AULkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3c-SLkWEe26eKBxVz0OTQ" name="getNumFaults" method="_sF30xLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r3c-SbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r3dlU7kWEe26eKBxVz0OTQ" name="getNodeMapIndex" method="_sF30xrkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGPoNLkWEe26eKBxVz0OTQ">
                  <body>Maps nodes from workload to their respective indexes.&#xD;
   * &#xD;
   * @return HashMap of node indexes</body>
                </ownedComment>
                <ownedParameter xmi:id="_sESgY7kWEe26eKBxVz0OTQ" type="_sCABYLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sC3kELkWEe26eKBxVz0OTQ" name="setDefaultParameters" visibility="private" method="_sF1YgLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sC3kEbkWEe26eKBxVz0OTQ" name="workLoad" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sC3kErkWEe26eKBxVz0OTQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sC3kE7kWEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sC3kFLkWEe26eKBxVz0OTQ" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sC4LILkWEe26eKBxVz0OTQ" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_sF1_k7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sC4LIbkWEe26eKBxVz0OTQ" name="schedule" type="_r3h2wLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sC4LIrkWEe26eKBxVz0OTQ" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sC4LI7kWEe26eKBxVz0OTQ" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sC4LJLkWEe26eKBxVz0OTQ" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sC4LJbkWEe26eKBxVz0OTQ" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sC4LJrkWEe26eKBxVz0OTQ" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sC4yMLkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sC4LJ7kWEe26eKBxVz0OTQ" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sC4yMbkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sC4LKLkWEe26eKBxVz0OTQ" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sC4LKbkWEe26eKBxVz0OTQ" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sC4LKrkWEe26eKBxVz0OTQ" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sC4LK7kWEe26eKBxVz0OTQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sC4LLLkWEe26eKBxVz0OTQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sC4LLbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sC4yMrkWEe26eKBxVz0OTQ" name="slotIsAvailable" visibility="private" method="_sF1_o7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sC4yM7kWEe26eKBxVz0OTQ" name="currentInstructionTimeSlot" type="_r25koLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sC4yNLkWEe26eKBxVz0OTQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sC4yNbkWEe26eKBxVz0OTQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sC4yNrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sC5ZQLkWEe26eKBxVz0OTQ" name="findNextAvailableChannel" visibility="private" method="_sF2moLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sC5ZQbkWEe26eKBxVz0OTQ" name="schedule" type="_r3h2wLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sC5ZQrkWEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sC5ZQ7kWEe26eKBxVz0OTQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sC5ZRLkWEe26eKBxVz0OTQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sC5ZRbkWEe26eKBxVz0OTQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sC5ZRrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sC5ZR7kWEe26eKBxVz0OTQ" name="setSchedule" visibility="private" method="_sF2mrbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sC5ZSLkWEe26eKBxVz0OTQ" name="schedule" type="_r3h2wLkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sEQrMLkWEe26eKBxVz0OTQ" name="Program" visibility="package" method="_sF0xd7kWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sEQrNrkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sEQrN7kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sEQrMbkWEe26eKBxVz0OTQ" name="workLoad" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEQrMrkWEe26eKBxVz0OTQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sEQrM7kWEe26eKBxVz0OTQ" name="choice" type="_sEQEILkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEQrNLkWEe26eKBxVz0OTQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sEQrNbkWEe26eKBxVz0OTQ" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sEQrOLkWEe26eKBxVz0OTQ" type="_r3VCcLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sERSQLkWEe26eKBxVz0OTQ" name="Program" visibility="package" method="_sF0xfrkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sERSRLkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sERSRbkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sERSQbkWEe26eKBxVz0OTQ" name="workLoad" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sERSQrkWEe26eKBxVz0OTQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sERSQ7kWEe26eKBxVz0OTQ" name="choice" type="_sEQEILkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sERSRrkWEe26eKBxVz0OTQ" type="_r3VCcLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sERSR7kWEe26eKBxVz0OTQ" name="buildProgram" method="_sF1Yh7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sERSSLkWEe26eKBxVz0OTQ" name="choice" type="_sEQEILkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sER5ULkWEe26eKBxVz0OTQ" name="setScheduleSelected" visibility="private" method="_sF2mq7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sER5UbkWEe26eKBxVz0OTQ" name="choice" type="_sEQEILkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r3h2wLkWEe26eKBxVz0OTQ" name="ProgramSchedule">
              <generalization xmi:id="_sC71gLkWEe26eKBxVz0OTQ" general="_r3_w0LkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFKqILkWEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFKqIbkWEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF30yLkWEe26eKBxVz0OTQ" name="ProgramSchedule" specification="_r3h2wbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF30ybkWEe26eKBxVz0OTQ" type="_r3h2wLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF4b0LkWEe26eKBxVz0OTQ" name="ProgramSchedule" specification="_r3id0rkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF4b0bkWEe26eKBxVz0OTQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF4b0rkWEe26eKBxVz0OTQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF4b07kWEe26eKBxVz0OTQ" type="_r3h2wLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r3h2wbkWEe26eKBxVz0OTQ" name="ProgramSchedule" method="_sF30yLkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r3h2wrkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r3id0LkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r3id0bkWEe26eKBxVz0OTQ" type="_r3h2wLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3id0rkWEe26eKBxVz0OTQ" name="ProgramSchedule" visibility="package" method="_sF4b0LkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r3id1bkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r3id1rkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r3id07kWEe26eKBxVz0OTQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3id1LkWEe26eKBxVz0OTQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3id17kWEe26eKBxVz0OTQ" type="_r3h2wLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r3id2LkWEe26eKBxVz0OTQ" name="ProgramVisualization">
              <ownedComment xmi:id="_sGPoNbkWEe26eKBxVz0OTQ">
                <body>Allows the user to generate a GUI to visualize WARP data given by .dsl files.&#xD;
If applicable, the GUI will contain minimum packet reception rate, End-to-End transmission reliability, &#xD;
and number of channels.&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_sC8cmLkWEe26eKBxVz0OTQ" general="_r4I6wLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFKqIrkWEe26eKBxVz0OTQ" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFKqI7kWEe26eKBxVz0OTQ" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFKqJLkWEe26eKBxVz0OTQ" name="sourceCode" visibility="private" type="_r3h2wLkWEe26eKBxVz0OTQ" association="_sG5vhrkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFLRMLkWEe26eKBxVz0OTQ" name="program" visibility="private" type="_r3VCcLkWEe26eKBxVz0OTQ" association="_sG6WkbkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFLRMrkWEe26eKBxVz0OTQ" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF4b1LkWEe26eKBxVz0OTQ" name="ProgramVisualization" specification="_sC8ckLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF4b1bkWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF4b1rkWEe26eKBxVz0OTQ" type="_r3id2LkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF4b17kWEe26eKBxVz0OTQ" name="displayVisualization" specification="_r3jE4LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF4b2LkWEe26eKBxVz0OTQ" type="_r21TMLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF4b2bkWEe26eKBxVz0OTQ" name="createHeader" specification="_r3jr8rkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF4b2rkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(createTitle());&#xD;
 header.add(String.format(&quot;Scheduler Name: %s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumFaults() > 0) { // only specify when deterministic fault model is assumed&#xD;
   header.add(String.format(&quot;numFaults: %d\n&quot;, program.getNumFaults()));&#xD;
 }&#xD;
 header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
 header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(program.getE2e())));&#xD;
 header.add(String.format(&quot;nChannels: %d\n&quot;, program.getNumChannels()));&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF4b27kWEe26eKBxVz0OTQ" name="createFooter" specification="_r3kTArkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF4b3LkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF4b3bkWEe26eKBxVz0OTQ" name="createColumnHeader" specification="_r3k6ELkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF4b3rkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sF4b37kWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
 String[] columnNames = new String[orderedNodes.length + 1];&#xD;
 columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first&#xD;
 /* loop through the node names, adding each to the header */&#xD;
 for (int i = 0; i &lt; orderedNodes.length; i++) {&#xD;
   columnNames[i + 1] = orderedNodes[i];&#xD;
 }&#xD;
 return columnNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF4b4LkWEe26eKBxVz0OTQ" name="createVisualizationData" specification="_r3lhIbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF4b4bkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sF4b4rkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
   int numRows = sourceCode.getNumRows();&#xD;
   int numColumns = sourceCode.getNumColumns();&#xD;
   visualizationData = new String[numRows][numColumns + 1];&#xD;
&#xD;
   for (int row = 0; row &lt; numRows; row++) {&#xD;
     visualizationData[row][0] = String.format(&quot;%s&quot;, row);&#xD;
     for (int column = 0; column &lt; numColumns; column++) {&#xD;
       visualizationData[row][column + 1] = sourceCode.get(row, column);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return visualizationData;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF4b47kWEe26eKBxVz0OTQ" name="createTitle" specification="_r3lhKLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF4b5LkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;WARP program for graph %s\n&quot;, program.getName());&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r3jE4LkWEe26eKBxVz0OTQ" name="displayVisualization" method="_sF4b17kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sC8clbkWEe26eKBxVz0OTQ" type="_r21TMLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3jr8rkWEe26eKBxVz0OTQ" name="createHeader" visibility="protected" method="_sF4b2bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sC8clrkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3kTArkWEe26eKBxVz0OTQ" name="createFooter" visibility="protected" method="_sF4b27kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sC8cl7kWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3k6ELkWEe26eKBxVz0OTQ" name="createColumnHeader" visibility="protected" method="_sF4b3bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r3k6EbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r3k6ErkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r3lhIbkWEe26eKBxVz0OTQ" name="createVisualizationData" visibility="protected" method="_sF4b4LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r3lhIrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r3lhI7kWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r3lhKLkWEe26eKBxVz0OTQ" name="createTitle" visibility="private" method="_sF4b47kWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGQPQLkWEe26eKBxVz0OTQ">
                  <body>Creates a title for the GUI using the name from the program.&#xD;
   * &#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_r3lhKbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sC8ckLkWEe26eKBxVz0OTQ" name="ProgramVisualization" visibility="package" method="_sF4b1LkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sC8ckrkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sC8ck7kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_sGPoNrkWEe26eKBxVz0OTQ">
                  <body>Constructor for new ProgramVisualization. Used WARP file as input changes it to&#xD;
   * a program and gets the schedule and deadlines met.&#xD;
   * &#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_sC8ckbkWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sC8clLkWEe26eKBxVz0OTQ" type="_r3id2LkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r3mvQLkWEe26eKBxVz0OTQ" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_sEUVkLkWEe26eKBxVz0OTQ" client="_r3mvQLkWEe26eKBxVz0OTQ" supplier="_sCSVQ7kWEe26eKBxVz0OTQ" contract="_sCSVQ7kWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF5C4LkWEe26eKBxVz0OTQ" name="compare" specification="_sEUVkrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF5C4bkWEe26eKBxVz0OTQ" name="obj1" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF5C4rkWEe26eKBxVz0OTQ" name="obj2" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF5C47kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_sEUVkrkWEe26eKBxVz0OTQ" name="compare" method="_sF5C4LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sEUVk7kWEe26eKBxVz0OTQ" name="obj1" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEUVlLkWEe26eKBxVz0OTQ" name="obj2" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEUVlbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r3nWULkWEe26eKBxVz0OTQ" name="ReleaseTimeQueue">
              <generalization xmi:id="_r3okcrkWEe26eKBxVz0OTQ" general="_r3okcLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFLRNLkWEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFLRNbkWEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF5C5LkWEe26eKBxVz0OTQ" name="ReleaseTimeQueue" specification="_r3n9YbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF5C5bkWEe26eKBxVz0OTQ" type="_r3nWULkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF5C5rkWEe26eKBxVz0OTQ" name="ReleaseTimeQueue" specification="_sC9DoLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF5C57kWEe26eKBxVz0OTQ" name="schedulableObjects" type="_sCvoQLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF5C6LkWEe26eKBxVz0OTQ" type="_r3nWULkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r3n9YbkWEe26eKBxVz0OTQ" name="ReleaseTimeQueue" visibility="package" method="_sF5C5LkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r3n9YrkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r3n9Y7kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r3n9ZLkWEe26eKBxVz0OTQ" type="_r3nWULkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sC9DoLkWEe26eKBxVz0OTQ" name="ReleaseTimeQueue" visibility="package" method="_sF5C5rkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sC9qsbkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sC9qsrkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sC9qsLkWEe26eKBxVz0OTQ" name="schedulableObjects" type="_sCvoQLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sC9qs7kWEe26eKBxVz0OTQ" type="_r3nWULkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r3pLgbkWEe26eKBxVz0OTQ" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_sGQPQbkWEe26eKBxVz0OTQ">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages transmitted in flows for the&#xD;
WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The end-to-end&#xD;
reliability for each flow, flow:src->sink, is computed iteratively as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released. All other initial&#xD;
probabilities are 0.0. (That is, the reset of the nodes in the flow have an initial probability&#xD;
value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState = (1-M)*PrevSnkNodeState +&#xD;
M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by the node SinkNode.&#xD;
Thus, the NewSinkNodeState probability will increase each time a push or pull is executed with&#xD;
SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the message reaching that&#xD;
node, and the end-to-end reliability of a flow is the value of the last Flow:SinkNode&#xD;
probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to compute the probabilities the comprise the&#xD;
ReliablityMatrix, which is the core of the file visualization that is requested in Warp.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the instructions for each node,&#xD;
in each time slot, to extract the src and snk nodes in the instruction and then apply the message&#xD;
success probability equation defined above.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to extract the src and&#xD;
snk nodes from the instruction string in a program schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF5C6bkWEe26eKBxVz0OTQ" name="ReliabilityAnalysis" specification="_sC9qtbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF5C6rkWEe26eKBxVz0OTQ" name="program" type="_r3VCcLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF5C67kWEe26eKBxVz0OTQ" type="_r3pLgbkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>// TODO Auto-generated constructor stub&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF5C7LkWEe26eKBxVz0OTQ" name="verifyReliabilities" specification="_r3pLgrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF5C7bkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
 return true;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r3pLgrkWEe26eKBxVz0OTQ" name="verifyReliabilities" method="_sF5C7LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r3pykLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sC9qtbkWEe26eKBxVz0OTQ" name="ReliabilityAnalysis" method="_sF5C6bkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sC9qt7kWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sC9quLkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sC9qtrkWEe26eKBxVz0OTQ" name="program" type="_r3VCcLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sC9qubkWEe26eKBxVz0OTQ" type="_r3pLgbkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_r3pykbkWEe26eKBxVz0OTQ" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_sGQPQrkWEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_r3qZoLkWEe26eKBxVz0OTQ" name="minPacketReceptionRate" type="_sER5UrkWEe26eKBxVz0OTQ" isReadOnly="true"/>
              <ownedAttribute xmi:id="_r3qZobkWEe26eKBxVz0OTQ" name="e2e" type="_sER5UrkWEe26eKBxVz0OTQ" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r3qZorkWEe26eKBxVz0OTQ" name="ReliabilityRow">
              <generalization xmi:id="_sC-RwLkWEe26eKBxVz0OTQ" general="_r3vSILkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFL4QLkWEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFL4QbkWEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF5p8LkWEe26eKBxVz0OTQ" name="ReliabilityRow" specification="_r3rAsLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF5p8bkWEe26eKBxVz0OTQ" type="_r3qZorkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF5p8rkWEe26eKBxVz0OTQ" name="ReliabilityRow" specification="_sEU8orkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF5p87kWEe26eKBxVz0OTQ" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF5p9LkWEe26eKBxVz0OTQ" name="element" type="_sER5UrkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF5p9bkWEe26eKBxVz0OTQ" type="_r3qZorkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF5p9rkWEe26eKBxVz0OTQ" name="ReliabilityRow" specification="_sEVjtbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF5p97kWEe26eKBxVz0OTQ" name="rowArray" type="_sER5UrkWEe26eKBxVz0OTQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sF5p-LkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF5p-bkWEe26eKBxVz0OTQ" type="_r3qZorkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r3rAsLkWEe26eKBxVz0OTQ" name="ReliabilityRow" method="_sF5p8LkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r3rnwLkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r3rnwbkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r3rnwrkWEe26eKBxVz0OTQ" type="_r3qZorkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sEU8orkWEe26eKBxVz0OTQ" name="ReliabilityRow" visibility="package" method="_sF5p8rkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sEVjsrkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sEVjs7kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sEVjsLkWEe26eKBxVz0OTQ" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sEVjsbkWEe26eKBxVz0OTQ" name="element" type="_sER5UrkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEVjtLkWEe26eKBxVz0OTQ" type="_r3qZorkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sEVjtbkWEe26eKBxVz0OTQ" name="ReliabilityRow" visibility="package" method="_sF5p9rkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sEVjt7kWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sEVjuLkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sEVjtrkWEe26eKBxVz0OTQ" name="rowArray" type="_sER5UrkWEe26eKBxVz0OTQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sEVjurkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sEVjubkWEe26eKBxVz0OTQ" type="_r3qZorkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r3rnw7kWEe26eKBxVz0OTQ" name="ReliabilityTable">
              <generalization xmi:id="_sC-40LkWEe26eKBxVz0OTQ" general="_r3_w0LkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFL4QrkWEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFL4Q7kWEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF5p-rkWEe26eKBxVz0OTQ" name="ReliabilityTable" specification="_r3sO0LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF5p-7kWEe26eKBxVz0OTQ" type="_r3rnw7kWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF5p_LkWEe26eKBxVz0OTQ" name="ReliabilityTable" specification="_r3sO1LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF5p_bkWEe26eKBxVz0OTQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF5p_rkWEe26eKBxVz0OTQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF5p_7kWEe26eKBxVz0OTQ" type="_r3rnw7kWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r3sO0LkWEe26eKBxVz0OTQ" name="ReliabilityTable" method="_sF5p-rkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r3sO0bkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r3sO0rkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r3sO07kWEe26eKBxVz0OTQ" type="_r3rnw7kWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3sO1LkWEe26eKBxVz0OTQ" name="ReliabilityTable" visibility="package" method="_sF5p_LkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r3sO17kWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r3sO2LkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r3sO1bkWEe26eKBxVz0OTQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3sO1rkWEe26eKBxVz0OTQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3sO2bkWEe26eKBxVz0OTQ" type="_r3rnw7kWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r3s14LkWEe26eKBxVz0OTQ" name="ReliabilityVisualization">
              <ownedComment xmi:id="_sGQPQ7kWEe26eKBxVz0OTQ">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to create&#xD;
the file visualization that is requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_sC_f5bkWEe26eKBxVz0OTQ" general="_r4I6wLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFL4RLkWEe26eKBxVz0OTQ" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFL4RbkWEe26eKBxVz0OTQ" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFL4RrkWEe26eKBxVz0OTQ" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFL4R7kWEe26eKBxVz0OTQ" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFL4SLkWEe26eKBxVz0OTQ" name="warp" visibility="private" type="_r4SEsLkWEe26eKBxVz0OTQ" association="_sG6WlLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFMfUbkWEe26eKBxVz0OTQ" name="ra" visibility="private" type="_r3pLgbkWEe26eKBxVz0OTQ" association="_sG69obkWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF5qALkWEe26eKBxVz0OTQ" name="ReliabilityVisualization" specification="_sC_f4LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF5qAbkWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF5qArkWEe26eKBxVz0OTQ" type="_r3s14LkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_sC_f4LkWEe26eKBxVz0OTQ" name="ReliabilityVisualization" visibility="package" method="_sF5qALkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sC_f4rkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sC_f47kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sC_f4bkWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sC_f5LkWEe26eKBxVz0OTQ" type="_r3s14LkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r3tc8LkWEe26eKBxVz0OTQ" name="ReportVisualization">
              <generalization xmi:id="_sDAG-bkWEe26eKBxVz0OTQ" general="_r4I6wLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFMfU7kWEe26eKBxVz0OTQ" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFMfVLkWEe26eKBxVz0OTQ" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFMfVbkWEe26eKBxVz0OTQ" name="content" visibility="private" type="_r2c4sLkWEe26eKBxVz0OTQ" association="_sG69pLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFNGYbkWEe26eKBxVz0OTQ" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF6RALkWEe26eKBxVz0OTQ" name="ReportVisualization" specification="_sC_f5rkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF6RAbkWEe26eKBxVz0OTQ" name="fm" type="_r2jmYLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF6RArkWEe26eKBxVz0OTQ" name="warp" type="_r38tgbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF6RA7kWEe26eKBxVz0OTQ" name="content" type="_r2c4sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF6RBLkWEe26eKBxVz0OTQ" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF6RBbkWEe26eKBxVz0OTQ" type="_r3tc8LkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF6RBrkWEe26eKBxVz0OTQ" name="visualization" specification="_r3uEALkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF6RB7kWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF6RCLkWEe26eKBxVz0OTQ" name="createReport" specification="_r3urE7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF6RCbkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r3uEALkWEe26eKBxVz0OTQ" name="visualization" method="_sF6RBrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDAG97kWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3urE7kWEe26eKBxVz0OTQ" name="createReport" visibility="private" method="_sF6RCLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDAG-LkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sC_f5rkWEe26eKBxVz0OTQ" name="ReportVisualization" visibility="package" method="_sF6RALkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sDAG9LkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sDAG9bkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sDAG8LkWEe26eKBxVz0OTQ" name="fm" type="_r2jmYLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDAG8bkWEe26eKBxVz0OTQ" name="warp" type="_r38tgbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDAG8rkWEe26eKBxVz0OTQ" name="content" type="_r2c4sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDAG87kWEe26eKBxVz0OTQ" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDAG9rkWEe26eKBxVz0OTQ" type="_r3tc8LkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r3vSILkWEe26eKBxVz0OTQ" name="Row">
              <generalization xmi:id="_sEWx1rkWEe26eKBxVz0OTQ" general="_sCBPgLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFNtcLkWEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFNtcbkWEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF6RCrkWEe26eKBxVz0OTQ" name="Row" specification="_r3v5MbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF6RC7kWEe26eKBxVz0OTQ" type="_r3vSILkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF6RDLkWEe26eKBxVz0OTQ" name="Row" specification="_sEWKwLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF6RDbkWEe26eKBxVz0OTQ" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF6RDrkWEe26eKBxVz0OTQ" name="element" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF6RD7kWEe26eKBxVz0OTQ" type="_r3vSILkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF64ELkWEe26eKBxVz0OTQ" name="Row" specification="_sEWx0LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF64EbkWEe26eKBxVz0OTQ" name="rowArray" type="_sD8iIbkWEe26eKBxVz0OTQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sF64ErkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF64E7kWEe26eKBxVz0OTQ" type="_r3vSILkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF64FLkWEe26eKBxVz0OTQ" name="Row" specification="_r3wgQLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF64FbkWEe26eKBxVz0OTQ" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF64FrkWEe26eKBxVz0OTQ" type="_r3vSILkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r3v5MbkWEe26eKBxVz0OTQ" name="Row" method="_sF6RCrkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r3v5MrkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r3v5M7kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r3v5NLkWEe26eKBxVz0OTQ" type="_r3vSILkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r3wgQLkWEe26eKBxVz0OTQ" name="Row" visibility="package" method="_sF64FLkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r3wgQrkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r3wgQ7kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r3wgQbkWEe26eKBxVz0OTQ" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r3wgRLkWEe26eKBxVz0OTQ" type="_r3vSILkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sEWKwLkWEe26eKBxVz0OTQ" name="Row" visibility="package" method="_sF6RDLkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sEWKw7kWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sEWKxLkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sEWKwbkWEe26eKBxVz0OTQ" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sEWKwrkWEe26eKBxVz0OTQ" name="element" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEWKxbkWEe26eKBxVz0OTQ" type="_r3vSILkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sEWx0LkWEe26eKBxVz0OTQ" name="Row" visibility="package" method="_sF64ELkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sEWx0rkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sEWx07kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sEWx0bkWEe26eKBxVz0OTQ" name="rowArray" type="_sD8iIbkWEe26eKBxVz0OTQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sEWx1bkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sEWx1LkWEe26eKBxVz0OTQ" type="_r3vSILkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r3xHULkWEe26eKBxVz0OTQ" name="SchedulableObjectQueue">
              <generalization xmi:id="_r3xuYbkWEe26eKBxVz0OTQ" general="_r3okcLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFNtcrkWEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFNtc7kWEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF64F7kWEe26eKBxVz0OTQ" name="SchedulableObjectQueue" specification="_sEXY4LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF64GLkWEe26eKBxVz0OTQ" name="comparitor" type="_sCSVQ7kWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF64GbkWEe26eKBxVz0OTQ" type="_r3xHULkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF64GrkWEe26eKBxVz0OTQ" name="SchedulableObjectQueue" specification="_sEX_8bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF64G7kWEe26eKBxVz0OTQ" name="comparitor" type="_sCSVQ7kWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF64HLkWEe26eKBxVz0OTQ" name="schedulableObjects" type="_sCvoQLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF64HbkWEe26eKBxVz0OTQ" type="_r3xHULkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_sEXY4LkWEe26eKBxVz0OTQ" name="SchedulableObjectQueue" visibility="package" method="_sF64F7kWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sEXY4rkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sEXY47kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sEXY4bkWEe26eKBxVz0OTQ" name="comparitor" type="_sCSVQ7kWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEXY5LkWEe26eKBxVz0OTQ" type="_r3xHULkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sEX_8bkWEe26eKBxVz0OTQ" name="SchedulableObjectQueue" visibility="package" method="_sF64GrkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sEX_9LkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sEX_9bkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sEX_8rkWEe26eKBxVz0OTQ" name="comparitor" type="_sCSVQ7kWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEX_87kWEe26eKBxVz0OTQ" name="schedulableObjects" type="_sCvoQLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEX_9rkWEe26eKBxVz0OTQ" type="_r3xHULkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r3y8gLkWEe26eKBxVz0OTQ" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_sGQPRLkWEe26eKBxVz0OTQ">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sFNtdLkWEe26eKBxVz0OTQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFNtdbkWEe26eKBxVz0OTQ" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFNtdrkWEe26eKBxVz0OTQ" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFOUgbkWEe26eKBxVz0OTQ" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFOUg7kWEe26eKBxVz0OTQ" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFOUhLkWEe26eKBxVz0OTQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFOUhrkWEe26eKBxVz0OTQ" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFO7kbkWEe26eKBxVz0OTQ" name="schedule" visibility="protected" type="_r35DILkWEe26eKBxVz0OTQ" association="_sG7ksbkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFO7k7kWEe26eKBxVz0OTQ" name="poset" visibility="protected" type="_r3HnELkWEe26eKBxVz0OTQ" association="_sG7ktLkWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF64HrkWEe26eKBxVz0OTQ" name="Schedule" specification="_sDBVELkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF64H7kWEe26eKBxVz0OTQ" name="poset" type="_r3HnELkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF64ILkWEe26eKBxVz0OTQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF64IbkWEe26eKBxVz0OTQ" type="_r3y8gLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF7fJLkWEe26eKBxVz0OTQ" name="getSchedule" specification="_r30xsrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF7fJbkWEe26eKBxVz0OTQ" type="_r35DILkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF7fJrkWEe26eKBxVz0OTQ" name="buildSchedule" specification="_r30xs7kWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF7fJ7kWEe26eKBxVz0OTQ" name="toProgram" specification="_r30xtLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF7fKLkWEe26eKBxVz0OTQ" type="_r3h2wLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF7fKbkWEe26eKBxVz0OTQ" name="replaceNullWithSleep" specification="_sDB8IrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF7fKrkWEe26eKBxVz0OTQ" name="program" type="_r3h2wLkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF7fK7kWEe26eKBxVz0OTQ" name="fakeSchedulingToTestRest" specification="_sDB8JLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF7fLLkWEe26eKBxVz0OTQ" name="next" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF7fLbkWEe26eKBxVz0OTQ" name="getChannelAndSetStartTime" specification="_sDB8JrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF7fLrkWEe26eKBxVz0OTQ" name="schedulableObject" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF7fL7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF7fMLkWEe26eKBxVz0OTQ" name="findChannelAndTime" specification="_sDB8KbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF7fMbkWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF7fMrkWEe26eKBxVz0OTQ" name="schedulableObject" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF7fM7kWEe26eKBxVz0OTQ" type="_r3zjkLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF7fNLkWEe26eKBxVz0OTQ" name="continueSearch" specification="_sDCjMbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF7fNbkWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF7fNrkWEe26eKBxVz0OTQ" name="activation" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF7fN7kWEe26eKBxVz0OTQ" type="_r3zjkLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF7fOLkWEe26eKBxVz0OTQ" name="noOtherChannelConflicts" specification="_sDCjNbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF7fObkWEe26eKBxVz0OTQ" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF7fOrkWEe26eKBxVz0OTQ" name="schedulableObject" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF7fO7kWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF7fPLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF7fPbkWEe26eKBxVz0OTQ" name="conflictsExist" specification="_sDCjOrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF7fPrkWEe26eKBxVz0OTQ" name="obj" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF7fP7kWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF7fQLkWEe26eKBxVz0OTQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF7fQbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF7fQrkWEe26eKBxVz0OTQ" name="freeOfCoordinatorConflicts" specification="_sDDKQrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF7fQ7kWEe26eKBxVz0OTQ" name="obj" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF7fRLkWEe26eKBxVz0OTQ" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF7fRbkWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF7fRrkWEe26eKBxVz0OTQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF7fR7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF7fSLkWEe26eKBxVz0OTQ" name="isAvailable" specification="_sDDKSLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF7fSbkWEe26eKBxVz0OTQ" name="a1" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF7fSrkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF7fS7kWEe26eKBxVz0OTQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF7fTLkWEe26eKBxVz0OTQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF7fTbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF8GMLkWEe26eKBxVz0OTQ" name="isAvailable" specification="_sDDKTrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF8GMbkWEe26eKBxVz0OTQ" name="a1" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF8GMrkWEe26eKBxVz0OTQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF8GM7kWEe26eKBxVz0OTQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF8GNLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF8GNbkWEe26eKBxVz0OTQ" name="timeRemaining" specification="_r31_0LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF8GNrkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF8GN7kWEe26eKBxVz0OTQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF8GOLkWEe26eKBxVz0OTQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF8GObkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF8GOrkWEe26eKBxVz0OTQ" name="canCombineEntriesInPlace" specification="_sDDxUbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF8GO7kWEe26eKBxVz0OTQ" name="a1" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF8GPLkWEe26eKBxVz0OTQ" name="a2" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF8GPbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF8GPrkWEe26eKBxVz0OTQ" name="combinedEntriesInPlace" specification="_sDDxVbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF8GP7kWEe26eKBxVz0OTQ" name="a1" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF8GQLkWEe26eKBxVz0OTQ" name="a2" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF8GQbkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF8GQrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF8GQ7kWEe26eKBxVz0OTQ" name="addToSchedule" specification="_sDDxWrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF8GRLkWEe26eKBxVz0OTQ" name="next" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF8GRbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF8GRrkWEe26eKBxVz0OTQ" name="reportNotSchedulable" specification="_sDDxXbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF8GR7kWEe26eKBxVz0OTQ" name="object" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF8GSLkWEe26eKBxVz0OTQ" name="printVerbose" specification="_r31_1bkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF8GSbkWEe26eKBxVz0OTQ" name="print" specification="_r32m4LkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r30xsrkWEe26eKBxVz0OTQ" name="getSchedule" method="_sF7fJLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGQPR7kWEe26eKBxVz0OTQ">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_sDB8ILkWEe26eKBxVz0OTQ" type="_r35DILkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r30xs7kWEe26eKBxVz0OTQ" name="buildSchedule" visibility="private" method="_sF7fJrkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r30xtLkWEe26eKBxVz0OTQ" name="toProgram" method="_sF7fJ7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDB8IbkWEe26eKBxVz0OTQ" type="_r3h2wLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r31_0LkWEe26eKBxVz0OTQ" name="timeRemaining" visibility="protected" method="_sF8GNbkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGQ2U7kWEe26eKBxVz0OTQ">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_r31_0bkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r31_0rkWEe26eKBxVz0OTQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r31_07kWEe26eKBxVz0OTQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r31_1LkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r31_1bkWEe26eKBxVz0OTQ" name="printVerbose" method="_sF8GSLkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r32m4LkWEe26eKBxVz0OTQ" name="print" method="_sF8GSbkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_sDBVELkWEe26eKBxVz0OTQ" name="Schedule" visibility="package" method="_sF64HrkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sDBVE7kWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sDBVFLkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sDBVEbkWEe26eKBxVz0OTQ" name="poset" type="_r3HnELkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDBVErkWEe26eKBxVz0OTQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDBVFbkWEe26eKBxVz0OTQ" type="_r3y8gLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDB8IrkWEe26eKBxVz0OTQ" name="replaceNullWithSleep" visibility="private" method="_sF7fKbkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGQPSLkWEe26eKBxVz0OTQ">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_sDB8I7kWEe26eKBxVz0OTQ" name="program" type="_r3h2wLkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDB8JLkWEe26eKBxVz0OTQ" name="fakeSchedulingToTestRest" visibility="private" method="_sF7fK7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDB8JbkWEe26eKBxVz0OTQ" name="next" type="_r19wgLkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDB8JrkWEe26eKBxVz0OTQ" name="getChannelAndSetStartTime" visibility="protected" method="_sF7fLbkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGQPSbkWEe26eKBxVz0OTQ">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_sDB8J7kWEe26eKBxVz0OTQ" name="schedulableObject" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDB8KLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sDB8KbkWEe26eKBxVz0OTQ" name="findChannelAndTime" visibility="protected" method="_sF7fMLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDB8KrkWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDB8K7kWEe26eKBxVz0OTQ" name="schedulableObject" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDCjMLkWEe26eKBxVz0OTQ" type="_r3zjkLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDCjMbkWEe26eKBxVz0OTQ" name="continueSearch" visibility="protected" method="_sF7fNLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGQ2ULkWEe26eKBxVz0OTQ">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_sDCjMrkWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDCjM7kWEe26eKBxVz0OTQ" name="activation" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDCjNLkWEe26eKBxVz0OTQ" type="_r3zjkLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDCjNbkWEe26eKBxVz0OTQ" name="noOtherChannelConflicts" visibility="protected" method="_sF7fOLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDCjNrkWEe26eKBxVz0OTQ" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDCjN7kWEe26eKBxVz0OTQ" name="schedulableObject" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDCjOLkWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDCjObkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sDCjOrkWEe26eKBxVz0OTQ" name="conflictsExist" visibility="protected" method="_sF7fPbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDCjO7kWEe26eKBxVz0OTQ" name="obj" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDCjPLkWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDDKQLkWEe26eKBxVz0OTQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDDKQbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sDDKQrkWEe26eKBxVz0OTQ" name="freeOfCoordinatorConflicts" visibility="protected" method="_sF7fQrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDDKQ7kWEe26eKBxVz0OTQ" name="obj" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDDKRLkWEe26eKBxVz0OTQ" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDDKRbkWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDDKRrkWEe26eKBxVz0OTQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDDKR7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sDDKSLkWEe26eKBxVz0OTQ" name="isAvailable" visibility="protected" method="_sF7fSLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGQ2UbkWEe26eKBxVz0OTQ">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_sDDKSbkWEe26eKBxVz0OTQ" name="a1" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDDKSrkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDDKS7kWEe26eKBxVz0OTQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDDKTLkWEe26eKBxVz0OTQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDDKTbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sDDKTrkWEe26eKBxVz0OTQ" name="isAvailable" visibility="protected" method="_sF8GMLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGQ2UrkWEe26eKBxVz0OTQ">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_sDDKT7kWEe26eKBxVz0OTQ" name="a1" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDDKULkWEe26eKBxVz0OTQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDDKUbkWEe26eKBxVz0OTQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDDxULkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sDDxUbkWEe26eKBxVz0OTQ" name="canCombineEntriesInPlace" visibility="private" method="_sF8GOrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDDxUrkWEe26eKBxVz0OTQ" name="a1" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDDxU7kWEe26eKBxVz0OTQ" name="a2" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDDxVLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sDDxVbkWEe26eKBxVz0OTQ" name="combinedEntriesInPlace" visibility="private" method="_sF8GPrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDDxVrkWEe26eKBxVz0OTQ" name="a1" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDDxV7kWEe26eKBxVz0OTQ" name="a2" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDDxWLkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDDxWbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sDDxWrkWEe26eKBxVz0OTQ" name="addToSchedule" visibility="protected" method="_sF8GQ7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDDxW7kWEe26eKBxVz0OTQ" name="next" type="_r19wgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDDxXLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sDDxXbkWEe26eKBxVz0OTQ" name="reportNotSchedulable" visibility="private" method="_sF8GRrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDEYYLkWEe26eKBxVz0OTQ" name="object" type="_r19wgLkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_r3zjkLkWEe26eKBxVz0OTQ" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_sFPioLkWEe26eKBxVz0OTQ" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sFPiorkWEe26eKBxVz0OTQ" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF64IrkWEe26eKBxVz0OTQ" name="ScheduleLocation" specification="_r3zjkbkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sF64I7kWEe26eKBxVz0OTQ" type="_r3zjkLkWEe26eKBxVz0OTQ" direction="return"/>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF64JLkWEe26eKBxVz0OTQ" name="ScheduleLocation" specification="_r30KorkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sF64JbkWEe26eKBxVz0OTQ" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sF64JrkWEe26eKBxVz0OTQ" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_sF64J7kWEe26eKBxVz0OTQ" type="_r3zjkLkWEe26eKBxVz0OTQ" direction="return"/>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF7fILkWEe26eKBxVz0OTQ" name="getChannel" specification="_r30KqLkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sF7fIbkWEe26eKBxVz0OTQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF7fIrkWEe26eKBxVz0OTQ" name="getTime" specification="_r30xsLkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sF7fI7kWEe26eKBxVz0OTQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_r3zjkbkWEe26eKBxVz0OTQ" name="ScheduleLocation" visibility="package" method="_sF64IrkWEe26eKBxVz0OTQ">
                  <eAnnotations xmi:id="_r3zjkrkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r30KoLkWEe26eKBxVz0OTQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r30KobkWEe26eKBxVz0OTQ" type="_r3zjkLkWEe26eKBxVz0OTQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r30KorkWEe26eKBxVz0OTQ" name="ScheduleLocation" visibility="package" method="_sF64JLkWEe26eKBxVz0OTQ">
                  <eAnnotations xmi:id="_r30KpbkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r30KprkWEe26eKBxVz0OTQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r30Ko7kWEe26eKBxVz0OTQ" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r30KpLkWEe26eKBxVz0OTQ" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_r30Kp7kWEe26eKBxVz0OTQ" type="_r3zjkLkWEe26eKBxVz0OTQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r30KqLkWEe26eKBxVz0OTQ" name="getChannel" visibility="protected" method="_sF7fILkWEe26eKBxVz0OTQ">
                  <ownedComment xmi:id="_sGQPRbkWEe26eKBxVz0OTQ">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r30KqbkWEe26eKBxVz0OTQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r30xsLkWEe26eKBxVz0OTQ" name="getTime" visibility="protected" method="_sF7fIrkWEe26eKBxVz0OTQ">
                  <ownedComment xmi:id="_sGQPRrkWEe26eKBxVz0OTQ">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r30xsbkWEe26eKBxVz0OTQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r35DILkWEe26eKBxVz0OTQ" name="ScheduleTable">
              <generalization xmi:id="_sDE_cLkWEe26eKBxVz0OTQ" general="_r3_w0LkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFQJsLkWEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFQJsbkWEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF8tQLkWEe26eKBxVz0OTQ" name="ScheduleTable" specification="_r35qMLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF8tQbkWEe26eKBxVz0OTQ" type="_r35DILkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF8tQrkWEe26eKBxVz0OTQ" name="ScheduleTable" specification="_r35qNLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF8tQ7kWEe26eKBxVz0OTQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF8tRLkWEe26eKBxVz0OTQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF8tRbkWEe26eKBxVz0OTQ" type="_r35DILkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r35qMLkWEe26eKBxVz0OTQ" name="ScheduleTable" visibility="package" method="_sF8tQLkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r35qMbkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r35qMrkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r35qM7kWEe26eKBxVz0OTQ" type="_r35DILkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r35qNLkWEe26eKBxVz0OTQ" name="ScheduleTable" visibility="package" method="_sF8tQrkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r35qN7kWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r35qOLkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r35qNbkWEe26eKBxVz0OTQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r35qNrkWEe26eKBxVz0OTQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r35qObkWEe26eKBxVz0OTQ" type="_r35DILkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r36RQLkWEe26eKBxVz0OTQ" name="ScheduleTime">
              <ownedAttribute xmi:id="_sFQJsrkWEe26eKBxVz0OTQ" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFQJs7kWEe26eKBxVz0OTQ" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF8tRrkWEe26eKBxVz0OTQ" name="ScheduleTime" specification="_r364ULkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF8tR7kWEe26eKBxVz0OTQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF8tSLkWEe26eKBxVz0OTQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF8tSbkWEe26eKBxVz0OTQ" type="_r36RQLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r364ULkWEe26eKBxVz0OTQ" name="ScheduleTime" visibility="package" method="_sF8tRrkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r364U7kWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r364VLkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r364UbkWEe26eKBxVz0OTQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r364UrkWEe26eKBxVz0OTQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r364VbkWEe26eKBxVz0OTQ" type="_r36RQLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r364VrkWEe26eKBxVz0OTQ" name="SimulatorInput">
              <ownedComment xmi:id="_sGQ2VLkWEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r37fYLkWEe26eKBxVz0OTQ" name="SortedPeriodQueue">
              <generalization xmi:id="_r38GdbkWEe26eKBxVz0OTQ" general="_r3okcLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFQJtLkWEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFQJtbkWEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF8tSrkWEe26eKBxVz0OTQ" name="SortedPeriodQueue" specification="_r38GcbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF8tS7kWEe26eKBxVz0OTQ" type="_r37fYLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF8tTLkWEe26eKBxVz0OTQ" name="SortedPeriodQueue" specification="_sDFmgLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF8tTbkWEe26eKBxVz0OTQ" name="schedulableObjects" type="_sCvoQLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF8tTrkWEe26eKBxVz0OTQ" type="_r37fYLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r38GcbkWEe26eKBxVz0OTQ" name="SortedPeriodQueue" visibility="package" method="_sF8tSrkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r38GcrkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r38Gc7kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r38GdLkWEe26eKBxVz0OTQ" type="_r37fYLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDFmgLkWEe26eKBxVz0OTQ" name="SortedPeriodQueue" visibility="package" method="_sF8tTLkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sDFmgrkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sDFmg7kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sDFmgbkWEe26eKBxVz0OTQ" name="schedulableObjects" type="_sCvoQLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDFmhLkWEe26eKBxVz0OTQ" type="_r37fYLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_r38tgbkWEe26eKBxVz0OTQ" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_sDFmhrkWEe26eKBxVz0OTQ" general="_r3pykbkWEe26eKBxVz0OTQ"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_r39UkLkWEe26eKBxVz0OTQ" name="ScheduleChoices">
                <ownedLiteral xmi:id="_r39UkrkWEe26eKBxVz0OTQ" name="PRIORITY"/>
                <ownedLiteral xmi:id="_r39Uk7kWEe26eKBxVz0OTQ" name="RM"/>
                <ownedLiteral xmi:id="_r39UlLkWEe26eKBxVz0OTQ" name="DM"/>
                <ownedLiteral xmi:id="_r397oLkWEe26eKBxVz0OTQ" name="RTHART"/>
                <ownedLiteral xmi:id="_r397obkWEe26eKBxVz0OTQ" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_r397orkWEe26eKBxVz0OTQ" name="POSET_RM"/>
                <ownedLiteral xmi:id="_r397o7kWEe26eKBxVz0OTQ" name="POSET_DM"/>
                <ownedLiteral xmi:id="_r397pLkWEe26eKBxVz0OTQ" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_r397pbkWEe26eKBxVz0OTQ" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_r397prkWEe26eKBxVz0OTQ" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_r397p7kWEe26eKBxVz0OTQ" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_r397qLkWEe26eKBxVz0OTQ" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_r397qbkWEe26eKBxVz0OTQ" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_r397qrkWEe26eKBxVz0OTQ" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r3-isLkWEe26eKBxVz0OTQ" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r3-isbkWEe26eKBxVz0OTQ" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r3-isrkWEe26eKBxVz0OTQ" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r3-is7kWEe26eKBxVz0OTQ" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_r3_JwLkWEe26eKBxVz0OTQ" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r3_JwbkWEe26eKBxVz0OTQ" name="SystemFactory">
              <ownedComment xmi:id="_sGQ2VbkWEe26eKBxVz0OTQ">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF8tT7kWEe26eKBxVz0OTQ" name="create" specification="_sDGNkrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF8tULkWEe26eKBxVz0OTQ" name="workload" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF8tUbkWEe26eKBxVz0OTQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF8tUrkWEe26eKBxVz0OTQ" name="choice" type="_r39UkLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF8tU7kWEe26eKBxVz0OTQ" type="_r4SEsLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_sDGNkrkWEe26eKBxVz0OTQ" name="create" isStatic="true" method="_sF8tT7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDGNk7kWEe26eKBxVz0OTQ" name="workload" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDGNlLkWEe26eKBxVz0OTQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDGNlbkWEe26eKBxVz0OTQ" name="choice" type="_r39UkLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDGNlrkWEe26eKBxVz0OTQ" type="_r4SEsLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r3_w0LkWEe26eKBxVz0OTQ" name="Table">
              <generalization xmi:id="_sEZ1JLkWEe26eKBxVz0OTQ" general="_sCBPgLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFQwwLkWEe26eKBxVz0OTQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFQwwbkWEe26eKBxVz0OTQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF9UULkWEe26eKBxVz0OTQ" name="Table" specification="_r4AX4bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF9UUbkWEe26eKBxVz0OTQ" type="_r3_w0LkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF9UUrkWEe26eKBxVz0OTQ" name="Table" specification="_r4AX5bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF9UU7kWEe26eKBxVz0OTQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF9UVLkWEe26eKBxVz0OTQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF9UVbkWEe26eKBxVz0OTQ" type="_r3_w0LkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF9UVrkWEe26eKBxVz0OTQ" name="getNumRows" specification="_r4A-87kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF9UV7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF9UWLkWEe26eKBxVz0OTQ" name="getNumColumns" specification="_r4A-9bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF9UWbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF9UWrkWEe26eKBxVz0OTQ" name="set" specification="_sEZOEbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF9UW7kWEe26eKBxVz0OTQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF9UXLkWEe26eKBxVz0OTQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF9UXbkWEe26eKBxVz0OTQ" name="element" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF9UXrkWEe26eKBxVz0OTQ" name="get" specification="_r4A-97kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF9UX7kWEe26eKBxVz0OTQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF9UYLkWEe26eKBxVz0OTQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF9UYbkWEe26eKBxVz0OTQ" type="_sD8iIbkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4AX4bkWEe26eKBxVz0OTQ" name="Table" method="_sF9UULkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r4AX4rkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4AX47kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r4AX5LkWEe26eKBxVz0OTQ" type="_r3_w0LkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4AX5bkWEe26eKBxVz0OTQ" name="Table" method="_sF9UUrkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r4A-8LkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4A-8bkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r4AX5rkWEe26eKBxVz0OTQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4AX57kWEe26eKBxVz0OTQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4A-8rkWEe26eKBxVz0OTQ" type="_r3_w0LkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4A-87kWEe26eKBxVz0OTQ" name="getNumRows" method="_sF9UVrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4A-9LkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4A-9bkWEe26eKBxVz0OTQ" name="getNumColumns" method="_sF9UWLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4A-9rkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4A-97kWEe26eKBxVz0OTQ" name="get" method="_sF9UXrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4A--LkWEe26eKBxVz0OTQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4A--bkWEe26eKBxVz0OTQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sEZ1I7kWEe26eKBxVz0OTQ" type="_sD8iIbkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sEZOEbkWEe26eKBxVz0OTQ" name="set" method="_sF9UWrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sEZ1ILkWEe26eKBxVz0OTQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sEZ1IbkWEe26eKBxVz0OTQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sEZ1IrkWEe26eKBxVz0OTQ" name="element" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_r4BmALkWEe26eKBxVz0OTQ" name="Visualization">
              <ownedComment xmi:id="_sGQ2VrkWEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_r4CNELkWEe26eKBxVz0OTQ" name="SystemChoices">
                <ownedLiteral xmi:id="_r4CNErkWEe26eKBxVz0OTQ" name="SOURCE"/>
                <ownedLiteral xmi:id="_r4CNE7kWEe26eKBxVz0OTQ" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_r4CNFLkWEe26eKBxVz0OTQ" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_r4CNFbkWEe26eKBxVz0OTQ" name="LATENCY"/>
                <ownedLiteral xmi:id="_r4C0ILkWEe26eKBxVz0OTQ" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_r4C0IbkWEe26eKBxVz0OTQ" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_r4C0IrkWEe26eKBxVz0OTQ" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_r4C0I7kWEe26eKBxVz0OTQ" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_r4DbMLkWEe26eKBxVz0OTQ" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_r4DbMbkWEe26eKBxVz0OTQ" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_r4DbMrkWEe26eKBxVz0OTQ" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_r4DbM7kWEe26eKBxVz0OTQ" name="toDisplay"/>
              <ownedOperation xmi:id="_r4DbNLkWEe26eKBxVz0OTQ" name="toFile"/>
              <ownedOperation xmi:id="_r4DbNbkWEe26eKBxVz0OTQ" name="toString">
                <ownedParameter xmi:id="_r4DbNrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4ECQLkWEe26eKBxVz0OTQ" name="VisualizationFactory">
              <ownedComment xmi:id="_sGQ2V7kWEe26eKBxVz0OTQ">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF9UYrkWEe26eKBxVz0OTQ" name="createProgramVisualization" specification="_sDHbs7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF9UY7kWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF9UZLkWEe26eKBxVz0OTQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF9UZbkWEe26eKBxVz0OTQ" name="choice" type="_r4CNELkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF9UZrkWEe26eKBxVz0OTQ" type="_r4BmALkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF9UZ7kWEe26eKBxVz0OTQ" name="createWorkLoadVisualization" specification="_sDICxLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF9UaLkWEe26eKBxVz0OTQ" name="workload" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF9UabkWEe26eKBxVz0OTQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF9UarkWEe26eKBxVz0OTQ" name="choice" type="_r4C0I7kWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF9Ua7kWEe26eKBxVz0OTQ" type="_r4BmALkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_sDHbs7kWEe26eKBxVz0OTQ" name="createProgramVisualization" isStatic="true" method="_sF9UYrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDICwLkWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDICwbkWEe26eKBxVz0OTQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDICwrkWEe26eKBxVz0OTQ" name="choice" type="_r4CNELkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDICw7kWEe26eKBxVz0OTQ" type="_r4BmALkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDICxLkWEe26eKBxVz0OTQ" name="createWorkLoadVisualization" isStatic="true" method="_sF9UZ7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDICxbkWEe26eKBxVz0OTQ" name="workload" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDICxrkWEe26eKBxVz0OTQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDICx7kWEe26eKBxVz0OTQ" name="choice" type="_r4C0I7kWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDICyLkWEe26eKBxVz0OTQ" type="_r4BmALkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4FQYLkWEe26eKBxVz0OTQ" name="VisualizationImplementation">
              <ownedComment xmi:id="_sGQ2WLkWEe26eKBxVz0OTQ">
                <body>Handles visualizations for Warp program outputs.&#xD;
This includes creating either GraphViz files (.gv) or WARP files (.wf) and &#xD;
displaying graphs in a new window.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sFQwwrkWEe26eKBxVz0OTQ" name="visualization" visibility="private" type="_r2c4sLkWEe26eKBxVz0OTQ" association="_sG8LwbkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFQwxLkWEe26eKBxVz0OTQ" name="fileContent" visibility="private" type="_r2c4sLkWEe26eKBxVz0OTQ" association="_sG8LxLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFRX0LkWEe26eKBxVz0OTQ" name="window" visibility="private" type="_r21TMLkWEe26eKBxVz0OTQ" association="_sG8y0bkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFRX0rkWEe26eKBxVz0OTQ" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFRX1LkWEe26eKBxVz0OTQ" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFRX1rkWEe26eKBxVz0OTQ" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFRX2LkWEe26eKBxVz0OTQ" name="fm" visibility="private" type="_r2jmYLkWEe26eKBxVz0OTQ" association="_sG9Z4bkWEe26eKBxVz0OTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFR-4LkWEe26eKBxVz0OTQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFR-4rkWEe26eKBxVz0OTQ" name="warp" visibility="private" type="_r4SEsLkWEe26eKBxVz0OTQ" association="_sG-A8bkWEe26eKBxVz0OTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFR-47kWEe26eKBxVz0OTQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFSl8LkWEe26eKBxVz0OTQ" name="workLoad" visibility="private" type="_r4b1sLkWEe26eKBxVz0OTQ" association="_sG-oALkWEe26eKBxVz0OTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFSl8bkWEe26eKBxVz0OTQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFSl87kWEe26eKBxVz0OTQ" name="visualizationObject" visibility="private" type="_r4I6wLkWEe26eKBxVz0OTQ" association="_sG-oA7kWEe26eKBxVz0OTQ"/>
              <interfaceRealization xmi:id="_sDICybkWEe26eKBxVz0OTQ" client="_r4FQYLkWEe26eKBxVz0OTQ" supplier="_r4BmALkWEe26eKBxVz0OTQ" contract="_r4BmALkWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF97YLkWEe26eKBxVz0OTQ" name="VisualizationImplementation" specification="_sEbDQbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF97YbkWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF97YrkWEe26eKBxVz0OTQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF97Y7kWEe26eKBxVz0OTQ" name="choice" type="_sEacMLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF97ZLkWEe26eKBxVz0OTQ" type="_r4FQYLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF97ZbkWEe26eKBxVz0OTQ" name="VisualizationImplementation" specification="_sEbqWLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF97ZrkWEe26eKBxVz0OTQ" name="workLoad" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF97Z7kWEe26eKBxVz0OTQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF97aLkWEe26eKBxVz0OTQ" name="choice" type="_sEbqVrkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF97abkWEe26eKBxVz0OTQ" type="_r4FQYLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF97arkWEe26eKBxVz0OTQ" name="toDisplay" specification="_r4F3cLkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>window = visualizationObject.displayVisualization();&#xD;
 if (window != null) {&#xD;
   window.setVisible();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF97a7kWEe26eKBxVz0OTQ" name="toFile" specification="_r4Geg7kWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF97bLkWEe26eKBxVz0OTQ" name="toString" specification="_r4Geh7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF97bbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF97brkWEe26eKBxVz0OTQ" name="createVisualization" specification="_sEcRZbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF97b7kWEe26eKBxVz0OTQ" name="choice" type="_sEacMLkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case RELIABILITIES:&#xD;
     // TODO Implement Reliability Analysis Visualization&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case SIMULATOR_INPUT:&#xD;
     // TODO Implement Simulator Input Visualization&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
&#xD;
   case LATENCY:&#xD;
     // TODO Implement Latency Analysis Visualization&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case CHANNEL:&#xD;
     // TODO Implement Channel Analysis Visualization&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp,&#xD;
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(&#xD;
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF97cLkWEe26eKBxVz0OTQ" name="createVisualization" specification="_sEcRZ7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF97cbkWEe26eKBxVz0OTQ" name="choice" type="_sEbqVrkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case COMUNICATION_GRAPH:&#xD;
     // createWarpVisualization();&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF97crkWEe26eKBxVz0OTQ" name="createVisualization" specification="_sEc4cLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF97c7kWEe26eKBxVz0OTQ" name="obj" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 /* display is file content printed to console */&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
 visualizationObject = obj;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF97dLkWEe26eKBxVz0OTQ" name="createFileNameTemplate" specification="_r4HFlLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF97dbkWEe26eKBxVz0OTQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF97drkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 // Now create the fileNameTemplate using full output path and input filename&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4F3cLkWEe26eKBxVz0OTQ" name="toDisplay" method="_sF97arkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r4Geg7kWEe26eKBxVz0OTQ" name="toFile" method="_sF97a7kWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r4Geh7kWEe26eKBxVz0OTQ" name="toString" method="_sF97bLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4HFkLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4HFlLkWEe26eKBxVz0OTQ" name="createFileNameTemplate" visibility="private" method="_sF97dLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGRdYrkWEe26eKBxVz0OTQ">
                  <body>Generates full path to output file.&#xD;
   * &#xD;
   * @param outputDirectory&#xD;
   * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4HFlbkWEe26eKBxVz0OTQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4HFlrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sEbDQbkWEe26eKBxVz0OTQ" name="VisualizationImplementation" method="_sF97YLkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sEbqU7kWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sEbqVLkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_sGQ2WbkWEe26eKBxVz0OTQ">
                  <body>Creates visualization from warp program output.&#xD;
   * &#xD;
   * @param warp WarpInterface object. &#xD;
   * @param outputDirectory Where to save the visualization&#xD;
   * @param choice Type of visualization to create. @see Visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_sEbqULkWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEbqUbkWEe26eKBxVz0OTQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sEbqUrkWEe26eKBxVz0OTQ" name="choice" type="_sEacMLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEbqVbkWEe26eKBxVz0OTQ" type="_r4FQYLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sEbqWLkWEe26eKBxVz0OTQ" name="VisualizationImplementation" method="_sF97ZbkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sEcRYrkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sEcRY7kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_sGRdYLkWEe26eKBxVz0OTQ">
                  <body>Creates visualization from given workload.&#xD;
   * &#xD;
   * @param workLoad WorkLoad object&#xD;
   * @param outputDirectory Where to save the visualization&#xD;
   * @param choice Type of visualization to create. @see Visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_sEbqWbkWEe26eKBxVz0OTQ" name="workLoad" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEcRYLkWEe26eKBxVz0OTQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sEcRYbkWEe26eKBxVz0OTQ" name="choice" type="_sEbqVrkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEcRZLkWEe26eKBxVz0OTQ" type="_r4FQYLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sEcRZbkWEe26eKBxVz0OTQ" name="createVisualization" visibility="private" method="_sF97brkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sEcRZrkWEe26eKBxVz0OTQ" name="choice" type="_sEacMLkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sEcRZ7kWEe26eKBxVz0OTQ" name="createVisualization" visibility="private" method="_sF97cLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGRdYbkWEe26eKBxVz0OTQ">
                  <body>Generates visualization from workload choice.&#xD;
   * Either communication graph, graphviz, or input graph.&#xD;
   * &#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_sEcRaLkWEe26eKBxVz0OTQ" name="choice" type="_sEbqVrkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sEc4cLkWEe26eKBxVz0OTQ" name="createVisualization" visibility="private" method="_sF97crkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sEc4cbkWEe26eKBxVz0OTQ" name="obj" type="_sD8iIbkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4I6wLkWEe26eKBxVz0OTQ" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_sGRdY7kWEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sFSl9bkWEe26eKBxVz0OTQ" name="fm" visibility="private" type="_r2jmYLkWEe26eKBxVz0OTQ" association="_sG_PEbkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFSl97kWEe26eKBxVz0OTQ" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFTNAbkWEe26eKBxVz0OTQ" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFTNA7kWEe26eKBxVz0OTQ" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFTNBLkWEe26eKBxVz0OTQ" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFTNBbkWEe26eKBxVz0OTQ" name="visualizationData" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sFTNBrkWEe26eKBxVz0OTQ" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF-icLkWEe26eKBxVz0OTQ" name="VisualizationObject" specification="_sDJ38LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF-icbkWEe26eKBxVz0OTQ" name="fm" type="_r2jmYLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF-icrkWEe26eKBxVz0OTQ" name="workLoad" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF-ic7kWEe26eKBxVz0OTQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF-idLkWEe26eKBxVz0OTQ" type="_r4I6wLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,&#xD;
     String.valueOf(workLoad.getMinPacketReceptionRate()), String.valueOf(workLoad.getE2e()));&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF-idbkWEe26eKBxVz0OTQ" name="VisualizationObject" specification="_sDKfALkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF-idrkWEe26eKBxVz0OTQ" name="fm" type="_r2jmYLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF-id7kWEe26eKBxVz0OTQ" name="warp" type="_r38tgbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF-ieLkWEe26eKBxVz0OTQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF-iebkWEe26eKBxVz0OTQ" type="_r4I6wLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults());&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e());&#xD;
 }&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF-ierkWEe26eKBxVz0OTQ" name="VisualizationObject" specification="_sDKfB7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF-ie7kWEe26eKBxVz0OTQ" name="fm" type="_r2jmYLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF-ifLkWEe26eKBxVz0OTQ" name="warp" type="_r38tgbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF-ifbkWEe26eKBxVz0OTQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF-ifrkWEe26eKBxVz0OTQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF-if7kWEe26eKBxVz0OTQ" type="_r4I6wLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getNumFaults()) + nameExtension;&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e())&#xD;
           + nameExtension;&#xD;
 }&#xD;
&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF-igLkWEe26eKBxVz0OTQ" name="VisualizationObject" specification="_sDKfD7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF-igbkWEe26eKBxVz0OTQ" name="fm" type="_r2jmYLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF-igrkWEe26eKBxVz0OTQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF-ig7kWEe26eKBxVz0OTQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF-ihLkWEe26eKBxVz0OTQ" type="_r4I6wLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = nameExtension;&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF-ihbkWEe26eKBxVz0OTQ" name="nameExtension" specification="_sEdfgLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF-ihrkWEe26eKBxVz0OTQ" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF-ih7kWEe26eKBxVz0OTQ" name="m" type="_sER5UrkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF-iiLkWEe26eKBxVz0OTQ" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF-iibkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension =&#xD;
     String.format(&quot;%s-%sM-%sE2E&quot;, schName, String.valueOf(m), String.valueOf(e2e));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF-iirkWEe26eKBxVz0OTQ" name="nameExtension" specification="_r4KI4LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF-ii7kWEe26eKBxVz0OTQ" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF-ijLkWEe26eKBxVz0OTQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF-ijbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;, schName, String.valueOf(numFaults));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF-ijrkWEe26eKBxVz0OTQ" name="getFileManager" specification="_r4KI5LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF-ij7kWEe26eKBxVz0OTQ" type="_r2jmYLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return fm;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF-ikLkWEe26eKBxVz0OTQ" name="visualization" specification="_r4KI5bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF-ikbkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 var data = createVisualizationData();&#xD;
&#xD;
 if (data != null) {&#xD;
   String nodeString = String.join(&quot;\t&quot;, createColumnHeader()) + &quot;\n&quot;;&#xD;
   content.add(nodeString);&#xD;
&#xD;
   for (int rowIndex = 0; rowIndex &lt; data.length; rowIndex++) {&#xD;
     var row = data[rowIndex];&#xD;
     String rowString = String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
     content.add(rowString);&#xD;
   }&#xD;
 } else {&#xD;
   content.add(NOT_IMPLEMENTED);&#xD;
 }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF-ikrkWEe26eKBxVz0OTQ" name="createFile" specification="_r4Kv8LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF-ik7kWEe26eKBxVz0OTQ" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF-ilLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF-ilbkWEe26eKBxVz0OTQ" name="fileVisualization" specification="_r4Kv87kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF-ilrkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 fileContent.addAll(visualization());&#xD;
 fileContent.addAll(createFooter());&#xD;
 return fileContent;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF-il7kWEe26eKBxVz0OTQ" name="displayVisualization" specification="_r4LXALkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF-imLkWEe26eKBxVz0OTQ" type="_r21TMLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return null; // not implemented&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF-imbkWEe26eKBxVz0OTQ" name="createHeader" specification="_r4LXAbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF-imrkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF_JgLkWEe26eKBxVz0OTQ" name="createFooter" specification="_r4LXArkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF_JgbkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF_JgrkWEe26eKBxVz0OTQ" name="createColumnHeader" specification="_r4LXA7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF_Jg7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sF_JhLkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new String[] {NOT_IMPLEMENTED};&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF_JhbkWEe26eKBxVz0OTQ" name="createVisualizationData" specification="_r4LXB7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF_JhrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sF_Jh7kWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualizationData; // not implemented--returns null&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4KI4LkWEe26eKBxVz0OTQ" name="nameExtension" visibility="private" method="_sF-iirkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4KI4bkWEe26eKBxVz0OTQ" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4KI4rkWEe26eKBxVz0OTQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4KI47kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4KI5LkWEe26eKBxVz0OTQ" name="getFileManager" method="_sF-ijrkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGRdZLkWEe26eKBxVz0OTQ">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_sDLGE7kWEe26eKBxVz0OTQ" type="_r2jmYLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4KI5bkWEe26eKBxVz0OTQ" name="visualization" method="_sF-ikLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDLGFLkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4Kv8LkWEe26eKBxVz0OTQ" name="createFile" method="_sF-ikrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4Kv8bkWEe26eKBxVz0OTQ" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4Kv8rkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4Kv87kWEe26eKBxVz0OTQ" name="fileVisualization" method="_sF-ilbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDLGFbkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4LXALkWEe26eKBxVz0OTQ" name="displayVisualization" method="_sF-il7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDLGFrkWEe26eKBxVz0OTQ" type="_r21TMLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4LXAbkWEe26eKBxVz0OTQ" name="createHeader" visibility="protected" method="_sF-imbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDLGF7kWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4LXArkWEe26eKBxVz0OTQ" name="createFooter" visibility="protected" method="_sF_JgLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDLGGLkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4LXA7kWEe26eKBxVz0OTQ" name="createColumnHeader" visibility="protected" method="_sF_JgrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4LXBLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r4LXBbkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4LXB7kWEe26eKBxVz0OTQ" name="createVisualizationData" visibility="protected" method="_sF_JhbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4LXCLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r4LXCbkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sDJ38LkWEe26eKBxVz0OTQ" name="VisualizationObject" visibility="package" method="_sF-icLkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sDJ39LkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sDJ39bkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sDJ38bkWEe26eKBxVz0OTQ" name="fm" type="_r2jmYLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDJ38rkWEe26eKBxVz0OTQ" name="workLoad" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDJ387kWEe26eKBxVz0OTQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDJ39rkWEe26eKBxVz0OTQ" type="_r4I6wLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDKfALkWEe26eKBxVz0OTQ" name="VisualizationObject" visibility="package" method="_sF-idbkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sDKfBLkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sDKfBbkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sDKfAbkWEe26eKBxVz0OTQ" name="fm" type="_r2jmYLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDKfArkWEe26eKBxVz0OTQ" name="warp" type="_r38tgbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDKfA7kWEe26eKBxVz0OTQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDKfBrkWEe26eKBxVz0OTQ" type="_r4I6wLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDKfB7kWEe26eKBxVz0OTQ" name="VisualizationObject" visibility="package" method="_sF-ierkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sDKfDLkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sDKfDbkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sDKfCLkWEe26eKBxVz0OTQ" name="fm" type="_r2jmYLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDKfCbkWEe26eKBxVz0OTQ" name="warp" type="_r38tgbkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDKfCrkWEe26eKBxVz0OTQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDKfC7kWEe26eKBxVz0OTQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDKfDrkWEe26eKBxVz0OTQ" type="_r4I6wLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDKfD7kWEe26eKBxVz0OTQ" name="VisualizationObject" visibility="package" method="_sF-igLkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sDLGELkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sDLGEbkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sDKfELkWEe26eKBxVz0OTQ" name="fm" type="_r2jmYLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDKfEbkWEe26eKBxVz0OTQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDKfErkWEe26eKBxVz0OTQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDLGErkWEe26eKBxVz0OTQ" type="_r4I6wLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sEdfgLkWEe26eKBxVz0OTQ" name="nameExtension" visibility="private" method="_sF-ihbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sEeGkLkWEe26eKBxVz0OTQ" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sEeGkbkWEe26eKBxVz0OTQ" name="m" type="_sER5UrkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEeGkrkWEe26eKBxVz0OTQ" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sEeGk7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4NMMLkWEe26eKBxVz0OTQ" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_sGRdZbkWEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_sEeGlLkWEe26eKBxVz0OTQ" general="_sCdUY7kWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFT0ErkWEe26eKBxVz0OTQ" name="workLoad" visibility="package" type="_r4b1sLkWEe26eKBxVz0OTQ" association="_sG_2IbkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFT0FLkWEe26eKBxVz0OTQ" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF_JiLkWEe26eKBxVz0OTQ" name="WorkLoadListener" specification="_sDLtILkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF_JibkWEe26eKBxVz0OTQ" name="workLoad" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sF_JirkWEe26eKBxVz0OTQ" type="_r4NMMLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF_Ji7kWEe26eKBxVz0OTQ" name="buildNodesAndFlows" specification="_sDLtJbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF_JjLkWEe26eKBxVz0OTQ" name="workLoad" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF_JjbkWEe26eKBxVz0OTQ" name="testPrintStdOut" specification="_r4NzQLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF_JjrkWEe26eKBxVz0OTQ" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF_Jj7kWEe26eKBxVz0OTQ" name="enterWarpName" specification="_sDMUMLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF_JkLkWEe26eKBxVz0OTQ" name="ctx" type="_sCeih7kWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF_JkbkWEe26eKBxVz0OTQ" name="enterFlowName" specification="_sDMUNbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF_JkrkWEe26eKBxVz0OTQ" name="ctx" type="_sCgXs7kWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF_Jk7kWEe26eKBxVz0OTQ" name="exitPriority" specification="_sDM7RLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF_JlLkWEe26eKBxVz0OTQ" name="ctx" type="_sDM7QrkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF_wkLkWEe26eKBxVz0OTQ" name="exitPeriod" specification="_sDNiVLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF_wkbkWEe26eKBxVz0OTQ" name="ctx" type="_sDNiUrkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF_wkrkWEe26eKBxVz0OTQ" name="exitDeadline" specification="_sDOJZLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF_wk7kWEe26eKBxVz0OTQ" name="ctx" type="_sDOJYrkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF_wlLkWEe26eKBxVz0OTQ" name="exitPhase" specification="_sDOwdLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF_wlbkWEe26eKBxVz0OTQ" name="ctx" type="_sDOwcrkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF_wlrkWEe26eKBxVz0OTQ" name="exitSrcNode" specification="_sDPXgrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF_wl7kWEe26eKBxVz0OTQ" name="ctx" type="_sCg-xrkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF_wmLkWEe26eKBxVz0OTQ" name="exitSnkNode" specification="_sDPXh7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF_wmbkWEe26eKBxVz0OTQ" name="ctx" type="_sChl1rkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF_wmrkWEe26eKBxVz0OTQ" name="exitFlow" specification="_sDP-k7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF_wm7kWEe26eKBxVz0OTQ" name="ctx" type="_sCiz8rkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4NzQLkWEe26eKBxVz0OTQ" name="testPrintStdOut" method="_sF_JjbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4NzQbkWEe26eKBxVz0OTQ" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sDLtILkWEe26eKBxVz0OTQ" name="WorkLoadListener" visibility="private" method="_sF_JiLkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sDLtIrkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sDLtI7kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sDLtIbkWEe26eKBxVz0OTQ" name="workLoad" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDLtJLkWEe26eKBxVz0OTQ" type="_r4NMMLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDLtJbkWEe26eKBxVz0OTQ" name="buildNodesAndFlows" isStatic="true" method="_sF_Ji7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDLtJrkWEe26eKBxVz0OTQ" name="workLoad" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDMUMLkWEe26eKBxVz0OTQ" name="enterWarpName" method="_sF_Jj7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDMUMbkWEe26eKBxVz0OTQ" name="ctx" type="_sCeih7kWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDMUNbkWEe26eKBxVz0OTQ" name="enterFlowName" method="_sF_JkbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDMUNrkWEe26eKBxVz0OTQ" name="ctx" type="_sCgXs7kWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDM7RLkWEe26eKBxVz0OTQ" name="exitPriority" method="_sF_Jk7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDM7RbkWEe26eKBxVz0OTQ" name="ctx" type="_sDM7QrkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDNiVLkWEe26eKBxVz0OTQ" name="exitPeriod" method="_sF_wkLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDNiVbkWEe26eKBxVz0OTQ" name="ctx" type="_sDNiUrkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDOJZLkWEe26eKBxVz0OTQ" name="exitDeadline" method="_sF_wkrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDOJZbkWEe26eKBxVz0OTQ" name="ctx" type="_sDOJYrkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDOwdLkWEe26eKBxVz0OTQ" name="exitPhase" method="_sF_wlLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDOwdbkWEe26eKBxVz0OTQ" name="ctx" type="_sDOwcrkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDPXgrkWEe26eKBxVz0OTQ" name="exitSrcNode" method="_sF_wlrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDPXg7kWEe26eKBxVz0OTQ" name="ctx" type="_sCg-xrkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDPXh7kWEe26eKBxVz0OTQ" name="exitSnkNode" method="_sF_wmLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDPXiLkWEe26eKBxVz0OTQ" name="ctx" type="_sChl1rkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDP-k7kWEe26eKBxVz0OTQ" name="exitFlow" method="_sF_wmrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDP-lLkWEe26eKBxVz0OTQ" name="ctx" type="_sCiz8rkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4PBYLkWEe26eKBxVz0OTQ" name="WorkLoadDescription">
              <ownedComment xmi:id="_sGRdZrkWEe26eKBxVz0OTQ">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4 Fall 2022</body>
              </ownedComment>
              <generalization xmi:id="_sDQlorkWEe26eKBxVz0OTQ" general="_r4I6wLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFUbIbkWEe26eKBxVz0OTQ" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFUbIrkWEe26eKBxVz0OTQ" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFUbI7kWEe26eKBxVz0OTQ" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFUbJLkWEe26eKBxVz0OTQ" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFUbJbkWEe26eKBxVz0OTQ" name="FILE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFUbJrkWEe26eKBxVz0OTQ" value="&quot;StressTest.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFUbJ7kWEe26eKBxVz0OTQ" name="description" visibility="private" type="_r2c4sLkWEe26eKBxVz0OTQ" association="_sHAdMbkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFVCMbkWEe26eKBxVz0OTQ" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFVCM7kWEe26eKBxVz0OTQ" name="fm" visibility="private" type="_r2jmYLkWEe26eKBxVz0OTQ" association="_sHAdNLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFVCNbkWEe26eKBxVz0OTQ" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF_wnLkWEe26eKBxVz0OTQ" name="WorkLoadDescription" specification="_r4PocLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF_wnbkWEe26eKBxVz0OTQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sF_wnrkWEe26eKBxVz0OTQ" type="_r4PBYLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
 this.fm = this.getFileManager();&#xD;
 initialize(inputFileName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF_wn7kWEe26eKBxVz0OTQ" name="visualization" specification="_r4PodbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF_woLkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF_wobkWEe26eKBxVz0OTQ" name="fileVisualization" specification="_r4QPgrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF_workWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sF_wo7kWEe26eKBxVz0OTQ" name="toString" specification="_r4QPhrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sF_wpLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGAXoLkWEe26eKBxVz0OTQ" name="initialize" specification="_r4Q2krkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGAXobkWEe26eKBxVz0OTQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
 InputGraphFile gf = new InputGraphFile(fm);&#xD;
 inputGraphString = gf.readGraphFile(inputFile);&#xD;
 this.inputFileName = gf.getGraphFileName();&#xD;
 description = new Description(inputGraphString);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGAXorkWEe26eKBxVz0OTQ" name="main" specification="_r4Q2lLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGAXo7kWEe26eKBxVz0OTQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sGAXpLkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>//Initiating new WorkLoadDescription w/ FILE&#xD;
	  //FILE is a static final variable initialized at the beginning of the file&#xD;
	  //allowing for quick swap of files&#xD;
	   WorkLoadDescription wldTest = new WorkLoadDescription(FILE);&#xD;
	   //Initializing new array list for which elements of the file will be stored&#xD;
	   ArrayList&lt;String> testFile = new ArrayList&lt;String>();&#xD;
	   //for loop to add elements from wldTest to Array list skipping the title line&#xD;
	   for(int i = 1 ; i &lt; wldTest.visualization().size(); i++) {&#xD;
		   testFile.add(wldTest.visualization().get(i));&#xD;
	   }&#xD;
	   //Sorting the new ArrayList&#xD;
	   Collections.sort(testFile);&#xD;
	   //Print out the input file name without suffix&#xD;
	   System.out.println(wldTest.getInputFileName().replace(&quot;.txt&quot;, &quot;&quot;));&#xD;
	   //for loop goes through the new ArrayList skipping the final &quot;}&quot;&#xD;
	   for(int i = 0 ; i &lt; testFile.size() - 1; i++ ) {&#xD;
		   //if condition skips blank lines&#xD;
		   if (testFile.get(i).isBlank()) {&#xD;
			   continue;&#xD;
		   }&#xD;
		   //Printing out results formatted to example, trimming leading or ending blank space&#xD;
		   System.out.println(&quot;Flow &quot; + (i + 1) +&quot;: &quot; + testFile.get(i).trim() );&#xD;
		   &#xD;
	   }&#xD;
	   &#xD;
	   &#xD;
	  &#xD;
	   &#xD;
	   &#xD;
	  &#xD;
&#xD;
	   	   &#xD;
	   &#xD;
	   </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4PocLkWEe26eKBxVz0OTQ" name="WorkLoadDescription" visibility="package" method="_sF_wnLkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r4PocrkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4Poc7kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r4PocbkWEe26eKBxVz0OTQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4PodLkWEe26eKBxVz0OTQ" type="_r4PBYLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4PodbkWEe26eKBxVz0OTQ" name="visualization" method="_sF_wn7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDQloLkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4QPgrkWEe26eKBxVz0OTQ" name="fileVisualization" method="_sF_wobkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDQlobkWEe26eKBxVz0OTQ" type="_r2c4sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4QPhrkWEe26eKBxVz0OTQ" name="toString" method="_sF_wo7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4QPh7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4Q2krkWEe26eKBxVz0OTQ" name="initialize" visibility="private" method="_sGAXoLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4Q2k7kWEe26eKBxVz0OTQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4Q2lLkWEe26eKBxVz0OTQ" name="main" isStatic="true" method="_sGAXorkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4Q2lbkWEe26eKBxVz0OTQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r4Q2lrkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_r4SEsLkWEe26eKBxVz0OTQ" name="WarpInterface">
              <ownedComment xmi:id="_sGRdZ7kWEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_sDRMsLkWEe26eKBxVz0OTQ" general="_r38tgbkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r4SEsbkWEe26eKBxVz0OTQ" name="toWorkload">
                <ownedParameter xmi:id="_sDRMsbkWEe26eKBxVz0OTQ" type="_r4b1sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4SEsrkWEe26eKBxVz0OTQ" name="toProgram">
                <ownedParameter xmi:id="_sDRMsrkWEe26eKBxVz0OTQ" type="_r3VCcLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4SEs7kWEe26eKBxVz0OTQ" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_sDRMs7kWEe26eKBxVz0OTQ" type="_r3pLgbkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4SEtLkWEe26eKBxVz0OTQ" name="toSimulator">
                <ownedParameter xmi:id="_sDRMtLkWEe26eKBxVz0OTQ" type="_r364VrkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4SrwLkWEe26eKBxVz0OTQ" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_sDRMtbkWEe26eKBxVz0OTQ" type="_r27Z1rkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4SrwbkWEe26eKBxVz0OTQ" name="toChannelAnalysis">
                <ownedParameter xmi:id="_sDRMtrkWEe26eKBxVz0OTQ" type="_r2JWsLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4SrwrkWEe26eKBxVz0OTQ" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_r4Srw7kWEe26eKBxVz0OTQ" name="reliabilitiesMet">
                <ownedParameter xmi:id="_r4SrxLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4SrxbkWEe26eKBxVz0OTQ" name="deadlinesMet">
                <ownedParameter xmi:id="_r4SrxrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4TS0LkWEe26eKBxVz0OTQ" name="WarpPoset">
              <ownedComment xmi:id="_sGSEcLkWEe26eKBxVz0OTQ">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_sDRzxbkWEe26eKBxVz0OTQ" general="_r3HnELkWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGAXpbkWEe26eKBxVz0OTQ" name="WarpPoset" specification="_sDRzwLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGAXprkWEe26eKBxVz0OTQ" name="workload" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGAXp7kWEe26eKBxVz0OTQ" type="_r4TS0LkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGAXqLkWEe26eKBxVz0OTQ" name="findCoordinator" specification="_sEetoLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGAXqbkWEe26eKBxVz0OTQ" name="nodesInFlow" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGAXqrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_sDRzwLkWEe26eKBxVz0OTQ" name="WarpPoset" visibility="package" method="_sGAXpbkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sDRzwrkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sDRzw7kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sDRzwbkWEe26eKBxVz0OTQ" name="workload" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDRzxLkWEe26eKBxVz0OTQ" type="_r4TS0LkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sEetoLkWEe26eKBxVz0OTQ" name="findCoordinator" visibility="protected" method="_sGAXqLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sEetobkWEe26eKBxVz0OTQ" name="nodesInFlow" type="_sCBPgLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEfUsLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4T54LkWEe26eKBxVz0OTQ" name="WarpSystem">
              <ownedComment xmi:id="_sGSEcbkWEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sFVCNrkWEe26eKBxVz0OTQ" name="program" visibility="private" type="_r3VCcLkWEe26eKBxVz0OTQ" association="_sHBEQbkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFVpQbkWEe26eKBxVz0OTQ" name="workLoad" visibility="private" type="_r4b1sLkWEe26eKBxVz0OTQ" association="_sHBrULkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFVpQ7kWEe26eKBxVz0OTQ" name="ra" visibility="private" type="_r3pLgbkWEe26eKBxVz0OTQ" association="_sHBrU7kWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFVpRbkWEe26eKBxVz0OTQ" name="la" visibility="private" type="_r27Z1rkWEe26eKBxVz0OTQ" association="_sHCSYbkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFWQUbkWEe26eKBxVz0OTQ" name="ca" visibility="private" type="_r2JWsLkWEe26eKBxVz0OTQ" association="_sHCSZLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFWQU7kWEe26eKBxVz0OTQ" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFW3ZLkWEe26eKBxVz0OTQ" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFW3ZbkWEe26eKBxVz0OTQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFXecbkWEe26eKBxVz0OTQ" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFXecrkWEe26eKBxVz0OTQ" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_sDRzxrkWEe26eKBxVz0OTQ" client="_r4T54LkWEe26eKBxVz0OTQ" supplier="_r4SEsLkWEe26eKBxVz0OTQ" contract="_r4SEsLkWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGAXrbkWEe26eKBxVz0OTQ" name="WarpSystem" specification="_sEf7wLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGAXrrkWEe26eKBxVz0OTQ" name="workLoad" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGAXr7kWEe26eKBxVz0OTQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGAXsLkWEe26eKBxVz0OTQ" name="choice" type="_sEQEILkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGAXsbkWEe26eKBxVz0OTQ" type="_r4T54LkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
 this.numChannels = numChannels;&#xD;
 createProgram(workLoad, numChannels, choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGA-sLkWEe26eKBxVz0OTQ" name="toWorkload" specification="_r4Ug8LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGA-sbkWEe26eKBxVz0OTQ" type="_r4b1sLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGA-srkWEe26eKBxVz0OTQ" name="toProgram" specification="_r4VIA7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGA-s7kWEe26eKBxVz0OTQ" type="_r3VCcLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return program;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGA-tLkWEe26eKBxVz0OTQ" name="toReliabilityAnalysis" specification="_r4VvErkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGA-tbkWEe26eKBxVz0OTQ" type="_r3pLgbkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);&#xD;
 return ra;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGA-trkWEe26eKBxVz0OTQ" name="toSimulator" specification="_r4VvFrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGA-t7kWEe26eKBxVz0OTQ" type="_r364VrkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGA-uLkWEe26eKBxVz0OTQ" name="toLatencyAnalysis" specification="_r4WWIrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGA-ubkWEe26eKBxVz0OTQ" type="_r27Z1rkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
 return la;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGA-urkWEe26eKBxVz0OTQ" name="toChannelAnalysis" specification="_r4WWJrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGA-u7kWEe26eKBxVz0OTQ" type="_r2JWsLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
 return ca;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGA-vLkWEe26eKBxVz0OTQ" name="reliabilitiesMet" specification="_r4W9MbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGA-vbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
   ra = new ReliabilityAnalysis(program);&#xD;
 }&#xD;
 return ra.verifyReliabilities();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGA-vrkWEe26eKBxVz0OTQ" name="deadlinesMet" specification="_r4W9NrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGA-v7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
 if (program.deadlineMisses().size() > 0) {&#xD;
   result = false;&#xD;
 }&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGA-wLkWEe26eKBxVz0OTQ" name="createProgram" specification="_sEgi1rkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGA-wbkWEe26eKBxVz0OTQ" name="workLoad" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGA-wrkWEe26eKBxVz0OTQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGA-w7kWEe26eKBxVz0OTQ" name="choice" type="_sEQEILkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGA-xLkWEe26eKBxVz0OTQ" name="getNumFaults" specification="_r4XkQrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGA-xbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGA-xrkWEe26eKBxVz0OTQ" name="getMinPacketReceptionRate" specification="_r4XkR7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGA-x7kWEe26eKBxVz0OTQ" type="_sER5UrkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGA-yLkWEe26eKBxVz0OTQ" name="getE2e" specification="_r4YLU7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGA-ybkWEe26eKBxVz0OTQ" type="_sER5UrkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGA-yrkWEe26eKBxVz0OTQ" name="getName" specification="_r4YyYbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGA-y7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGBlwLkWEe26eKBxVz0OTQ" name="getSchedulerName" specification="_r4YyZrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGBlwbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGBlwrkWEe26eKBxVz0OTQ" name="getNumTransmissions" specification="_r4ZZdLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGBlw7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGBlxLkWEe26eKBxVz0OTQ" name="getOptimizationFlag" specification="_r4ZZebkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGBlxbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4Ug8LkWEe26eKBxVz0OTQ" name="toWorkload" method="_sGA-sLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDSa0LkWEe26eKBxVz0OTQ" type="_r4b1sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4VIA7kWEe26eKBxVz0OTQ" name="toProgram" method="_sGA-srkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDSa0bkWEe26eKBxVz0OTQ" type="_r3VCcLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4VvErkWEe26eKBxVz0OTQ" name="toReliabilityAnalysis" method="_sGA-tLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDSa0rkWEe26eKBxVz0OTQ" type="_r3pLgbkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4VvFrkWEe26eKBxVz0OTQ" name="toSimulator" method="_sGA-trkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDSa07kWEe26eKBxVz0OTQ" type="_r364VrkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4WWIrkWEe26eKBxVz0OTQ" name="toLatencyAnalysis" method="_sGA-uLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDSa1LkWEe26eKBxVz0OTQ" type="_r27Z1rkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4WWJrkWEe26eKBxVz0OTQ" name="toChannelAnalysis" method="_sGA-urkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDSa1bkWEe26eKBxVz0OTQ" type="_r2JWsLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4W9MbkWEe26eKBxVz0OTQ" name="reliabilitiesMet" method="_sGA-vLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4W9MrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4W9NrkWEe26eKBxVz0OTQ" name="deadlinesMet" method="_sGA-vrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4W9N7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4XkQrkWEe26eKBxVz0OTQ" name="getNumFaults" method="_sGA-xLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4XkQ7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4XkR7kWEe26eKBxVz0OTQ" name="getMinPacketReceptionRate" method="_sGA-xrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sEgi2rkWEe26eKBxVz0OTQ" type="_sER5UrkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4YLU7kWEe26eKBxVz0OTQ" name="getE2e" method="_sGA-yLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sEgi27kWEe26eKBxVz0OTQ" type="_sER5UrkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4YyYbkWEe26eKBxVz0OTQ" name="getName" method="_sGA-yrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4YyYrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4YyZrkWEe26eKBxVz0OTQ" name="getSchedulerName" method="_sGBlwLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4ZZcLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4ZZdLkWEe26eKBxVz0OTQ" name="getNumTransmissions" method="_sGBlwrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4ZZdbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4ZZebkWEe26eKBxVz0OTQ" name="getOptimizationFlag" method="_sGBlxLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4aAgLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4aAhLkWEe26eKBxVz0OTQ" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_sEf7wLkWEe26eKBxVz0OTQ" name="WarpSystem" method="_sGAXrbkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sEgi07kWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sEgi1LkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_sEgi0LkWEe26eKBxVz0OTQ" name="workLoad" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEgi0bkWEe26eKBxVz0OTQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sEgi0rkWEe26eKBxVz0OTQ" name="choice" type="_sEQEILkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEgi1bkWEe26eKBxVz0OTQ" type="_r4T54LkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sEgi1rkWEe26eKBxVz0OTQ" name="createProgram" visibility="private" method="_sGA-wLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sEgi17kWEe26eKBxVz0OTQ" name="workLoad" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEgi2LkWEe26eKBxVz0OTQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sEgi2bkWEe26eKBxVz0OTQ" name="choice" type="_sEQEILkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4b1sLkWEe26eKBxVz0OTQ" name="WorkLoad">
              <ownedComment xmi:id="_sGSEcrkWEe26eKBxVz0OTQ">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_sDWsRLkWEe26eKBxVz0OTQ" general="_r4PBYLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFYFgLkWEe26eKBxVz0OTQ" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFYFgbkWEe26eKBxVz0OTQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFYFgrkWEe26eKBxVz0OTQ" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFYFg7kWEe26eKBxVz0OTQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFYFhLkWEe26eKBxVz0OTQ" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFYFhbkWEe26eKBxVz0OTQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFYFhrkWEe26eKBxVz0OTQ" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFYFh7kWEe26eKBxVz0OTQ" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFYFiLkWEe26eKBxVz0OTQ" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFYFibkWEe26eKBxVz0OTQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFYskLkWEe26eKBxVz0OTQ" name="minPacketReceptionRate" type="_sER5UrkWEe26eKBxVz0OTQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFYskbkWEe26eKBxVz0OTQ" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFYskrkWEe26eKBxVz0OTQ" name="e2e" visibility="private" type="_sER5UrkWEe26eKBxVz0OTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFYsk7kWEe26eKBxVz0OTQ" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFYslbkWEe26eKBxVz0OTQ" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFYslrkWEe26eKBxVz0OTQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFYsl7kWEe26eKBxVz0OTQ" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFYsmLkWEe26eKBxVz0OTQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFZTobkWEe26eKBxVz0OTQ" name="flows" type="_r2vzoLkWEe26eKBxVz0OTQ" association="_sGSEc7kWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFZTorkWEe26eKBxVz0OTQ" name="nodes" type="_r3DVoLkWEe26eKBxVz0OTQ" association="_sGSrgLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFZTo7kWEe26eKBxVz0OTQ" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFZTpbkWEe26eKBxVz0OTQ" name="flowNamesInOriginalOrder" type="_sCBPgLkWEe26eKBxVz0OTQ" association="_sHC5cbkWEe26eKBxVz0OTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFZ6sbkWEe26eKBxVz0OTQ" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFZ6srkWEe26eKBxVz0OTQ" name="flowNamesInPriorityOrder" type="_sCBPgLkWEe26eKBxVz0OTQ" association="_sHDggLkWEe26eKBxVz0OTQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFZ6tLkWEe26eKBxVz0OTQ" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_sDVeILkWEe26eKBxVz0OTQ" client="_r4b1sLkWEe26eKBxVz0OTQ" supplier="_r3pykbkWEe26eKBxVz0OTQ" contract="_r3pykbkWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGBlxrkWEe26eKBxVz0OTQ" name="WorkLoad" specification="_sEhw8LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGBlx7kWEe26eKBxVz0OTQ" name="m" type="_sER5UrkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGBlyLkWEe26eKBxVz0OTQ" name="e2e" type="_sER5UrkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGBlybkWEe26eKBxVz0OTQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGBlyrkWEe26eKBxVz0OTQ" type="_r4b1sLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGBly7kWEe26eKBxVz0OTQ" name="WorkLoad" specification="_sEiYBbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGBlzLkWEe26eKBxVz0OTQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGBlzbkWEe26eKBxVz0OTQ" name="m" type="_sER5UrkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGBlzrkWEe26eKBxVz0OTQ" name="e2e" type="_sER5UrkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGBlz7kWEe26eKBxVz0OTQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGBl0LkWEe26eKBxVz0OTQ" type="_r4b1sLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 this.numFaults = numFaults;&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGBl0bkWEe26eKBxVz0OTQ" name="setDefaultParameters" specification="_r4dD0LkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGBl0rkWEe26eKBxVz0OTQ" name="getE2e" specification="_r4dq4LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGBl07kWEe26eKBxVz0OTQ" type="_sER5UrkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGBl1LkWEe26eKBxVz0OTQ" name="getIntForFlowNames" specification="_r4dq4bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGBl1bkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGBl1rkWEe26eKBxVz0OTQ" name="getName" specification="_r4dq47kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGBl17kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCM0LkWEe26eKBxVz0OTQ" name="setMinPacketReceptionRate" specification="_sEi_ELkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGCM0bkWEe26eKBxVz0OTQ" name="minPacketReceptionRate" type="_sER5UrkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCM0rkWEe26eKBxVz0OTQ" name="getMaxPhase" specification="_r4dq5bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGCM07kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCM1LkWEe26eKBxVz0OTQ" name="getMinPeriod" specification="_r4eR8bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGCM1bkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCM1rkWEe26eKBxVz0OTQ" name="setE2e" specification="_sEi_ErkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGCM17kWEe26eKBxVz0OTQ" name="e2e" type="_sER5UrkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCM2LkWEe26eKBxVz0OTQ" name="setIntForFlowNames" specification="_r4eR87kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGCM2bkWEe26eKBxVz0OTQ" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCM2rkWEe26eKBxVz0OTQ" name="setName" specification="_r4eR9bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGCM27kWEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCM3LkWEe26eKBxVz0OTQ" name="setNodeChannel" specification="_r4eR97kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGCM3bkWEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGCM3rkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCM37kWEe26eKBxVz0OTQ" name="getNodeChannel" specification="_r4e5ALkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGCM4LkWEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGCM4bkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCM4rkWEe26eKBxVz0OTQ" name="addFlow" specification="_r4e5A7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGCM47kWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
  * default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
  * This will create a default priority equal to the order listed in the input graph file. We&#xD;
  * also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
  * initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
  * optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
  * over written&#xD;
  */&#xD;
 if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCM5LkWEe26eKBxVz0OTQ" name="isIntForNodeNames" specification="_r4e5BbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGCM5bkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints&#xD;
 return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCM5rkWEe26eKBxVz0OTQ" name="isIntForFlowNames" specification="_r4e5B7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGCM57kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCM6LkWEe26eKBxVz0OTQ" name="addNodeToFlow" specification="_r4fgELkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGCM6bkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGCM6rkWEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCM67kWEe26eKBxVz0OTQ" name="getFlowPriority" specification="_r4fgE7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGCM7LkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGCM7bkWEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGCM7rkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCM77kWEe26eKBxVz0OTQ" name="setFlowPriority" specification="_r4fgF7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGCM8LkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGCM8bkWEe26eKBxVz0OTQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCz4LkWEe26eKBxVz0OTQ" name="setFlowPeriod" specification="_r4gHILkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGCz4bkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGCz4rkWEe26eKBxVz0OTQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCz47kWEe26eKBxVz0OTQ" name="setFlowDeadline" specification="_r4gHI7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGCz5LkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGCz5bkWEe26eKBxVz0OTQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCz5rkWEe26eKBxVz0OTQ" name="setFlowPhase" specification="_r4gHJrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGCz57kWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGCz6LkWEe26eKBxVz0OTQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCz6bkWEe26eKBxVz0OTQ" name="getFlowIndex" specification="_r4gHKbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGCz6rkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGCz67kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCz7LkWEe26eKBxVz0OTQ" name="getFlowPriority" specification="_r4guMLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGCz7bkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGCz7rkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCz77kWEe26eKBxVz0OTQ" name="getFlowPeriod" specification="_r4guM7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGCz8LkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGCz8bkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCz8rkWEe26eKBxVz0OTQ" name="getFlowDeadline" specification="_r4guNrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGCz87kWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGCz9LkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCz9bkWEe26eKBxVz0OTQ" name="getFlowPhase" specification="_r4hVQLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGCz9rkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGCz97kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCz-LkWEe26eKBxVz0OTQ" name="getFlowTxAttemptsPerLink" specification="_r4hVQ7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGCz-bkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGCz-rkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCz-7kWEe26eKBxVz0OTQ" name="setFlowsInPriorityOrder" specification="_r4hVRrkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCz_LkWEe26eKBxVz0OTQ" name="setFlowsInDMorder" specification="_r4hVR7kWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCz_bkWEe26eKBxVz0OTQ" name="setFlowsInRMorder" specification="_r4hVSLkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCz_rkWEe26eKBxVz0OTQ" name="setFlowsInRealTimeHARTorder" specification="_r4hVSbkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGCz_7kWEe26eKBxVz0OTQ" name="finalizeCurrentFlow" specification="_r4h8ULkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGC0ALkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGC0AbkWEe26eKBxVz0OTQ" name="nextReleaseTime" specification="_r4h8UrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGC0ArkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGC0A7kWEe26eKBxVz0OTQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGC0BLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGDa8LkWEe26eKBxVz0OTQ" name="nextAbsoluteDeadline" specification="_r4h8VrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGDa8bkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGDa8rkWEe26eKBxVz0OTQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGDa87kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGDa9LkWEe26eKBxVz0OTQ" name="finalizeFlowWithE2eParameters" specification="_r4ijYLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGDa9bkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 var m = minPacketReceptionRate; // shorten the name :-)&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
                     // and when m == 1.0&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost =&#xD;
       numTxAttemptsPerLinkAndTotalTxAttempts(flowNode, e2e, m, true);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGDa9rkWEe26eKBxVz0OTQ" name="finalizeFlowWithFixedFaultTolerance" specification="_r4ijYrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGDa97kWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = getFixedTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGDa-LkWEe26eKBxVz0OTQ" name="getFixedTxPerLinkAndTotalTxCost" specification="_sDWFMLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGDa-bkWEe26eKBxVz0OTQ" name="flow" type="_r2n30bkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGDa-rkWEe26eKBxVz0OTQ" type="_sCBPgLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size();&#xD;
 ArrayList&lt;Integer> txArrayList = new ArrayList&lt;Integer>();&#xD;
 /*&#xD;
  * Each node will have at most numFaults+1 transmissions. Because we don't know which nodes will&#xD;
  * send the message over an edge, we give the cost to each node.&#xD;
  */&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   txArrayList.add(numFaults + 1);&#xD;
 }&#xD;
 /*&#xD;
  * now compute the maximum # of TX, assuming at most numFaults occur on an edge per period, and&#xD;
  * each edge requires at least one successful TX.&#xD;
  */&#xD;
 var numEdgesInFlow = nNodesInFlow - 1;&#xD;
 var maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
 txArrayList.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
 return txArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGDa-7kWEe26eKBxVz0OTQ" name="numTxAttemptsPerLinkAndTotalTxAttempts" specification="_sEjmILkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGDa_LkWEe26eKBxVz0OTQ" name="flow" type="_r2n30bkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGDa_bkWEe26eKBxVz0OTQ" name="e2e" type="_sER5UrkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGDa_rkWEe26eKBxVz0OTQ" name="M" type="_sER5UrkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGDa_7kWEe26eKBxVz0OTQ" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGDbALkWEe26eKBxVz0OTQ" type="_sCBPgLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size(); // The last entry will contain the worst-case cost of&#xD;
                                        // transmitting E2E in isolation&#xD;
 // var nPushes = Array(repeating: 0, count: nNodesInFlow+1);&#xD;
 var nPushes = new Integer[nNodesInFlow + 1]; // Array to track nPushes for each node in this&#xD;
                                              // flow (same as nTx per link)&#xD;
 Arrays.fill(nPushes, 0); // initialize to all 0 values&#xD;
 var nHops = nNodesInFlow - 1;&#xD;
 // minLinkReliablityNeded is the minimum reliability needed per link in a flow to hit E2E&#xD;
 // reliability for the flow&#xD;
 Double minLinkReliablityNeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops))); // use max&#xD;
                                                                                       // to&#xD;
                                                                                       // handle&#xD;
                                                                                       // rounding&#xD;
                                                                                       // error&#xD;
                                                                                       // when&#xD;
                                                                                       // e2e ==&#xD;
                                                                                       // 1.0&#xD;
 // Now compute reliability of packet reaching each node in the given time slot&#xD;
 // Start with a 2-D reliability window that is a 2-D matrix of no size&#xD;
 // each row is a time slot, stating at time 0&#xD;
 // each column represents the reliability of the packet reaching that node at the&#xD;
 // current time slot (i.e., the row it is in)&#xD;
 // will add rows as we compute reliabilities until the final reliability is reached&#xD;
 // for all nodes.&#xD;
 var reliabilityWindow = new Vector&lt;Vector&lt;Double>>();&#xD;
 var newReliabilityRow = new Vector&lt;Double>();&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   newReliabilityRow.add(0.0); // create the the row initialized with 0.0 values&#xD;
 }&#xD;
 reliabilityWindow.add(newReliabilityRow); // now add row to the reliability window, Time 0&#xD;
 Vector&lt;Double> tmpVector = reliabilityWindow.get(0);&#xD;
 var currentReliabilityRow = tmpVector.toArray(new Double[tmpVector.size()]);&#xD;
 // var currentReliabilityRow = (Double[]) reliabilityWindow.get(0).toArray();&#xD;
 // Want reliabilityWindow[0][0] = 1.0 (i.e., P(packet@FlowSrc) = 1&#xD;
 // but I din't want to mess with the newReliablityRow vector I use below&#xD;
 // So, we initialize this first entry to 1.0, wich is reliabilityWindow[0][0]&#xD;
 // We will then update this row with computed values for each node and put it&#xD;
 // back in the matrix&#xD;
 currentReliabilityRow[0] = 1.0; // initialize (i.e., P(packet@FlowSrc) = 1&#xD;
 Double e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1]; // the analysis will end&#xD;
                                                                       // when the 2e2&#xD;
                                                                       // reliability metrix is&#xD;
                                                                       // met, initially the&#xD;
                                                                       // state is not met and&#xD;
                                                                       // will be 0 with this&#xD;
                                                                       // statement&#xD;
 var timeSlot = 0; // start time at 0&#xD;
 while (e2eReliabilityState &lt; e2e) { // change to while and increment increment timeSlot becuase&#xD;
                                     // we don't know how long this schedule window will last&#xD;
   var prevReliabilityRow = currentReliabilityRow;&#xD;
   currentReliabilityRow = newReliabilityRow.toArray(new Double[newReliabilityRow.size()]); // would&#xD;
                                                                                            // be&#xD;
                                                                                            // reliabilityWindow[timeSlot]&#xD;
                                                                                            // if&#xD;
                                                                                            // working&#xD;
                                                                                            // through&#xD;
                                                                                            // a&#xD;
                                                                                            // schedule&#xD;
   // Now use each flow:src->sink to update reliability computations&#xD;
   // this is the update formula for the state probabilities&#xD;
   // nextState = (1 - M) * prevState + M*NextHighestFlowState&#xD;
   // use MinLQ for M in above equation&#xD;
   // NewSinkNodeState = (1-M)*PrevSnkNodeState + M*PrevSrcNodeState&#xD;
&#xD;
   for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) { // loop through each&#xD;
                                                                          // node in the flow and&#xD;
                                                                          // update the sates for&#xD;
                                                                          // each link (i.e.,&#xD;
                                                                          // sink->src pair)&#xD;
     var flowSrcNodeindex = nodeIndex;&#xD;
     var flowSnkNodeindex = nodeIndex + 1;&#xD;
     var prevSrcNodeState = prevReliabilityRow[flowSrcNodeindex];&#xD;
     var prevSnkNodeState = prevReliabilityRow[flowSnkNodeindex];&#xD;
     Double nextSnkState;&#xD;
     if ((prevSnkNodeState &lt; minLinkReliablityNeded) &amp;&amp; prevSrcNodeState > 0) { // do a push&#xD;
                                                                                // until PrevSnk&#xD;
                                                                                // state > e2e to&#xD;
                                                                                // ensure next&#xD;
                                                                                // node reaches&#xD;
                                                                                // target E2E BUT&#xD;
                                                                                // skip if no&#xD;
                                                                                // chance of&#xD;
                                                                                // success (i.e.,&#xD;
                                                                                // source doesn't&#xD;
                                                                                // have packet)&#xD;
       nextSnkState = ((1.0 - M) * prevSnkNodeState) + (M * prevSrcNodeState); // need to&#xD;
                                                                               // continue&#xD;
                                                                               // attempting to&#xD;
                                                                               // Tx, so update&#xD;
                                                                               // current state&#xD;
       nPushes[nodeIndex] += 1; // increment the number of pushes for for this node to snk node&#xD;
     } else {&#xD;
       nextSnkState = prevSnkNodeState; // snkNode has met its reliability. Thus move on to the&#xD;
                                        // next node and record the reliability met&#xD;
     }&#xD;
&#xD;
     if (currentReliabilityRow[flowSrcNodeindex] &lt; prevReliabilityRow[flowSrcNodeindex]) { // probabilities&#xD;
                                                                                           // are&#xD;
                                                                                           // non-decreasing&#xD;
                                                                                           // so&#xD;
                                                                                           // update&#xD;
                                                                                           // if&#xD;
                                                                                           // we&#xD;
                                                                                           // were&#xD;
                                                                                           // higher&#xD;
                                                                                           // by&#xD;
                                                                                           // carring&#xD;
                                                                                           // old&#xD;
                                                                                           // value&#xD;
                                                                                           // forward&#xD;
       currentReliabilityRow[flowSrcNodeindex] = prevReliabilityRow[flowSrcNodeindex]; // carry&#xD;
                                                                                       // forward&#xD;
                                                                                       // the&#xD;
                                                                                       // previous&#xD;
                                                                                       // state&#xD;
                                                                                       // for the&#xD;
                                                                                       // src&#xD;
                                                                                       // node,&#xD;
                                                                                       // which&#xD;
                                                                                       // may get&#xD;
                                                                                       // over&#xD;
                                                                                       // written&#xD;
                                                                                       // later&#xD;
                                                                                       // by&#xD;
                                                                                       // another&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in this&#xD;
                                                                                       // slot&#xD;
     }&#xD;
     currentReliabilityRow[flowSnkNodeindex] = nextSnkState;&#xD;
   }&#xD;
&#xD;
   e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1];&#xD;
   Vector&lt;Double> currentReliabilityVector = new Vector&lt;Double>();&#xD;
   // convert the row to a vector so we can add it to the reliability window&#xD;
   Collections.addAll(currentReliabilityVector, currentReliabilityRow);&#xD;
   if (timeSlot &lt; reliabilityWindow.size()) {&#xD;
     reliabilityWindow.set(timeSlot, (currentReliabilityVector));&#xD;
   } else {&#xD;
     reliabilityWindow.add(currentReliabilityVector);&#xD;
   }&#xD;
   timeSlot += 1; // increase to next time slot&#xD;
 }&#xD;
 var size = reliabilityWindow.size();&#xD;
 nPushes[nNodesInFlow] = size; // The total (worst-case) cost to transmit E2E in isolation with&#xD;
                               // specified reliability target is the number of rows in the&#xD;
                               // reliabilityWindow&#xD;
 // Now convert the array to the ArrayList needed to return&#xD;
 ArrayList&lt;Integer> nPushesArrayList = new ArrayList&lt;Integer>();&#xD;
 Collections.addAll(nPushesArrayList, nPushes);&#xD;
 return nPushesArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGDbAbkWEe26eKBxVz0OTQ" name="getNodeNamesOrderedAlphabetically" specification="_r4ijZLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGDbArkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sGDbA7kWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGDbBLkWEe26eKBxVz0OTQ" name="getFlow" specification="_r4jKcbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGDbBbkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGDbBrkWEe26eKBxVz0OTQ" type="_r2n30bkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGDbB7kWEe26eKBxVz0OTQ" name="getFlowNames" specification="_r4jKc7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGDbCLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sGDbCbkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGECALkWEe26eKBxVz0OTQ" name="getNodeIndex" specification="_r4jxgLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGECAbkWEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGECArkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGECA7kWEe26eKBxVz0OTQ" name="getNodesInFlow" specification="_r4jxg7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGECBLkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGECBbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sGECBrkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGECB7kWEe26eKBxVz0OTQ" name="getHyperPeriod" specification="_r4jxiLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGECCLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
   // var dm = new Utlitities();&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod&#xD;
                                                                      // so far and the current&#xD;
                                                                      // period, then update the&#xD;
                                                                      // hyperPeriod with that&#xD;
                                                                      // value&#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGECCbkWEe26eKBxVz0OTQ" name="getTotalTxAttemptsInFlow" specification="_r4kYkLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGECCrkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGECC7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGECDLkWEe26eKBxVz0OTQ" name="getNumTxAttemptsPerLink" specification="_r4kYk7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGECDbkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGECDrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sGECD7kWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of&#xD;
                                         // others&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGECELkWEe26eKBxVz0OTQ" name="addEdge" specification="_sDWsQbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGECEbkWEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGECErkWEe26eKBxVz0OTQ" name="edge" type="_r2eG07kWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGECE7kWEe26eKBxVz0OTQ" name="maxFlowLength" specification="_r4k_oLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGECFLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4dD0LkWEe26eKBxVz0OTQ" name="setDefaultParameters" visibility="private" method="_sGBl0bkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGSrhLkWEe26eKBxVz0OTQ">
                  <body>Sets the default parameters for the nodes and flows.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_r4dq4LkWEe26eKBxVz0OTQ" name="getE2e" method="_sGBl0rkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGSrhbkWEe26eKBxVz0OTQ">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_sEiYDbkWEe26eKBxVz0OTQ" type="_sER5UrkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4dq4bkWEe26eKBxVz0OTQ" name="getIntForFlowNames" method="_sGBl1LkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGSrhrkWEe26eKBxVz0OTQ">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4dq4rkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4dq47kWEe26eKBxVz0OTQ" name="getName" method="_sGBl1rkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGSrh7kWEe26eKBxVz0OTQ">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4dq5LkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4dq5bkWEe26eKBxVz0OTQ" name="getMaxPhase" method="_sGCM0rkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGSribkWEe26eKBxVz0OTQ">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4eR8LkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4eR8bkWEe26eKBxVz0OTQ" name="getMinPeriod" method="_sGCM1LkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGSrirkWEe26eKBxVz0OTQ">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4eR8rkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4eR87kWEe26eKBxVz0OTQ" name="setIntForFlowNames" method="_sGCM2LkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGSrjLkWEe26eKBxVz0OTQ">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4eR9LkWEe26eKBxVz0OTQ" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4eR9bkWEe26eKBxVz0OTQ" name="setName" method="_sGCM2rkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGSrjbkWEe26eKBxVz0OTQ">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4eR9rkWEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4eR97kWEe26eKBxVz0OTQ" name="setNodeChannel" method="_sGCM3LkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGSrjrkWEe26eKBxVz0OTQ">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4eR-LkWEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4eR-bkWEe26eKBxVz0OTQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4e5ALkWEe26eKBxVz0OTQ" name="getNodeChannel" method="_sGCM37kWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGSrj7kWEe26eKBxVz0OTQ">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4e5AbkWEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4e5ArkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4e5A7kWEe26eKBxVz0OTQ" name="addFlow" method="_sGCM4rkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGSrkLkWEe26eKBxVz0OTQ">
                  <body>Adds a new flow to the Flows dictionary.&#xD;
   * &#xD;
   * @param flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4e5BLkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4e5BbkWEe26eKBxVz0OTQ" name="isIntForNodeNames" method="_sGCM5LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4e5BrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4e5B7kWEe26eKBxVz0OTQ" name="isIntForFlowNames" method="_sGCM5rkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4e5CLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4fgELkWEe26eKBxVz0OTQ" name="addNodeToFlow" method="_sGCM6LkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGSrkbkWEe26eKBxVz0OTQ">
                  <body>Adds a node to the specified flow. If the node is not in the flow, it will create &#xD;
   * a new Node.&#xD;
   * &#xD;
   * @param flowName the name of the flow to be added to&#xD;
   * @param nodeName the name of the node to be added</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4fgEbkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4fgErkWEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4fgE7kWEe26eKBxVz0OTQ" name="getFlowPriority" method="_sGCM67kWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGTSkLkWEe26eKBxVz0OTQ">
                  <body>Gets the flow priority of the node by finding the source node and setting its index.&#xD;
   * &#xD;
   * @param flowName the name of the flow to be searched&#xD;
   * @param nodeName the name of the node to be found&#xD;
   * @return priority the priority of the node</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4fgFLkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4fgFbkWEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4fgFrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4fgF7kWEe26eKBxVz0OTQ" name="setFlowPriority" method="_sGCM77kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4fgGLkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4fgGbkWEe26eKBxVz0OTQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4gHILkWEe26eKBxVz0OTQ" name="setFlowPeriod" method="_sGCz4LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4gHIbkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4gHIrkWEe26eKBxVz0OTQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4gHI7kWEe26eKBxVz0OTQ" name="setFlowDeadline" method="_sGCz47kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4gHJLkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4gHJbkWEe26eKBxVz0OTQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4gHJrkWEe26eKBxVz0OTQ" name="setFlowPhase" method="_sGCz5rkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4gHJ7kWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4gHKLkWEe26eKBxVz0OTQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4gHKbkWEe26eKBxVz0OTQ" name="getFlowIndex" method="_sGCz6bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4gHKrkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4gHK7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4guMLkWEe26eKBxVz0OTQ" name="getFlowPriority" method="_sGCz7LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4guMbkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4guMrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4guM7kWEe26eKBxVz0OTQ" name="getFlowPeriod" method="_sGCz77kWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGTSkbkWEe26eKBxVz0OTQ">
                  <body>Gets the period of the given flow.&#xD;
   *  &#xD;
   * @param flowName&#xD;
   * @return the period of the given flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4guNLkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4guNbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4guNrkWEe26eKBxVz0OTQ" name="getFlowDeadline" method="_sGCz8rkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGTSkrkWEe26eKBxVz0OTQ">
                  <body>Gets the deadline of the given flow.&#xD;
   * &#xD;
   * @param flowName &#xD;
   * @return the deadline of the given flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4guN7kWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4guOLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4hVQLkWEe26eKBxVz0OTQ" name="getFlowPhase" method="_sGCz9bkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGTSk7kWEe26eKBxVz0OTQ">
                  <body>Gets the phase of the given flow.&#xD;
   * &#xD;
   * @param flowName&#xD;
   * @return the phase of the given flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4hVQbkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4hVQrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4hVQ7kWEe26eKBxVz0OTQ" name="getFlowTxAttemptsPerLink" method="_sGCz-LkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGTSlLkWEe26eKBxVz0OTQ">
                  <body>Gets the number of flow transmissions attempts per link.&#xD;
   * &#xD;
   * @param flowName&#xD;
   * @return numTxPerLink the value of transmission attempts per link</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4hVRLkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4hVRbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4hVRrkWEe26eKBxVz0OTQ" name="setFlowsInPriorityOrder" method="_sGCz-7kWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGTSlbkWEe26eKBxVz0OTQ">
                  <body>Sorts the flows in order based on priority, then puts the ordered flow names into an ArrayList.&#xD;
   *</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_r4hVR7kWEe26eKBxVz0OTQ" name="setFlowsInDMorder" method="_sGCz_LkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGTSlrkWEe26eKBxVz0OTQ">
                  <body>Sorts the flows based on deadline, putting ordered flow into an ArrayList.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_r4hVSLkWEe26eKBxVz0OTQ" name="setFlowsInRMorder" method="_sGCz_bkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGTSl7kWEe26eKBxVz0OTQ">
                  <body>Sorts the flows in order based on period, putting ordered flow names into an ArrayList.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_r4hVSbkWEe26eKBxVz0OTQ" name="setFlowsInRealTimeHARTorder" method="_sGCz_rkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r4h8ULkWEe26eKBxVz0OTQ" name="finalizeCurrentFlow" method="_sGCz_7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4h8UbkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4h8UrkWEe26eKBxVz0OTQ" name="nextReleaseTime" method="_sGC0AbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4h8U7kWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4h8VLkWEe26eKBxVz0OTQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4h8VbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4h8VrkWEe26eKBxVz0OTQ" name="nextAbsoluteDeadline" method="_sGDa8LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4h8V7kWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4h8WLkWEe26eKBxVz0OTQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4h8WbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4ijYLkWEe26eKBxVz0OTQ" name="finalizeFlowWithE2eParameters" visibility="private" method="_sGDa9LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4ijYbkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4ijYrkWEe26eKBxVz0OTQ" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_sGDa9rkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4ijY7kWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4ijZLkWEe26eKBxVz0OTQ" name="getNodeNamesOrderedAlphabetically" method="_sGDbAbkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGTSmrkWEe26eKBxVz0OTQ">
                  <body>Gets a String array of node names ordered alphabetically. If the node names &#xD;
   * are all integers, converts integers to alpha representation of integers.&#xD;
   * &#xD;
   * @return nodeNames array of node names</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4ijZbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r4ijZrkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4jKcbkWEe26eKBxVz0OTQ" name="getFlow" visibility="private" method="_sGDbBLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4jKcrkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDWsQLkWEe26eKBxVz0OTQ" type="_r2n30bkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4jKc7kWEe26eKBxVz0OTQ" name="getFlowNames" method="_sGDbB7kWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGTSm7kWEe26eKBxVz0OTQ">
                  <body>Gets an array of flow names in the order they were read from&#xD;
   * the graph file.&#xD;
   * &#xD;
   * @return the name of the flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4jKdLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r4jKdbkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4jxgLkWEe26eKBxVz0OTQ" name="getNodeIndex" method="_sGECALkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGTSnLkWEe26eKBxVz0OTQ">
                  <body>Returns the index of the node from the dictionary of nodes&#xD;
   * &#xD;
   * @param nodeName the name of the node to be found&#xD;
   * @return index the index of the found node</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4jxgbkWEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4jxgrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4jxg7kWEe26eKBxVz0OTQ" name="getNodesInFlow" method="_sGECA7kWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGTSnbkWEe26eKBxVz0OTQ">
                  <body>Gets node names in order they appear in flow specification.&#xD;
   * &#xD;
   * @param flowName &#xD;
   * @return nodes array of node names in flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4jxhLkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4jxhbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r4jxhrkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4jxiLkWEe26eKBxVz0OTQ" name="getHyperPeriod" method="_sGECB7kWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGTSnrkWEe26eKBxVz0OTQ">
                  <body>Gets the hyper period, the least common multiple of all the periods.&#xD;
   * &#xD;
   * @return hyperPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4jxibkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4kYkLkWEe26eKBxVz0OTQ" name="getTotalTxAttemptsInFlow" method="_sGECCbkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGTSn7kWEe26eKBxVz0OTQ">
                  <body>Gets the total transmission attempts in the flow.&#xD;
   * &#xD;
   * @param flowName &#xD;
   * @return totalCost total transmission attempts</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4kYkbkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4kYkrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4kYk7kWEe26eKBxVz0OTQ" name="getNumTxAttemptsPerLink" method="_sGECDLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGTSoLkWEe26eKBxVz0OTQ">
                  <body>Gets an array of the number of transmissions needed for each link&#xD;
   * to meet E2E target. &#xD;
   * &#xD;
   * @param flowName&#xD;
   * @return Integer value of the number of transmission attempts per link</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4kYlLkWEe26eKBxVz0OTQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4kYlbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r4kYlrkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4k_oLkWEe26eKBxVz0OTQ" name="maxFlowLength" method="_sGECE7kWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGTSorkWEe26eKBxVz0OTQ">
                  <body>Gets the max length of the flow. &#xD;
   * &#xD;
   * @return maxLength</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4k_obkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sDWFMLkWEe26eKBxVz0OTQ" name="getFixedTxPerLinkAndTotalTxCost" visibility="private" method="_sGDa-LkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGTSmLkWEe26eKBxVz0OTQ">
                  <body>Calculates the fixed transmission per link, the total transmission cost, and returns it.&#xD;
   * &#xD;
   * @param flow the flow to be calculated&#xD;
   * @return txArrayList the ArrayList of fixed transmissions per link and total transmission cost values</body>
                </ownedComment>
                <ownedParameter xmi:id="_sDWFMbkWEe26eKBxVz0OTQ" name="flow" type="_r2n30bkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEi_FLkWEe26eKBxVz0OTQ" type="_sCBPgLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDWsQbkWEe26eKBxVz0OTQ" name="addEdge" method="_sGECELkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGTSobkWEe26eKBxVz0OTQ">
                  <body>Adds an edge to a node.&#xD;
&#xD;
@param nodeName&#xD;
@param edge</body>
                </ownedComment>
                <ownedParameter xmi:id="_sDWsQrkWEe26eKBxVz0OTQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDWsQ7kWEe26eKBxVz0OTQ" name="edge" type="_r2eG07kWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sEhw8LkWEe26eKBxVz0OTQ" name="WorkLoad" visibility="package" method="_sGBlxrkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sEiYArkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sEiYA7kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_sGSrgrkWEe26eKBxVz0OTQ">
                  <body>&#xD;
   * Creates a Workload object using the parameters minimum packet reception rate, End-to-End, and the file name. &#xD;
   * Then builds nodes and flows.&#xD;
   * &#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_sEhw8bkWEe26eKBxVz0OTQ" name="m" type="_sER5UrkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEiYALkWEe26eKBxVz0OTQ" name="e2e" type="_sER5UrkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEiYAbkWEe26eKBxVz0OTQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sEiYBLkWEe26eKBxVz0OTQ" type="_r4b1sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sEiYBbkWEe26eKBxVz0OTQ" name="WorkLoad" visibility="package" method="_sGBly7kWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sEiYCrkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sEiYC7kWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_sGSrg7kWEe26eKBxVz0OTQ">
                  <body>&#xD;
   * Then builds the nodes and flows.&#xD;
   * &#xD;
   * @param numFaults&#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_sEiYBrkWEe26eKBxVz0OTQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sEiYB7kWEe26eKBxVz0OTQ" name="m" type="_sER5UrkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEiYCLkWEe26eKBxVz0OTQ" name="e2e" type="_sER5UrkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEiYCbkWEe26eKBxVz0OTQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sEiYDLkWEe26eKBxVz0OTQ" type="_r4b1sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sEi_ELkWEe26eKBxVz0OTQ" name="setMinPacketReceptionRate" method="_sGCM0LkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGSriLkWEe26eKBxVz0OTQ">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_sEi_EbkWEe26eKBxVz0OTQ" name="minPacketReceptionRate" type="_sER5UrkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sEi_ErkWEe26eKBxVz0OTQ" name="setE2e" method="_sGCM1rkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGSri7kWEe26eKBxVz0OTQ">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_sEi_E7kWEe26eKBxVz0OTQ" name="e2e" type="_sER5UrkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sEjmILkWEe26eKBxVz0OTQ" name="numTxAttemptsPerLinkAndTotalTxAttempts" visibility="private" method="_sGDa-7kWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGTSmbkWEe26eKBxVz0OTQ">
                  <body>Creates an array list of the number of transmission attempts per link and the total&#xD;
   * transmission attempts.&#xD;
   * &#xD;
   * @param flow&#xD;
   * @param e2e&#xD;
   * @param M&#xD;
   * @param optimizationRequested&#xD;
   * @return nPushesArrayList</body>
                </ownedComment>
                <ownedParameter xmi:id="_sEkNMLkWEe26eKBxVz0OTQ" name="flow" type="_r2n30bkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEkNMbkWEe26eKBxVz0OTQ" name="e2e" type="_sER5UrkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEkNMrkWEe26eKBxVz0OTQ" name="M" type="_sER5UrkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sEkNM7kWEe26eKBxVz0OTQ" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sEkNNbkWEe26eKBxVz0OTQ" type="_sCBPgLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4pRELkWEe26eKBxVz0OTQ" name="WarpDSL">
              <ownedComment xmi:id="_sGT5oLkWEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sFbI0LkWEe26eKBxVz0OTQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFbI0bkWEe26eKBxVz0OTQ" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFbI0rkWEe26eKBxVz0OTQ" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFbI07kWEe26eKBxVz0OTQ" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFbI1LkWEe26eKBxVz0OTQ" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFbI1bkWEe26eKBxVz0OTQ" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGEpHrkWEe26eKBxVz0OTQ" name="getInstructionParameters" specification="_r4rtUbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGEpH7kWEe26eKBxVz0OTQ" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGEpILkWEe26eKBxVz0OTQ" type="_sCBPgLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4rtUbkWEe26eKBxVz0OTQ" name="getInstructionParameters" method="_sGEpHrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4rtUrkWEe26eKBxVz0OTQ" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sElbULkWEe26eKBxVz0OTQ" type="_sCBPgLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_r4p4ILkWEe26eKBxVz0OTQ" name="InstructionParameters">
                <ownedAttribute xmi:id="_sFbI1rkWEe26eKBxVz0OTQ" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFbI17kWEe26eKBxVz0OTQ" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sFbv4LkWEe26eKBxVz0OTQ" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFbv4bkWEe26eKBxVz0OTQ" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sFbv4rkWEe26eKBxVz0OTQ" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFbv47kWEe26eKBxVz0OTQ" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sFbv5LkWEe26eKBxVz0OTQ" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFbv5bkWEe26eKBxVz0OTQ" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sFbv5rkWEe26eKBxVz0OTQ" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFbv57kWEe26eKBxVz0OTQ" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sFbv6LkWEe26eKBxVz0OTQ" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFbv6bkWEe26eKBxVz0OTQ" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sFcW8LkWEe26eKBxVz0OTQ" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFcW8bkWEe26eKBxVz0OTQ" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGECFbkWEe26eKBxVz0OTQ" name="getCoordinator" specification="_r4qfMLkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sGECFrkWEe26eKBxVz0OTQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGEpELkWEe26eKBxVz0OTQ" name="setCoordinator" specification="_r4qfMrkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sGEpEbkWEe26eKBxVz0OTQ" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGEpErkWEe26eKBxVz0OTQ" name="setName" specification="_r4qfNLkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sGEpE7kWEe26eKBxVz0OTQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGEpFLkWEe26eKBxVz0OTQ" name="setFlow" specification="_r4rGQLkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sGEpFbkWEe26eKBxVz0OTQ" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGEpFrkWEe26eKBxVz0OTQ" name="setSrc" specification="_r4rGQrkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sGEpF7kWEe26eKBxVz0OTQ" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGEpGLkWEe26eKBxVz0OTQ" name="setSnk" specification="_r4rGRLkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sGEpGbkWEe26eKBxVz0OTQ" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGEpGrkWEe26eKBxVz0OTQ" name="setChannel" specification="_r4rGRrkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sGEpG7kWEe26eKBxVz0OTQ" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGEpHLkWEe26eKBxVz0OTQ" name="unused" specification="_r4rGSLkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sGEpHbkWEe26eKBxVz0OTQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_r4qfMLkWEe26eKBxVz0OTQ" name="getCoordinator" method="_sGECFbkWEe26eKBxVz0OTQ">
                  <ownedComment xmi:id="_sGT5obkWEe26eKBxVz0OTQ">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r4qfMbkWEe26eKBxVz0OTQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r4qfMrkWEe26eKBxVz0OTQ" name="setCoordinator" method="_sGEpELkWEe26eKBxVz0OTQ">
                  <ownedComment xmi:id="_sGT5orkWEe26eKBxVz0OTQ">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_r4qfM7kWEe26eKBxVz0OTQ" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r4qfNLkWEe26eKBxVz0OTQ" name="setName" visibility="private" method="_sGEpErkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_r4qfNbkWEe26eKBxVz0OTQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r4rGQLkWEe26eKBxVz0OTQ" name="setFlow" visibility="private" method="_sGEpFLkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_r4rGQbkWEe26eKBxVz0OTQ" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r4rGQrkWEe26eKBxVz0OTQ" name="setSrc" visibility="private" method="_sGEpFrkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_r4rGQ7kWEe26eKBxVz0OTQ" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r4rGRLkWEe26eKBxVz0OTQ" name="setSnk" visibility="private" method="_sGEpGLkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_r4rGRbkWEe26eKBxVz0OTQ" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r4rGRrkWEe26eKBxVz0OTQ" name="setChannel" visibility="private" method="_sGEpGrkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_r4rGR7kWEe26eKBxVz0OTQ" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_r4rGSLkWEe26eKBxVz0OTQ" name="unused" method="_sGEpHLkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_r4rtULkWEe26eKBxVz0OTQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_r4sUYbkWEe26eKBxVz0OTQ" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_sEmpcbkWEe26eKBxVz0OTQ" general="_sElbUbkWEe26eKBxVz0OTQ"/>
                <ownedAttribute xmi:id="_sFcW8rkWEe26eKBxVz0OTQ" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_sFcW9LkWEe26eKBxVz0OTQ" name="instructionParametersArrayList" visibility="package" type="_sCBPgLkWEe26eKBxVz0OTQ" association="_sHDgg7kWEe26eKBxVz0OTQ"/>
                <ownedAttribute xmi:id="_sFc-ArkWEe26eKBxVz0OTQ" name="instructionParameters" visibility="package" type="_r4p4ILkWEe26eKBxVz0OTQ" association="_sHDghrkWEe26eKBxVz0OTQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGEpIbkWEe26eKBxVz0OTQ" name="ListenerDsl" specification="_r4s7cLkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sGEpIrkWEe26eKBxVz0OTQ" type="_r4sUYbkWEe26eKBxVz0OTQ" direction="return"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGEpI7kWEe26eKBxVz0OTQ" name="getInstructionParameters" specification="_r4s7dLkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sGEpJLkWEe26eKBxVz0OTQ" type="_sCBPgLkWEe26eKBxVz0OTQ" direction="return"/>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGEpJbkWEe26eKBxVz0OTQ" name="enterAction" specification="_sDaWobkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sGEpJrkWEe26eKBxVz0OTQ" name="ctx" type="_sDZvkLkWEe26eKBxVz0OTQ"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGEpJ7kWEe26eKBxVz0OTQ" name="exitAction" specification="_sDaWprkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sGEpKLkWEe26eKBxVz0OTQ" name="ctx" type="_sDZvkLkWEe26eKBxVz0OTQ"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGFQILkWEe26eKBxVz0OTQ" name="exitFlowName" specification="_sDa9tbkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sGFQIbkWEe26eKBxVz0OTQ" name="ctx" type="_sDa9s7kWEe26eKBxVz0OTQ"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGFQIrkWEe26eKBxVz0OTQ" name="exitCmd" specification="_sDbkxbkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sGFQI7kWEe26eKBxVz0OTQ" name="ctx" type="_sDbkw7kWEe26eKBxVz0OTQ"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGFQJLkWEe26eKBxVz0OTQ" name="exitSrcNode" specification="_sDcL1bkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sGFQJbkWEe26eKBxVz0OTQ" name="ctx" type="_sDcL07kWEe26eKBxVz0OTQ"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGFQJrkWEe26eKBxVz0OTQ" name="exitSnkNode" specification="_sDcy5bkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sGFQJ7kWEe26eKBxVz0OTQ" name="ctx" type="_sDcy47kWEe26eKBxVz0OTQ"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGFQKLkWEe26eKBxVz0OTQ" name="exitChannel" specification="_sDdZ9bkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sGFQKbkWEe26eKBxVz0OTQ" name="ctx" type="_sDdZ87kWEe26eKBxVz0OTQ"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_r4s7cLkWEe26eKBxVz0OTQ" name="ListenerDsl" visibility="package" method="_sGEpIbkWEe26eKBxVz0OTQ">
                  <eAnnotations xmi:id="_r4s7cbkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_r4s7crkWEe26eKBxVz0OTQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_r4s7c7kWEe26eKBxVz0OTQ" type="_r4sUYbkWEe26eKBxVz0OTQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_r4s7dLkWEe26eKBxVz0OTQ" name="getInstructionParameters" method="_sGEpI7kWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sEmpcLkWEe26eKBxVz0OTQ" type="_sCBPgLkWEe26eKBxVz0OTQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sDaWobkWEe26eKBxVz0OTQ" name="enterAction" method="_sGEpJbkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sDaWorkWEe26eKBxVz0OTQ" name="ctx" type="_sDZvkLkWEe26eKBxVz0OTQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sDaWprkWEe26eKBxVz0OTQ" name="exitAction" method="_sGEpJ7kWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sDaWp7kWEe26eKBxVz0OTQ" name="ctx" type="_sDZvkLkWEe26eKBxVz0OTQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sDa9tbkWEe26eKBxVz0OTQ" name="exitFlowName" method="_sGFQILkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sDa9trkWEe26eKBxVz0OTQ" name="ctx" type="_sDa9s7kWEe26eKBxVz0OTQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sDbkxbkWEe26eKBxVz0OTQ" name="exitCmd" method="_sGFQIrkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sDbkxrkWEe26eKBxVz0OTQ" name="ctx" type="_sDbkw7kWEe26eKBxVz0OTQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sDcL1bkWEe26eKBxVz0OTQ" name="exitSrcNode" method="_sGFQJLkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sDcL1rkWEe26eKBxVz0OTQ" name="ctx" type="_sDcL07kWEe26eKBxVz0OTQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sDcy5bkWEe26eKBxVz0OTQ" name="exitSnkNode" method="_sGFQJrkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sDcy5rkWEe26eKBxVz0OTQ" name="ctx" type="_sDcy47kWEe26eKBxVz0OTQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_sDdZ9bkWEe26eKBxVz0OTQ" name="exitChannel" method="_sGFQKLkWEe26eKBxVz0OTQ">
                  <ownedParameter xmi:id="_sDdZ9rkWEe26eKBxVz0OTQ" name="ctx" type="_sDdZ87kWEe26eKBxVz0OTQ"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4vXsLkWEe26eKBxVz0OTQ" name="Warp">
              <ownedComment xmi:id="_sGUgsLkWEe26eKBxVz0OTQ">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_sFdlELkWEe26eKBxVz0OTQ" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFdlEbkWEe26eKBxVz0OTQ" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFdlErkWEe26eKBxVz0OTQ" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_sER5UrkWEe26eKBxVz0OTQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFdlE7kWEe26eKBxVz0OTQ" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFdlFLkWEe26eKBxVz0OTQ" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_sER5UrkWEe26eKBxVz0OTQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFdlFbkWEe26eKBxVz0OTQ" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFeMILkWEe26eKBxVz0OTQ" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFeMIbkWEe26eKBxVz0OTQ" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFeMIrkWEe26eKBxVz0OTQ" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_r39UkLkWEe26eKBxVz0OTQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFeMI7kWEe26eKBxVz0OTQ" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFeMJLkWEe26eKBxVz0OTQ" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFeMJbkWEe26eKBxVz0OTQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFeMJrkWEe26eKBxVz0OTQ" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFeMKLkWEe26eKBxVz0OTQ" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFezMLkWEe26eKBxVz0OTQ" name="minLQ" visibility="private" isStatic="true" type="_sER5UrkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFezMrkWEe26eKBxVz0OTQ" name="e2e" visibility="private" isStatic="true" type="_sER5UrkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFezNLkWEe26eKBxVz0OTQ" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFezNrkWEe26eKBxVz0OTQ" name="guiRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFfaQbkWEe26eKBxVz0OTQ" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFfaQ7kWEe26eKBxVz0OTQ" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFfaRbkWEe26eKBxVz0OTQ" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFgBULkWEe26eKBxVz0OTQ" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFgBUrkWEe26eKBxVz0OTQ" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFgBVLkWEe26eKBxVz0OTQ" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFgBVrkWEe26eKBxVz0OTQ" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFgBWLkWEe26eKBxVz0OTQ" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFgoYbkWEe26eKBxVz0OTQ" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFgoYrkWEe26eKBxVz0OTQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFgoZLkWEe26eKBxVz0OTQ" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFgoZrkWEe26eKBxVz0OTQ" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFhPcLkWEe26eKBxVz0OTQ" name="schedulerSelected" visibility="private" isStatic="true" type="_r39UkLkWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGFQKrkWEe26eKBxVz0OTQ" name="main" specification="_r4wl0LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGFQK7kWEe26eKBxVz0OTQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sGFQLLkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
 setWarpParameters(args);&#xD;
&#xD;
 // and print out the values if in verbose mode&#xD;
 if (verboseMode) {&#xD;
   printWarpParameters();&#xD;
 }&#xD;
&#xD;
 // Create and visualize the workload&#xD;
 // inputFile string, which may be null,&#xD;
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
 if (allRequested) {&#xD;
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
     visualize(workLoad, choice); // visualize all Program choices&#xD;
   }&#xD;
   // Create and visualize the Warp System&#xD;
   if (schedulerRequested) {&#xD;
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
     verifyPerformanceRequirements(warp);&#xD;
     for (SystemChoices choice : SystemChoices.values()) {&#xD;
       visualize(warp, choice); // visualize all System choices&#xD;
     }&#xD;
   } else { // create a system for all scheduler choices&#xD;
     for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
       schedulerSelected = sch;&#xD;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
       verifyPerformanceRequirements(warp);&#xD;
       for (SystemChoices choice : SystemChoices.values()) {&#xD;
         visualize(warp, choice); // visualize all System choices&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 } else { // visualize warp workload, source program and other requested items&#xD;
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
   if (wfRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
   }&#xD;
   if (gvRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
   }&#xD;
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
   verifyPerformanceRequirements(warp);&#xD;
   visualize(warp, SystemChoices.SOURCE);&#xD;
   if (caRequested) {&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
   if (laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY);&#xD;
   }&#xD;
   if (latencyRequested || laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
   }&#xD;
   if (raRequested) {&#xD;
     visualize(warp, SystemChoices.RELIABILITIES);&#xD;
   }&#xD;
 }&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGFQLbkWEe26eKBxVz0OTQ" name="visualize" specification="_sDgdQLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGFQLrkWEe26eKBxVz0OTQ" name="workLoad" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGFQL7kWEe26eKBxVz0OTQ" name="choice" type="_r4C0I7kWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var viz =&#xD;
     VisualizationFactory.createWorkLoadVisualization(workLoad, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   if (verboseMode) {&#xD;
     System.out.println(viz.toString());&#xD;
   }&#xD;
   viz.toFile();&#xD;
   if (guiRequested) {&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGFQMLkWEe26eKBxVz0OTQ" name="visualize" specification="_sDgdQ7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGFQMbkWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGFQMrkWEe26eKBxVz0OTQ" name="choice" type="_r4CNELkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createProgramVisualization(warp, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   viz.toFile();&#xD;
   if (guiRequested &amp;&amp; schedulerRequested) {&#xD;
     /* Only display window when a specific scheduler has been requested */&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGF3MLkWEe26eKBxVz0OTQ" name="verifyPerformanceRequirements" specification="_sDhEUrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGF3MbkWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
 verifyReliabilities(warp);&#xD;
 verifyNoChannelConflicts(warp);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGF3MrkWEe26eKBxVz0OTQ" name="verifyReliabilities" specification="_sDhEVLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGF3M7kWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
   /* RealTime HART doesn't adhere to reliability targets */&#xD;
   if (!warp.reliabilitiesMet()) {&#xD;
     System.err.printf(&#xD;
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
             + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   } else if (verboseMode) {&#xD;
     System.out.printf(&#xD;
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGF3NLkWEe26eKBxVz0OTQ" name="verifyDeadlines" specification="_sDhEVrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGF3NbkWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
   visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGF3NrkWEe26eKBxVz0OTQ" name="verifyNoChannelConflicts" specification="_sDhEWLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGF3N7kWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
   System.err&#xD;
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
   if (!caRequested) { // only need to create the visualization if not already requested&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGF3OLkWEe26eKBxVz0OTQ" name="setWarpParameters" specification="_r4xM4LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGF3ObkWEe26eKBxVz0OTQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sGF3OrkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this&#xD;
                                                      // function--need to set up globals?&#xD;
&#xD;
 // create holder objects for storing results ...&#xD;
 // BooleanHolder debug = new BooleanHolder();&#xD;
 StringHolder schedulerSelected = new StringHolder();&#xD;
 IntHolder channels = new IntHolder();&#xD;
 IntHolder faults = new IntHolder();&#xD;
 DoubleHolder m = new DoubleHolder();&#xD;
 DoubleHolder end2end = new DoubleHolder();&#xD;
 BooleanHolder gui = new BooleanHolder();&#xD;
 BooleanHolder gv = new BooleanHolder();&#xD;
 BooleanHolder wf = new BooleanHolder();&#xD;
 BooleanHolder ra = new BooleanHolder();&#xD;
 BooleanHolder la = new BooleanHolder();&#xD;
 BooleanHolder ca = new BooleanHolder();&#xD;
 BooleanHolder s = new BooleanHolder();&#xD;
 BooleanHolder all = new BooleanHolder();&#xD;
 BooleanHolder latency = new BooleanHolder();&#xD;
 BooleanHolder verbose = new BooleanHolder();&#xD;
 StringHolder input = new StringHolder();&#xD;
 StringHolder output = new StringHolder();&#xD;
&#xD;
 // create the parser and specify the allowed options ...&#xD;
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,&#xD;
     schedulerSelected);&#xD;
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
 parser.addOption(&#xD;
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,&#xD;
     end2end);&#xD;
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,&#xD;
     faults);&#xD;
 parser.addOption(&quot;-gui %v #create a gui visualizations&quot;, gui);&#xD;
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
 parser.addOption(&#xD;
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
     wf);&#xD;
 parser.addOption(&#xD;
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,&#xD;
     ra);&#xD;
 parser.addOption(&#xD;
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
 parser.addOption(&#xD;
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,&#xD;
     output);&#xD;
 parser.addOption(&#xD;
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
     verbose);&#xD;
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
 // $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
&#xD;
 // match the arguments ...&#xD;
 parser.matchAllArgs(args);&#xD;
&#xD;
 // Set WARP system configuration options&#xD;
 if (channels.value > 0) {&#xD;
   nChannels = channels.value; // set option specified&#xD;
 } else {&#xD;
   nChannels = NUM_CHANNELS; // set to default&#xD;
 }&#xD;
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
   numFaults = faults.value; // set option specified&#xD;
 } else {&#xD;
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
 }&#xD;
 if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   minLQ = m.value; // set option specified&#xD;
 } else {&#xD;
   minLQ = MIN_LQ; // set to default&#xD;
 }&#xD;
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   e2e = end2end.value; // set option specified&#xD;
 } else {&#xD;
   e2e = E2E; // set to default&#xD;
 }&#xD;
 if (output.value != null) { // default output subdirectory (from working directory)&#xD;
   outputSubDirectory = output.value; // set option specified&#xD;
 } else {&#xD;
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
 }&#xD;
&#xD;
 guiRequested = gui.value; // GraphVis file requested flag&#xD;
 gvRequested = gv.value; // GraphVis file requested flag&#xD;
 wfRequested = wf.value; // WARP file requested flag&#xD;
 raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
 laRequested = la.value; // Latency Analysis file requested flag&#xD;
 caRequested = ca.value; // Latency Analysis file requested flag&#xD;
 simRequested = s.value; // Simulation file requested flag&#xD;
 allRequested = all.value; // all out files requested flag&#xD;
 latencyRequested = latency.value; // latency report requested flag&#xD;
 verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
 inputFile = input.value; // input file specified&#xD;
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
   schedulerRequested = true;&#xD;
   switch (schedulerSelected.value) {&#xD;
     case &quot;priority&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
&#xD;
     case &quot;rm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
       break;&#xD;
&#xD;
     case &quot;dm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
       break;&#xD;
&#xD;
     case &quot;rtHart&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
       break;&#xD;
&#xD;
     case &quot;poset&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
       break;&#xD;
&#xD;
     default:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
   }&#xD;
 } else { // null value when no scheduler specified; so use default&#xD;
   Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGF3O7kWEe26eKBxVz0OTQ" name="printWarpParameters" specification="_r4xM5LkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>// print all system configuration parameters&#xD;
 // Print out each of the system configuration values&#xD;
 System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
 System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
 System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
 System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
 System.out.println(&quot;\tguiRequest flag=&quot; + guiRequested);&#xD;
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
 if (inputFile != null) {&#xD;
   System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
 } else {&#xD;
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
 }&#xD;
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4wl0LkWEe26eKBxVz0OTQ" name="main" isStatic="true" method="_sGFQKrkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGUgsbkWEe26eKBxVz0OTQ">
                  <body>The main entry point for the application.&#xD;
   * Run with -help argument for more information about commands.&#xD;
   * @param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4wl0bkWEe26eKBxVz0OTQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r4wl0rkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4xM4LkWEe26eKBxVz0OTQ" name="setWarpParameters" visibility="private" isStatic="true" method="_sGF3OLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGUguLkWEe26eKBxVz0OTQ">
                  <body>Parses program arguments and assigns each attribute.&#xD;
   * &#xD;
   * @param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4xM4bkWEe26eKBxVz0OTQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_r4xM4rkWEe26eKBxVz0OTQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4xM5LkWEe26eKBxVz0OTQ" name="printWarpParameters" visibility="private" isStatic="true" method="_sGF3O7kWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGUgubkWEe26eKBxVz0OTQ">
                  <body>Displays warp parameters to console.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_sDgdQLkWEe26eKBxVz0OTQ" name="visualize" visibility="private" isStatic="true" method="_sGFQLbkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGUgsrkWEe26eKBxVz0OTQ">
                  <body>Visualizes workload by creating visualization object from workload object.&#xD;
   * Either prints to console or displays GUI depending on workload choice.&#xD;
   * &#xD;
   * @param workLoad&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_sDgdQbkWEe26eKBxVz0OTQ" name="workLoad" type="_r4b1sLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDgdQrkWEe26eKBxVz0OTQ" name="choice" type="_r4C0I7kWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDgdQ7kWEe26eKBxVz0OTQ" name="visualize" visibility="private" isStatic="true" method="_sGFQMLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGUgs7kWEe26eKBxVz0OTQ">
                  <body>Visualizes workload by creating visualization object from WarpInterface object.&#xD;
   * Saves visualization to file.&#xD;
   * &#xD;
   * @param workLoad&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_sDhEULkWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDhEUbkWEe26eKBxVz0OTQ" name="choice" type="_r4CNELkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDhEUrkWEe26eKBxVz0OTQ" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_sGF3MLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGUgtLkWEe26eKBxVz0OTQ">
                  <body>Verifies deadlines, reliabilities, and channel conflicts.&#xD;
   * &#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_sDhEU7kWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDhEVLkWEe26eKBxVz0OTQ" name="verifyReliabilities" visibility="private" isStatic="true" method="_sGF3MrkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGUgtbkWEe26eKBxVz0OTQ">
                  <body>Verifies end to end reliabilities and displays to console.&#xD;
   * &#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_sDhEVbkWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDhEVrkWEe26eKBxVz0OTQ" name="verifyDeadlines" visibility="private" isStatic="true" method="_sGF3NLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGUgtrkWEe26eKBxVz0OTQ">
                  <body>Verifies that all flows meet their deadlines.&#xD;
   * &#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_sDhEV7kWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDhEWLkWEe26eKBxVz0OTQ" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_sGF3NrkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGUgt7kWEe26eKBxVz0OTQ">
                  <body>Checks for conflicts between channels and prints to console.&#xD;
   * &#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_sDhEWbkWEe26eKBxVz0OTQ" name="warp" type="_r4SEsLkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r4zpILkWEe26eKBxVz0OTQ" name="WorkLoadTest" visibility="package">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGF3PLkWEe26eKBxVz0OTQ" name="createDefaultWorkload" specification="_r40QMLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGF3PbkWEe26eKBxVz0OTQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGF3PrkWEe26eKBxVz0OTQ" type="_r4b1sLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>int numFaults = 0;&#xD;
		double minLQ = 0.9;&#xD;
		double e2e = 0.99;&#xD;
		WorkLoad workload = new WorkLoad(numFaults, minLQ, e2e, inputFileName);&#xD;
		return workload;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGF3P7kWEe26eKBxVz0OTQ" name="testAddFlow" specification="_r40QMrkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addFlow(&quot;F2&quot;);&#xD;
		workload.addFlow(&quot;F3&quot;);&#xD;
		workload.addFlow(&quot;F4&quot;);&#xD;
		workload.addFlow(&quot;F5&quot;);&#xD;
		workload.addFlow(&quot;F6&quot;);&#xD;
		var expected = new String[] {&quot;F0&quot;, &quot;F1&quot;, &quot;F2&quot;, &quot;F3&quot;, &quot;F4&quot;, &quot;F5&quot;, &quot;F6&quot;};&#xD;
		var flows = workload.getFlowNamesInOriginalOrder();&#xD;
		for(int i = 0; i &lt; flows.size(); i++) {&#xD;
			var msg = String.format(&quot;At index %d: Flow expected: %s, was: %s.&quot;, i, expected[i], flows.get(i));&#xD;
			assertEquals(msg, flows.get(i), expected[i] );&#xD;
		}&#xD;
		&#xD;
			&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGF3QLkWEe26eKBxVz0OTQ" name="testAddFlowJustNumbers" specification="_r403QbkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addFlow(&quot;2&quot;);&#xD;
		workload.addFlow(&quot;3&quot;);&#xD;
		workload.addFlow(&quot;4&quot;);&#xD;
		workload.addFlow(&quot;5&quot;);&#xD;
		workload.addFlow(&quot;6&quot;);&#xD;
		workload.addFlow(&quot;7&quot;);&#xD;
		var expected = new String[] {&quot;F0&quot;, &quot;F1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;};&#xD;
		var flows = workload.getFlowNamesInOriginalOrder();&#xD;
		for(int i = 0; i &lt; flows.size(); i++) {&#xD;
			var msg = String.format(&quot;At index %d: Flow expected: %s, was: %s.&quot;, i, expected[i], flows.get(i));&#xD;
			assertEquals(msg, flows.get(i), expected[i] );&#xD;
		}	&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGF3QbkWEe26eKBxVz0OTQ" name="testAddNodeToFlow" specification="_r403RbkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addNodeToFlow(&quot;F1&quot;, &quot;D&quot;);&#xD;
		workload.addNodeToFlow(&quot;F1&quot;, &quot;E&quot;);&#xD;
		workload.addNodeToFlow(&quot;F1&quot;, &quot;F&quot;);&#xD;
		var expected = new String[] {&quot;C&quot;, &quot;B&quot;, &quot;A&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;};&#xD;
		var nodes = workload.getNodesInFlow(&quot;F1&quot;);&#xD;
		for(int i = 0; i &lt; nodes.length; i++) {&#xD;
			var msg = String.format(&quot;At index %d: Node expected: %s was: %s&quot;, i, expected[i], nodes[i]);&#xD;
			assertEquals(msg, expected[i], nodes[i]);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGF3QrkWEe26eKBxVz0OTQ" name="testAddNodeToFlowAddingToNewFlow" specification="_r403SbkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addFlow(&quot;testFlow&quot;);&#xD;
		workload.addNodeToFlow(&quot;testFlow&quot;, &quot;A&quot;);&#xD;
		workload.addNodeToFlow(&quot;testFlow&quot;, &quot;B&quot;);&#xD;
		workload.addNodeToFlow(&quot;testFlow&quot;, &quot;C&quot;);&#xD;
		var expected = new String[] {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;};&#xD;
		var nodes = workload.getNodesInFlow(&quot;testFlow&quot;);&#xD;
		for(int i = 0; i &lt; nodes.length; i++) {&#xD;
			var msg = String.format(&quot;At index %d: Node expected: %s was: %s&quot;, i, expected[i], nodes[i]);&#xD;
			assertEquals(msg, expected[i], nodes[i]);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGF3Q7kWEe26eKBxVz0OTQ" name="testGetTotalTxAttemptsInFlow" specification="_r41eUrkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		var expected = new int[] {5, 4};&#xD;
		var flows = workload.getFlowNames();&#xD;
		for(int i = 0; i &lt; flows.length; i++) {&#xD;
			int attempts = workload.getTotalTxAttemptsInFlow(flows[i]);&#xD;
			var msg = String.format(&quot;expected Tx Attempts: %d was: %d&quot;, expected[i], attempts);&#xD;
&#xD;
			assertEquals(msg, expected[i], attempts); &#xD;
		}&#xD;
		&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGGeQLkWEe26eKBxVz0OTQ" name="testGetFlowPriority" specification="_r41eVrkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		var flows = workload.getFlowNamesInPriorityOrder();&#xD;
		var expectedP = new int[] {0, 1};&#xD;
		for(int i = 0; i &lt; flows.size(); i++) {&#xD;
			int flowPriority = workload.getFlowPriority(flows.get(i));&#xD;
			var msg = String.format(&quot;Expected Priority: %d Actual Priority: %d &quot;, expectedP[i], flowPriority);&#xD;
			assertEquals(msg, expectedP[i], flowPriority);	&#xD;
		}	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGGeQbkWEe26eKBxVz0OTQ" name="testSetFlowPriority" specification="_r41eWrkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		//set integer to set the priority&#xD;
		Integer j = 0;&#xD;
		var flows = workload.getFlowNamesInPriorityOrder();&#xD;
		//for loops starts at the end of the list&#xD;
		for(int i = flows.size(); i > 0; i-- ) {&#xD;
			//sets the priority using j then increases j by 1&#xD;
			workload.setFlowPriority(flows.get(i), j );&#xD;
			j++;&#xD;
			var priority = workload.getFlowPriority(flows.get(i));&#xD;
			var msg = String.format(&quot;Expected Priority: %d Actual Priority: %d &quot;, j, priority);&#xD;
			assertEquals(msg, j, priority);&#xD;
		}&#xD;
		&#xD;
		&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGGeQrkWEe26eKBxVz0OTQ" name="testGetFlowTxAttemptsPerLink" specification="_r42FY7kWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addFlow(&quot;test&quot;);&#xD;
		var flows = workload.getFlowNames();&#xD;
		var expected = new int[] {3, 3, 1};&#xD;
		for(int i = 0; i &lt; flows.length; i++) {&#xD;
		int attempts = workload.getFlowTxAttemptsPerLink(flows[i]);&#xD;
		String msg = String.format(&quot;Expected No. of Tx: %d Actual No. of Tx: %d &quot;, expected[i], attempts);&#xD;
		assertEquals(msg, expected[i], attempts);&#xD;
		}&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGGeQ7kWEe26eKBxVz0OTQ" name="testSetFlowsInRMOrder" specification="_r42FZ7kWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
	    workload.setFlowsInRMorder();&#xD;
	    var flows = workload.getFlowNamesInPriorityOrder();&#xD;
		var expected = new String[] {&quot;F0&quot;, &quot;F1&quot; };&#xD;
		for(int i = 0; i &lt; flows.size(); i++ ) {&#xD;
			var msg = String.format(&quot;Expected Flow at index %d: %s Actual Flow: %s &quot;,i, expected[i], flows.get(i));&#xD;
			&#xD;
			assertEquals(msg, expected[i], flows.get(i).toString());&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGGeRLkWEe26eKBxVz0OTQ" name="testSetFlowsInRMOrderChangePriorityandPeriod" specification="_r42scrkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.setFlowPriority(&quot;F1&quot;, 0);&#xD;
		workload.setFlowPeriod(&quot;F1&quot;, 5);&#xD;
		workload.setFlowsInRMorder();&#xD;
		var flows = workload.getFlowNamesInPriorityOrder();&#xD;
		var expected = new String[] {&quot;F1&quot;, &quot;F0&quot; };&#xD;
		  for(int i = 0; i &lt; flows.size(); i++ ) {&#xD;
			var msg = String.format(&quot;Expected Flow at index %d: %s Actual Flow: %s &quot;,i, expected[i], flows.get(i));&#xD;
				&#xD;
			assertEquals(msg, expected[i], flows.get(i).toString());&#xD;
	}&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGGeRbkWEe26eKBxVz0OTQ" name="testGetNodeNamesInAlphabeticalOrder" specification="_r42sdrkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		var expected = new String[] {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;,};&#xD;
		var actual = workload.getNodeNamesOrderedAlphabetically();&#xD;
		for(int i = 0; i &lt; actual.length; i++) {&#xD;
			var node = actual[i];&#xD;
			var msg = String.format(&quot;At index: %d Node expected: %s Actual Node: %s&quot;, i, expected[i], node);&#xD;
			assertEquals(msg, expected[i], node);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGGeRrkWEe26eKBxVz0OTQ" name="testGetNodeNamesInAlphabeticalOrderExtraNodes" specification="_r42serkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addNodeToFlow(&quot;F0&quot;, &quot;1&quot;);&#xD;
		workload.addNodeToFlow(&quot;F1&quot;, &quot;O&quot;);&#xD;
		workload.addNodeToFlow(&quot;F0&quot;, &quot;N&quot;);&#xD;
		workload.addNodeToFlow(&quot;F1&quot;, &quot;2&quot;);&#xD;
		var expected = new String[] {&quot;1&quot;, &quot;2&quot;, &quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;N&quot;, &quot;O&quot;};&#xD;
		var actual = workload.getNodeNamesOrderedAlphabetically();&#xD;
		for(int i = 0; i &lt; actual.length; i++) {&#xD;
			var node = actual[i];&#xD;
			var msg = String.format(&quot;At index: %d Node expected: %s Actual Node: %s&quot;, i, expected[i], node);&#xD;
			assertEquals(msg, expected[i], node);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGGeR7kWEe26eKBxVz0OTQ" name="getFlowNames" specification="_r42se7kWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		String[] actual = workload.getFlowNames();&#xD;
		String[] expected = {&quot;F0&quot;, &quot;F1&quot;};&#xD;
		assertArrayEquals(actual, expected, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGGeSLkWEe26eKBxVz0OTQ" name="getNodeIndex_exists" specification="_r43Tg7kWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int actual = workload.getNodeIndex(&quot;D&quot;);&#xD;
		int expected = 3;&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGGeSbkWEe26eKBxVz0OTQ" name="getNodeIndex_doesNotExist" specification="_r43Th7kWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int actual = workload.getNodeIndex(&quot;&quot;);&#xD;
		int expected = 0;&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGGeSrkWEe26eKBxVz0OTQ" name="getNodesInFlow" specification="_r43Ti7kWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		String[] actual = workload.getNodesInFlow(&quot;F0&quot;);&#xD;
		String[] expected = {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;};&#xD;
		assertArrayEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGGeS7kWEe26eKBxVz0OTQ" name="getHyperPeriod_Short" specification="_r436k7kWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int actual = workload.getHyperPeriod();&#xD;
		int expected = 20;&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGGeTLkWEe26eKBxVz0OTQ" name="getHyperPeriod_Long" specification="_r436l7kWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;StressTest.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int actual = workload.getHyperPeriod();&#xD;
		int expected = 300;&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGGeTbkWEe26eKBxVz0OTQ" name="getNumTxAttemptsPerLink" specification="_r436m7kWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;StressTest.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		Integer[] actual = workload.getNumTxAttemptsPerLink(&quot;F1&quot;);&#xD;
		Integer[] expected = {3, 3, 0};&#xD;
		assertArrayEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGGeTrkWEe26eKBxVz0OTQ" name="maxFlowLength_StressTest" specification="_r44ho7kWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;StressTest.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int expected = 8;&#xD;
		int actual = workload.maxFlowLength();&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGGeT7kWEe26eKBxVz0OTQ" name="maxFlowLength_LongChain" specification="_r44hp7kWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;LongChain.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int expected = 26;&#xD;
		int actual = workload.maxFlowLength();&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGGeULkWEe26eKBxVz0OTQ" name="getFlowDeadline" specification="_r44hq7kWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		&#xD;
		String flow = &quot;F0&quot;;&#xD;
		int expected = 10;&#xD;
		&#xD;
		workload.setFlowDeadline(flow, expected);&#xD;
		int actual = workload.getFlowDeadline(flow);&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGGeUbkWEe26eKBxVz0OTQ" name="setFlowDeadline" specification="_r45Is7kWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>String fileName = &quot;Example.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		&#xD;
		String flow = &quot;F0&quot;;&#xD;
		int expected = 10;&#xD;
		&#xD;
		workload.setFlowDeadline(flow, expected);&#xD;
		int actual = workload.getFlowDeadline(flow);&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r40QMLkWEe26eKBxVz0OTQ" name="createDefaultWorkload" visibility="private" method="_sGF3PLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGUgurkWEe26eKBxVz0OTQ">
                  <body>Helper method to setup workload object depending on filename.&#xD;
	 * @param inputFileName name of file to use.&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_r40QMbkWEe26eKBxVz0OTQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDjgkbkWEe26eKBxVz0OTQ" type="_r4b1sLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r40QMrkWEe26eKBxVz0OTQ" name="testAddFlow" visibility="package" method="_sGF3P7kWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r403QbkWEe26eKBxVz0OTQ" name="testAddFlowJustNumbers" visibility="package" method="_sGF3QLkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r403RbkWEe26eKBxVz0OTQ" name="testAddNodeToFlow" visibility="package" method="_sGF3QbkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r403SbkWEe26eKBxVz0OTQ" name="testAddNodeToFlowAddingToNewFlow" visibility="package" method="_sGF3QrkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r41eUrkWEe26eKBxVz0OTQ" name="testGetTotalTxAttemptsInFlow" visibility="package" method="_sGF3Q7kWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r41eVrkWEe26eKBxVz0OTQ" name="testGetFlowPriority" visibility="package" method="_sGGeQLkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r41eWrkWEe26eKBxVz0OTQ" name="testSetFlowPriority" visibility="package" method="_sGGeQbkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r42FY7kWEe26eKBxVz0OTQ" name="testGetFlowTxAttemptsPerLink" visibility="package" method="_sGGeQrkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r42FZ7kWEe26eKBxVz0OTQ" name="testSetFlowsInRMOrder" visibility="package" method="_sGGeQ7kWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r42scrkWEe26eKBxVz0OTQ" name="testSetFlowsInRMOrderChangePriorityandPeriod" visibility="package" method="_sGGeRLkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r42sdrkWEe26eKBxVz0OTQ" name="testGetNodeNamesInAlphabeticalOrder" visibility="package" method="_sGGeRbkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r42serkWEe26eKBxVz0OTQ" name="testGetNodeNamesInAlphabeticalOrderExtraNodes" visibility="package" method="_sGGeRrkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGUgu7kWEe26eKBxVz0OTQ">
                  <body>tests the getNodeNamesOrderedAlphabetically method in WorkLoad.java class. Adds extra Nodes&#xD;
	 * with names not present in the original file, then tests to see if they are sorted properly.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_r42se7kWEe26eKBxVz0OTQ" name="getFlowNames" visibility="package" method="_sGGeR7kWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r43Tg7kWEe26eKBxVz0OTQ" name="getNodeIndex_exists" visibility="package" method="_sGGeSLkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r43Th7kWEe26eKBxVz0OTQ" name="getNodeIndex_doesNotExist" visibility="package" method="_sGGeSbkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r43Ti7kWEe26eKBxVz0OTQ" name="getNodesInFlow" visibility="package" method="_sGGeSrkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r436k7kWEe26eKBxVz0OTQ" name="getHyperPeriod_Short" visibility="package" method="_sGGeS7kWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r436l7kWEe26eKBxVz0OTQ" name="getHyperPeriod_Long" visibility="package" method="_sGGeTLkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r436m7kWEe26eKBxVz0OTQ" name="getNumTxAttemptsPerLink" visibility="package" method="_sGGeTbkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r44ho7kWEe26eKBxVz0OTQ" name="maxFlowLength_StressTest" visibility="package" method="_sGGeTrkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r44hp7kWEe26eKBxVz0OTQ" name="maxFlowLength_LongChain" visibility="package" method="_sGGeT7kWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r44hq7kWEe26eKBxVz0OTQ" name="getFlowDeadline" visibility="package" method="_sGGeULkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r45Is7kWEe26eKBxVz0OTQ" name="setFlowDeadline" visibility="package" method="_sGGeUbkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_r45vwLkWEe26eKBxVz0OTQ" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_sFh2gLkWEe26eKBxVz0OTQ" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFh2gbkWEe26eKBxVz0OTQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFh2grkWEe26eKBxVz0OTQ" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFh2g7kWEe26eKBxVz0OTQ" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFh2hLkWEe26eKBxVz0OTQ" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFh2hbkWEe26eKBxVz0OTQ" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFh2hrkWEe26eKBxVz0OTQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFh2h7kWEe26eKBxVz0OTQ" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFh2iLkWEe26eKBxVz0OTQ" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFh2ibkWEe26eKBxVz0OTQ" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFh2irkWEe26eKBxVz0OTQ" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFidkbkWEe26eKBxVz0OTQ" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFidkrkWEe26eKBxVz0OTQ" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFidk7kWEe26eKBxVz0OTQ" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFidlLkWEe26eKBxVz0OTQ" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFjEoLkWEe26eKBxVz0OTQ" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFjEorkWEe26eKBxVz0OTQ" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFjEpLkWEe26eKBxVz0OTQ" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFjEpbkWEe26eKBxVz0OTQ" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_sFjEprkWEe26eKBxVz0OTQ" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_sFjEp7kWEe26eKBxVz0OTQ" name="predecessor" type="_r45vwLkWEe26eKBxVz0OTQ" association="_sGVHwLkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFjEqLkWEe26eKBxVz0OTQ" name="endTimes" visibility="private" type="_r3okcLkWEe26eKBxVz0OTQ" association="_sHEHkbkWEe26eKBxVz0OTQ"/>
              <ownedAttribute xmi:id="_sFjrsrkWEe26eKBxVz0OTQ" name="subObjects" type="_sDkHorkWEe26eKBxVz0OTQ" isReadOnly="true" association="_sHEHlLkWEe26eKBxVz0OTQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGHFULkWEe26eKBxVz0OTQ" name="SchedulableObject" specification="_r4694LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGHFUbkWEe26eKBxVz0OTQ" type="_r45vwLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGHFUrkWEe26eKBxVz0OTQ" name="SchedulableObject" specification="_sDkusbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGHFU7kWEe26eKBxVz0OTQ" name="obj" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGHFVLkWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGHFVbkWEe26eKBxVz0OTQ" type="_r45vwLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGHFVrkWEe26eKBxVz0OTQ" name="SchedulableObject" specification="_r4695LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGHFV7kWEe26eKBxVz0OTQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGHFWLkWEe26eKBxVz0OTQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGHFWbkWEe26eKBxVz0OTQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGHFWrkWEe26eKBxVz0OTQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGHFW7kWEe26eKBxVz0OTQ" type="_r45vwLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGHFXLkWEe26eKBxVz0OTQ" name="SchedulableObject" specification="_r47k8rkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGHFXbkWEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGHFXrkWEe26eKBxVz0OTQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGHFX7kWEe26eKBxVz0OTQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGHFYLkWEe26eKBxVz0OTQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGHFYbkWEe26eKBxVz0OTQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGHFYrkWEe26eKBxVz0OTQ" type="_r45vwLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGHFY7kWEe26eKBxVz0OTQ" name="setDefaultParameters" specification="_r47k-7kWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGHFZLkWEe26eKBxVz0OTQ" name="getAllEndTimes" specification="_r47k_LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGHFZbkWEe26eKBxVz0OTQ" type="_r3okcLkWEe26eKBxVz0OTQ" direction="return"/>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGHFZrkWEe26eKBxVz0OTQ" name="addToEndTimes" specification="_r48MAbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGHFZ7kWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGHFaLkWEe26eKBxVz0OTQ" name="peekEndTimes" specification="_r48MA7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGHFabkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGHFarkWEe26eKBxVz0OTQ" name="pollEndTimes" specification="_r48MBbkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGHFa7kWEe26eKBxVz0OTQ" name="addSubObject" specification="_sDkuuLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGHFbLkWEe26eKBxVz0OTQ" name="obj" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGHFbbkWEe26eKBxVz0OTQ" name="getName" specification="_r48zELkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGHFbrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGHsYLkWEe26eKBxVz0OTQ" name="setName" specification="_r48zErkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGHsYbkWEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGHsYrkWEe26eKBxVz0OTQ" name="getReleaseTime" specification="_r48zFLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGHsY7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGHsZLkWEe26eKBxVz0OTQ" name="getPhase" specification="_r48zFrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGHsZbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGHsZrkWEe26eKBxVz0OTQ" name="getStartTime" specification="_r48zGLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGHsZ7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGHsaLkWEe26eKBxVz0OTQ" name="setEndTime" specification="_r49aIbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGHsabkWEe26eKBxVz0OTQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGHsarkWEe26eKBxVz0OTQ" name="setStartTime" specification="_r49aI7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGHsa7kWEe26eKBxVz0OTQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGHsbLkWEe26eKBxVz0OTQ" name="setReleaseTime" specification="_r49aJbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGHsbbkWEe26eKBxVz0OTQ" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGHsbrkWEe26eKBxVz0OTQ" name="setPeriod" specification="_r49aJ7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGHsb7kWEe26eKBxVz0OTQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGHscLkWEe26eKBxVz0OTQ" name="setPhase" specification="_r4-BMLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGHscbkWEe26eKBxVz0OTQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGHscrkWEe26eKBxVz0OTQ" name="setNextReleaseTime" specification="_r4-BMrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGHsc7kWEe26eKBxVz0OTQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGHsdLkWEe26eKBxVz0OTQ" name="maxPhaseComparison" specification="_sDkuurkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGHsdbkWEe26eKBxVz0OTQ" name="obj2" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGHsdrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGHsd7kWEe26eKBxVz0OTQ" name="maxPhaseComparison" specification="_sDkuvbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGHseLkWEe26eKBxVz0OTQ" name="obj1" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGHsebkWEe26eKBxVz0OTQ" name="obj2" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGHserkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGHse7kWEe26eKBxVz0OTQ" name="deadlineComparison" specification="_sDl80rkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGHsfLkWEe26eKBxVz0OTQ" name="obj2" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGHsfbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGHsfrkWEe26eKBxVz0OTQ" name="deadlineComparison" specification="_sDl81bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGHsf7kWEe26eKBxVz0OTQ" name="obj1" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGHsgLkWEe26eKBxVz0OTQ" name="obj2" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGHsgbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGITcLkWEe26eKBxVz0OTQ" name="periodComparison" specification="_sDl82bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGITcbkWEe26eKBxVz0OTQ" name="obj2" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGITcrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGITc7kWEe26eKBxVz0OTQ" name="periodComparison" specification="_sDl83LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGITdLkWEe26eKBxVz0OTQ" name="obj1" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGITdbkWEe26eKBxVz0OTQ" name="obj2" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGITdrkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGITd7kWEe26eKBxVz0OTQ" name="priorityComparison" specification="_sDmj4bkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGITeLkWEe26eKBxVz0OTQ" name="obj2" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGITebkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGITerkWEe26eKBxVz0OTQ" name="priorityComparison" specification="_sDmj5LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGITe7kWEe26eKBxVz0OTQ" name="obj1" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGITfLkWEe26eKBxVz0OTQ" name="obj2" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGITfbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGITfrkWEe26eKBxVz0OTQ" name="releaseTimeComparison" specification="_sDmj6LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGITf7kWEe26eKBxVz0OTQ" name="obj2" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGITgLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGITgbkWEe26eKBxVz0OTQ" name="releaseTimeComparison" specification="_sDmj67kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGITgrkWEe26eKBxVz0OTQ" name="obj1" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGITg7kWEe26eKBxVz0OTQ" name="obj2" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGIThLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGIThbkWEe26eKBxVz0OTQ" name="LatestReleaseTimeComparison" specification="_sDnK8LkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGIThrkWEe26eKBxVz0OTQ" name="obj2" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGITh7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGITiLkWEe26eKBxVz0OTQ" name="LatestReleaseTimeComparison" specification="_sDnK87kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGITibkWEe26eKBxVz0OTQ" name="obj1" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGITirkWEe26eKBxVz0OTQ" name="obj2" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sGITi7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGITjLkWEe26eKBxVz0OTQ" name="compareAscendingOrder" specification="_r4-oQLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGITjbkWEe26eKBxVz0OTQ" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGITjrkWEe26eKBxVz0OTQ" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGITj7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGITkLkWEe26eKBxVz0OTQ" name="compareDescendingOrder" specification="_r4-oRLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGITkbkWEe26eKBxVz0OTQ" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGITkrkWEe26eKBxVz0OTQ" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sGITk7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGITlLkWEe26eKBxVz0OTQ" name="print" specification="_r4_PULkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sGITlbkWEe26eKBxVz0OTQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sGI6gLkWEe26eKBxVz0OTQ" name="print" specification="_r4_PUrkWEe26eKBxVz0OTQ">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_r4694LkWEe26eKBxVz0OTQ" name="SchedulableObject" visibility="package" method="_sGHFULkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r4694bkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r4694rkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r46947kWEe26eKBxVz0OTQ" type="_r45vwLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r4695LkWEe26eKBxVz0OTQ" name="SchedulableObject" visibility="package" method="_sGHFVrkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r4696bkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r47k8LkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r4695bkWEe26eKBxVz0OTQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4695rkWEe26eKBxVz0OTQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r46957kWEe26eKBxVz0OTQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4696LkWEe26eKBxVz0OTQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r47k8bkWEe26eKBxVz0OTQ" type="_r45vwLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r47k8rkWEe26eKBxVz0OTQ" name="SchedulableObject" visibility="package" method="_sGHFXLkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_r47k-LkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_r47k-bkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_r47k87kWEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r47k9LkWEe26eKBxVz0OTQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r47k9bkWEe26eKBxVz0OTQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r47k9rkWEe26eKBxVz0OTQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r47k97kWEe26eKBxVz0OTQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r47k-rkWEe26eKBxVz0OTQ" type="_r45vwLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r47k-7kWEe26eKBxVz0OTQ" name="setDefaultParameters" visibility="private" method="_sGHFY7kWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r47k_LkWEe26eKBxVz0OTQ" name="getAllEndTimes" method="_sGHFZLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGVHw7kWEe26eKBxVz0OTQ">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_sDkut7kWEe26eKBxVz0OTQ" type="_r3okcLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_r48MAbkWEe26eKBxVz0OTQ" name="addToEndTimes" method="_sGHFZrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r48MArkWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r48MA7kWEe26eKBxVz0OTQ" name="peekEndTimes" method="_sGHFaLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r48MBLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r48MBbkWEe26eKBxVz0OTQ" name="pollEndTimes" method="_sGHFarkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_r48zELkWEe26eKBxVz0OTQ" name="getName" method="_sGHFbbkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGVHxLkWEe26eKBxVz0OTQ">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_r48zEbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r48zErkWEe26eKBxVz0OTQ" name="setName" method="_sGHsYLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGVHxbkWEe26eKBxVz0OTQ">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r48zE7kWEe26eKBxVz0OTQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r48zFLkWEe26eKBxVz0OTQ" name="getReleaseTime" method="_sGHsYrkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGVHxrkWEe26eKBxVz0OTQ">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_r48zFbkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r48zFrkWEe26eKBxVz0OTQ" name="getPhase" method="_sGHsZLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGVHx7kWEe26eKBxVz0OTQ">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_r48zF7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r48zGLkWEe26eKBxVz0OTQ" name="getStartTime" method="_sGHsZrkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGVHyLkWEe26eKBxVz0OTQ">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_r49aILkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r49aIbkWEe26eKBxVz0OTQ" name="setEndTime" method="_sGHsaLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGVHybkWEe26eKBxVz0OTQ">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r49aIrkWEe26eKBxVz0OTQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r49aI7kWEe26eKBxVz0OTQ" name="setStartTime" method="_sGHsarkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGVHyrkWEe26eKBxVz0OTQ">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r49aJLkWEe26eKBxVz0OTQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r49aJbkWEe26eKBxVz0OTQ" name="setReleaseTime" method="_sGHsbLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGVHy7kWEe26eKBxVz0OTQ">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r49aJrkWEe26eKBxVz0OTQ" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r49aJ7kWEe26eKBxVz0OTQ" name="setPeriod" method="_sGHsbrkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGVu0LkWEe26eKBxVz0OTQ">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r49aKLkWEe26eKBxVz0OTQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4-BMLkWEe26eKBxVz0OTQ" name="setPhase" method="_sGHscLkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGVu0bkWEe26eKBxVz0OTQ">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4-BMbkWEe26eKBxVz0OTQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4-BMrkWEe26eKBxVz0OTQ" name="setNextReleaseTime" method="_sGHscrkWEe26eKBxVz0OTQ">
                <ownedComment xmi:id="_sGVu0rkWEe26eKBxVz0OTQ">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_r4-BM7kWEe26eKBxVz0OTQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4-oQLkWEe26eKBxVz0OTQ" name="compareAscendingOrder" method="_sGITjLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4-oQbkWEe26eKBxVz0OTQ" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4-oQrkWEe26eKBxVz0OTQ" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4-oQ7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4-oRLkWEe26eKBxVz0OTQ" name="compareDescendingOrder" method="_sGITkLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4-oRbkWEe26eKBxVz0OTQ" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4-oRrkWEe26eKBxVz0OTQ" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_r4-oR7kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4_PULkWEe26eKBxVz0OTQ" name="print" method="_sGITlLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_r4_PUbkWEe26eKBxVz0OTQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_r4_PUrkWEe26eKBxVz0OTQ" name="print" method="_sGI6gLkWEe26eKBxVz0OTQ"/>
              <ownedOperation xmi:id="_sDkusbkWEe26eKBxVz0OTQ" name="SchedulableObject" visibility="package" method="_sGHFUrkWEe26eKBxVz0OTQ">
                <eAnnotations xmi:id="_sDkutLkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_sDkutbkWEe26eKBxVz0OTQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_sGVHwrkWEe26eKBxVz0OTQ">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_sDkusrkWEe26eKBxVz0OTQ" name="obj" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDkus7kWEe26eKBxVz0OTQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_sDkutrkWEe26eKBxVz0OTQ" type="_r45vwLkWEe26eKBxVz0OTQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDkuuLkWEe26eKBxVz0OTQ" name="addSubObject" method="_sGHFa7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDkuubkWEe26eKBxVz0OTQ" name="obj" type="_r45vwLkWEe26eKBxVz0OTQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_sDkuurkWEe26eKBxVz0OTQ" name="maxPhaseComparison" method="_sGHsdLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDkuu7kWEe26eKBxVz0OTQ" name="obj2" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDkuvLkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sDkuvbkWEe26eKBxVz0OTQ" name="maxPhaseComparison" method="_sGHsd7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDkuvrkWEe26eKBxVz0OTQ" name="obj1" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDl80LkWEe26eKBxVz0OTQ" name="obj2" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDl80bkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sDl80rkWEe26eKBxVz0OTQ" name="deadlineComparison" method="_sGHse7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDl807kWEe26eKBxVz0OTQ" name="obj2" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDl81LkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sDl81bkWEe26eKBxVz0OTQ" name="deadlineComparison" method="_sGHsfrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDl81rkWEe26eKBxVz0OTQ" name="obj1" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDl817kWEe26eKBxVz0OTQ" name="obj2" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDl82LkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sDl82bkWEe26eKBxVz0OTQ" name="periodComparison" method="_sGITcLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDl82rkWEe26eKBxVz0OTQ" name="obj2" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDl827kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sDl83LkWEe26eKBxVz0OTQ" name="periodComparison" method="_sGITc7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDl83bkWEe26eKBxVz0OTQ" name="obj1" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDl83rkWEe26eKBxVz0OTQ" name="obj2" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDmj4LkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sDmj4bkWEe26eKBxVz0OTQ" name="priorityComparison" method="_sGITd7kWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDmj4rkWEe26eKBxVz0OTQ" name="obj2" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDmj47kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sDmj5LkWEe26eKBxVz0OTQ" name="priorityComparison" method="_sGITerkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDmj5bkWEe26eKBxVz0OTQ" name="obj1" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDmj5rkWEe26eKBxVz0OTQ" name="obj2" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDmj57kWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sDmj6LkWEe26eKBxVz0OTQ" name="releaseTimeComparison" method="_sGITfrkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDmj6bkWEe26eKBxVz0OTQ" name="obj2" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDmj6rkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sDmj67kWEe26eKBxVz0OTQ" name="releaseTimeComparison" method="_sGITgbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDmj7LkWEe26eKBxVz0OTQ" name="obj1" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDmj7bkWEe26eKBxVz0OTQ" name="obj2" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDmj7rkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sDnK8LkWEe26eKBxVz0OTQ" name="LatestReleaseTimeComparison" method="_sGIThbkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDnK8bkWEe26eKBxVz0OTQ" name="obj2" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDnK8rkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_sDnK87kWEe26eKBxVz0OTQ" name="LatestReleaseTimeComparison" method="_sGITiLkWEe26eKBxVz0OTQ">
                <ownedParameter xmi:id="_sDnK9LkWEe26eKBxVz0OTQ" name="obj1" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDnK9bkWEe26eKBxVz0OTQ" name="obj2" type="_r45vwLkWEe26eKBxVz0OTQ"/>
                <ownedParameter xmi:id="_sDnK9rkWEe26eKBxVz0OTQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_sD8iIbkWEe26eKBxVz0OTQ" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_sENn4LkWEe26eKBxVz0OTQ" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_sEQEILkWEe26eKBxVz0OTQ" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_sEacMLkWEe26eKBxVz0OTQ" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_sEbqVrkWEe26eKBxVz0OTQ" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGNL8rkWEe26eKBxVz0OTQ" name="" memberEnd="_sE4WR7kWEe26eKBxVz0OTQ _sGNL87kWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGNL87kWEe26eKBxVz0OTQ" name="" type="_r2eG07kWEe26eKBxVz0OTQ" association="_sGNL8rkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGSEc7kWEe26eKBxVz0OTQ" name="" memberEnd="_sFZTobkWEe26eKBxVz0OTQ _sGSEdLkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGSEdLkWEe26eKBxVz0OTQ" name="" type="_r4b1sLkWEe26eKBxVz0OTQ" association="_sGSEc7kWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGSrgLkWEe26eKBxVz0OTQ" name="" memberEnd="_sFZTorkWEe26eKBxVz0OTQ _sGSrgbkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGSrgbkWEe26eKBxVz0OTQ" name="" type="_r4b1sLkWEe26eKBxVz0OTQ" association="_sGSrgLkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGVHwLkWEe26eKBxVz0OTQ" name="" memberEnd="_sFjEp7kWEe26eKBxVz0OTQ _sGVHwbkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGVHwbkWEe26eKBxVz0OTQ" name="" type="_r45vwLkWEe26eKBxVz0OTQ" association="_sGVHwLkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGrtELkWEe26eKBxVz0OTQ" name="" memberEnd="_sGrtEbkWEe26eKBxVz0OTQ _sExokLkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGrtEbkWEe26eKBxVz0OTQ" name="" type="_r19wgLkWEe26eKBxVz0OTQ" association="_sGrtELkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGs7MLkWEe26eKBxVz0OTQ" name="" memberEnd="_sGs7MbkWEe26eKBxVz0OTQ _sExokrkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGs7MbkWEe26eKBxVz0OTQ" name="" type="_r19wgLkWEe26eKBxVz0OTQ" association="_sGs7MLkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGtiQLkWEe26eKBxVz0OTQ" name="" memberEnd="_sGtiQbkWEe26eKBxVz0OTQ _sEyPobkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGtiQbkWEe26eKBxVz0OTQ" name="" type="_r19wgLkWEe26eKBxVz0OTQ" association="_sGtiQLkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGtiQ7kWEe26eKBxVz0OTQ" name="" memberEnd="_sGtiRLkWEe26eKBxVz0OTQ _sEzdwLkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGtiRLkWEe26eKBxVz0OTQ" name="" type="_r2JWsLkWEe26eKBxVz0OTQ" association="_sGtiQ7kWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGuJULkWEe26eKBxVz0OTQ" name="" memberEnd="_sGuJUbkWEe26eKBxVz0OTQ _sEzdwrkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGuJUbkWEe26eKBxVz0OTQ" name="" type="_r2JWsLkWEe26eKBxVz0OTQ" association="_sGuJULkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGuJU7kWEe26eKBxVz0OTQ" name="" memberEnd="_sGuJVLkWEe26eKBxVz0OTQ _sE0E07kWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGuJVLkWEe26eKBxVz0OTQ" name="" type="_r2LL4LkWEe26eKBxVz0OTQ" association="_sGuJU7kWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGuwYbkWEe26eKBxVz0OTQ" name="" memberEnd="_sGuwYrkWEe26eKBxVz0OTQ _sE0r4bkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGuwYrkWEe26eKBxVz0OTQ" name="" type="_r2LL4LkWEe26eKBxVz0OTQ" association="_sGuwYbkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGuwZLkWEe26eKBxVz0OTQ" name="" memberEnd="_sGuwZbkWEe26eKBxVz0OTQ _sE0r6bkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGuwZbkWEe26eKBxVz0OTQ" name="" type="_r2Ly8LkWEe26eKBxVz0OTQ" association="_sGuwZLkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGvXcLkWEe26eKBxVz0OTQ" name="" memberEnd="_sGvXcbkWEe26eKBxVz0OTQ _sE16ArkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGvXcbkWEe26eKBxVz0OTQ" name="" type="_r2QEYLkWEe26eKBxVz0OTQ" association="_sGvXcLkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGvXc7kWEe26eKBxVz0OTQ" name="" memberEnd="_sGvXdLkWEe26eKBxVz0OTQ _sE2hEbkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGvXdLkWEe26eKBxVz0OTQ" name="" type="_r2QEYLkWEe26eKBxVz0OTQ" association="_sGvXc7kWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGv-gLkWEe26eKBxVz0OTQ" name="" memberEnd="_sGv-gbkWEe26eKBxVz0OTQ _sE3IIrkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGv-gbkWEe26eKBxVz0OTQ" name="" type="_r2XZILkWEe26eKBxVz0OTQ" association="_sGv-gLkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGv-g7kWEe26eKBxVz0OTQ" name="" memberEnd="_sGv-hLkWEe26eKBxVz0OTQ _sE3vM7kWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGv-hLkWEe26eKBxVz0OTQ" name="" type="_r2XZILkWEe26eKBxVz0OTQ" association="_sGv-g7kWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGwlkLkWEe26eKBxVz0OTQ" name="" memberEnd="_sGwlkbkWEe26eKBxVz0OTQ _sE6ygrkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGwlkbkWEe26eKBxVz0OTQ" name="" type="_r2n30bkWEe26eKBxVz0OTQ" association="_sGwlkLkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGwlk7kWEe26eKBxVz0OTQ" name="" memberEnd="_sGwllLkWEe26eKBxVz0OTQ _sE7ZkLkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGwllLkWEe26eKBxVz0OTQ" name="" type="_r2n30bkWEe26eKBxVz0OTQ" association="_sGwlk7kWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGwllrkWEe26eKBxVz0OTQ" name="" memberEnd="_sGwll7kWEe26eKBxVz0OTQ _sE7Zk7kWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGwll7kWEe26eKBxVz0OTQ" name="" type="_r2n30bkWEe26eKBxVz0OTQ" association="_sGwllrkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGxMobkWEe26eKBxVz0OTQ" name="" memberEnd="_sGxMorkWEe26eKBxVz0OTQ _sE8AorkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGxMorkWEe26eKBxVz0OTQ" name="" type="_r2n30bkWEe26eKBxVz0OTQ" association="_sGxMobkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGxMpLkWEe26eKBxVz0OTQ" name="" memberEnd="_sGxMpbkWEe26eKBxVz0OTQ _sE8ApLkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGxMpbkWEe26eKBxVz0OTQ" name="" type="_r2n30bkWEe26eKBxVz0OTQ" association="_sGxMpLkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGxzsbkWEe26eKBxVz0OTQ" name="" memberEnd="_sGxzsrkWEe26eKBxVz0OTQ _sE910bkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGxzsrkWEe26eKBxVz0OTQ" name="" type="_r2wasbkWEe26eKBxVz0OTQ" association="_sGxzsbkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGxztLkWEe26eKBxVz0OTQ" name="" memberEnd="_sGxztbkWEe26eKBxVz0OTQ _sE9117kWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGxztbkWEe26eKBxVz0OTQ" name="" type="_r2wasbkWEe26eKBxVz0OTQ" association="_sGxztLkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGyawbkWEe26eKBxVz0OTQ" name="" memberEnd="_sGyawrkWEe26eKBxVz0OTQ _sE-c4bkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGyawrkWEe26eKBxVz0OTQ" name="" type="_r20FELkWEe26eKBxVz0OTQ" association="_sGyawbkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGyaxLkWEe26eKBxVz0OTQ" name="" memberEnd="_sGyaxbkWEe26eKBxVz0OTQ _sE-c47kWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGyaxbkWEe26eKBxVz0OTQ" name="" type="_r21TMLkWEe26eKBxVz0OTQ" association="_sGyaxLkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGzB0LkWEe26eKBxVz0OTQ" name="" memberEnd="_sGzB0bkWEe26eKBxVz0OTQ _sE-c5bkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGzB0bkWEe26eKBxVz0OTQ" name="" type="_r21TMLkWEe26eKBxVz0OTQ" association="_sGzB0LkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGzB07kWEe26eKBxVz0OTQ" name="" memberEnd="_sGzB1LkWEe26eKBxVz0OTQ _sE_D87kWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGzB1LkWEe26eKBxVz0OTQ" name="" type="_r23vcLkWEe26eKBxVz0OTQ" association="_sGzB07kWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGzB1rkWEe26eKBxVz0OTQ" name="" memberEnd="_sGzB17kWEe26eKBxVz0OTQ _sFA5ILkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGzB17kWEe26eKBxVz0OTQ" name="" type="_r27Z1rkWEe26eKBxVz0OTQ" association="_sGzB1rkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGzo4bkWEe26eKBxVz0OTQ" name="" memberEnd="_sGzo4rkWEe26eKBxVz0OTQ _sFA5IrkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGzo4rkWEe26eKBxVz0OTQ" name="" type="_r27Z1rkWEe26eKBxVz0OTQ" association="_sGzo4bkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sGzo5LkWEe26eKBxVz0OTQ" name="" memberEnd="_sGzo5bkWEe26eKBxVz0OTQ _sFA5JLkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sGzo5bkWEe26eKBxVz0OTQ" name="" type="_r27Z1rkWEe26eKBxVz0OTQ" association="_sGzo5LkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG0P8bkWEe26eKBxVz0OTQ" name="" memberEnd="_sG0P8rkWEe26eKBxVz0OTQ _sFA5JrkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG0P8rkWEe26eKBxVz0OTQ" name="" type="_r27Z1rkWEe26eKBxVz0OTQ" association="_sG0P8bkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG0P9LkWEe26eKBxVz0OTQ" name="" memberEnd="_sG0P9bkWEe26eKBxVz0OTQ _sFA5KLkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG0P9bkWEe26eKBxVz0OTQ" name="" type="_r27Z1rkWEe26eKBxVz0OTQ" association="_sG0P9LkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG03AbkWEe26eKBxVz0OTQ" name="" memberEnd="_sG03ArkWEe26eKBxVz0OTQ _sFBgNbkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG03ArkWEe26eKBxVz0OTQ" name="" type="_r292ELkWEe26eKBxVz0OTQ" association="_sG03AbkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG03BLkWEe26eKBxVz0OTQ" name="" memberEnd="_sG03BbkWEe26eKBxVz0OTQ _sFBgN7kWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG03BbkWEe26eKBxVz0OTQ" name="" type="_r292ELkWEe26eKBxVz0OTQ" association="_sG03BLkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG1eEbkWEe26eKBxVz0OTQ" name="" memberEnd="_sG1eErkWEe26eKBxVz0OTQ _sFCHRbkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG1eErkWEe26eKBxVz0OTQ" name="" type="_r3ASULkWEe26eKBxVz0OTQ" association="_sG1eEbkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG2FIbkWEe26eKBxVz0OTQ" name="" memberEnd="_sG2FIrkWEe26eKBxVz0OTQ _sFDVZLkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG2FIrkWEe26eKBxVz0OTQ" name="" type="_r3HnELkWEe26eKBxVz0OTQ" association="_sG2FIbkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG2FJLkWEe26eKBxVz0OTQ" name="" memberEnd="_sG2FJbkWEe26eKBxVz0OTQ _sFDVZrkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG2FJbkWEe26eKBxVz0OTQ" name="" type="_r3HnELkWEe26eKBxVz0OTQ" association="_sG2FJLkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG2sMbkWEe26eKBxVz0OTQ" name="" memberEnd="_sG2sMrkWEe26eKBxVz0OTQ _sFD8cLkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG2sMrkWEe26eKBxVz0OTQ" name="" type="_r3HnELkWEe26eKBxVz0OTQ" association="_sG2sMbkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG2sNLkWEe26eKBxVz0OTQ" name="" memberEnd="_sG2sNbkWEe26eKBxVz0OTQ _sFD8dbkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG2sNbkWEe26eKBxVz0OTQ" name="" type="_r3HnELkWEe26eKBxVz0OTQ" association="_sG2sNLkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG3TQbkWEe26eKBxVz0OTQ" name="" memberEnd="_sG3TQrkWEe26eKBxVz0OTQ _sFEjgLkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG3TQrkWEe26eKBxVz0OTQ" name="" type="_r3HnELkWEe26eKBxVz0OTQ" association="_sG3TQbkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG3TRLkWEe26eKBxVz0OTQ" name="" memberEnd="_sG3TRbkWEe26eKBxVz0OTQ _sFEjgrkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG3TRbkWEe26eKBxVz0OTQ" name="" type="_r3HnELkWEe26eKBxVz0OTQ" association="_sG3TRLkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG36ULkWEe26eKBxVz0OTQ" name="" memberEnd="_sG36UbkWEe26eKBxVz0OTQ _sFFKkLkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG36UbkWEe26eKBxVz0OTQ" name="" type="_r3HnELkWEe26eKBxVz0OTQ" association="_sG36ULkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG36U7kWEe26eKBxVz0OTQ" name="" memberEnd="_sG36VLkWEe26eKBxVz0OTQ _sFFxobkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG36VLkWEe26eKBxVz0OTQ" name="" type="_r3HnELkWEe26eKBxVz0OTQ" association="_sG36U7kWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG4hYLkWEe26eKBxVz0OTQ" name="" memberEnd="_sG4hYbkWEe26eKBxVz0OTQ _sFG_xbkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG4hYbkWEe26eKBxVz0OTQ" name="" type="_r3VCcLkWEe26eKBxVz0OTQ" association="_sG4hYLkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG4hY7kWEe26eKBxVz0OTQ" name="" memberEnd="_sG4hZLkWEe26eKBxVz0OTQ _sFHm0LkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG4hZLkWEe26eKBxVz0OTQ" name="" type="_r3VCcLkWEe26eKBxVz0OTQ" association="_sG4hY7kWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG5IcbkWEe26eKBxVz0OTQ" name="" memberEnd="_sG5IcrkWEe26eKBxVz0OTQ _sFHm0rkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG5IcrkWEe26eKBxVz0OTQ" name="" type="_r3VCcLkWEe26eKBxVz0OTQ" association="_sG5IcbkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG5vgLkWEe26eKBxVz0OTQ" name="" memberEnd="_sG5vgbkWEe26eKBxVz0OTQ _sFI09bkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG5vgbkWEe26eKBxVz0OTQ" name="" type="_r3VCcLkWEe26eKBxVz0OTQ" association="_sG5vgLkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG5vg7kWEe26eKBxVz0OTQ" name="" memberEnd="_sG5vhLkWEe26eKBxVz0OTQ _sFJcBrkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG5vhLkWEe26eKBxVz0OTQ" name="" type="_r3VCcLkWEe26eKBxVz0OTQ" association="_sG5vg7kWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG5vhrkWEe26eKBxVz0OTQ" name="" memberEnd="_sG5vh7kWEe26eKBxVz0OTQ _sFKqJLkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG5vh7kWEe26eKBxVz0OTQ" name="" type="_r3id2LkWEe26eKBxVz0OTQ" association="_sG5vhrkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG6WkbkWEe26eKBxVz0OTQ" name="" memberEnd="_sG6WkrkWEe26eKBxVz0OTQ _sFLRMLkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG6WkrkWEe26eKBxVz0OTQ" name="" type="_r3id2LkWEe26eKBxVz0OTQ" association="_sG6WkbkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG6WlLkWEe26eKBxVz0OTQ" name="" memberEnd="_sG6WlbkWEe26eKBxVz0OTQ _sFL4SLkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG6WlbkWEe26eKBxVz0OTQ" name="" type="_r3s14LkWEe26eKBxVz0OTQ" association="_sG6WlLkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG69obkWEe26eKBxVz0OTQ" name="" memberEnd="_sG69orkWEe26eKBxVz0OTQ _sFMfUbkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG69orkWEe26eKBxVz0OTQ" name="" type="_r3s14LkWEe26eKBxVz0OTQ" association="_sG69obkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG69pLkWEe26eKBxVz0OTQ" name="" memberEnd="_sG69pbkWEe26eKBxVz0OTQ _sFMfVbkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG69pbkWEe26eKBxVz0OTQ" name="" type="_r3tc8LkWEe26eKBxVz0OTQ" association="_sG69pLkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG7ksbkWEe26eKBxVz0OTQ" name="" memberEnd="_sG7ksrkWEe26eKBxVz0OTQ _sFO7kbkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG7ksrkWEe26eKBxVz0OTQ" name="" type="_r3y8gLkWEe26eKBxVz0OTQ" association="_sG7ksbkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG7ktLkWEe26eKBxVz0OTQ" name="" memberEnd="_sG7ktbkWEe26eKBxVz0OTQ _sFO7k7kWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG7ktbkWEe26eKBxVz0OTQ" name="" type="_r3y8gLkWEe26eKBxVz0OTQ" association="_sG7ktLkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG8LwbkWEe26eKBxVz0OTQ" name="" memberEnd="_sG8LwrkWEe26eKBxVz0OTQ _sFQwwrkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG8LwrkWEe26eKBxVz0OTQ" name="" type="_r4FQYLkWEe26eKBxVz0OTQ" association="_sG8LwbkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG8LxLkWEe26eKBxVz0OTQ" name="" memberEnd="_sG8LxbkWEe26eKBxVz0OTQ _sFQwxLkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG8LxbkWEe26eKBxVz0OTQ" name="" type="_r4FQYLkWEe26eKBxVz0OTQ" association="_sG8LxLkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG8y0bkWEe26eKBxVz0OTQ" name="" memberEnd="_sG8y0rkWEe26eKBxVz0OTQ _sFRX0LkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG8y0rkWEe26eKBxVz0OTQ" name="" type="_r4FQYLkWEe26eKBxVz0OTQ" association="_sG8y0bkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG9Z4bkWEe26eKBxVz0OTQ" name="" memberEnd="_sG9Z4rkWEe26eKBxVz0OTQ _sFRX2LkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG9Z4rkWEe26eKBxVz0OTQ" name="" type="_r4FQYLkWEe26eKBxVz0OTQ" association="_sG9Z4bkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG-A8bkWEe26eKBxVz0OTQ" name="" memberEnd="_sG-A8rkWEe26eKBxVz0OTQ _sFR-4rkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG-A8rkWEe26eKBxVz0OTQ" name="" type="_r4FQYLkWEe26eKBxVz0OTQ" association="_sG-A8bkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG-oALkWEe26eKBxVz0OTQ" name="" memberEnd="_sG-oAbkWEe26eKBxVz0OTQ _sFSl8LkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG-oAbkWEe26eKBxVz0OTQ" name="" type="_r4FQYLkWEe26eKBxVz0OTQ" association="_sG-oALkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG-oA7kWEe26eKBxVz0OTQ" name="" memberEnd="_sG-oBLkWEe26eKBxVz0OTQ _sFSl87kWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG-oBLkWEe26eKBxVz0OTQ" name="" type="_r4FQYLkWEe26eKBxVz0OTQ" association="_sG-oA7kWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG_PEbkWEe26eKBxVz0OTQ" name="" memberEnd="_sG_PErkWEe26eKBxVz0OTQ _sFSl9bkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG_PErkWEe26eKBxVz0OTQ" name="" type="_r4I6wLkWEe26eKBxVz0OTQ" association="_sG_PEbkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sG_2IbkWEe26eKBxVz0OTQ" name="" memberEnd="_sG_2IrkWEe26eKBxVz0OTQ _sFT0ErkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sG_2IrkWEe26eKBxVz0OTQ" name="" type="_r4NMMLkWEe26eKBxVz0OTQ" association="_sG_2IbkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sHAdMbkWEe26eKBxVz0OTQ" name="" memberEnd="_sHAdMrkWEe26eKBxVz0OTQ _sFUbJ7kWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sHAdMrkWEe26eKBxVz0OTQ" name="" type="_r4PBYLkWEe26eKBxVz0OTQ" association="_sHAdMbkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sHAdNLkWEe26eKBxVz0OTQ" name="" memberEnd="_sHAdNbkWEe26eKBxVz0OTQ _sFVCM7kWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sHAdNbkWEe26eKBxVz0OTQ" name="" type="_r4PBYLkWEe26eKBxVz0OTQ" association="_sHAdNLkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sHBEQbkWEe26eKBxVz0OTQ" name="" memberEnd="_sHBEQrkWEe26eKBxVz0OTQ _sFVCNrkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sHBEQrkWEe26eKBxVz0OTQ" name="" type="_r4T54LkWEe26eKBxVz0OTQ" association="_sHBEQbkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sHBrULkWEe26eKBxVz0OTQ" name="" memberEnd="_sHBrUbkWEe26eKBxVz0OTQ _sFVpQbkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sHBrUbkWEe26eKBxVz0OTQ" name="" type="_r4T54LkWEe26eKBxVz0OTQ" association="_sHBrULkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sHBrU7kWEe26eKBxVz0OTQ" name="" memberEnd="_sHBrVLkWEe26eKBxVz0OTQ _sFVpQ7kWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sHBrVLkWEe26eKBxVz0OTQ" name="" type="_r4T54LkWEe26eKBxVz0OTQ" association="_sHBrU7kWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sHCSYbkWEe26eKBxVz0OTQ" name="" memberEnd="_sHCSYrkWEe26eKBxVz0OTQ _sFVpRbkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sHCSYrkWEe26eKBxVz0OTQ" name="" type="_r4T54LkWEe26eKBxVz0OTQ" association="_sHCSYbkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sHCSZLkWEe26eKBxVz0OTQ" name="" memberEnd="_sHCSZbkWEe26eKBxVz0OTQ _sFWQUbkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sHCSZbkWEe26eKBxVz0OTQ" name="" type="_r4T54LkWEe26eKBxVz0OTQ" association="_sHCSZLkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sHC5cbkWEe26eKBxVz0OTQ" name="" memberEnd="_sHC5crkWEe26eKBxVz0OTQ _sFZTpbkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sHC5crkWEe26eKBxVz0OTQ" name="" type="_r4b1sLkWEe26eKBxVz0OTQ" association="_sHC5cbkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sHDggLkWEe26eKBxVz0OTQ" name="" memberEnd="_sHDggbkWEe26eKBxVz0OTQ _sFZ6srkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sHDggbkWEe26eKBxVz0OTQ" name="" type="_r4b1sLkWEe26eKBxVz0OTQ" association="_sHDggLkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sHDgg7kWEe26eKBxVz0OTQ" name="" memberEnd="_sHDghLkWEe26eKBxVz0OTQ _sFcW9LkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sHDghLkWEe26eKBxVz0OTQ" name="" type="_r4sUYbkWEe26eKBxVz0OTQ" association="_sHDgg7kWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sHDghrkWEe26eKBxVz0OTQ" name="" memberEnd="_sHDgh7kWEe26eKBxVz0OTQ _sFc-ArkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sHDgh7kWEe26eKBxVz0OTQ" name="" type="_r4sUYbkWEe26eKBxVz0OTQ" association="_sHDghrkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sHEHkbkWEe26eKBxVz0OTQ" name="" memberEnd="_sHEHkrkWEe26eKBxVz0OTQ _sFjEqLkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sHEHkrkWEe26eKBxVz0OTQ" name="" type="_r45vwLkWEe26eKBxVz0OTQ" association="_sHEHkbkWEe26eKBxVz0OTQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_sHEHlLkWEe26eKBxVz0OTQ" name="" memberEnd="_sHEHlbkWEe26eKBxVz0OTQ _sFjrsrkWEe26eKBxVz0OTQ">
              <ownedEnd xmi:id="_sHEHlbkWEe26eKBxVz0OTQ" name="" type="_r45vwLkWEe26eKBxVz0OTQ" association="_sHEHlLkWEe26eKBxVz0OTQ"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_rym6gbkWEe26eKBxVz0OTQ" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_sCdUY7kWEe26eKBxVz0OTQ" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_sCd7cbkWEe26eKBxVz0OTQ" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_sCd7c7kWEe26eKBxVz0OTQ" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_sElbUbkWEe26eKBxVz0OTQ" name="WARPdslBaseListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_rzDmcLkWEe26eKBxVz0OTQ" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_sC1H0LkWEe26eKBxVz0OTQ" name="Utilities"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_rx03YLkWEe26eKBxVz0OTQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_rx03YbkWEe26eKBxVz0OTQ" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_ryK1oLkWEe26eKBxVz0OTQ" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_sCNcwLkWEe26eKBxVz0OTQ" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_rz6iELkWEe26eKBxVz0OTQ" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_sDU3E7kWEe26eKBxVz0OTQ" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_r3okcLkWEe26eKBxVz0OTQ" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_sCABYLkWEe26eKBxVz0OTQ" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_sCBPgLkWEe26eKBxVz0OTQ" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_sCB2kbkWEe26eKBxVz0OTQ" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_sCCdoLkWEe26eKBxVz0OTQ" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_sCCdorkWEe26eKBxVz0OTQ" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_sCSVQ7kWEe26eKBxVz0OTQ" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_sCvoQLkWEe26eKBxVz0OTQ" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_sC1u4bkWEe26eKBxVz0OTQ" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_sDUQALkWEe26eKBxVz0OTQ" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_sDUQArkWEe26eKBxVz0OTQ" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_sDU3EbkWEe26eKBxVz0OTQ" name="Vector"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_sDkHoLkWEe26eKBxVz0OTQ" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_sDkHorkWEe26eKBxVz0OTQ" name="Queue"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ryaGMrkWEe26eKBxVz0OTQ" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_sCUxgrkWEe26eKBxVz0OTQ" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_sCVYkbkWEe26eKBxVz0OTQ" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_sCmeULkWEe26eKBxVz0OTQ" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_sCnFYbkWEe26eKBxVz0OTQ" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ryaGM7kWEe26eKBxVz0OTQ" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_ryaGNLkWEe26eKBxVz0OTQ" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_sCVYk7kWEe26eKBxVz0OTQ" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_sCV_obkWEe26eKBxVz0OTQ" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_sCV_o7kWEe26eKBxVz0OTQ" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ryrL8LkWEe26eKBxVz0OTQ" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_sCkCELkWEe26eKBxVz0OTQ" name="Component"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_sDyKEbkWEe26eKBxVz0OTQ" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_sDyKErkWEe26eKBxVz0OTQ" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_sEDP0bkWEe26eKBxVz0OTQ" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_sER5UrkWEe26eKBxVz0OTQ" name="Double"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ryZfILkWEe26eKBxVz0OTQ" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_ryaGMLkWEe26eKBxVz0OTQ" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_ryaGMbkWEe26eKBxVz0OTQ" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_sCUxgLkWEe26eKBxVz0OTQ" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ryaGNbkWEe26eKBxVz0OTQ" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_ryaGNrkWEe26eKBxVz0OTQ" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_ryrL8bkWEe26eKBxVz0OTQ" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_sClQMbkWEe26eKBxVz0OTQ" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_sClQM7kWEe26eKBxVz0OTQ" name="TableColumnModel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_sCV_pbkWEe26eKBxVz0OTQ" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_sCkCErkWEe26eKBxVz0OTQ" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_sCkpIbkWEe26eKBxVz0OTQ" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_sCkpI7kWEe26eKBxVz0OTQ" name="JTable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_rymTcLkWEe26eKBxVz0OTQ" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_rymTcbkWEe26eKBxVz0OTQ" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_rymTcrkWEe26eKBxVz0OTQ" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_rymTc7kWEe26eKBxVz0OTQ" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_rym6gLkWEe26eKBxVz0OTQ" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_sCctVbkWEe26eKBxVz0OTQ" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_sCdUYbkWEe26eKBxVz0OTQ" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_sCcGQLkWEe26eKBxVz0OTQ" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_sCctUbkWEe26eKBxVz0OTQ" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_sCctU7kWEe26eKBxVz0OTQ" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_r0TjoLkWEe26eKBxVz0OTQ" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_r0TjobkWEe26eKBxVz0OTQ" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_r0TjorkWEe26eKBxVz0OTQ" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_sDi5gbkWEe26eKBxVz0OTQ" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_sDi5g7kWEe26eKBxVz0OTQ" name="Test"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_sDiScLkWEe26eKBxVz0OTQ" name="Assert"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ryoIobkWEe26eKBxVz0OTQ" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_sCeih7kWEe26eKBxVz0OTQ" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_sCfwobkWEe26eKBxVz0OTQ" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_sCgXs7kWEe26eKBxVz0OTQ" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_sCg-xrkWEe26eKBxVz0OTQ" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_sChl1rkWEe26eKBxVz0OTQ" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_sCiz8rkWEe26eKBxVz0OTQ" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_sDM7QrkWEe26eKBxVz0OTQ" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_sDNiUrkWEe26eKBxVz0OTQ" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_sDOJYrkWEe26eKBxVz0OTQ" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_sDOwcrkWEe26eKBxVz0OTQ" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_r0JyoLkWEe26eKBxVz0OTQ" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_sDZvkLkWEe26eKBxVz0OTQ" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_sDa9s7kWEe26eKBxVz0OTQ" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_sDbkw7kWEe26eKBxVz0OTQ" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_sDcL07kWEe26eKBxVz0OTQ" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_sDcy47kWEe26eKBxVz0OTQ" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_sDdZ87kWEe26eKBxVz0OTQ" name="ChannelContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_r0OEELkWEe26eKBxVz0OTQ" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_sDeoELkWEe26eKBxVz0OTQ" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_sDfPIbkWEe26eKBxVz0OTQ" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_sDfPI7kWEe26eKBxVz0OTQ" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_sDf2MbkWEe26eKBxVz0OTQ" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_sDf2M7kWEe26eKBxVz0OTQ" name="StringHolder"/>
    </packagedElement>
    <profileApplication xmi:id="_rER04bkWEe26eKBxVz0OTQ">
      <eAnnotations xmi:id="_rESb8LkWEe26eKBxVz0OTQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_rESb8bkWEe26eKBxVz0OTQ" base_Package="_q-17QLkWEe26eKBxVz0OTQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_r18iYLkWEe26eKBxVz0OTQ" genericsValue="T,E" base_Element="_r177ULkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r1--obkWEe26eKBxVz0OTQ" base_Element="_r1--oLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r1_lsLkWEe26eKBxVz0OTQ" base_Element="_r1--oLkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r1_lsbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r2AMwLkWEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_r1_lsrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_r2Az0LkWEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_r2AMwbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_r2Ba4LkWEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_r2Az0bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_r2CB8LkWEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_r2Ba4bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_r2CB8rkWEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_r2CB8bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_r2OPMrkWEe26eKBxVz0OTQ" genericsValue="String" base_Element="_r2OPMLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_r2R5kbkWEe26eKBxVz0OTQ" genericsValue="String" base_Element="_r2R5kLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r2YnQLkWEe26eKBxVz0OTQ" base_Element="_r2YAMLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r2YnQbkWEe26eKBxVz0OTQ" base_Element="_r2YAMLkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r2YnQrkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r2ZOULkWEe26eKBxVz0OTQ" base_Element="_r2YnQ7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r2ZOUbkWEe26eKBxVz0OTQ" base_Element="_r2YnQ7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r2ZOUrkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r2ZOVLkWEe26eKBxVz0OTQ" base_Element="_r2ZOU7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r2ZOVbkWEe26eKBxVz0OTQ" base_Element="_r2ZOU7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r2Z1YLkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r2cRoLkWEe26eKBxVz0OTQ" genericsValue="T extends SchedulableObject" base_Element="_r2bqkLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r2eG0LkWEe26eKBxVz0OTQ" base_Element="_r2dfxbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r2eG0bkWEe26eKBxVz0OTQ" base_Element="_r2dfxbkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r2eG0rkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r2fU8bkWEe26eKBxVz0OTQ" base_Element="_r2fU8LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r2hxMbkWEe26eKBxVz0OTQ" base_Element="_r2hKI7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r2hxMrkWEe26eKBxVz0OTQ" base_Element="_r2hKI7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r2hxM7kWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r2iYQLkWEe26eKBxVz0OTQ" base_Element="_r2hxNLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r2iYQbkWEe26eKBxVz0OTQ" base_Element="_r2hxNLkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r2iYQrkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r2iYRLkWEe26eKBxVz0OTQ" base_Element="_r2iYQ7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r2i_ULkWEe26eKBxVz0OTQ" base_Element="_r2iYQ7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r2i_UbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r2qUFbkWEe26eKBxVz0OTQ" genericsValue="Node" base_Element="_r2qUFLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_r2q7IbkWEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_r2q7ILkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_r2riMLkWEe26eKBxVz0OTQ" genericsValue="Integer" base_Element="_r2q7IrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r2tXYbkWEe26eKBxVz0OTQ" base_Element="_r2swVLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r2tXYrkWEe26eKBxVz0OTQ" base_Element="_r2swVLkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r2tXY7kWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r2xo0LkWEe26eKBxVz0OTQ" base_Element="_r2xBwLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r2xo0bkWEe26eKBxVz0OTQ" base_Element="_r2xBwLkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r2xo0rkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_r22hUrkWEe26eKBxVz0OTQ" dimensions="2" base_Element="_r216Q7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_r2_EMLkWEe26eKBxVz0OTQ" genericsValue="T extends SchedulableObject" base_Element="_r2-dILkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_r2_rQLkWEe26eKBxVz0OTQ" genericsValue="T extends SchedulableObject" base_Element="_r2_EMbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r3BgcrkWEe26eKBxVz0OTQ" base_Element="_r3BgcLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r3Bgc7kWEe26eKBxVz0OTQ" base_Element="_r3BgcLkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r3BgdLkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r3CHhLkWEe26eKBxVz0OTQ" base_Element="_r3CHgrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r3CukLkWEe26eKBxVz0OTQ" base_Element="_r3CHgrkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r3CukbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r3Cuk7kWEe26eKBxVz0OTQ" base_Element="_r3CukrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r3CulLkWEe26eKBxVz0OTQ" base_Element="_r3CukrkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r3CulbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r3Fx4bkWEe26eKBxVz0OTQ" base_Element="_r3Fx4LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r3Fx4rkWEe26eKBxVz0OTQ" base_Element="_r3Fx4LkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r3Fx47kWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r3HAALkWEe26eKBxVz0OTQ" genericsValue="T extends SchedulableObject" base_Element="_r3GY8LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_r3JcQLkWEe26eKBxVz0OTQ" genericsValue="String, Integer" base_Element="_r3I1MLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_r3KDULkWEe26eKBxVz0OTQ" genericsValue="String" base_Element="_r3JcQbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Array xmi:id="_r3KDVLkWEe26eKBxVz0OTQ" base_Element="_r3KDUbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r3QxALkWEe26eKBxVz0OTQ" base_Element="_r3QJ8LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r3QxAbkWEe26eKBxVz0OTQ" base_Element="_r3QJ8LkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r3QxArkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r3UbYLkWEe26eKBxVz0OTQ" genericsValue="T extends SchedulableObject" base_Element="_r3T0ULkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r3Z687kWEe26eKBxVz0OTQ" base_Element="_r3Z68bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r3Z69LkWEe26eKBxVz0OTQ" base_Element="_r3Z68bkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r3Z69bkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r3bJErkWEe26eKBxVz0OTQ" base_Element="_r3bJELkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r3bJE7kWEe26eKBxVz0OTQ" base_Element="_r3bJELkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r3bJFLkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r3bJF7kWEe26eKBxVz0OTQ" base_Element="_r3bJFbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r3bwILkWEe26eKBxVz0OTQ" base_Element="_r3bJFbkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r3bwIbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r3bwJ7kWEe26eKBxVz0OTQ" base_Element="_r3bwJrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r3cXMLkWEe26eKBxVz0OTQ" base_Element="_r3bwJrkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r3cXMbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r3cXM7kWEe26eKBxVz0OTQ" base_Element="_r3cXMrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r3cXNLkWEe26eKBxVz0OTQ" base_Element="_r3cXMrkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r3cXNbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r3cXOLkWEe26eKBxVz0OTQ" base_Element="_r3cXNrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r3c-QLkWEe26eKBxVz0OTQ" base_Element="_r3cXNrkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r3c-QbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r3c-RLkWEe26eKBxVz0OTQ" base_Element="_r3c-QrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r3c-RbkWEe26eKBxVz0OTQ" base_Element="_r3c-QrkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r3c-RrkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r3dlULkWEe26eKBxVz0OTQ" base_Element="_r3c-SLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r3dlUbkWEe26eKBxVz0OTQ" base_Element="_r3c-SLkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r3dlUrkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r3dlVLkWEe26eKBxVz0OTQ" genericsValue="String, Integer" base_Element="_r3dlU7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r3jE4bkWEe26eKBxVz0OTQ" base_Element="_r3jE4LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r3jr8LkWEe26eKBxVz0OTQ" base_Element="_r3jE4LkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r3jr8bkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r3jr87kWEe26eKBxVz0OTQ" base_Element="_r3jr8rkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r3kTALkWEe26eKBxVz0OTQ" base_Element="_r3jr8rkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r3kTAbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r3kTA7kWEe26eKBxVz0OTQ" base_Element="_r3kTArkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r3kTBLkWEe26eKBxVz0OTQ" base_Element="_r3kTArkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r3kTBbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_r3k6E7kWEe26eKBxVz0OTQ" dimensions="1" base_Element="_r3k6ELkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r3k6FLkWEe26eKBxVz0OTQ" base_Element="_r3k6ELkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r3k6FbkWEe26eKBxVz0OTQ" base_Element="_r3k6ELkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r3lhILkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_r3lhJLkWEe26eKBxVz0OTQ" dimensions="2" base_Element="_r3lhIbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r3lhJbkWEe26eKBxVz0OTQ" base_Element="_r3lhIbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r3lhJrkWEe26eKBxVz0OTQ" base_Element="_r3lhIbkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r3lhJ7kWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r3mvQbkWEe26eKBxVz0OTQ" genericsValue="T extends SchedulableObject" base_Element="_r3mvQLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_r3n9YLkWEe26eKBxVz0OTQ" genericsValue="T extends SchedulableObject" base_Element="_r3nWULkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_r3okcbkWEe26eKBxVz0OTQ" base_Element="_r3okcLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_r3pLgLkWEe26eKBxVz0OTQ" genericsValue="T" base_Element="_r3okcrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r3urELkWEe26eKBxVz0OTQ" base_Element="_r3uEALkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r3urEbkWEe26eKBxVz0OTQ" base_Element="_r3uEALkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r3urErkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r3v5MLkWEe26eKBxVz0OTQ" genericsValue="T" base_Element="_r3vSILkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_r3xuYLkWEe26eKBxVz0OTQ" genericsValue="T extends SchedulableObject" base_Element="_r3xHULkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_r3yVcLkWEe26eKBxVz0OTQ" genericsValue="T" base_Element="_r3xuYbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_r38GcLkWEe26eKBxVz0OTQ" genericsValue="T extends SchedulableObject" base_Element="_r37fYLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_r38tgLkWEe26eKBxVz0OTQ" genericsValue="T" base_Element="_r38GdbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r39UkbkWEe26eKBxVz0OTQ" base_Element="_r39UkLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_r4AX4LkWEe26eKBxVz0OTQ" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_r3_w0LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4CNEbkWEe26eKBxVz0OTQ" base_Element="_r4CNELkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4C0JLkWEe26eKBxVz0OTQ" base_Element="_r4C0I7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4GegLkWEe26eKBxVz0OTQ" base_Element="_r4F3cLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4GegbkWEe26eKBxVz0OTQ" base_Element="_r4F3cLkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r4GegrkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4GehLkWEe26eKBxVz0OTQ" base_Element="_r4Geg7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4GehbkWEe26eKBxVz0OTQ" base_Element="_r4Geg7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r4GehrkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4HFkbkWEe26eKBxVz0OTQ" base_Element="_r4Geh7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4HFkrkWEe26eKBxVz0OTQ" base_Element="_r4Geh7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r4HFk7kWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_r4LXBrkWEe26eKBxVz0OTQ" base_Element="_r4LXA7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Array xmi:id="_r4L-ELkWEe26eKBxVz0OTQ" dimensions="2" base_Element="_r4LXB7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4PodrkWEe26eKBxVz0OTQ" base_Element="_r4PodbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4QPgLkWEe26eKBxVz0OTQ" base_Element="_r4PodbkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r4QPgbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4QPg7kWEe26eKBxVz0OTQ" base_Element="_r4QPgrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4QPhLkWEe26eKBxVz0OTQ" base_Element="_r4QPgrkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r4QPhbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4QPiLkWEe26eKBxVz0OTQ" base_Element="_r4QPhrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4Q2kLkWEe26eKBxVz0OTQ" base_Element="_r4QPhrkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r4Q2kbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4VIALkWEe26eKBxVz0OTQ" base_Element="_r4Ug8LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4VIAbkWEe26eKBxVz0OTQ" base_Element="_r4Ug8LkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r4VIArkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4VIBLkWEe26eKBxVz0OTQ" base_Element="_r4VIA7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4VvELkWEe26eKBxVz0OTQ" base_Element="_r4VIA7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r4VvEbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4VvE7kWEe26eKBxVz0OTQ" base_Element="_r4VvErkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4VvFLkWEe26eKBxVz0OTQ" base_Element="_r4VvErkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r4VvFbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4VvF7kWEe26eKBxVz0OTQ" base_Element="_r4VvFrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4WWILkWEe26eKBxVz0OTQ" base_Element="_r4VvFrkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r4WWIbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4WWI7kWEe26eKBxVz0OTQ" base_Element="_r4WWIrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4WWJLkWEe26eKBxVz0OTQ" base_Element="_r4WWIrkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r4WWJbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4WWJ7kWEe26eKBxVz0OTQ" base_Element="_r4WWJrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4WWKLkWEe26eKBxVz0OTQ" base_Element="_r4WWJrkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r4W9MLkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4W9M7kWEe26eKBxVz0OTQ" base_Element="_r4W9MbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4W9NLkWEe26eKBxVz0OTQ" base_Element="_r4W9MbkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r4W9NbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4W9OLkWEe26eKBxVz0OTQ" base_Element="_r4W9NrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4XkQLkWEe26eKBxVz0OTQ" base_Element="_r4W9NrkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r4XkQbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4XkRLkWEe26eKBxVz0OTQ" base_Element="_r4XkQrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4XkRbkWEe26eKBxVz0OTQ" base_Element="_r4XkQrkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r4XkRrkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4YLULkWEe26eKBxVz0OTQ" base_Element="_r4XkR7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4YLUbkWEe26eKBxVz0OTQ" base_Element="_r4XkR7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r4YLUrkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4YLVLkWEe26eKBxVz0OTQ" base_Element="_r4YLU7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4YLVbkWEe26eKBxVz0OTQ" base_Element="_r4YLU7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r4YyYLkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4YyY7kWEe26eKBxVz0OTQ" base_Element="_r4YyYbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4YyZLkWEe26eKBxVz0OTQ" base_Element="_r4YyYbkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r4YyZbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4ZZcbkWEe26eKBxVz0OTQ" base_Element="_r4YyZrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4ZZcrkWEe26eKBxVz0OTQ" base_Element="_r4YyZrkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r4ZZc7kWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4ZZdrkWEe26eKBxVz0OTQ" base_Element="_r4ZZdLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4ZZd7kWEe26eKBxVz0OTQ" base_Element="_r4ZZdLkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r4ZZeLkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4aAgbkWEe26eKBxVz0OTQ" base_Element="_r4ZZebkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4aAgrkWEe26eKBxVz0OTQ" base_Element="_r4ZZebkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r4aAg7kWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r4aAhbkWEe26eKBxVz0OTQ" base_Element="_r4aAhLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r4aAhrkWEe26eKBxVz0OTQ" base_Element="_r4aAhLkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r4aAh7kWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_r4jKcLkWEe26eKBxVz0OTQ" base_Element="_r4ijZLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Array xmi:id="_r4jKdrkWEe26eKBxVz0OTQ" base_Element="_r4jKc7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Array xmi:id="_r4jxh7kWEe26eKBxVz0OTQ" dimensions="1" base_Element="_r4jxg7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Array xmi:id="_r4kYl7kWEe26eKBxVz0OTQ" base_Element="_r4kYk7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_r4sUYLkWEe26eKBxVz0OTQ" genericsValue="InstructionParameters" base_Element="_r4rtUbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_r4s7dbkWEe26eKBxVz0OTQ" genericsValue="InstructionParameters" base_Element="_r4s7dLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Array xmi:id="_r4wl07kWEe26eKBxVz0OTQ" base_Element="_r4wl0bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Array xmi:id="_r4xM47kWEe26eKBxVz0OTQ" base_Element="_r4xM4bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r40QM7kWEe26eKBxVz0OTQ" base_Element="_r40QMrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r40QNLkWEe26eKBxVz0OTQ" base_Element="_r40QMrkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r403QLkWEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r403QrkWEe26eKBxVz0OTQ" base_Element="_r403QbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r403Q7kWEe26eKBxVz0OTQ" base_Element="_r403QbkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r403RLkWEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r403RrkWEe26eKBxVz0OTQ" base_Element="_r403RbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r403R7kWEe26eKBxVz0OTQ" base_Element="_r403RbkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r403SLkWEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r403SrkWEe26eKBxVz0OTQ" base_Element="_r403SbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r41eULkWEe26eKBxVz0OTQ" base_Element="_r403SbkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r41eUbkWEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r41eU7kWEe26eKBxVz0OTQ" base_Element="_r41eUrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r41eVLkWEe26eKBxVz0OTQ" base_Element="_r41eUrkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r41eVbkWEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r41eV7kWEe26eKBxVz0OTQ" base_Element="_r41eVrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r41eWLkWEe26eKBxVz0OTQ" base_Element="_r41eVrkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r41eWbkWEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r42FYLkWEe26eKBxVz0OTQ" base_Element="_r41eWrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r42FYbkWEe26eKBxVz0OTQ" base_Element="_r41eWrkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r42FYrkWEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r42FZLkWEe26eKBxVz0OTQ" base_Element="_r42FY7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r42FZbkWEe26eKBxVz0OTQ" base_Element="_r42FY7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r42FZrkWEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r42FaLkWEe26eKBxVz0OTQ" base_Element="_r42FZ7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r42scLkWEe26eKBxVz0OTQ" base_Element="_r42FZ7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r42scbkWEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r42sc7kWEe26eKBxVz0OTQ" base_Element="_r42scrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r42sdLkWEe26eKBxVz0OTQ" base_Element="_r42scrkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r42sdbkWEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r42sd7kWEe26eKBxVz0OTQ" base_Element="_r42sdrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r42seLkWEe26eKBxVz0OTQ" base_Element="_r42sdrkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r42sebkWEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r43TgLkWEe26eKBxVz0OTQ" base_Element="_r42se7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r43TgbkWEe26eKBxVz0OTQ" base_Element="_r42se7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r43TgrkWEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r43ThLkWEe26eKBxVz0OTQ" base_Element="_r43Tg7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r43ThbkWEe26eKBxVz0OTQ" base_Element="_r43Tg7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r43ThrkWEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r43TiLkWEe26eKBxVz0OTQ" base_Element="_r43Th7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r43TibkWEe26eKBxVz0OTQ" base_Element="_r43Th7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r43TirkWEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r436kLkWEe26eKBxVz0OTQ" base_Element="_r43Ti7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r436kbkWEe26eKBxVz0OTQ" base_Element="_r43Ti7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r436krkWEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r436lLkWEe26eKBxVz0OTQ" base_Element="_r436k7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r436lbkWEe26eKBxVz0OTQ" base_Element="_r436k7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r436lrkWEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r436mLkWEe26eKBxVz0OTQ" base_Element="_r436l7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r436mbkWEe26eKBxVz0OTQ" base_Element="_r436l7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r436mrkWEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r44hoLkWEe26eKBxVz0OTQ" base_Element="_r436m7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r44hobkWEe26eKBxVz0OTQ" base_Element="_r436m7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r44horkWEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r44hpLkWEe26eKBxVz0OTQ" base_Element="_r44ho7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r44hpbkWEe26eKBxVz0OTQ" base_Element="_r44ho7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r44hprkWEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r44hqLkWEe26eKBxVz0OTQ" base_Element="_r44hp7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r44hqbkWEe26eKBxVz0OTQ" base_Element="_r44hp7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r44hqrkWEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r45IsLkWEe26eKBxVz0OTQ" base_Element="_r44hq7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r45IsbkWEe26eKBxVz0OTQ" base_Element="_r44hq7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r45IsrkWEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_r45ItLkWEe26eKBxVz0OTQ" base_Element="_r45Is7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_r45ItbkWEe26eKBxVz0OTQ" base_Element="_r45Is7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_r45ItrkWEe26eKBxVz0OTQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_r48MALkWEe26eKBxVz0OTQ" genericsValue="Integer" base_Element="_r47k_LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCAocLkWEe26eKBxVz0OTQ" base_Element="_sCABYLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCB2kLkWEe26eKBxVz0OTQ" base_Element="_sCBPgLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCB2krkWEe26eKBxVz0OTQ" base_Element="_sCB2kbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCCdobkWEe26eKBxVz0OTQ" base_Element="_sCCdoLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCDEsLkWEe26eKBxVz0OTQ" base_Element="_sCCdorkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sCE55LkWEe26eKBxVz0OTQ" base_Element="_sCE54bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sCE55bkWEe26eKBxVz0OTQ" base_Element="_sCE54bkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sCFg8LkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_sCGvELkWEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_sCGIA7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sCHWILkWEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_sCGvErkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sCJyYLkWEe26eKBxVz0OTQ" genericsValue="String, Activation" base_Element="_sCJLULkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCOD0LkWEe26eKBxVz0OTQ" base_Element="_sCNcwLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sCQgELkWEe26eKBxVz0OTQ" base_Element="_sCP5CrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sCQgEbkWEe26eKBxVz0OTQ" base_Element="_sCP5CrkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sCQgErkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_sCS8ULkWEe26eKBxVz0OTQ" base_Element="_sCSVQ7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sCTjY7kWEe26eKBxVz0OTQ" base_Element="_sCTjYLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sCUKcLkWEe26eKBxVz0OTQ" base_Element="_sCTjYLkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sCUKcbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_sCUxgbkWEe26eKBxVz0OTQ" base_Element="_sCUxgLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCVYkLkWEe26eKBxVz0OTQ" base_Element="_sCUxgrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCVYkrkWEe26eKBxVz0OTQ" base_Element="_sCVYkbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCV_oLkWEe26eKBxVz0OTQ" base_Element="_sCVYk7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCV_orkWEe26eKBxVz0OTQ" base_Element="_sCV_obkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCV_pLkWEe26eKBxVz0OTQ" base_Element="_sCV_o7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCWmsLkWEe26eKBxVz0OTQ" base_Element="_sCV_pbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sCX01LkWEe26eKBxVz0OTQ" base_Element="_sCX00bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sCYb4LkWEe26eKBxVz0OTQ" base_Element="_sCX00bkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sCYb4bkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_sCZqAbkWEe26eKBxVz0OTQ" genericsValue="String, Flow" base_Element="_sCZqALkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sCaREbkWEe26eKBxVz0OTQ" genericsValue="Node, Activation" base_Element="_sCaRELkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCctULkWEe26eKBxVz0OTQ" base_Element="_sCcGQLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCctUrkWEe26eKBxVz0OTQ" base_Element="_sCctUbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCctVLkWEe26eKBxVz0OTQ" base_Element="_sCctU7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCdUYLkWEe26eKBxVz0OTQ" base_Element="_sCctVbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCdUYrkWEe26eKBxVz0OTQ" base_Element="_sCdUYbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCd7cLkWEe26eKBxVz0OTQ" base_Element="_sCdUY7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCd7crkWEe26eKBxVz0OTQ" base_Element="_sCd7cbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCd7dLkWEe26eKBxVz0OTQ" base_Element="_sCd7c7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCfJkLkWEe26eKBxVz0OTQ" base_Element="_sCeih7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sCfJk7kWEe26eKBxVz0OTQ" base_Element="_sCfJkbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sCfJlLkWEe26eKBxVz0OTQ" base_Element="_sCfJkbkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sCfwoLkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_sCfworkWEe26eKBxVz0OTQ" base_Element="_sCfwobkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sCgXsLkWEe26eKBxVz0OTQ" base_Element="_sCfwo7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sCgXsbkWEe26eKBxVz0OTQ" base_Element="_sCfwo7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sCgXsrkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_sCg-wLkWEe26eKBxVz0OTQ" base_Element="_sCgXs7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sCg-w7kWEe26eKBxVz0OTQ" base_Element="_sCg-wbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sCg-xLkWEe26eKBxVz0OTQ" base_Element="_sCg-wbkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sCg-xbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_sChl0LkWEe26eKBxVz0OTQ" base_Element="_sCg-xrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sChl07kWEe26eKBxVz0OTQ" base_Element="_sChl0bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sChl1LkWEe26eKBxVz0OTQ" base_Element="_sChl0bkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sChl1bkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_sCiM4LkWEe26eKBxVz0OTQ" base_Element="_sChl1rkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sCiM47kWEe26eKBxVz0OTQ" base_Element="_sCiM4bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sCiz8LkWEe26eKBxVz0OTQ" base_Element="_sCiM4bkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sCiz8bkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_sCiz87kWEe26eKBxVz0OTQ" base_Element="_sCiz8rkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sCjbArkWEe26eKBxVz0OTQ" base_Element="_sCjbALkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sCjbA7kWEe26eKBxVz0OTQ" base_Element="_sCjbALkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sCjbBLkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_sCkCEbkWEe26eKBxVz0OTQ" base_Element="_sCkCELkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCkpILkWEe26eKBxVz0OTQ" base_Element="_sCkCErkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCkpIrkWEe26eKBxVz0OTQ" base_Element="_sCkpIbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sClQMLkWEe26eKBxVz0OTQ" base_Element="_sCkpI7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sClQMrkWEe26eKBxVz0OTQ" base_Element="_sClQMbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCl3QLkWEe26eKBxVz0OTQ" base_Element="_sClQM7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCnFYLkWEe26eKBxVz0OTQ" base_Element="_sCmeULkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCnFYrkWEe26eKBxVz0OTQ" base_Element="_sCnFYbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sCphoLkWEe26eKBxVz0OTQ" genericsValue="String" base_Element="_sCo6kLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCphorkWEe26eKBxVz0OTQ" base_Element="_sCphobkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sCsk87kWEe26eKBxVz0OTQ" base_Element="_sCsk8LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sCtMALkWEe26eKBxVz0OTQ" base_Element="_sCsk8LkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sCtMAbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_sCtzEbkWEe26eKBxVz0OTQ" genericsValue="String, Node" base_Element="_sCtzELkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sCvoQbkWEe26eKBxVz0OTQ" base_Element="_sCvoQLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sCyEiLkWEe26eKBxVz0OTQ" base_Element="_sCyEhbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sCyrkLkWEe26eKBxVz0OTQ" base_Element="_sCyEhbkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sCyrkbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_sCzSoLkWEe26eKBxVz0OTQ" genericsValue="ScheduleTime" base_Element="_sCyrlrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sC0gwLkWEe26eKBxVz0OTQ" base_Element="_sCz5ubkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sC0gwbkWEe26eKBxVz0OTQ" base_Element="_sCz5ubkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sC0gwrkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_sC1u4LkWEe26eKBxVz0OTQ" base_Element="_sC1H0LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sC2V8LkWEe26eKBxVz0OTQ" base_Element="_sC1u4bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sC71gbkWEe26eKBxVz0OTQ" genericsValue="String,InstructionTimeSlot" base_Element="_sC71gLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sC9qtLkWEe26eKBxVz0OTQ" genericsValue="T" base_Element="_sC9qsLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sC-RwbkWEe26eKBxVz0OTQ" genericsValue="Double" base_Element="_sC-RwLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sC-40bkWEe26eKBxVz0OTQ" genericsValue="Double,ReliabilityRow" base_Element="_sC-40LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sDE_cbkWEe26eKBxVz0OTQ" genericsValue="Activation,Row&lt;Activation>" base_Element="_sDE_cLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sDFmhbkWEe26eKBxVz0OTQ" genericsValue="T" base_Element="_sDFmgbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sDGNkbkWEe26eKBxVz0OTQ" base_Element="_sDGNkLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sDHbsLkWEe26eKBxVz0OTQ" base_Element="_sDG0oLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sDHbsrkWEe26eKBxVz0OTQ" base_Element="_sDHbsbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sDMUMrkWEe26eKBxVz0OTQ" base_Element="_sDMUMLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sDMUM7kWEe26eKBxVz0OTQ" base_Element="_sDMUMLkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sDMUNLkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sDMUN7kWEe26eKBxVz0OTQ" base_Element="_sDMUNbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sDM7QLkWEe26eKBxVz0OTQ" base_Element="_sDMUNbkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sDM7QbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_sDM7Q7kWEe26eKBxVz0OTQ" base_Element="_sDM7QrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sDM7RrkWEe26eKBxVz0OTQ" base_Element="_sDM7RLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sDNiULkWEe26eKBxVz0OTQ" base_Element="_sDM7RLkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sDNiUbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_sDNiU7kWEe26eKBxVz0OTQ" base_Element="_sDNiUrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sDNiVrkWEe26eKBxVz0OTQ" base_Element="_sDNiVLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sDOJYLkWEe26eKBxVz0OTQ" base_Element="_sDNiVLkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sDOJYbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_sDOJY7kWEe26eKBxVz0OTQ" base_Element="_sDOJYrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sDOJZrkWEe26eKBxVz0OTQ" base_Element="_sDOJZLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sDOwcLkWEe26eKBxVz0OTQ" base_Element="_sDOJZLkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sDOwcbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_sDOwc7kWEe26eKBxVz0OTQ" base_Element="_sDOwcrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sDOwdrkWEe26eKBxVz0OTQ" base_Element="_sDOwdLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sDPXgLkWEe26eKBxVz0OTQ" base_Element="_sDOwdLkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sDPXgbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sDPXhLkWEe26eKBxVz0OTQ" base_Element="_sDPXgrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sDPXhbkWEe26eKBxVz0OTQ" base_Element="_sDPXgrkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sDPXhrkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sDP-kLkWEe26eKBxVz0OTQ" base_Element="_sDPXh7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sDP-kbkWEe26eKBxVz0OTQ" base_Element="_sDPXh7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sDP-krkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sDP-lbkWEe26eKBxVz0OTQ" base_Element="_sDP-k7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sDP-lrkWEe26eKBxVz0OTQ" base_Element="_sDP-k7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sDP-l7kWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_sDUQAbkWEe26eKBxVz0OTQ" base_Element="_sDUQALkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sDU3ELkWEe26eKBxVz0OTQ" base_Element="_sDUQArkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sDU3ErkWEe26eKBxVz0OTQ" base_Element="_sDU3EbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sDU3FLkWEe26eKBxVz0OTQ" base_Element="_sDU3E7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sDWFMrkWEe26eKBxVz0OTQ" genericsValue="Integer" base_Element="_sDWFMLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sDaWoLkWEe26eKBxVz0OTQ" base_Element="_sDZvkLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sDaWo7kWEe26eKBxVz0OTQ" base_Element="_sDaWobkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sDaWpLkWEe26eKBxVz0OTQ" base_Element="_sDaWobkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sDaWpbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sDa9sLkWEe26eKBxVz0OTQ" base_Element="_sDaWprkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sDa9sbkWEe26eKBxVz0OTQ" base_Element="_sDaWprkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sDa9srkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_sDa9tLkWEe26eKBxVz0OTQ" base_Element="_sDa9s7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sDbkwLkWEe26eKBxVz0OTQ" base_Element="_sDa9tbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sDbkwbkWEe26eKBxVz0OTQ" base_Element="_sDa9tbkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sDbkwrkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_sDbkxLkWEe26eKBxVz0OTQ" base_Element="_sDbkw7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sDcL0LkWEe26eKBxVz0OTQ" base_Element="_sDbkxbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sDcL0bkWEe26eKBxVz0OTQ" base_Element="_sDbkxbkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sDcL0rkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_sDcL1LkWEe26eKBxVz0OTQ" base_Element="_sDcL07kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sDcy4LkWEe26eKBxVz0OTQ" base_Element="_sDcL1bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sDcy4bkWEe26eKBxVz0OTQ" base_Element="_sDcL1bkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sDcy4rkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_sDcy5LkWEe26eKBxVz0OTQ" base_Element="_sDcy47kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sDdZ8LkWEe26eKBxVz0OTQ" base_Element="_sDcy5bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sDdZ8bkWEe26eKBxVz0OTQ" base_Element="_sDcy5bkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sDdZ8rkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_sDdZ9LkWEe26eKBxVz0OTQ" base_Element="_sDdZ87kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sDeBALkWEe26eKBxVz0OTQ" base_Element="_sDdZ9bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sDeBAbkWEe26eKBxVz0OTQ" base_Element="_sDdZ9bkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sDeBArkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_sDfPILkWEe26eKBxVz0OTQ" base_Element="_sDeoELkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sDfPIrkWEe26eKBxVz0OTQ" base_Element="_sDfPIbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sDf2MLkWEe26eKBxVz0OTQ" base_Element="_sDfPI7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sDf2MrkWEe26eKBxVz0OTQ" base_Element="_sDf2MbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sDf2NLkWEe26eKBxVz0OTQ" base_Element="_sDf2M7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sDi5gLkWEe26eKBxVz0OTQ" base_Element="_sDiScLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sDi5grkWEe26eKBxVz0OTQ" base_Element="_sDi5gbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sDjgkLkWEe26eKBxVz0OTQ" base_Element="_sDi5g7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sDkHobkWEe26eKBxVz0OTQ" base_Element="_sDkHoLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sDkusLkWEe26eKBxVz0OTQ" base_Element="_sDkHorkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sDyKELkWEe26eKBxVz0OTQ" genericsValue="T, E" base_Element="_sDxjALkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sDyxILkWEe26eKBxVz0OTQ" base_Element="_sDyKErkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sDyxIrkWEe26eKBxVz0OTQ" genericsValue="Activation" base_Element="_sDyxIbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sDz_QbkWEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_sDz_QLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sD0mULkWEe26eKBxVz0OTQ" genericsValue="String" base_Element="_sDz_Q7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sD0mU7kWEe26eKBxVz0OTQ" genericsValue="String" base_Element="_sD0mUrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sD1NYrkWEe26eKBxVz0OTQ" genericsValue="ScheduleTime" base_Element="_sD1NYbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sD2bgbkWEe26eKBxVz0OTQ" genericsValue="String" base_Element="_sD2bgLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sD4QsLkWEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_sD3porkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sD43wLkWEe26eKBxVz0OTQ" genericsValue="String" base_Element="_sD3po7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sD5e0bkWEe26eKBxVz0OTQ" genericsValue="String" base_Element="_sD5e0LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sD5e1bkWEe26eKBxVz0OTQ" genericsValue="String" base_Element="_sD5e07kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sD6s8LkWEe26eKBxVz0OTQ" genericsValue="Activation" base_Element="_sD6F4LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sD7UAbkWEe26eKBxVz0OTQ" base_Element="_sD6s8bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sD7UArkWEe26eKBxVz0OTQ" genericsValue="Node" base_Element="_sD6s8rkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sD7UA7kWEe26eKBxVz0OTQ" base_Element="_sD6s8bkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sD7UBLkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_sD8iILkWEe26eKBxVz0OTQ" genericsValue="T" base_Element="_sD77ELkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sD8iIrkWEe26eKBxVz0OTQ" base_Element="_sD8iIbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sD8iJ7kWEe26eKBxVz0OTQ" base_Element="_sD8iI7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sD9JMLkWEe26eKBxVz0OTQ" base_Element="_sD8iI7kWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sD9JMbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_sD9JM7kWEe26eKBxVz0OTQ" genericsValue="String" base_Element="_sD9JMrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sD9wQbkWEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_sD9wQLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sD--YbkWEe26eKBxVz0OTQ" genericsValue="Flow" base_Element="_sD--YLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sEAzkrkWEe26eKBxVz0OTQ" genericsValue="Node" base_Element="_sEAzkbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sEBaoLkWEe26eKBxVz0OTQ" genericsValue="Integer" base_Element="_sEAzlLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sED24LkWEe26eKBxVz0OTQ" base_Element="_sEDP0bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sEFFAbkWEe26eKBxVz0OTQ" genericsValue="T" base_Element="_sEFFALkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sEGTIbkWEe26eKBxVz0OTQ" base_Element="_sEFsELkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sEGTIrkWEe26eKBxVz0OTQ" base_Element="_sEFsELkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sEGTI7kWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_sEHhQLkWEe26eKBxVz0OTQ" genericsValue="T" base_Element="_sEGTJLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sEHhRbkWEe26eKBxVz0OTQ" base_Element="_sEHhQbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sEIIULkWEe26eKBxVz0OTQ" base_Element="_sEHhQbkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sEIIUbkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_sEIvYLkWEe26eKBxVz0OTQ" genericsValue="Node" base_Element="_sEIIUrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sEJ9gbkWEe26eKBxVz0OTQ" genericsValue="T" base_Element="_sEJ9gLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sEKkkbkWEe26eKBxVz0OTQ" base_Element="_sEJ9grkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sEKkkrkWEe26eKBxVz0OTQ" base_Element="_sEJ9grkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sEKkk7kWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_sELysLkWEe26eKBxVz0OTQ" genericsValue="Node" base_Element="_sELLo7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Array xmi:id="_sEMZwLkWEe26eKBxVz0OTQ" base_Element="_sELysbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sEMZwbkWEe26eKBxVz0OTQ" genericsValue="Node" base_Element="_sELysrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sEOO8LkWEe26eKBxVz0OTQ" base_Element="_sENn4LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sEO2AbkWEe26eKBxVz0OTQ" genericsValue="T" base_Element="_sEO2ALkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sEPdErkWEe26eKBxVz0OTQ" base_Element="_sEO2ArkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sEPdE7kWEe26eKBxVz0OTQ" base_Element="_sEO2ArkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sEPdFLkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_sEQEIbkWEe26eKBxVz0OTQ" base_Element="_sEQEILkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sESgYLkWEe26eKBxVz0OTQ" base_Element="_sER5UrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sEUVkbkWEe26eKBxVz0OTQ" genericsValue="T" base_Element="_sEUVkLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sEUVlrkWEe26eKBxVz0OTQ" base_Element="_sEUVkrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sEU8oLkWEe26eKBxVz0OTQ" base_Element="_sEUVkrkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sEU8obkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_sEWx17kWEe26eKBxVz0OTQ" genericsValue="T" base_Element="_sEWx1rkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sEX_8LkWEe26eKBxVz0OTQ" genericsValue="T" base_Element="_sEXY4bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sEYnALkWEe26eKBxVz0OTQ" genericsValue="T" base_Element="_sEX_8rkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sEZOELkWEe26eKBxVz0OTQ" genericsValue="T" base_Element="_sEX_87kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sEZ1JbkWEe26eKBxVz0OTQ" genericsValue="E" base_Element="_sEZ1JLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sEbDQLkWEe26eKBxVz0OTQ" base_Element="_sEacMLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sEbqV7kWEe26eKBxVz0OTQ" base_Element="_sEbqVrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_sEc4crkWEe26eKBxVz0OTQ" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_sEc4cLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sEc4c7kWEe26eKBxVz0OTQ" base_Element="_sEc4cLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sEfUsbkWEe26eKBxVz0OTQ" base_Element="_sEetoLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sEfUsrkWEe26eKBxVz0OTQ" genericsValue="Node" base_Element="_sEetobkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Annotations xmi:id="_sEfUs7kWEe26eKBxVz0OTQ" base_Element="_sEetoLkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sEfUtLkWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_sEkNNLkWEe26eKBxVz0OTQ" genericsValue="Integer" base_Element="_sEjmILkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sEmCYLkWEe26eKBxVz0OTQ" base_Element="_sElbUbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sExokbkWEe26eKBxVz0OTQ" genericsValue="String" base_Element="_sExokLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sEyPoLkWEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_sExokrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sEyPorkWEe26eKBxVz0OTQ" genericsValue="ScheduleTime" base_Element="_sEyPobkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sEzdwbkWEe26eKBxVz0OTQ" base_Element="_sEzdwLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sEzdw7kWEe26eKBxVz0OTQ" base_Element="_sEzdwrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sEzdxbkWEe26eKBxVz0OTQ" base_Element="_sEzdxLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE0r4LkWEe26eKBxVz0OTQ" base_Element="_sE0E07kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE0r4rkWEe26eKBxVz0OTQ" base_Element="_sE0r4bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE0r5rkWEe26eKBxVz0OTQ" base_Element="_sE0r5bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE0r6LkWEe26eKBxVz0OTQ" base_Element="_sE0r57kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sE1S8LkWEe26eKBxVz0OTQ" genericsValue="ChannelSet" base_Element="_sE0r6bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE1S8bkWEe26eKBxVz0OTQ" base_Element="_sE0r6bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sE16A7kWEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_sE16ArkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE16BLkWEe26eKBxVz0OTQ" base_Element="_sE16ArkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE2hELkWEe26eKBxVz0OTQ" base_Element="_sE16BbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sE2hErkWEe26eKBxVz0OTQ" genericsValue="String" base_Element="_sE2hEbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE2hE7kWEe26eKBxVz0OTQ" base_Element="_sE2hEbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE2hFbkWEe26eKBxVz0OTQ" base_Element="_sE2hFLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE3IIbkWEe26eKBxVz0OTQ" base_Element="_sE3IILkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE3II7kWEe26eKBxVz0OTQ" base_Element="_sE3IIrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE3vMLkWEe26eKBxVz0OTQ" base_Element="_sE3IJLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE3vMrkWEe26eKBxVz0OTQ" base_Element="_sE3vMbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE3vNLkWEe26eKBxVz0OTQ" base_Element="_sE3vM7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE49U7kWEe26eKBxVz0OTQ" base_Element="_sE49UrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE6LdbkWEe26eKBxVz0OTQ" base_Element="_sE6Lc7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE6Ld7kWEe26eKBxVz0OTQ" base_Element="_sE6LdrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE6ygbkWEe26eKBxVz0OTQ" base_Element="_sE6ygLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sE6yg7kWEe26eKBxVz0OTQ" genericsValue="Node" base_Element="_sE6ygrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE6yhLkWEe26eKBxVz0OTQ" base_Element="_sE6ygrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sE7ZkbkWEe26eKBxVz0OTQ" genericsValue="Integer" base_Element="_sE7ZkLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE7ZkrkWEe26eKBxVz0OTQ" base_Element="_sE7ZkLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sE8AoLkWEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_sE7Zk7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE8AobkWEe26eKBxVz0OTQ" base_Element="_sE7Zk7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE8Ao7kWEe26eKBxVz0OTQ" base_Element="_sE8AorkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE8ApbkWEe26eKBxVz0OTQ" base_Element="_sE8ApLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE9OwrkWEe26eKBxVz0OTQ" base_Element="_sE9OwbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE910LkWEe26eKBxVz0OTQ" base_Element="_sE9Ow7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE910rkWEe26eKBxVz0OTQ" base_Element="_sE910bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE911LkWEe26eKBxVz0OTQ" base_Element="_sE9107kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE911rkWEe26eKBxVz0OTQ" base_Element="_sE911bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE-c4LkWEe26eKBxVz0OTQ" base_Element="_sE9117kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE-c4rkWEe26eKBxVz0OTQ" base_Element="_sE-c4bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE-c5LkWEe26eKBxVz0OTQ" base_Element="_sE-c47kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE_D8LkWEe26eKBxVz0OTQ" base_Element="_sE-c5bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE_D9LkWEe26eKBxVz0OTQ" base_Element="_sE_D87kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE_rALkWEe26eKBxVz0OTQ" base_Element="_sE_D9rkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sE_rA7kWEe26eKBxVz0OTQ" base_Element="_sE_rAbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFASFLkWEe26eKBxVz0OTQ" base_Element="_sFASErkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFASFrkWEe26eKBxVz0OTQ" base_Element="_sFASFbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFA5IbkWEe26eKBxVz0OTQ" base_Element="_sFA5ILkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFA5I7kWEe26eKBxVz0OTQ" base_Element="_sFA5IrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFA5JbkWEe26eKBxVz0OTQ" base_Element="_sFA5JLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFA5J7kWEe26eKBxVz0OTQ" base_Element="_sFA5JrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sFA5KbkWEe26eKBxVz0OTQ" genericsValue="String, Integer" base_Element="_sFA5KLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFBgMLkWEe26eKBxVz0OTQ" base_Element="_sFA5KLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFBgNrkWEe26eKBxVz0OTQ" base_Element="_sFBgNbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFCHQLkWEe26eKBxVz0OTQ" base_Element="_sFBgN7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sFCuULkWEe26eKBxVz0OTQ" genericsValue="Edge" base_Element="_sFCHRbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFDVZbkWEe26eKBxVz0OTQ" base_Element="_sFDVZLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFDVZ7kWEe26eKBxVz0OTQ" base_Element="_sFDVZrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFD8dLkWEe26eKBxVz0OTQ" base_Element="_sFD8cLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFD8ebkWEe26eKBxVz0OTQ" base_Element="_sFD8dbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFEjgbkWEe26eKBxVz0OTQ" base_Element="_sFEjgLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sFEjg7kWEe26eKBxVz0OTQ" genericsValue="Activation" base_Element="_sFEjgrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFEjhLkWEe26eKBxVz0OTQ" base_Element="_sFEjgrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sFFKkbkWEe26eKBxVz0OTQ" genericsValue="String, Integer" base_Element="_sFFKkLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFFxoLkWEe26eKBxVz0OTQ" base_Element="_sFFKkLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFFxorkWEe26eKBxVz0OTQ" base_Element="_sFFxobkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFG_xrkWEe26eKBxVz0OTQ" base_Element="_sFG_xbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFHm0bkWEe26eKBxVz0OTQ" base_Element="_sFHm0LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFHm07kWEe26eKBxVz0OTQ" base_Element="_sFHm0rkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFIN4LkWEe26eKBxVz0OTQ" base_Element="_sFHm1LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFIN4rkWEe26eKBxVz0OTQ" base_Element="_sFIN4bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFI08LkWEe26eKBxVz0OTQ" base_Element="_sFIN47kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFI08rkWEe26eKBxVz0OTQ" base_Element="_sFI08bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFI09LkWEe26eKBxVz0OTQ" base_Element="_sFI087kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFI09rkWEe26eKBxVz0OTQ" base_Element="_sFI09bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFJcAbkWEe26eKBxVz0OTQ" base_Element="_sFJcALkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFJcA7kWEe26eKBxVz0OTQ" base_Element="_sFJcArkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFJcBbkWEe26eKBxVz0OTQ" base_Element="_sFJcBLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFKDELkWEe26eKBxVz0OTQ" base_Element="_sFJcBrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFKqJbkWEe26eKBxVz0OTQ" base_Element="_sFKqJLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFLRMbkWEe26eKBxVz0OTQ" base_Element="_sFLRMLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFLRM7kWEe26eKBxVz0OTQ" base_Element="_sFLRMrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFMfULkWEe26eKBxVz0OTQ" base_Element="_sFL4SLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFMfUrkWEe26eKBxVz0OTQ" base_Element="_sFMfUbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFNGYLkWEe26eKBxVz0OTQ" base_Element="_sFMfVbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFNGYrkWEe26eKBxVz0OTQ" base_Element="_sFNGYbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFOUgLkWEe26eKBxVz0OTQ" base_Element="_sFNtdrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFOUgrkWEe26eKBxVz0OTQ" base_Element="_sFOUgbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFOUhbkWEe26eKBxVz0OTQ" base_Element="_sFOUg7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFO7kLkWEe26eKBxVz0OTQ" base_Element="_sFOUhrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFO7krkWEe26eKBxVz0OTQ" base_Element="_sFO7kbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFO7lLkWEe26eKBxVz0OTQ" base_Element="_sFO7k7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFPiobkWEe26eKBxVz0OTQ" base_Element="_sFPioLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFPio7kWEe26eKBxVz0OTQ" base_Element="_sFPiorkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFQww7kWEe26eKBxVz0OTQ" base_Element="_sFQwwrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFQwxbkWEe26eKBxVz0OTQ" base_Element="_sFQwxLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFRX0bkWEe26eKBxVz0OTQ" base_Element="_sFRX0LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFRX07kWEe26eKBxVz0OTQ" base_Element="_sFRX0rkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFRX1bkWEe26eKBxVz0OTQ" base_Element="_sFRX1LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFRX17kWEe26eKBxVz0OTQ" base_Element="_sFRX1rkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFR-4bkWEe26eKBxVz0OTQ" base_Element="_sFRX2LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFR-5LkWEe26eKBxVz0OTQ" base_Element="_sFR-4rkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFSl8rkWEe26eKBxVz0OTQ" base_Element="_sFSl8LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFSl9LkWEe26eKBxVz0OTQ" base_Element="_sFSl87kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFSl9rkWEe26eKBxVz0OTQ" base_Element="_sFSl9bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFTNALkWEe26eKBxVz0OTQ" base_Element="_sFSl97kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFTNArkWEe26eKBxVz0OTQ" base_Element="_sFTNAbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Array xmi:id="_sFT0ELkWEe26eKBxVz0OTQ" dimensions="2" base_Element="_sFTNBbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFT0EbkWEe26eKBxVz0OTQ" base_Element="_sFTNBbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFT0E7kWEe26eKBxVz0OTQ" base_Element="_sFT0ErkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFUbILkWEe26eKBxVz0OTQ" base_Element="_sFT0FLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFVCMLkWEe26eKBxVz0OTQ" base_Element="_sFUbJ7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFVCMrkWEe26eKBxVz0OTQ" base_Element="_sFVCMbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFVCNLkWEe26eKBxVz0OTQ" base_Element="_sFVCM7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFVpQLkWEe26eKBxVz0OTQ" base_Element="_sFVCNrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFVpQrkWEe26eKBxVz0OTQ" base_Element="_sFVpQbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFVpRLkWEe26eKBxVz0OTQ" base_Element="_sFVpQ7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFWQULkWEe26eKBxVz0OTQ" base_Element="_sFVpRbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFWQUrkWEe26eKBxVz0OTQ" base_Element="_sFWQUbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFWQVLkWEe26eKBxVz0OTQ" base_Element="_sFWQU7kWEe26eKBxVz0OTQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_sFW3YLkWEe26eKBxVz0OTQ" name="getNumChannels" method="_sGAXq7kWEe26eKBxVz0OTQ">
      <ownedParameter xmi:id="_sFW3YbkWEe26eKBxVz0OTQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_sFW3YrkWEe26eKBxVz0OTQ" base_Element="_sFW3YLkWEe26eKBxVz0OTQ">
    <annotations xmi:id="_sFW3Y7kWEe26eKBxVz0OTQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFXecLkWEe26eKBxVz0OTQ" base_Element="_sFW3ZLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFXec7kWEe26eKBxVz0OTQ" base_Element="_sFXecbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFYslLkWEe26eKBxVz0OTQ" base_Element="_sFYskrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFZToLkWEe26eKBxVz0OTQ" base_Element="_sFYsl7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFZTpLkWEe26eKBxVz0OTQ" base_Element="_sFZTo7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sFZ6sLkWEe26eKBxVz0OTQ" genericsValue="String" base_Element="_sFZTpbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sFZ6s7kWEe26eKBxVz0OTQ" genericsValue="String" base_Element="_sFZ6srkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFbv6rkWEe26eKBxVz0OTQ" base_Element="_sFbv6LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFcW87kWEe26eKBxVz0OTQ" base_Element="_sFcW8rkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sFc-ALkWEe26eKBxVz0OTQ" genericsValue="InstructionParameters" base_Element="_sFcW9LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFc-AbkWEe26eKBxVz0OTQ" base_Element="_sFcW9LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFc-A7kWEe26eKBxVz0OTQ" base_Element="_sFc-ArkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFeMJ7kWEe26eKBxVz0OTQ" base_Element="_sFeMJrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFeMKbkWEe26eKBxVz0OTQ" base_Element="_sFeMKLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFezMbkWEe26eKBxVz0OTQ" base_Element="_sFezMLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFezM7kWEe26eKBxVz0OTQ" base_Element="_sFezMrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFezNbkWEe26eKBxVz0OTQ" base_Element="_sFezNLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFfaQLkWEe26eKBxVz0OTQ" base_Element="_sFezNrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFfaQrkWEe26eKBxVz0OTQ" base_Element="_sFfaQbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFfaRLkWEe26eKBxVz0OTQ" base_Element="_sFfaQ7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFfaRrkWEe26eKBxVz0OTQ" base_Element="_sFfaRbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFgBUbkWEe26eKBxVz0OTQ" base_Element="_sFgBULkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFgBU7kWEe26eKBxVz0OTQ" base_Element="_sFgBUrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFgBVbkWEe26eKBxVz0OTQ" base_Element="_sFgBVLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFgBV7kWEe26eKBxVz0OTQ" base_Element="_sFgBVrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFgoYLkWEe26eKBxVz0OTQ" base_Element="_sFgBWLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFgoY7kWEe26eKBxVz0OTQ" base_Element="_sFgoYbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFgoZbkWEe26eKBxVz0OTQ" base_Element="_sFgoZLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFgoZ7kWEe26eKBxVz0OTQ" base_Element="_sFgoZrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFhPcbkWEe26eKBxVz0OTQ" base_Element="_sFhPcLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFidkLkWEe26eKBxVz0OTQ" base_Element="_sFh2irkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFidlbkWEe26eKBxVz0OTQ" base_Element="_sFidlLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFjEobkWEe26eKBxVz0OTQ" base_Element="_sFjEoLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFjEo7kWEe26eKBxVz0OTQ" base_Element="_sFjEorkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sFjrsLkWEe26eKBxVz0OTQ" genericsValue="Integer" base_Element="_sFjEqLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_sFjrsbkWEe26eKBxVz0OTQ" base_Element="_sFjEqLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Generics xmi:id="_sFjrs7kWEe26eKBxVz0OTQ" genericsValue="SchedulableObject" base_Element="_sFjrsrkWEe26eKBxVz0OTQ"/>
  <uml:OpaqueBehavior xmi:id="_sGAXq7kWEe26eKBxVz0OTQ" name="getNumChannels" specification="_sFW3YLkWEe26eKBxVz0OTQ">
    <ownedParameter xmi:id="_sGAXrLkWEe26eKBxVz0OTQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_sGsUILkWEe26eKBxVz0OTQ" base_Element="_sGrtELkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sGs7MrkWEe26eKBxVz0OTQ" base_Element="_sGs7MLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sGtiQrkWEe26eKBxVz0OTQ" base_Element="_sGtiQLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sGtiRbkWEe26eKBxVz0OTQ" base_Element="_sGtiQ7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sGuJUrkWEe26eKBxVz0OTQ" base_Element="_sGuJULkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sGuwYLkWEe26eKBxVz0OTQ" base_Element="_sGuJU7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sGuwY7kWEe26eKBxVz0OTQ" base_Element="_sGuwYbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sGuwZrkWEe26eKBxVz0OTQ" base_Element="_sGuwZLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sGvXcrkWEe26eKBxVz0OTQ" base_Element="_sGvXcLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sGvXdbkWEe26eKBxVz0OTQ" base_Element="_sGvXc7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sGv-grkWEe26eKBxVz0OTQ" base_Element="_sGv-gLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sGv-hbkWEe26eKBxVz0OTQ" base_Element="_sGv-g7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sGwlkrkWEe26eKBxVz0OTQ" base_Element="_sGwlkLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sGwllbkWEe26eKBxVz0OTQ" base_Element="_sGwlk7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sGxMoLkWEe26eKBxVz0OTQ" base_Element="_sGwllrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sGxMo7kWEe26eKBxVz0OTQ" base_Element="_sGxMobkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sGxzsLkWEe26eKBxVz0OTQ" base_Element="_sGxMpLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sGxzs7kWEe26eKBxVz0OTQ" base_Element="_sGxzsbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sGyawLkWEe26eKBxVz0OTQ" base_Element="_sGxztLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sGyaw7kWEe26eKBxVz0OTQ" base_Element="_sGyawbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sGyaxrkWEe26eKBxVz0OTQ" base_Element="_sGyaxLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sGzB0rkWEe26eKBxVz0OTQ" base_Element="_sGzB0LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sGzB1bkWEe26eKBxVz0OTQ" base_Element="_sGzB07kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sGzo4LkWEe26eKBxVz0OTQ" base_Element="_sGzB1rkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sGzo47kWEe26eKBxVz0OTQ" base_Element="_sGzo4bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG0P8LkWEe26eKBxVz0OTQ" base_Element="_sGzo5LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG0P87kWEe26eKBxVz0OTQ" base_Element="_sG0P8bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG03ALkWEe26eKBxVz0OTQ" base_Element="_sG0P9LkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG03A7kWEe26eKBxVz0OTQ" base_Element="_sG03AbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG1eELkWEe26eKBxVz0OTQ" base_Element="_sG03BLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG2FILkWEe26eKBxVz0OTQ" base_Element="_sG1eEbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG2FI7kWEe26eKBxVz0OTQ" base_Element="_sG2FIbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG2sMLkWEe26eKBxVz0OTQ" base_Element="_sG2FJLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG2sM7kWEe26eKBxVz0OTQ" base_Element="_sG2sMbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG3TQLkWEe26eKBxVz0OTQ" base_Element="_sG2sNLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG3TQ7kWEe26eKBxVz0OTQ" base_Element="_sG3TQbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG3TRrkWEe26eKBxVz0OTQ" base_Element="_sG3TRLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG36UrkWEe26eKBxVz0OTQ" base_Element="_sG36ULkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG36VbkWEe26eKBxVz0OTQ" base_Element="_sG36U7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG4hYrkWEe26eKBxVz0OTQ" base_Element="_sG4hYLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG5IcLkWEe26eKBxVz0OTQ" base_Element="_sG4hY7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG5Ic7kWEe26eKBxVz0OTQ" base_Element="_sG5IcbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG5vgrkWEe26eKBxVz0OTQ" base_Element="_sG5vgLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG5vhbkWEe26eKBxVz0OTQ" base_Element="_sG5vg7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG6WkLkWEe26eKBxVz0OTQ" base_Element="_sG5vhrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG6Wk7kWEe26eKBxVz0OTQ" base_Element="_sG6WkbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG69oLkWEe26eKBxVz0OTQ" base_Element="_sG6WlLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG69o7kWEe26eKBxVz0OTQ" base_Element="_sG69obkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG7ksLkWEe26eKBxVz0OTQ" base_Element="_sG69pLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG7ks7kWEe26eKBxVz0OTQ" base_Element="_sG7ksbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG8LwLkWEe26eKBxVz0OTQ" base_Element="_sG7ktLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG8Lw7kWEe26eKBxVz0OTQ" base_Element="_sG8LwbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG8y0LkWEe26eKBxVz0OTQ" base_Element="_sG8LxLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG9Z4LkWEe26eKBxVz0OTQ" base_Element="_sG8y0bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG-A8LkWEe26eKBxVz0OTQ" base_Element="_sG9Z4bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG-A87kWEe26eKBxVz0OTQ" base_Element="_sG-A8bkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG-oArkWEe26eKBxVz0OTQ" base_Element="_sG-oALkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG_PELkWEe26eKBxVz0OTQ" base_Element="_sG-oA7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sG_2ILkWEe26eKBxVz0OTQ" base_Element="_sG_PEbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sHAdMLkWEe26eKBxVz0OTQ" base_Element="_sG_2IbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sHAdM7kWEe26eKBxVz0OTQ" base_Element="_sHAdMbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sHBEQLkWEe26eKBxVz0OTQ" base_Element="_sHAdNLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sHBEQ7kWEe26eKBxVz0OTQ" base_Element="_sHBEQbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sHBrUrkWEe26eKBxVz0OTQ" base_Element="_sHBrULkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sHCSYLkWEe26eKBxVz0OTQ" base_Element="_sHBrU7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sHCSY7kWEe26eKBxVz0OTQ" base_Element="_sHCSYbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sHC5cLkWEe26eKBxVz0OTQ" base_Element="_sHCSZLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sHC5c7kWEe26eKBxVz0OTQ" base_Element="_sHC5cbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sHDggrkWEe26eKBxVz0OTQ" base_Element="_sHDggLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sHDghbkWEe26eKBxVz0OTQ" base_Element="_sHDgg7kWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sHEHkLkWEe26eKBxVz0OTQ" base_Element="_sHDghrkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sHEHk7kWEe26eKBxVz0OTQ" base_Element="_sHEHkbkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Reference xmi:id="_sHEuoLkWEe26eKBxVz0OTQ" base_Element="_sHEHlLkWEe26eKBxVz0OTQ"/>
  <UMLLabProfile:Patch xmi:id="_spVHILkWEe26eKBxVz0OTQ" base_Element="_r2eG07kWEe26eKBxVz0OTQ" patchText="@@ -351,26 +351,24 @@&#xA; um EdgeState&#xA;-()&#xA;  %7B%0D%0A%09%09RELEAS&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_spWVQLkWEe26eKBxVz0OTQ" base_Element="_r27Z1rkWEe26eKBxVz0OTQ" patchText="@@ -254,22 +254,25 @@&#xA; MISS%22;%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_spW8ULkWEe26eKBxVz0OTQ" base_Element="_r38tgbkWEe26eKBxVz0OTQ" patchText="@@ -113,18 +113,16 @@&#xA; eChoices&#xA;-()&#xA;  %7B%0D%0A%09   &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_spXjYLkWEe26eKBxVz0OTQ" base_Element="_r4BmALkWEe26eKBxVz0OTQ" patchText="@@ -145,26 +145,24 @@&#xA; ystemChoices&#xA;-()&#xA;  %7B%0D%0A    SOUR&#xA;@@ -284,18 +284,16 @@&#xA; dChoices&#xA;-()&#xA;  %7B%0D%0A    &#xA;" conflicting="false"/>
</xmi:XMI>
