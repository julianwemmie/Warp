<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="__D1lUOnDEe2dEb0vlBzM_g" name="Reliability2">
    <eAnnotations xmi:id="__HevMOnDEe2dEb0vlBzM_g" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="__HevMenDEe2dEb0vlBzM_g" source="codegen">
        <details xmi:id="__HevMunDEe2dEb0vlBzM_g" key="codegenDirectory" value="/final/src"/>
        <details xmi:id="_CX5XEOnEEe2dEb0vlBzM_g" key="AssociatedSourceCode" value="/final/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/final/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;/final/src/edu/uiowa/cs/warp/Activations.java;3305092594/1;/final/src/edu/uiowa/cs/warp/BasicPoset.java;3238489715/1;/final/src/edu/uiowa/cs/warp/ChannelAnalysis.java;1217720653/1;/final/src/edu/uiowa/cs/warp/ChannelVisualization.java;2873127052/1;/final/src/edu/uiowa/cs/warp/Channels.java;3701064188/1;/final/src/edu/uiowa/cs/warp/CodeFragment.java;1941462046/1;/final/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/final/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/final/src/edu/uiowa/cs/warp/ConnectivityPoset.java;3754377617/1;/final/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/final/src/edu/uiowa/cs/warp/Description.java;2596849957/1;/final/src/edu/uiowa/cs/warp/Edge.java;1242144003/1;/final/src/edu/uiowa/cs/warp/FileManager.java;1791012323/1;/final/src/edu/uiowa/cs/warp/Flow.java;1068535148/1;/final/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/final/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/final/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/final/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/final/src/edu/uiowa/cs/warp/GuiVisualization.java;654882569/1;/final/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/final/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/final/src/edu/uiowa/cs/warp/LatencyAnalysis.java;2064230864/1;/final/src/edu/uiowa/cs/warp/LatencyVisualization.java;2426998793/1;/final/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/final/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/final/src/edu/uiowa/cs/warp/Node.java;1243472081/1;/final/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/final/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/final/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/final/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/final/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/final/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/final/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/final/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/final/src/edu/uiowa/cs/warp/ProgramVisualization.java;601886455/1;/final/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/final/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/final/src/edu/uiowa/cs/warp/WarpInterface.java;2926400465/1;/final/src/edu/uiowa/cs/warp/ReliabilityAnalysisTest.java;2829172092/1;/final/src/edu/uiowa/cs/warp/ReliabilityParameters.java;1976749484/1;/final/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/final/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/final/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;2084516515/1;/final/src/edu/uiowa/cs/warp/ReliabilityVisualizationTest.java;1536829167/1;/final/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/final/src/edu/uiowa/cs/warp/Row.java;3413533457/1;/final/src/edu/uiowa/cs/warp/VisualizationObject.java;1022989847/1;/final/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/final/src/edu/uiowa/cs/warp/VisualizationFactory.java;1134295780/1;/final/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/final/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/final/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/final/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/final/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/final/src/edu/uiowa/cs/warp/SystemFactory.java;4134708055/1;/final/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/final/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/final/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/final/src/edu/uiowa/cs/warp/VisualizationImplementation.java;2024240350/1;/final/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;/final/src/edu/uiowa/cs/warp/Warp.java;2175298915/1;/final/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/final/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;3044474985/1;/final/src/edu/uiowa/cs/warp/Program.java;765069261/1;/final/src/edu/uiowa/cs/warp/WarpSystem.java;1603794739/1;/final/src/edu/uiowa/cs/warp/WorkLoad.java;1166111010/1;/final/src/edu/uiowa/cs/warp/WorkLoadDescription.java;3097834434/1;/final/src/edu/uiowa/cs/warp/WorkLoadListener.java;195958787/1;/final/src/edu/uiowa/cs/warp/WorkLoadTest.java;250494534/1;/final/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_ADENsOnEEe2dEb0vlBzM_g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_ADENsenEEe2dEb0vlBzM_g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_ADENsunEEe2dEb0vlBzM_g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_ADENs-nEEe2dEb0vlBzM_g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_ADENtOnEEe2dEb0vlBzM_g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_ADENtenEEe2dEb0vlBzM_g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_ADE0wOnEEe2dEb0vlBzM_g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_ADE0wenEEe2dEb0vlBzM_g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_ADE0wunEEe2dEb0vlBzM_g">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_AB7lQOnEEe2dEb0vlBzM_g" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_AB7lQenEEe2dEb0vlBzM_g" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_AB7lQunEEe2dEb0vlBzM_g" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_AB9acOnEEe2dEb0vlBzM_g" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_ADRCAOnEEe2dEb0vlBzM_g" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_AnCdcenEEe2dEb0vlBzM_g" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_AEM2IOnEEe2dEb0vlBzM_g" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_AneiUOnEEe2dEb0vlBzM_g" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_AnfJYenEEe2dEb0vlBzM_g" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_AEXOMOnEEe2dEb0vlBzM_g" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_AnizwenEEe2dEb0vlBzM_g" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AKPzwOnEEe2dEb0vlBzM_g" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_Ao7T0OnEEe2dEb0vlBzM_g" general="_AmRocOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AqXeQOnEEe2dEb0vlBzM_g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_AqYFUOnEEe2dEb0vlBzM_g" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar6WYOnEEe2dEb0vlBzM_g" name="AbstractMap" specification="_AKSQAOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar6WYenEEe2dEb0vlBzM_g" type="_AKPzwOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AKSQAOnEEe2dEb0vlBzM_g" name="AbstractMap" method="_Ar6WYOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AKS3EOnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AKS3EenEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AKS3EunEEe2dEb0vlBzM_g" type="_AKPzwOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AKTeIOnEEe2dEb0vlBzM_g" name="Activation">
              <generalization xmi:id="_AmY9MenEEe2dEb0vlBzM_g" general="_APdq8OnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AqYFUenEEe2dEb0vlBzM_g" name="coordinators" type="_AmS2kOnEEe2dEb0vlBzM_g" isReadOnly="true" association="_At4sUOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AqYsYenEEe2dEb0vlBzM_g" name="edges" type="_AmS2kOnEEe2dEb0vlBzM_g" isReadOnly="true" association="_At5TYenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AqZ6gOnEEe2dEb0vlBzM_g" name="additionalScheduleTimes" type="_AmS2kOnEEe2dEb0vlBzM_g" isReadOnly="true" association="_At6hgOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AqahkenEEe2dEb0vlBzM_g" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AqahkunEEe2dEb0vlBzM_g" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_Ao8h8enEEe2dEb0vlBzM_g" client="_AKTeIOnEEe2dEb0vlBzM_g" supplier="_Ao764unEEe2dEb0vlBzM_g" contract="_Ao764unEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar69cOnEEe2dEb0vlBzM_g" name="Activation" specification="_AKV6YOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar69cenEEe2dEb0vlBzM_g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ar69cunEEe2dEb0vlBzM_g" type="_AKTeIOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar69c-nEEe2dEb0vlBzM_g" name="Activation" specification="_AmUrwOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar69dOnEEe2dEb0vlBzM_g" name="elem" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Ar69denEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ar69dunEEe2dEb0vlBzM_g" type="_AKTeIOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar7kgOnEEe2dEb0vlBzM_g" name="clone" specification="_AKWhcOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar7kgenEEe2dEb0vlBzM_g" type="_AKTeIOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar7kgunEEe2dEb0vlBzM_g" name="getEdgesByReleaseTime" specification="_AKXvkenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar7kg-nEEe2dEb0vlBzM_g" type="_ANhxQOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar7khOnEEe2dEb0vlBzM_g" name="getEdgesByLatestReleaseTime" specification="_AKYWoenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar7khenEEe2dEb0vlBzM_g" type="_ANhxQOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar7khunEEe2dEb0vlBzM_g" name="getEdgesByPeriod" specification="_AKZkwOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar8LkOnEEe2dEb0vlBzM_g" type="_ANhxQOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar8LkenEEe2dEb0vlBzM_g" name="getEdgesByDeadline" specification="_AKaL0enEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar8LkunEEe2dEb0vlBzM_g" type="_ANhxQOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar8Lk-nEEe2dEb0vlBzM_g" name="getEdgesByPriority" specification="_AKbZ8OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar8LlOnEEe2dEb0vlBzM_g" type="_ANhxQOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar8LlenEEe2dEb0vlBzM_g" name="addEdges" specification="_Ao9wEOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar8LlunEEe2dEb0vlBzM_g" name="edges" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar8Ll-nEEe2dEb0vlBzM_g" name="addEdge" specification="_AmV54OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar8LmOnEEe2dEb0vlBzM_g" name="edge" type="_ALd7wOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar8yoOnEEe2dEb0vlBzM_g" name="increaseEdgePhases" specification="_AKcoEOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar8yoenEEe2dEb0vlBzM_g" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar8younEEe2dEb0vlBzM_g" name="updatePriorityAndRelease" specification="_AKcoEunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar8yo-nEEe2dEb0vlBzM_g" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar8ypOnEEe2dEb0vlBzM_g" name="addConflict" specification="_AKdPIOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar8ypenEEe2dEb0vlBzM_g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar8ypunEEe2dEb0vlBzM_g" name="addConflicts" specification="_Ao-XIenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar8yp-nEEe2dEb0vlBzM_g" name="conflicts" type="_AmUEsenEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar9ZsOnEEe2dEb0vlBzM_g" name="addCoordinator" specification="_AKd2MOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar9ZsenEEe2dEb0vlBzM_g" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar9ZsunEEe2dEb0vlBzM_g" name="addCoordinators" specification="_Ao_lQenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar9Zs-nEEe2dEb0vlBzM_g" name="coordinators" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar9ZtOnEEe2dEb0vlBzM_g" name="addScheduleTimes" specification="_ApAzYOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar9ZtenEEe2dEb0vlBzM_g" name="scheduleTime" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar9ZtunEEe2dEb0vlBzM_g" name="getNextScheduleTime" specification="_AKd2MunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar9Zt-nEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ar9ZuOnEEe2dEb0vlBzM_g" type="_AOmvUOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar-AwOnEEe2dEb0vlBzM_g" name="getMatchingEndTime" specification="_AKedQOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar-AwenEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ar-AwunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar-Aw-nEEe2dEb0vlBzM_g" name="getNextStartTime" specification="_AKfEUOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar-AxOnEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ar-AxenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar-AxunEEe2dEb0vlBzM_g" name="getNextEndTime" specification="_AKfrYOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar-Ax-nEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ar-AyOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar-AyenEEe2dEb0vlBzM_g" name="getNumEdges" specification="_AKfrY-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar-AyunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar-Ay-nEEe2dEb0vlBzM_g" name="compareTo" specification="_AmWg8OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar-n0OnEEe2dEb0vlBzM_g" name="obj" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Ar-n0enEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar-n0unEEe2dEb0vlBzM_g" name="conflictExists" specification="_AmXIAunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar-n0-nEEe2dEb0vlBzM_g" name="obj" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Ar-n1OnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar-n1enEEe2dEb0vlBzM_g" name="canCombine" specification="_AmXIBenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar-n1unEEe2dEb0vlBzM_g" name="a2" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Ar-n1-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar-n2OnEEe2dEb0vlBzM_g" name="getDelta" specification="_AKg5gOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar-n2enEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar_O4OnEEe2dEb0vlBzM_g" name="getExecutionDuration" specification="_AKhgkOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar_O4enEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar_O4unEEe2dEb0vlBzM_g" name="getCombinedExecutionDuration" specification="_AmXvEOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar_O4-nEEe2dEb0vlBzM_g" name="a2" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Ar_O5OnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar_O5enEEe2dEb0vlBzM_g" name="printAll" specification="_AKiHoOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar_O5unEEe2dEb0vlBzM_g" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar_O5-nEEe2dEb0vlBzM_g" name="printAll" specification="_AKiHounEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar_O6OnEEe2dEb0vlBzM_g" name="printEdges" specification="_AmXvE-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar_O6enEEe2dEb0vlBzM_g" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ar_O6unEEe2dEb0vlBzM_g" name="edges" type="_ANf8EOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ar_18OnEEe2dEb0vlBzM_g" name="printEdges" specification="_AmYWIenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ar_18enEEe2dEb0vlBzM_g" name="edges" type="_ANf8EOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AKV6YOnEEe2dEb0vlBzM_g" name="Activation" visibility="package" method="_Ar69cOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AKV6YunEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AKV6Y-nEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AKV6YenEEe2dEb0vlBzM_g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AKV6ZOnEEe2dEb0vlBzM_g" type="_AKTeIOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AKWhcOnEEe2dEb0vlBzM_g" name="clone" method="_Ar7kgOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AmVS0-nEEe2dEb0vlBzM_g" type="_AKTeIOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AKXvkenEEe2dEb0vlBzM_g" name="getEdgesByReleaseTime" method="_Ar7kgunEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtSPYOnEEe2dEb0vlBzM_g">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_AmVS1OnEEe2dEb0vlBzM_g" type="_ANhxQOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AKYWoenEEe2dEb0vlBzM_g" name="getEdgesByLatestReleaseTime" method="_Ar7khOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtSPYenEEe2dEb0vlBzM_g">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_AmVS1enEEe2dEb0vlBzM_g" type="_ANhxQOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AKZkwOnEEe2dEb0vlBzM_g" name="getEdgesByPeriod" method="_Ar7khunEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtS2cOnEEe2dEb0vlBzM_g">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_AmVS1unEEe2dEb0vlBzM_g" type="_ANhxQOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AKaL0enEEe2dEb0vlBzM_g" name="getEdgesByDeadline" method="_Ar8LkenEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtS2cenEEe2dEb0vlBzM_g">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_AmVS1-nEEe2dEb0vlBzM_g" type="_ANhxQOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AKbZ8OnEEe2dEb0vlBzM_g" name="getEdgesByPriority" method="_Ar8Lk-nEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtS2cunEEe2dEb0vlBzM_g">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_AmVS2OnEEe2dEb0vlBzM_g" type="_ANhxQOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AKcoEOnEEe2dEb0vlBzM_g" name="increaseEdgePhases" method="_Ar8yoOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtS2c-nEEe2dEb0vlBzM_g">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_AKcoEenEEe2dEb0vlBzM_g" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AKcoEunEEe2dEb0vlBzM_g" name="updatePriorityAndRelease" method="_Ar8younEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtS2dOnEEe2dEb0vlBzM_g">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_AKcoE-nEEe2dEb0vlBzM_g" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AKdPIOnEEe2dEb0vlBzM_g" name="addConflict" method="_Ar8ypOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AKdPIenEEe2dEb0vlBzM_g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AKd2MOnEEe2dEb0vlBzM_g" name="addCoordinator" method="_Ar9ZsOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AKd2MenEEe2dEb0vlBzM_g" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AKd2MunEEe2dEb0vlBzM_g" name="getNextScheduleTime" method="_Ar9ZtunEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtS2dunEEe2dEb0vlBzM_g">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_AKd2M-nEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AmV54unEEe2dEb0vlBzM_g" type="_AOmvUOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AKedQOnEEe2dEb0vlBzM_g" name="getMatchingEndTime" method="_Ar-AwOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtS2d-nEEe2dEb0vlBzM_g">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_AKedQenEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AKedQunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AKfEUOnEEe2dEb0vlBzM_g" name="getNextStartTime" method="_Ar-Aw-nEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtS2eOnEEe2dEb0vlBzM_g">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_AKfEUenEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AKfEUunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AKfrYOnEEe2dEb0vlBzM_g" name="getNextEndTime" method="_Ar-AxunEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtS2eenEEe2dEb0vlBzM_g">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_AKfrYenEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AKfrYunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AKfrY-nEEe2dEb0vlBzM_g" name="getNumEdges" method="_Ar-AyenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AKgScOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AKg5gOnEEe2dEb0vlBzM_g" name="getDelta" method="_Ar-n2OnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtS2eunEEe2dEb0vlBzM_g">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_AKg5genEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AKhgkOnEEe2dEb0vlBzM_g" name="getExecutionDuration" method="_Ar_O4OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AKhgkenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AKiHoOnEEe2dEb0vlBzM_g" name="printAll" method="_Ar_O5enEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AKiHoenEEe2dEb0vlBzM_g" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AKiHounEEe2dEb0vlBzM_g" name="printAll" method="_Ar_O5-nEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AmUrwOnEEe2dEb0vlBzM_g" name="Activation" visibility="package" method="_Ar69c-nEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AmVS0OnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AmVS0enEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AmUrwenEEe2dEb0vlBzM_g" name="elem" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AmUrwunEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AmVS0unEEe2dEb0vlBzM_g" type="_AKTeIOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AmV54OnEEe2dEb0vlBzM_g" name="addEdge" method="_Ar8Ll-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AmV54enEEe2dEb0vlBzM_g" name="edge" type="_ALd7wOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AmWg8OnEEe2dEb0vlBzM_g" name="compareTo" method="_Ar-Ay-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AmWg8enEEe2dEb0vlBzM_g" name="obj" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AmWg8unEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AmXIAunEEe2dEb0vlBzM_g" name="conflictExists" method="_Ar-n0unEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AmXIA-nEEe2dEb0vlBzM_g" name="obj" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AmXIBOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AmXIBenEEe2dEb0vlBzM_g" name="canCombine" method="_Ar-n1enEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AmXIBunEEe2dEb0vlBzM_g" name="a2" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AmXIB-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AmXvEOnEEe2dEb0vlBzM_g" name="getCombinedExecutionDuration" method="_Ar_O4unEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AmXvEenEEe2dEb0vlBzM_g" name="a2" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AmXvEunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AmXvE-nEEe2dEb0vlBzM_g" name="printEdges" visibility="private" method="_Ar_O6OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AmXvFOnEEe2dEb0vlBzM_g" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AmXvFenEEe2dEb0vlBzM_g" name="edges" type="_ANf8EOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AmYWIenEEe2dEb0vlBzM_g" name="printEdges" visibility="private" method="_Ar_18OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AmYWIunEEe2dEb0vlBzM_g" name="edges" type="_ANf8EOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ao9wEOnEEe2dEb0vlBzM_g" name="addEdges" method="_Ar8LlenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ao9wEenEEe2dEb0vlBzM_g" name="edges" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ao-XIenEEe2dEb0vlBzM_g" name="addConflicts" method="_Ar8ypunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ao-XIunEEe2dEb0vlBzM_g" name="conflicts" type="_AmUEsenEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ao_lQenEEe2dEb0vlBzM_g" name="addCoordinators" method="_Ar9ZsunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ao_lQunEEe2dEb0vlBzM_g" name="coordinators" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ApAzYOnEEe2dEb0vlBzM_g" name="addScheduleTimes" method="_Ar9ZtOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtS2denEEe2dEb0vlBzM_g">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_ApAzYenEEe2dEb0vlBzM_g" name="scheduleTime" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AKrRkOnEEe2dEb0vlBzM_g" name="Activations">
              <generalization xmi:id="_AmayYOnEEe2dEb0vlBzM_g" general="_AKPzwOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AqcWwOnEEe2dEb0vlBzM_g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_AqcWwenEEe2dEb0vlBzM_g" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AKsfsOnEEe2dEb0vlBzM_g" name="BasicPoset">
              <ownedComment xmi:id="_AtS2e-nEEe2dEb0vlBzM_g">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_AmcAg-nEEe2dEb0vlBzM_g" general="_ASH9YOnEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsAdAOnEEe2dEb0vlBzM_g" name="BasicPoset" specification="_AmbZcenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsAdAenEEe2dEb0vlBzM_g" name="workload" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsAdAunEEe2dEb0vlBzM_g" type="_AKsfsOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AmbZcenEEe2dEb0vlBzM_g" name="BasicPoset" visibility="package" method="_AsAdAOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AmcAgOnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AmcAgenEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AmbZcunEEe2dEb0vlBzM_g" name="workload" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AmcAgunEEe2dEb0vlBzM_g" type="_AKsfsOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AKtt0OnEEe2dEb0vlBzM_g" name="ChannelAnalysis">
              <ownedComment xmi:id="_AtS2fOnEEe2dEb0vlBzM_g">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_AqcWwunEEe2dEb0vlBzM_g" name="program" visibility="private" type="_AQ084OnEEe2dEb0vlBzM_g" association="_At7IkOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aqc90enEEe2dEb0vlBzM_g" name="programTable" visibility="private" type="_ANR5oOnEEe2dEb0vlBzM_g" association="_At7voOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aqc90-nEEe2dEb0vlBzM_g" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsAdA-nEEe2dEb0vlBzM_g" name="ChannelAnalysis" specification="_AmcAhOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsAdBOnEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsAdBenEEe2dEb0vlBzM_g" type="_AKtt0OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>this.program = warp.toProgram();&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsBEEOnEEe2dEb0vlBzM_g" name="ChannelAnalysis" specification="_Amcnk-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsBEEenEEe2dEb0vlBzM_g" name="program" type="_AQ084OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsBEEunEEe2dEb0vlBzM_g" type="_AKtt0OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsBEE-nEEe2dEb0vlBzM_g" name="isChannelConflict" specification="_AKu78OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsBEFOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AKu78OnEEe2dEb0vlBzM_g" name="isChannelConflict" method="_AsBEE-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AKvjAOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AmcAhOnEEe2dEb0vlBzM_g" name="ChannelAnalysis" visibility="package" method="_AsAdA-nEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AmcnkOnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AmcnkenEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AmcAhenEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AmcnkunEEe2dEb0vlBzM_g" type="_AKtt0OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Amcnk-nEEe2dEb0vlBzM_g" name="ChannelAnalysis" visibility="package" method="_AsBEEOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AmcnlenEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AmcnlunEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AmcnlOnEEe2dEb0vlBzM_g" name="program" type="_AQ084OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Amcnl-nEEe2dEb0vlBzM_g" type="_AKtt0OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AKxYMOnEEe2dEb0vlBzM_g" name="ChannelVisualization">
              <ownedComment xmi:id="_AtS2fenEEe2dEb0vlBzM_g">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_Amd1sOnEEe2dEb0vlBzM_g" general="_AOPi8OnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aqdk4enEEe2dEb0vlBzM_g" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aqdk4unEEe2dEb0vlBzM_g" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AqeL8OnEEe2dEb0vlBzM_g" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_AqeL8enEEe2dEb0vlBzM_g" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AqeL8unEEe2dEb0vlBzM_g" name="warp" visibility="private" type="_ANjmcOnEEe2dEb0vlBzM_g" association="_At8WsOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AqeL9OnEEe2dEb0vlBzM_g" name="ca" visibility="private" type="_AKtt0OnEEe2dEb0vlBzM_g" association="_At89wOnEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsBEFenEEe2dEb0vlBzM_g" name="ChannelVisualization" specification="_AmdOoOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsBEFunEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsBEF-nEEe2dEb0vlBzM_g" type="_AKxYMOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AmdOoOnEEe2dEb0vlBzM_g" name="ChannelVisualization" visibility="package" method="_AsBEFenEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AmdOounEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AmdOo-nEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AmdOoenEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AmdOpOnEEe2dEb0vlBzM_g" type="_AKxYMOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AKz0cOnEEe2dEb0vlBzM_g" name="Channels">
              <ownedComment xmi:id="_AtS2funEEe2dEb0vlBzM_g">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_AqfaEOnEEe2dEb0vlBzM_g" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AqfaEunEEe2dEb0vlBzM_g" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AqgBIOnEEe2dEb0vlBzM_g" name="channelsAvailable" visibility="package" type="_AmS2kOnEEe2dEb0vlBzM_g" association="_At9k0OnEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsBrJenEEe2dEb0vlBzM_g" name="Channels" specification="_AK23wOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsBrJunEEe2dEb0vlBzM_g" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsBrJ-nEEe2dEb0vlBzM_g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsBrKOnEEe2dEb0vlBzM_g" type="_AKz0cOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsCSMOnEEe2dEb0vlBzM_g" name="getChannelSet" specification="_AK4F4OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsCSMenEEe2dEb0vlBzM_g" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsCSMunEEe2dEb0vlBzM_g" type="_AmS2kunEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>/* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsCSM-nEEe2dEb0vlBzM_g" name="addNewChannelSet" specification="_AK4s8enEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsCSNOnEEe2dEb0vlBzM_g" name="isEmpty" specification="_AK5UAOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsCSNenEEe2dEb0vlBzM_g" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsCSNunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsCSN-nEEe2dEb0vlBzM_g" name="removeChannel" specification="_AK57EOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsCSOOnEEe2dEb0vlBzM_g" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsCSOenEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsCSOunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsCSO-nEEe2dEb0vlBzM_g" name="addChannel" specification="_AK6iIOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsCSPOnEEe2dEb0vlBzM_g" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsCSPenEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsCSPunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsC5QOnEEe2dEb0vlBzM_g" name="getNumChannels" specification="_AK7JM-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsC5QenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AK23wOnEEe2dEb0vlBzM_g" name="Channels" visibility="package" method="_AsBrJenEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AK3e0enEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AK3e0unEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AK23wenEEe2dEb0vlBzM_g" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AK3e0OnEEe2dEb0vlBzM_g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AK3e0-nEEe2dEb0vlBzM_g" type="_AKz0cOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AK4F4OnEEe2dEb0vlBzM_g" name="getChannelSet" method="_AsCSMOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AK4F4enEEe2dEb0vlBzM_g" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ApEdwOnEEe2dEb0vlBzM_g" type="_AmS2kunEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AK4s8enEEe2dEb0vlBzM_g" name="addNewChannelSet" method="_AsCSM-nEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AK5UAOnEEe2dEb0vlBzM_g" name="isEmpty" method="_AsCSNOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AK5UAenEEe2dEb0vlBzM_g" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AK5UAunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AK57EOnEEe2dEb0vlBzM_g" name="removeChannel" method="_AsCSN-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AK57EenEEe2dEb0vlBzM_g" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AK57EunEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AK57E-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AK6iIOnEEe2dEb0vlBzM_g" name="addChannel" method="_AsCSO-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AK7JMOnEEe2dEb0vlBzM_g" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AK7JMenEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AK7JMunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AK7JM-nEEe2dEb0vlBzM_g" name="getNumChannels" method="_AsC5QOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AK7wQOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_AK0bgOnEEe2dEb0vlBzM_g" name="ChannelSet" visibility="private">
                <generalization xmi:id="_ApDPoOnEEe2dEb0vlBzM_g" general="_AmS2kunEEe2dEb0vlBzM_g"/>
                <ownedAttribute xmi:id="_AqezAenEEe2dEb0vlBzM_g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_AqezAunEEe2dEb0vlBzM_g" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsBrIOnEEe2dEb0vlBzM_g" name="ChannelSet" specification="_AK1CkOnEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_AsBrIenEEe2dEb0vlBzM_g" type="_AK0bgOnEEe2dEb0vlBzM_g" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsBrIunEEe2dEb0vlBzM_g" name="ChannelSet" specification="_AK1poOnEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_AsBrI-nEEe2dEb0vlBzM_g" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_AsBrJOnEEe2dEb0vlBzM_g" type="_AK0bgOnEEe2dEb0vlBzM_g" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_AK1CkOnEEe2dEb0vlBzM_g" name="ChannelSet" visibility="private" method="_AsBrIOnEEe2dEb0vlBzM_g">
                  <eAnnotations xmi:id="_AK1CkenEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_AK1CkunEEe2dEb0vlBzM_g" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_AK1Ck-nEEe2dEb0vlBzM_g" type="_AK0bgOnEEe2dEb0vlBzM_g" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_AK1poOnEEe2dEb0vlBzM_g" name="ChannelSet" visibility="private" method="_AsBrIunEEe2dEb0vlBzM_g">
                  <eAnnotations xmi:id="_AK1pounEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_AK2QsOnEEe2dEb0vlBzM_g" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_AK1poenEEe2dEb0vlBzM_g" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_AK2QsenEEe2dEb0vlBzM_g" type="_AK0bgOnEEe2dEb0vlBzM_g" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AK9lcOnEEe2dEb0vlBzM_g" name="CodeFragment">
              <ownedAttribute xmi:id="_AqhPQOnEEe2dEb0vlBzM_g" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_AqhPQenEEe2dEb0vlBzM_g" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AqhPQunEEe2dEb0vlBzM_g" name="edges" visibility="package" type="_AmS2kOnEEe2dEb0vlBzM_g" association="_At9k0-nEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aqh2UunEEe2dEb0vlBzM_g" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AqidYenEEe2dEb0vlBzM_g" name="codeFragment" visibility="package" type="_AmS2kOnEEe2dEb0vlBzM_g" association="_At-L4enEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AqjEcenEEe2dEb0vlBzM_g" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AqjEc-nEEe2dEb0vlBzM_g" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsC5QunEEe2dEb0vlBzM_g" name="CodeFragment" specification="_AK_aoOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsC5Q-nEEe2dEb0vlBzM_g" type="_AK9lcOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsC5ROnEEe2dEb0vlBzM_g" name="CodeFragment" specification="_ApFE0OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsC5RenEEe2dEb0vlBzM_g" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsC5RunEEe2dEb0vlBzM_g" name="edges" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsC5R-nEEe2dEb0vlBzM_g" name="coordinators" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsC5SOnEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsC5SenEEe2dEb0vlBzM_g" type="_AK9lcOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsDgUOnEEe2dEb0vlBzM_g" name="getCoordinator" specification="_ALAowOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsDgUenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsDgUunEEe2dEb0vlBzM_g" name="instructions" specification="_ALAowunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsDgU-nEEe2dEb0vlBzM_g" type="_AmS2kOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsDgVOnEEe2dEb0vlBzM_g" name="size" specification="_ALB24OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsDgVenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsDgVunEEe2dEb0vlBzM_g" name="generateCodeFragment" specification="_ALB24unEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsEHYOnEEe2dEb0vlBzM_g" name="getBaseInstruction" specification="_ALCd8OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsEHYenEEe2dEb0vlBzM_g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsEHYunEEe2dEb0vlBzM_g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsEHY-nEEe2dEb0vlBzM_g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsEHZOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsEHZenEEe2dEb0vlBzM_g" name="push" specification="_ALDFAenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsEHZunEEe2dEb0vlBzM_g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsEHZ-nEEe2dEb0vlBzM_g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsEHaOnEEe2dEb0vlBzM_g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsEHaenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsEHaunEEe2dEb0vlBzM_g" name="pull" specification="_ALETIOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsEHa-nEEe2dEb0vlBzM_g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsEHbOnEEe2dEb0vlBzM_g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsEHbenEEe2dEb0vlBzM_g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsEHbunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsEHb-nEEe2dEb0vlBzM_g" name="ifHas" specification="_ALE6MOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsEHcOnEEe2dEb0vlBzM_g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsEHcenEEe2dEb0vlBzM_g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsEHcunEEe2dEb0vlBzM_g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsEHc-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsEucOnEEe2dEb0vlBzM_g" name="ifNotHas" specification="_ALFhQOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsEucenEEe2dEb0vlBzM_g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsEucunEEe2dEb0vlBzM_g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsEuc-nEEe2dEb0vlBzM_g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsEudOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsEudenEEe2dEb0vlBzM_g" name="wait" specification="_ALGIUenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsEudunEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsEud-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsEueOnEEe2dEb0vlBzM_g" name="sleep" specification="_ALGvYOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsEueenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsEueunEEe2dEb0vlBzM_g" name="reportIfDifferentCoordinators" specification="_ApG6AOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsEue-nEEe2dEb0vlBzM_g" name="coordinators" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsFVgOnEEe2dEb0vlBzM_g" name="multipleCoordinators" specification="_ApHhEOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsFVgenEEe2dEb0vlBzM_g" name="coordinators" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsFVgunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AK_aoOnEEe2dEb0vlBzM_g" name="CodeFragment" visibility="package" method="_AsC5QunEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AK_aoenEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AK_aounEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_AtTdgOnEEe2dEb0vlBzM_g">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_AK_ao-nEEe2dEb0vlBzM_g" type="_AK9lcOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ALAowOnEEe2dEb0vlBzM_g" name="getCoordinator" method="_AsDgUOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtTdgunEEe2dEb0vlBzM_g">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_ALAowenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ALAowunEEe2dEb0vlBzM_g" name="instructions" method="_AsDgUunEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtTdg-nEEe2dEb0vlBzM_g">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_ApGS8enEEe2dEb0vlBzM_g" type="_AmS2kOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ALB24OnEEe2dEb0vlBzM_g" name="size" method="_AsDgVOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtTdhOnEEe2dEb0vlBzM_g">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_ALB24enEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ALB24unEEe2dEb0vlBzM_g" name="generateCodeFragment" visibility="private" method="_AsDgVunEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ALCd8OnEEe2dEb0vlBzM_g" name="getBaseInstruction" visibility="private" method="_AsEHYOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ALCd8enEEe2dEb0vlBzM_g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALCd8unEEe2dEb0vlBzM_g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALCd8-nEEe2dEb0vlBzM_g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALDFAOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ALDFAenEEe2dEb0vlBzM_g" name="push" visibility="private" method="_AsEHZenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ALDFAunEEe2dEb0vlBzM_g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALDFA-nEEe2dEb0vlBzM_g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALDsEOnEEe2dEb0vlBzM_g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALDsEenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ALETIOnEEe2dEb0vlBzM_g" name="pull" visibility="private" method="_AsEHaunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ALETIenEEe2dEb0vlBzM_g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALETIunEEe2dEb0vlBzM_g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALETI-nEEe2dEb0vlBzM_g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALETJOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ALE6MOnEEe2dEb0vlBzM_g" name="ifHas" visibility="private" method="_AsEHb-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ALE6MenEEe2dEb0vlBzM_g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALE6MunEEe2dEb0vlBzM_g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALE6M-nEEe2dEb0vlBzM_g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALE6NOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ALFhQOnEEe2dEb0vlBzM_g" name="ifNotHas" visibility="private" method="_AsEucOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ALFhQenEEe2dEb0vlBzM_g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALFhQunEEe2dEb0vlBzM_g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALFhQ-nEEe2dEb0vlBzM_g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALGIUOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ALGIUenEEe2dEb0vlBzM_g" name="wait" method="_AsEudenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ALGIUunEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALGIU-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ALGvYOnEEe2dEb0vlBzM_g" name="sleep" isStatic="true" method="_AsEueOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ALGvYenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ApFE0OnEEe2dEb0vlBzM_g" name="CodeFragment" visibility="package" method="_AsC5ROnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_ApFE1enEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ApFE1unEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_AtTdgenEEe2dEb0vlBzM_g">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_ApFE0enEEe2dEb0vlBzM_g" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ApFE0unEEe2dEb0vlBzM_g" name="edges" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_ApFE0-nEEe2dEb0vlBzM_g" name="coordinators" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_ApFE1OnEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ApFr4OnEEe2dEb0vlBzM_g" type="_AK9lcOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ApG6AOnEEe2dEb0vlBzM_g" name="reportIfDifferentCoordinators" visibility="private" method="_AsEueunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ApG6AenEEe2dEb0vlBzM_g" name="coordinators" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ApHhEOnEEe2dEb0vlBzM_g" name="multipleCoordinators" visibility="private" method="_AsFVgOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ApHhEenEEe2dEb0vlBzM_g" name="coordinators" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_ApHhEunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ALKZwOnEEe2dEb0vlBzM_g" name="CombinedActivation">
              <generalization xmi:id="_AmiHJenEEe2dEb0vlBzM_g" general="_AKTeIOnEEe2dEb0vlBzM_g"/>
              <interfaceRealization xmi:id="_ApIvMOnEEe2dEb0vlBzM_g" client="_ALKZwOnEEe2dEb0vlBzM_g" supplier="_Ao764unEEe2dEb0vlBzM_g" contract="_Ao764unEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsFVg-nEEe2dEb0vlBzM_g" name="CombinedActivation" specification="_ALLn4OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsFVhOnEEe2dEb0vlBzM_g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsFVhenEEe2dEb0vlBzM_g" type="_ALKZwOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsF8kOnEEe2dEb0vlBzM_g" name="CombinedActivation" specification="_Amg5AOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsF8kenEEe2dEb0vlBzM_g" name="elem" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsF8kunEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsF8k-nEEe2dEb0vlBzM_g" type="_ALKZwOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsF8lOnEEe2dEb0vlBzM_g" name="CombinedActivation" specification="_AmhgEenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsF8lenEEe2dEb0vlBzM_g" name="priorEntry" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsF8lunEEe2dEb0vlBzM_g" name="next" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsF8l-nEEe2dEb0vlBzM_g" type="_ALKZwOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsF8mOnEEe2dEb0vlBzM_g" name="canCombine" specification="_AmhgF-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsF8menEEe2dEb0vlBzM_g" name="a2" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsF8munEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ALLn4OnEEe2dEb0vlBzM_g" name="CombinedActivation" visibility="package" method="_AsFVg-nEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_ALLn4unEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ALLn4-nEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ALLn4enEEe2dEb0vlBzM_g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALLn5OnEEe2dEb0vlBzM_g" type="_ALKZwOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Amg5AOnEEe2dEb0vlBzM_g" name="CombinedActivation" visibility="package" method="_AsF8kOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_Amg5A-nEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Amg5BOnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Amg5AenEEe2dEb0vlBzM_g" name="elem" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Amg5AunEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AmhgEOnEEe2dEb0vlBzM_g" type="_ALKZwOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AmhgEenEEe2dEb0vlBzM_g" name="CombinedActivation" visibility="package" method="_AsF8lOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AmhgFOnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AmhgFenEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AmhgEunEEe2dEb0vlBzM_g" name="priorEntry" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AmhgE-nEEe2dEb0vlBzM_g" name="next" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AmhgFunEEe2dEb0vlBzM_g" type="_ALKZwOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AmhgF-nEEe2dEb0vlBzM_g" name="canCombine" method="_AsF8mOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AmiHIOnEEe2dEb0vlBzM_g" name="a2" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AmiHIenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ALOrMOnEEe2dEb0vlBzM_g" name="CommunicationGraph">
              <ownedComment xmi:id="_AtTdhenEEe2dEb0vlBzM_g">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_Amj8UenEEe2dEb0vlBzM_g" general="_AOPi8OnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AqjrgOnEEe2dEb0vlBzM_g" name="wfm" visibility="package" type="_ALqJAOnEEe2dEb0vlBzM_g" association="_At-y8enEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AqkSkenEEe2dEb0vlBzM_g" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aqk5oOnEEe2dEb0vlBzM_g" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aqk5ounEEe2dEb0vlBzM_g" name="workLoad" visibility="package" type="_ARd2EOnEEe2dEb0vlBzM_g" association="_At_aAenEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsGjoOnEEe2dEb0vlBzM_g" name="CommunicationGraph" specification="_AmiuMOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsGjoenEEe2dEb0vlBzM_g" name="fm" type="_ALqJAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsGjounEEe2dEb0vlBzM_g" name="workLoad" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsGjo-nEEe2dEb0vlBzM_g" type="_ALOrMOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsGjpOnEEe2dEb0vlBzM_g" name="CommunicationGraph" specification="_AmjVQOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsGjpenEEe2dEb0vlBzM_g" name="fm" type="_ALqJAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsGjpunEEe2dEb0vlBzM_g" name="workLoad" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsGjp-nEEe2dEb0vlBzM_g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsGjqOnEEe2dEb0vlBzM_g" type="_ALOrMOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsGjqenEEe2dEb0vlBzM_g" name="createHeader" specification="_ALQgYOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsGjqunEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsGjq-nEEe2dEb0vlBzM_g" name="createFooter" specification="_ALRHcunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsGjrOnEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsGjrenEEe2dEb0vlBzM_g" name="visualization" specification="_ALSVkOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsGjrunEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsHKsOnEEe2dEb0vlBzM_g" name="createWarpFileContent" specification="_ALS8ounEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsHKsenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ALQgYOnEEe2dEb0vlBzM_g" name="createHeader" method="_AsGjqenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AmjVR-nEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ALRHcunEEe2dEb0vlBzM_g" name="createFooter" method="_AsGjq-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AmjVSOnEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ALSVkOnEEe2dEb0vlBzM_g" name="visualization" method="_AsGjrenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Amj8UOnEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ALS8ounEEe2dEb0vlBzM_g" name="createWarpFileContent" method="_AsHKsOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ALS8o-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AmiuMOnEEe2dEb0vlBzM_g" name="CommunicationGraph" method="_AsGjoOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AmiuM-nEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AmiuNOnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AmiuMenEEe2dEb0vlBzM_g" name="fm" type="_ALqJAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AmiuMunEEe2dEb0vlBzM_g" name="workLoad" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AmiuNenEEe2dEb0vlBzM_g" type="_ALOrMOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AmjVQOnEEe2dEb0vlBzM_g" name="CommunicationGraph" method="_AsGjpOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AmjVROnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AmjVRenEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AmjVQenEEe2dEb0vlBzM_g" name="fm" type="_ALqJAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AmjVQunEEe2dEb0vlBzM_g" name="workLoad" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AmjVQ-nEEe2dEb0vlBzM_g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AmjVRunEEe2dEb0vlBzM_g" type="_ALOrMOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ALV_8OnEEe2dEb0vlBzM_g" name="ConnectivityPoset">
              <ownedComment xmi:id="_AtTdhunEEe2dEb0vlBzM_g">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_AmkjZOnEEe2dEb0vlBzM_g" general="_ASH9YOnEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsHKsunEEe2dEb0vlBzM_g" name="ConnectivityPoset" specification="_Amj8UunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsHKs-nEEe2dEb0vlBzM_g" name="workload" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsHKtOnEEe2dEb0vlBzM_g" type="_ALV_8OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsHKtenEEe2dEb0vlBzM_g" name="findCoordinator" specification="_ApJWQOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsHKtunEEe2dEb0vlBzM_g" name="nodesInFlow" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsHKt-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Amj8UunEEe2dEb0vlBzM_g" name="ConnectivityPoset" visibility="package" method="_AsHKsunEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AmkjYenEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AmkjYunEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AmkjYOnEEe2dEb0vlBzM_g" name="workload" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AmkjY-nEEe2dEb0vlBzM_g" type="_ALV_8OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ApJWQOnEEe2dEb0vlBzM_g" name="findCoordinator" visibility="protected" method="_AsHKtenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ApJWQenEEe2dEb0vlBzM_g" name="nodesInFlow" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_ApJ9UOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ALYcMOnEEe2dEb0vlBzM_g" name="DeadlineComparator">
              <interfaceRealization xmi:id="_ApLLcOnEEe2dEb0vlBzM_g" client="_ALYcMOnEEe2dEb0vlBzM_g" supplier="_AmlKcOnEEe2dEb0vlBzM_g" contract="_AmlKcOnEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsHxwOnEEe2dEb0vlBzM_g" name="compare" specification="_ApNAoOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsHxwenEEe2dEb0vlBzM_g" name="obj1" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsHxwunEEe2dEb0vlBzM_g" name="obj2" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsHxw-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ApNAoOnEEe2dEb0vlBzM_g" name="compare" method="_AsHxwOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ApNAoenEEe2dEb0vlBzM_g" name="obj1" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_ApNAounEEe2dEb0vlBzM_g" name="obj2" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_ApNAo-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ALaRYOnEEe2dEb0vlBzM_g" name="Description">
              <ownedComment xmi:id="_AtTdh-nEEe2dEb0vlBzM_g">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_ApOOwOnEEe2dEb0vlBzM_g" general="_AmS2kOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aqk5pOnEEe2dEb0vlBzM_g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aqk5penEEe2dEb0vlBzM_g" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsHxxOnEEe2dEb0vlBzM_g" name="Description" specification="_ALa4cOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsHxxenEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsHxxunEEe2dEb0vlBzM_g" name="Description" specification="_ALbfg-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsHxx-nEEe2dEb0vlBzM_g" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsHxyOnEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsHxyenEEe2dEb0vlBzM_g" name="toString" specification="_ALcGk-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsHxyunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ALa4cOnEEe2dEb0vlBzM_g" name="Description" method="_AsHxxOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_ALbfgOnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ALbfgenEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ALbfgunEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ALbfg-nEEe2dEb0vlBzM_g" name="Description" method="_AsHxxunEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_ALcGkOnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ALcGkenEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ALbfhOnEEe2dEb0vlBzM_g" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALcGkunEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ALcGk-nEEe2dEb0vlBzM_g" name="toString" method="_AsHxyenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ALcGlOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ALd7wOnEEe2dEb0vlBzM_g" name="Edge">
              <generalization xmi:id="_Amm_o-nEEe2dEb0vlBzM_g" general="_APdq8OnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AqlgsOnEEe2dEb0vlBzM_g" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_AqlgsenEEe2dEb0vlBzM_g" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AqlgsunEEe2dEb0vlBzM_g" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aqlgs-nEEe2dEb0vlBzM_g" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AqlgtOnEEe2dEb0vlBzM_g" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AqmHwOnEEe2dEb0vlBzM_g" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AqmHwenEEe2dEb0vlBzM_g" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AqmHwunEEe2dEb0vlBzM_g" name="state" type="_ALfJ4OnEEe2dEb0vlBzM_g" association="_AtUroOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aqmu0OnEEe2dEb0vlBzM_g" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_ApO10OnEEe2dEb0vlBzM_g" client="_ALd7wOnEEe2dEb0vlBzM_g" supplier="_Ao764unEEe2dEb0vlBzM_g" contract="_Ao764unEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsHxy-nEEe2dEb0vlBzM_g" name="Edge" specification="_ALgYAunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsHxzOnEEe2dEb0vlBzM_g" type="_ALd7wOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsIY0OnEEe2dEb0vlBzM_g" name="Edge" specification="_ALhmIOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsIY0enEEe2dEb0vlBzM_g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsIY0unEEe2dEb0vlBzM_g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsIY0-nEEe2dEb0vlBzM_g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsIY1OnEEe2dEb0vlBzM_g" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsIY1enEEe2dEb0vlBzM_g" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsIY1unEEe2dEb0vlBzM_g" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsIY1-nEEe2dEb0vlBzM_g" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsIY2OnEEe2dEb0vlBzM_g" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsIY2enEEe2dEb0vlBzM_g" type="_ALd7wOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsIY2unEEe2dEb0vlBzM_g" name="compareTo" specification="_AmmYkOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsIY2-nEEe2dEb0vlBzM_g" name="edge" type="_ALd7wOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsIY3OnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsIY3enEEe2dEb0vlBzM_g" name="toString" specification="_ALi0QOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsIY3unEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsIY3-nEEe2dEb0vlBzM_g" name="print" specification="_ALjbUunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsIY4OnEEe2dEb0vlBzM_g" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsIY4enEEe2dEb0vlBzM_g" name="print" specification="_ALkpcunEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ALgYAunEEe2dEb0vlBzM_g" name="Edge" visibility="package" method="_AsHxy-nEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_ALgYA-nEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ALgYBOnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ALgYBenEEe2dEb0vlBzM_g" type="_ALd7wOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ALhmIOnEEe2dEb0vlBzM_g" name="Edge" visibility="package" method="_AsIY0OnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_ALhmKenEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ALhmKunEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ALhmIenEEe2dEb0vlBzM_g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALhmIunEEe2dEb0vlBzM_g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALhmI-nEEe2dEb0vlBzM_g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALhmJOnEEe2dEb0vlBzM_g" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALhmJenEEe2dEb0vlBzM_g" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALhmJunEEe2dEb0vlBzM_g" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALhmJ-nEEe2dEb0vlBzM_g" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALhmKOnEEe2dEb0vlBzM_g" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALiNMOnEEe2dEb0vlBzM_g" type="_ALd7wOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ALi0QOnEEe2dEb0vlBzM_g" name="toString" method="_AsIY3enEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ALi0QenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ALjbUunEEe2dEb0vlBzM_g" name="print" method="_AsIY3-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ALjbU-nEEe2dEb0vlBzM_g" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ALkpcunEEe2dEb0vlBzM_g" name="print" method="_AsIY4enEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AmmYkOnEEe2dEb0vlBzM_g" name="compareTo" method="_AsIY2unEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AmmYkenEEe2dEb0vlBzM_g" name="edge" type="_ALd7wOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AmmYkunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_ALfJ4OnEEe2dEb0vlBzM_g" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_ALfw8enEEe2dEb0vlBzM_g" name="RELEASED"/>
                <ownedLiteral xmi:id="_ALgYAOnEEe2dEb0vlBzM_g" name="EXECUTING"/>
                <ownedLiteral xmi:id="_ALgYAenEEe2dEb0vlBzM_g" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ALqJAOnEEe2dEb0vlBzM_g" name="FileManager">
              <ownedComment xmi:id="_AtUrounEEe2dEb0vlBzM_g">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Aqmu0enEEe2dEb0vlBzM_g" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AqnV4OnEEe2dEb0vlBzM_g" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsI_4OnEEe2dEb0vlBzM_g" name="FileManager" specification="_ALqwEOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsI_4enEEe2dEb0vlBzM_g" type="_ALqJAOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 verbose = false; // initialize verbose to false&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsI_4unEEe2dEb0vlBzM_g" name="FileManager" specification="_ALr-MOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsI_4-nEEe2dEb0vlBzM_g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsI_5OnEEe2dEb0vlBzM_g" type="_ALqJAOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsI_5enEEe2dEb0vlBzM_g" name="getDocumentsDirectory" specification="_ALslQunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsI_5unEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
 String documentsDirectory;&#xD;
 if (OSValidator.isWindows()) {&#xD;
   documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
 } else if (OSValidator.isMac()) {&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;) + File.separator + &quot;Documents&quot;;&#xD;
 } else { // for all other Unix systems&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not&#xD;
                                                         // MACOS)&#xD;
 }&#xD;
 return documentsDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsI_5-nEEe2dEb0vlBzM_g" name="getCurrentDirectory" specification="_ALtMUenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsI_6OnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsI_6enEEe2dEb0vlBzM_g" name="createFile" specification="_ALuacOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsI_6unEEe2dEb0vlBzM_g" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsI_6-nEEe2dEb0vlBzM_g" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsI_7OnEEe2dEb0vlBzM_g" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsI_7enEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * we don't actually create the file...it will be created when written to this routine really&#xD;
  * just creates the file name ;-)&#xD;
  */&#xD;
 Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex); // get the file string sans the suffix&#xD;
 }&#xD;
 /*&#xD;
  * fileString has no suffix at this point (removed if it existed) Now add file name extension&#xD;
  * and suffix&#xD;
  */&#xD;
 fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsI_7unEEe2dEb0vlBzM_g" name="createFile" specification="_ALvokOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsI_7-nEEe2dEb0vlBzM_g" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsI_8OnEEe2dEb0vlBzM_g" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsI_8enEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex - 1); // get the file string sans the suffix&#xD;
 }&#xD;
 // fileString has no suffix at this point (removed if it existed)&#xD;
 // Now add file name extension and suffix&#xD;
 fileString = fileString + suffix;&#xD;
 // we don't actually create the file...it will be created when written to&#xD;
 // this routine really just creates the file name ;-)&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsI_8unEEe2dEb0vlBzM_g" name="createDirectory" specification="_ALwPoOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsI_8-nEEe2dEb0vlBzM_g" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsI_9OnEEe2dEb0vlBzM_g" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsI_9enEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory;&#xD;
 if (subDirectory.startsWith(&quot;/&quot;)) { // check if full path provided&#xD;
   newDirectory = subDirectory; // if subDirectory is a full path, use it.&#xD;
 } else { // subDirectory has relative path, so just append&#xD;
   newDirectory = directory + File.separator + subDirectory;&#xD;
 }&#xD;
 try {&#xD;
   Path path = Paths.get(newDirectory);&#xD;
   Files.createDirectories(path);&#xD;
   if (verbose) {&#xD;
     System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
   }&#xD;
 } catch (IOException e) {&#xD;
   System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
   newDirectory = directory; // in case of error, just use the initial directory&#xD;
 }&#xD;
 return newDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsJm8OnEEe2dEb0vlBzM_g" name="writeFile" specification="_ALxdwOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsJm8enEEe2dEb0vlBzM_g" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsJm8unEEe2dEb0vlBzM_g" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Authentication tag = new Authentication(COURSE_TAG);&#xD;
 Path fileName = Path.of(file);&#xD;
 try {&#xD;
   // Files.writeString(fileName, tag.sign(fileContents)); // uncomment to tag course file&#xD;
   Files.writeString(fileName, fileContents); // comment out if tag is being used (line above)&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsJm8-nEEe2dEb0vlBzM_g" name="readFile" specification="_ALyE0OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsJm9OnEEe2dEb0vlBzM_g" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsJm9enEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
 Path fileName = Path.of(file);&#xD;
 String contents = null;&#xD;
 try {&#xD;
   contents = Files.readString(fileName);&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on reading file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
 return contents;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ALqwEOnEEe2dEb0vlBzM_g" name="FileManager" method="_AsI_4OnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_ALrXIOnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ALrXIenEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_AtUro-nEEe2dEb0vlBzM_g">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_ALrXIunEEe2dEb0vlBzM_g" type="_ALqJAOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ALr-MOnEEe2dEb0vlBzM_g" name="FileManager" method="_AsI_4unEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_ALr-MunEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ALslQOnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ALr-MenEEe2dEb0vlBzM_g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALslQenEEe2dEb0vlBzM_g" type="_ALqJAOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ALslQunEEe2dEb0vlBzM_g" name="getDocumentsDirectory" method="_AsI_5enEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ALtMUOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ALtMUenEEe2dEb0vlBzM_g" name="getCurrentDirectory" method="_AsI_5-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ALtzYOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ALuacOnEEe2dEb0vlBzM_g" name="createFile" method="_AsI_6enEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtUrpOnEEe2dEb0vlBzM_g">
                  <body>Build the name extension used for all files created by this tool. The nameExtension will be&#xD;
   * added to the base input file name so that all of the output files can be associated with the&#xD;
   * input file The file naming pattern is: baseFileNameFileType-NonDefaultParameterList where&#xD;
   * FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray Default parameters are&#xD;
   * not identified in the NameExtension All parameters used to create the file, should be listed&#xD;
   * near the top of the file in the Parameter Section, followed by the file contents.&#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_ALuacenEEe2dEb0vlBzM_g" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALuacunEEe2dEb0vlBzM_g" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALuac-nEEe2dEb0vlBzM_g" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALvBgOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ALvokOnEEe2dEb0vlBzM_g" name="createFile" method="_AsI_7unEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ALvokenEEe2dEb0vlBzM_g" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALvokunEEe2dEb0vlBzM_g" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALvok-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ALwPoOnEEe2dEb0vlBzM_g" name="createDirectory" method="_AsI_8unEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ALwPoenEEe2dEb0vlBzM_g" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALw2sOnEEe2dEb0vlBzM_g" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALw2senEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ALxdwOnEEe2dEb0vlBzM_g" name="writeFile" method="_AsJm8OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ALxdwenEEe2dEb0vlBzM_g" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALxdwunEEe2dEb0vlBzM_g" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ALyE0OnEEe2dEb0vlBzM_g" name="readFile" method="_AsJm8-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ALyE0enEEe2dEb0vlBzM_g" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ALyr4OnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AL0hEOnEEe2dEb0vlBzM_g" name="Flow">
              <ownedComment xmi:id="_AtUrpenEEe2dEb0vlBzM_g">
                <body>Flow is a java class in which the user creates a flow object based on the graph file provided.&#xD;
The flows, edges, link transmission and total cost are all added to separate ArrayLists which are stored and can&#xD;
be accessed if needed. Methods inside the class allow the user to manipulate certain aspects of the flow and return&#xD;
certain values.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_AmtGRenEEe2dEb0vlBzM_g" general="_APdq8OnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aqn88OnEEe2dEb0vlBzM_g" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aqn88enEEe2dEb0vlBzM_g" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aqn88unEEe2dEb0vlBzM_g" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aqn88-nEEe2dEb0vlBzM_g" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aqn89OnEEe2dEb0vlBzM_g" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aqn89enEEe2dEb0vlBzM_g" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aqn89unEEe2dEb0vlBzM_g" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_AqokAOnEEe2dEb0vlBzM_g" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AqokAenEEe2dEb0vlBzM_g" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_AqokAunEEe2dEb0vlBzM_g" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AqokA-nEEe2dEb0vlBzM_g" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_AqokBOnEEe2dEb0vlBzM_g" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AqokBenEEe2dEb0vlBzM_g" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_AqokBunEEe2dEb0vlBzM_g" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AqpLEenEEe2dEb0vlBzM_g" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AqpLE-nEEe2dEb0vlBzM_g" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AqpyIenEEe2dEb0vlBzM_g" name="nodes" visibility="package" type="_AmS2kOnEEe2dEb0vlBzM_g" association="_AuABEenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AqqZMenEEe2dEb0vlBzM_g" name="linkTxAndTotalCost" visibility="package" type="_AmS2kOnEEe2dEb0vlBzM_g" association="_AuABFOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AqrAQenEEe2dEb0vlBzM_g" name="edges" visibility="package" type="_AmS2kOnEEe2dEb0vlBzM_g" association="_AuAoIenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AqrnUenEEe2dEb0vlBzM_g" name="nodePredecessor" visibility="package" type="_AMzYgOnEEe2dEb0vlBzM_g" association="_AuBPMenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AqrnU-nEEe2dEb0vlBzM_g" name="edgePredecessor" visibility="package" type="_ALd7wOnEEe2dEb0vlBzM_g" association="_AuB2QOnEEe2dEb0vlBzM_g"/>
              <interfaceRealization xmi:id="_ApQrAOnEEe2dEb0vlBzM_g" client="_AL0hEOnEEe2dEb0vlBzM_g" supplier="_Ao764unEEe2dEb0vlBzM_g" contract="_Ao764unEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsJm9unEEe2dEb0vlBzM_g" name="Flow" specification="_AL4LcOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsJm9-nEEe2dEb0vlBzM_g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsJm-OnEEe2dEb0vlBzM_g" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsJm-enEEe2dEb0vlBzM_g" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsJm-unEEe2dEb0vlBzM_g" type="_AL0hEOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 	this.index = index;&#xD;
     /*&#xD;
      *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
      *  on flow updated based on flow length and reliability parameters&#xD;
      */&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges  = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();	&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsJm--nEEe2dEb0vlBzM_g" name="Flow" specification="_AL4ygOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsJm_OnEEe2dEb0vlBzM_g" type="_AL0hEOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	this.index = DEFAULT_INDEX;&#xD;
 	/*&#xD;
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
 	 *  on flow updated based on flow length and reliability parameters&#xD;
 	 */&#xD;
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 	this.nodes = new ArrayList&lt;>();&#xD;
 	this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 	this.edges = new ArrayList&lt;>();&#xD;
 	this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsKOAOnEEe2dEb0vlBzM_g" name="getInitialPriority" specification="_AL5ZkOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsKOAenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsKOAunEEe2dEb0vlBzM_g" name="getIndex" specification="_AL5ZkunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsKOA-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsKOBOnEEe2dEb0vlBzM_g" name="getNumTxPerLink" specification="_AL6AoenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsKOBenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsKOBunEEe2dEb0vlBzM_g" name="getNodes" specification="_AL6nsOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsKOB-nEEe2dEb0vlBzM_g" type="_AmS2kOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsKOCOnEEe2dEb0vlBzM_g" name="getEdges" specification="_AL7OwenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsKOCenEEe2dEb0vlBzM_g" type="_AmS2kOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsKOCunEEe2dEb0vlBzM_g" name="addEdge" specification="_Amr4IOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsKOC-nEEe2dEb0vlBzM_g" name="edge" type="_ALd7wOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsKODOnEEe2dEb0vlBzM_g" name="addNode" specification="_AmsfMenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsKODenEEe2dEb0vlBzM_g" name="node" type="_AMzYgOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsKODunEEe2dEb0vlBzM_g" name="getLinkTxAndTotalCost" specification="_AL8c4OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsKOD-nEEe2dEb0vlBzM_g" type="_AmS2kOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsK1EOnEEe2dEb0vlBzM_g" name="setInitialPriority" specification="_AL9rAOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsK1EenEEe2dEb0vlBzM_g" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsK1EunEEe2dEb0vlBzM_g" name="setIndex" specification="_AL-SEOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsK1E-nEEe2dEb0vlBzM_g" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsK1FOnEEe2dEb0vlBzM_g" name="setNumTxPerLink" specification="_AL-5IOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsK1FenEEe2dEb0vlBzM_g" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsK1FunEEe2dEb0vlBzM_g" name="setNodes" specification="_ApSgMOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsK1F-nEEe2dEb0vlBzM_g" name="nodes" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsK1GOnEEe2dEb0vlBzM_g" name="setLinkTxAndTotalCost" specification="_ApTHQOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsK1GenEEe2dEb0vlBzM_g" name="linkTxAndTotalCost" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsK1GunEEe2dEb0vlBzM_g" name="compareTo" specification="_AmsfM-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsK1G-nEEe2dEb0vlBzM_g" name="flow" type="_AL0hEOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsK1HOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsK1HenEEe2dEb0vlBzM_g" name="toString" specification="_AL_gMOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsK1HunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AL4LcOnEEe2dEb0vlBzM_g" name="Flow" visibility="package" method="_AsJm9unEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AL4LdOnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AL4LdenEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_AtVSsOnEEe2dEb0vlBzM_g">
                  <body>Constructor that sets name, priority, and index of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_AL4LcenEEe2dEb0vlBzM_g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AL4LcunEEe2dEb0vlBzM_g" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AL4Lc-nEEe2dEb0vlBzM_g" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AL4LdunEEe2dEb0vlBzM_g" type="_AL0hEOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AL4ygOnEEe2dEb0vlBzM_g" name="Flow" visibility="package" method="_AsJm--nEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AL4ygenEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AL4ygunEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_AtVSsenEEe2dEb0vlBzM_g">
                  <body>Constructor</body>
                </ownedComment>
                <ownedParameter xmi:id="_AL4yg-nEEe2dEb0vlBzM_g" type="_AL0hEOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AL5ZkOnEEe2dEb0vlBzM_g" name="getInitialPriority" method="_AsKOAOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtVSsunEEe2dEb0vlBzM_g">
                  <body>Gets the initial priority of the flow.&#xD;
	 * &#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_AL5ZkenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AL5ZkunEEe2dEb0vlBzM_g" name="getIndex" method="_AsKOAunEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtVSs-nEEe2dEb0vlBzM_g">
                  <body>Gets the index of the flow. The order in which the node was read from the &#xD;
	 * graph file.&#xD;
	 *  &#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_AL6AoOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AL6AoenEEe2dEb0vlBzM_g" name="getNumTxPerLink" method="_AsKOBOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtVStOnEEe2dEb0vlBzM_g">
                  <body>Gets the number of transmissions per link of the flow.&#xD;
	 * Defaulted to 1.&#xD;
	 * &#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_AL6AounEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AL6nsOnEEe2dEb0vlBzM_g" name="getNodes" method="_AsKOBunEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtVStenEEe2dEb0vlBzM_g">
                  <body>Gets an ArrayList of nodes in the flow.&#xD;
	 * &#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_ApR5IOnEEe2dEb0vlBzM_g" type="_AmS2kOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AL7OwenEEe2dEb0vlBzM_g" name="getEdges" method="_AsKOCOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtVStunEEe2dEb0vlBzM_g">
                  <body>Gets and ArrayList of edges in the flow.&#xD;
	 * &#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_ApR5IenEEe2dEb0vlBzM_g" type="_AmS2kOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AL8c4OnEEe2dEb0vlBzM_g" name="getLinkTxAndTotalCost" method="_AsKODunEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtVSuenEEe2dEb0vlBzM_g">
                  <body>Gets the link transmission and total cost of the flow.&#xD;
	 * &#xD;
	 * @return ArrayList of link transmission and total cost values.</body>
                </ownedComment>
                <ownedParameter xmi:id="_ApR5IunEEe2dEb0vlBzM_g" type="_AmS2kOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AL9rAOnEEe2dEb0vlBzM_g" name="setInitialPriority" method="_AsK1EOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtVSuunEEe2dEb0vlBzM_g">
                  <body>Sets the initial priority of the flow. Default is -1.&#xD;
	 * &#xD;
	 * @param initialPriority the initial priority to be set</body>
                </ownedComment>
                <ownedParameter xmi:id="_AL9rAenEEe2dEb0vlBzM_g" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AL-SEOnEEe2dEb0vlBzM_g" name="setIndex" method="_AsK1EunEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtVSu-nEEe2dEb0vlBzM_g">
                  <body>Sets the index of a node in the flow. Default is 0.&#xD;
	 * &#xD;
	 * @param index the index to be set</body>
                </ownedComment>
                <ownedParameter xmi:id="_AL-SEenEEe2dEb0vlBzM_g" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AL-5IOnEEe2dEb0vlBzM_g" name="setNumTxPerLink" method="_AsK1FOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtVSvOnEEe2dEb0vlBzM_g">
                  <body>Sets the number of transmissions per link. Determined by the fault model.&#xD;
	 * &#xD;
	 * @param numTxPerLink the number of transmissions per link to be set.</body>
                </ownedComment>
                <ownedParameter xmi:id="_AL-5IenEEe2dEb0vlBzM_g" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AL_gMOnEEe2dEb0vlBzM_g" name="toString" method="_AsK1HenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AL_gMenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Amr4IOnEEe2dEb0vlBzM_g" name="addEdge" method="_AsKOCunEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtVSt-nEEe2dEb0vlBzM_g">
                  <body>Add an edge to the flow by first setting the edge predecessor, adding the edge, then&#xD;
	 * updating the predecessor for the next node.&#xD;
	 * &#xD;
	 * @param edge the edge to added</body>
                </ownedComment>
                <ownedParameter xmi:id="_AmsfMOnEEe2dEb0vlBzM_g" name="edge" type="_ALd7wOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AmsfMenEEe2dEb0vlBzM_g" name="addNode" method="_AsKODOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtVSuOnEEe2dEb0vlBzM_g">
                  <body>Add a node to the flow by first setting its predecessor, adding the node, then &#xD;
	 * updating the predecessor for the next node.&#xD;
	 * &#xD;
	 * @param node the node to be added</body>
                </ownedComment>
                <ownedParameter xmi:id="_AmsfMunEEe2dEb0vlBzM_g" name="node" type="_AMzYgOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AmsfM-nEEe2dEb0vlBzM_g" name="compareTo" method="_AsK1GunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AmtGQOnEEe2dEb0vlBzM_g" name="flow" type="_AL0hEOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AmtGQenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ApSgMOnEEe2dEb0vlBzM_g" name="setNodes" method="_AsK1FunEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtVSvenEEe2dEb0vlBzM_g">
                  <body>Sets a list of nodes to the flow.&#xD;
	 * &#xD;
	 * @param nodes the ArrayList of nodes to be set.</body>
                </ownedComment>
                <ownedParameter xmi:id="_ApSgMenEEe2dEb0vlBzM_g" name="nodes" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ApTHQOnEEe2dEb0vlBzM_g" name="setLinkTxAndTotalCost" method="_AsK1GOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtVSvunEEe2dEb0vlBzM_g">
                  <body>Sets a list of link transmission and total cost to the flow.&#xD;
	 * &#xD;
	 * @param linkTxAndTotalCost the ArrayList of values to set.</body>
                </ownedComment>
                <ownedParameter xmi:id="_ApTHQenEEe2dEb0vlBzM_g" name="linkTxAndTotalCost" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AMIDEOnEEe2dEb0vlBzM_g" name="FlowMap">
              <ownedComment xmi:id="_AtVSv-nEEe2dEb0vlBzM_g">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_Amu7cOnEEe2dEb0vlBzM_g" general="_AKPzwOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AqsOYOnEEe2dEb0vlBzM_g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aqs1cOnEEe2dEb0vlBzM_g" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AMJRMOnEEe2dEb0vlBzM_g" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_AtVSwOnEEe2dEb0vlBzM_g">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_AmvigenEEe2dEb0vlBzM_g" general="_AKPzwOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aqs1cenEEe2dEb0vlBzM_g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aqs1cunEEe2dEb0vlBzM_g" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AMJ4QOnEEe2dEb0vlBzM_g" name="GraphViz">
              <ownedComment xmi:id="_AtVSwenEEe2dEb0vlBzM_g">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_Amx-w-nEEe2dEb0vlBzM_g" general="_AOPi8OnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aqs1c-nEEe2dEb0vlBzM_g" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aqs1dOnEEe2dEb0vlBzM_g" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aqs1denEEe2dEb0vlBzM_g" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_AqtcgOnEEe2dEb0vlBzM_g" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AqtcgenEEe2dEb0vlBzM_g" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aqtcg-nEEe2dEb0vlBzM_g" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AquDkOnEEe2dEb0vlBzM_g" name="wfm" visibility="package" type="_ALqJAOnEEe2dEb0vlBzM_g" association="_AuB2Q-nEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AquDkunEEe2dEb0vlBzM_g" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AquqoOnEEe2dEb0vlBzM_g" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AquqounEEe2dEb0vlBzM_g" name="gv" visibility="package" type="_AMJ4QOnEEe2dEb0vlBzM_g" association="_AuCdUenEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsLcIOnEEe2dEb0vlBzM_g" name="GraphViz" specification="_AmwwoOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsLcIenEEe2dEb0vlBzM_g" name="wfm" type="_ALqJAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsLcIunEEe2dEb0vlBzM_g" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsLcI-nEEe2dEb0vlBzM_g" type="_AMJ4QOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsLcJOnEEe2dEb0vlBzM_g" name="GraphViz" specification="_AmxXsOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsLcJenEEe2dEb0vlBzM_g" name="wfm" type="_ALqJAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsLcJunEEe2dEb0vlBzM_g" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsLcJ-nEEe2dEb0vlBzM_g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsLcKOnEEe2dEb0vlBzM_g" type="_AMJ4QOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsLcKenEEe2dEb0vlBzM_g" name="visualization" specification="_AMM7kOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsLcKunEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsLcK-nEEe2dEb0vlBzM_g" name="initializeGraphVizContent" specification="_AMOJsOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsLcLOnEEe2dEb0vlBzM_g" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsMDMOnEEe2dEb0vlBzM_g" name="finalizeGraphVizContent" specification="_AMOwwOnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsMDMenEEe2dEb0vlBzM_g" name="getGraphVizContent" specification="_AMOwwenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsMDMunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsMDM-nEEe2dEb0vlBzM_g" name="createGraphVizContent" specification="_AMPX0enEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsMDNOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsMDNenEEe2dEb0vlBzM_g" name="addFlowToGraphViz" specification="_AMPX0-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsMDNunEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsMDN-nEEe2dEb0vlBzM_g" name="addSrcNodeToGraphViz" specification="_AMP-4OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsMDOOnEEe2dEb0vlBzM_g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsMDOenEEe2dEb0vlBzM_g" name="addSnkNodeToGraphViz" specification="_AMQl8OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsMDOunEEe2dEb0vlBzM_g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsMDO-nEEe2dEb0vlBzM_g" name="finalizeCurrentFlowInGraphViz" specification="_AMQl8unEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsMDPOnEEe2dEb0vlBzM_g" name="addNodeName" specification="_AMRNAOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsMDPenEEe2dEb0vlBzM_g" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsMDPunEEe2dEb0vlBzM_g" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AMM7kOnEEe2dEb0vlBzM_g" name="visualization" method="_AsLcKenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Amx-wunEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AMOJsOnEEe2dEb0vlBzM_g" name="initializeGraphVizContent" method="_AsLcK-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AMOJsenEEe2dEb0vlBzM_g" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AMOwwOnEEe2dEb0vlBzM_g" name="finalizeGraphVizContent" method="_AsMDMOnEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AMOwwenEEe2dEb0vlBzM_g" name="getGraphVizContent" method="_AsMDMenEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtV5wOnEEe2dEb0vlBzM_g">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_AMPX0OnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AMPX0enEEe2dEb0vlBzM_g" name="createGraphVizContent" method="_AsMDM-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AMPX0unEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AMPX0-nEEe2dEb0vlBzM_g" name="addFlowToGraphViz" method="_AsMDNenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AMPX1OnEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AMP-4OnEEe2dEb0vlBzM_g" name="addSrcNodeToGraphViz" method="_AsMDN-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AMP-4enEEe2dEb0vlBzM_g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AMQl8OnEEe2dEb0vlBzM_g" name="addSnkNodeToGraphViz" method="_AsMDOenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AMQl8enEEe2dEb0vlBzM_g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AMQl8unEEe2dEb0vlBzM_g" name="finalizeCurrentFlowInGraphViz" method="_AsMDO-nEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AMRNAOnEEe2dEb0vlBzM_g" name="addNodeName" visibility="private" method="_AsMDPOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AMRNAenEEe2dEb0vlBzM_g" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AMRNAunEEe2dEb0vlBzM_g" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AmwwoOnEEe2dEb0vlBzM_g" name="GraphViz" visibility="package" method="_AsLcIOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_Amwwo-nEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AmwwpOnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AmwwoenEEe2dEb0vlBzM_g" name="wfm" type="_ALqJAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AmwwounEEe2dEb0vlBzM_g" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AmwwpenEEe2dEb0vlBzM_g" type="_AMJ4QOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AmxXsOnEEe2dEb0vlBzM_g" name="GraphViz" visibility="package" method="_AsLcJOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AmxXtOnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Amx-wOnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AmxXsenEEe2dEb0vlBzM_g" name="wfm" type="_ALqJAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AmxXsunEEe2dEb0vlBzM_g" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AmxXs-nEEe2dEb0vlBzM_g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Amx-wenEEe2dEb0vlBzM_g" type="_AMJ4QOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AMU3YOnEEe2dEb0vlBzM_g" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_AtV5wenEEe2dEb0vlBzM_g">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_ApU8cOnEEe2dEb0vlBzM_g" general="_Am1CEenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AqvRsOnEEe2dEb0vlBzM_g" name="gv" visibility="package" type="_AMJ4QOnEEe2dEb0vlBzM_g" association="_AuDEYenEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsMqQOnEEe2dEb0vlBzM_g" name="GraphVizListener" specification="_Am2QMenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsMqQenEEe2dEb0vlBzM_g" name="gv" type="_AMJ4QOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsMqQunEEe2dEb0vlBzM_g" type="_AMU3YOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsMqQ-nEEe2dEb0vlBzM_g" name="buildGraphViz" specification="_Am2QNunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsMqROnEEe2dEb0vlBzM_g" name="gv" type="_AMJ4QOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsMqRenEEe2dEb0vlBzM_g" name="enterWarpName" specification="_Am23QunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsMqRunEEe2dEb0vlBzM_g" name="ctx" type="_Am23QOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsMqR-nEEe2dEb0vlBzM_g" name="exitWarp" specification="_Am4FYenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsMqSOnEEe2dEb0vlBzM_g" name="ctx" type="_Am3eU-nEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsMqSenEEe2dEb0vlBzM_g" name="enterFlowName" specification="_Am4sdOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsMqSunEEe2dEb0vlBzM_g" name="ctx" type="_Am4scunEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsNRUOnEEe2dEb0vlBzM_g" name="exitSrcNode" specification="_Am56kenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsNRUenEEe2dEb0vlBzM_g" name="ctx" type="_Am5Tg-nEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsNRUunEEe2dEb0vlBzM_g" name="exitSnkNode" specification="_Am6hounEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsNRU-nEEe2dEb0vlBzM_g" name="ctx" type="_Am6hoOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsNRVOnEEe2dEb0vlBzM_g" name="exitFlow" specification="_Am7vwenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsNRVenEEe2dEb0vlBzM_g" name="ctx" type="_Am7Is-nEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Am2QMenEEe2dEb0vlBzM_g" name="GraphVizListener" visibility="private" method="_AsMqQOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_Am2QM-nEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Am2QNOnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Am2QMunEEe2dEb0vlBzM_g" name="gv" type="_AMJ4QOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Am2QNenEEe2dEb0vlBzM_g" type="_AMU3YOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Am2QNunEEe2dEb0vlBzM_g" name="buildGraphViz" isStatic="true" method="_AsMqQ-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Am2QN-nEEe2dEb0vlBzM_g" name="gv" type="_AMJ4QOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Am23QunEEe2dEb0vlBzM_g" name="enterWarpName" method="_AsMqRenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Am23Q-nEEe2dEb0vlBzM_g" name="ctx" type="_Am23QOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Am4FYenEEe2dEb0vlBzM_g" name="exitWarp" method="_AsMqR-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Am4FYunEEe2dEb0vlBzM_g" name="ctx" type="_Am3eU-nEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Am4sdOnEEe2dEb0vlBzM_g" name="enterFlowName" method="_AsMqSenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Am4sdenEEe2dEb0vlBzM_g" name="ctx" type="_Am4scunEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Am56kenEEe2dEb0vlBzM_g" name="exitSrcNode" method="_AsNRUOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Am56kunEEe2dEb0vlBzM_g" name="ctx" type="_Am5Tg-nEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Am6hounEEe2dEb0vlBzM_g" name="exitSnkNode" method="_AsNRUunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Am6ho-nEEe2dEb0vlBzM_g" name="ctx" type="_Am6hoOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Am7vwenEEe2dEb0vlBzM_g" name="exitFlow" method="_AsNRVOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Am7vwunEEe2dEb0vlBzM_g" name="ctx" type="_Am7Is-nEEe2dEb0vlBzM_g"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AMYhwOnEEe2dEb0vlBzM_g" name="GuiVisualization">
              <ownedComment xmi:id="_AtV5wunEEe2dEb0vlBzM_g">
                <body>GuiVisualization Class to create a Java Swing window that displays a table of data with column&#xD;
headings.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Aqv4wOnEEe2dEb0vlBzM_g" name="frame" visibility="package" type="_Am9k8enEEe2dEb0vlBzM_g" association="_AuDrcenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aqv4wunEEe2dEb0vlBzM_g" name="jtable" visibility="package" type="_Am-zEenEEe2dEb0vlBzM_g" association="_AuDrdOnEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsNRVunEEe2dEb0vlBzM_g" name="GuiVisualization" specification="_AMZv4OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsNRV-nEEe2dEb0vlBzM_g" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsNRWOnEEe2dEb0vlBzM_g" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AsNRWenEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsNRWunEEe2dEb0vlBzM_g" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AsNRW-nEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsNRXOnEEe2dEb0vlBzM_g" type="_AMYhwOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>// Frame initialization&#xD;
 frame = new JFrame();&#xD;
&#xD;
 // Frame Title&#xD;
 frame.setTitle(title);&#xD;
&#xD;
 // Initializing the JTable with input parameters&#xD;
 jtable = new JTable(table, columnNames);&#xD;
 jtable.setBounds(30, 40, 200, 300); // default size&#xD;
 // resizeColumnWidth(jtable); // uncomment to auto size column widths&#xD;
&#xD;
 // attached the table to a JScrollPane and then add both to the frame&#xD;
 JScrollPane sp = new JScrollPane(jtable); // gives table a vertical scrollbar&#xD;
 frame.add(sp);&#xD;
 // Frame Size&#xD;
 frame.setSize(500, 200);&#xD;
 jtable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); // creates horizontal scrollbar&#xD;
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
 // Frame Visible = false&#xD;
 frame.setVisible(false);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsNRXenEEe2dEb0vlBzM_g" name="setVisible" specification="_AMa-AenEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>frame.setVisible(true);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsN4YOnEEe2dEb0vlBzM_g" name="resizeColumnWidth" specification="_ApWKkOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsN4YenEEe2dEb0vlBzM_g" name="table" type="_Am-zEenEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>final TableColumnModel columnModel = table.getColumnModel();&#xD;
 for (int column = 0; column &lt; table.getColumnCount(); column++) {&#xD;
   int width = 70; // Min width&#xD;
   for (int row = 0; row &lt; table.getRowCount(); row++) {&#xD;
     TableCellRenderer renderer = table.getCellRenderer(row, column);&#xD;
     Component comp = table.prepareRenderer(renderer, row, column);&#xD;
     width = Math.max(comp.getPreferredSize().width + 5, width);&#xD;
   }&#xD;
   if (width > 300)&#xD;
     width = 300;&#xD;
   columnModel.getColumn(column).setPreferredWidth(width);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AMZv4OnEEe2dEb0vlBzM_g" name="GuiVisualization" method="_AsNRVunEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AMZv5OnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AMaW8OnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_AtV5w-nEEe2dEb0vlBzM_g">
                  <body>Constructor to create a Java Swing Window for a table of data with column headings. The window&#xD;
   * is initially not visible, and is made visible by a call to setVisible().&#xD;
   * &#xD;
   * @param title Window title&#xD;
   * @param columnNames Column heading names&#xD;
   * @param table table of strings representing the data</body>
                </ownedComment>
                <ownedParameter xmi:id="_AMZv4enEEe2dEb0vlBzM_g" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AMZv4unEEe2dEb0vlBzM_g" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AMaW8unEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AMZv4-nEEe2dEb0vlBzM_g" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AMaW8-nEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AMaW8enEEe2dEb0vlBzM_g" type="_AMYhwOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AMa-AenEEe2dEb0vlBzM_g" name="setVisible" method="_AsNRXenEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtV5xOnEEe2dEb0vlBzM_g">
                  <body>Make the table visible.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_ApWKkOnEEe2dEb0vlBzM_g" name="resizeColumnWidth" visibility="private" method="_AsN4YOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ApWKkenEEe2dEb0vlBzM_g" name="table" type="_Am-zEenEEe2dEb0vlBzM_g"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AMcMIOnEEe2dEb0vlBzM_g" name="InputGraphFile">
              <ownedComment xmi:id="_AtV5xenEEe2dEb0vlBzM_g">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Aqwf0enEEe2dEb0vlBzM_g" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aqwf0unEEe2dEb0vlBzM_g" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aqwf0-nEEe2dEb0vlBzM_g" name="wfm" visibility="private" type="_ALqJAOnEEe2dEb0vlBzM_g" association="_AuESgenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AqxG4enEEe2dEb0vlBzM_g" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AqxG4unEEe2dEb0vlBzM_g" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AqxG5OnEEe2dEb0vlBzM_g" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_AqxG5enEEe2dEb0vlBzM_g" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsN4YunEEe2dEb0vlBzM_g" name="InputGraphFile" specification="_AnAoQ-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsN4Y-nEEe2dEb0vlBzM_g" name="fm" type="_ALqJAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsN4ZOnEEe2dEb0vlBzM_g" type="_AMcMIOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsN4ZenEEe2dEb0vlBzM_g" name="InputGraphFile" specification="_AnBPUOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsN4ZunEEe2dEb0vlBzM_g" name="fm" type="_ALqJAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsN4Z-nEEe2dEb0vlBzM_g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsN4aOnEEe2dEb0vlBzM_g" type="_AMcMIOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsN4aenEEe2dEb0vlBzM_g" name="setGraphFileName" specification="_AMeBUOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsN4aunEEe2dEb0vlBzM_g" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsN4a-nEEe2dEb0vlBzM_g" name="verifyGraphFileName" specification="_AMeoYenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsN4bOnEEe2dEb0vlBzM_g" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsN4benEEe2dEb0vlBzM_g" name="readGraphFile" specification="_AMfPcOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsN4bunEEe2dEb0vlBzM_g" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsN4b-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsOfcOnEEe2dEb0vlBzM_g" name="getInputGraphFileName" specification="_AMf2gOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsOfcenEEe2dEb0vlBzM_g" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsOfcunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsOfc-nEEe2dEb0vlBzM_g" name="readGraphFileContents" specification="_AMgdkOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsOfdOnEEe2dEb0vlBzM_g" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsOfdenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsOfdunEEe2dEb0vlBzM_g" name="printVerboseMessage" specification="_AMgdk-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsOfd-nEEe2dEb0vlBzM_g" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsOfeOnEEe2dEb0vlBzM_g" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsOfeenEEe2dEb0vlBzM_g" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AMeBUOnEEe2dEb0vlBzM_g" name="setGraphFileName" visibility="private" method="_AsN4aenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AMeoYOnEEe2dEb0vlBzM_g" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AMeoYenEEe2dEb0vlBzM_g" name="verifyGraphFileName" visibility="private" method="_AsN4a-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AMeoYunEEe2dEb0vlBzM_g" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AMfPcOnEEe2dEb0vlBzM_g" name="readGraphFile" method="_AsN4benEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AMfPcenEEe2dEb0vlBzM_g" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AMfPcunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AMf2gOnEEe2dEb0vlBzM_g" name="getInputGraphFileName" visibility="private" method="_AsOfcOnEEe2dEb0vlBzM_g" raisedException="_ApWKkunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AMf2genEEe2dEb0vlBzM_g" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AMf2gunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AMgdkOnEEe2dEb0vlBzM_g" name="readGraphFileContents" visibility="private" method="_AsOfc-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AMgdkenEEe2dEb0vlBzM_g" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AMgdkunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AMgdk-nEEe2dEb0vlBzM_g" name="printVerboseMessage" visibility="private" method="_AsOfdunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AMhEoOnEEe2dEb0vlBzM_g" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AMhEoenEEe2dEb0vlBzM_g" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AMhEounEEe2dEb0vlBzM_g" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AnAoQ-nEEe2dEb0vlBzM_g" name="InputGraphFile" method="_AsN4YunEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AnAoRenEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AnAoRunEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AnAoROnEEe2dEb0vlBzM_g" name="fm" type="_ALqJAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnAoR-nEEe2dEb0vlBzM_g" type="_AMcMIOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AnBPUOnEEe2dEb0vlBzM_g" name="InputGraphFile" method="_AsN4ZenEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AnBPU-nEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AnBPVOnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AnBPUenEEe2dEb0vlBzM_g" name="fm" type="_ALqJAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnBPUunEEe2dEb0vlBzM_g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnBPVenEEe2dEb0vlBzM_g" type="_AMcMIOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AMjg4OnEEe2dEb0vlBzM_g" name="InstructionTimeSlot">
              <generalization xmi:id="_AnB2YOnEEe2dEb0vlBzM_g" general="_AOLRgOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aqxt8enEEe2dEb0vlBzM_g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aqxt8unEEe2dEb0vlBzM_g" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsOfeunEEe2dEb0vlBzM_g" name="InstructionTimeSlot" specification="_AMkH8OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsOfe-nEEe2dEb0vlBzM_g" type="_AMjg4OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsOffOnEEe2dEb0vlBzM_g" name="InstructionTimeSlot" specification="_AMkvAOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsOffenEEe2dEb0vlBzM_g" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsOffunEEe2dEb0vlBzM_g" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsOff-nEEe2dEb0vlBzM_g" type="_AMjg4OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsOfgOnEEe2dEb0vlBzM_g" name="InstructionTimeSlot" specification="_AMlWEOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsOfgenEEe2dEb0vlBzM_g" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AsOfgunEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsOfg-nEEe2dEb0vlBzM_g" type="_AMjg4OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AMkH8OnEEe2dEb0vlBzM_g" name="InstructionTimeSlot" method="_AsOfeunEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AMkH8enEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AMkH8unEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AMkH8-nEEe2dEb0vlBzM_g" type="_AMjg4OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AMkvAOnEEe2dEb0vlBzM_g" name="InstructionTimeSlot" visibility="package" method="_AsOffOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AMkvA-nEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AMkvBOnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AMkvAenEEe2dEb0vlBzM_g" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AMkvAunEEe2dEb0vlBzM_g" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AMkvBenEEe2dEb0vlBzM_g" type="_AMjg4OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AMlWEOnEEe2dEb0vlBzM_g" name="InstructionTimeSlot" visibility="package" method="_AsOfgOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AMlWEunEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AMlWE-nEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AMlWEenEEe2dEb0vlBzM_g" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AMl9IOnEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AMlWFOnEEe2dEb0vlBzM_g" type="_AMjg4OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AMmkMOnEEe2dEb0vlBzM_g" name="LatencyAnalysis">
              <ownedComment xmi:id="_AtV5xunEEe2dEb0vlBzM_g">
                <body>@author sgoddard2&#xD;
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_AqyVAOnEEe2dEb0vlBzM_g" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_AqyVAenEEe2dEb0vlBzM_g" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AqyVA-nEEe2dEb0vlBzM_g" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aqy8EenEEe2dEb0vlBzM_g" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aqy8EunEEe2dEb0vlBzM_g" name="latencyReport" visibility="private" type="_ALaRYOnEEe2dEb0vlBzM_g" association="_AuE5kenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AqzjIOnEEe2dEb0vlBzM_g" name="program" visibility="private" type="_AQ084OnEEe2dEb0vlBzM_g" association="_AuE5lOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AqzjIunEEe2dEb0vlBzM_g" name="workload" visibility="private" type="_ARd2EOnEEe2dEb0vlBzM_g" association="_AuFgounEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AqzjJOnEEe2dEb0vlBzM_g" name="programTable" visibility="private" type="_ANR5oOnEEe2dEb0vlBzM_g" association="_AuGHsenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aq0KMenEEe2dEb0vlBzM_g" name="nodeIndex" visibility="private" type="_AmRocOnEEe2dEb0vlBzM_g" association="_AuGHtOnEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsPGgOnEEe2dEb0vlBzM_g" name="LatencyAnalysis" specification="_AnDrkOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsPGgenEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsPGgunEEe2dEb0vlBzM_g" type="_AMmkMOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = warp.toProgram();&#xD;
 this.workload = warp.toWorkload();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsPGg-nEEe2dEb0vlBzM_g" name="LatencyAnalysis" specification="_AnDrlenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsPGhOnEEe2dEb0vlBzM_g" name="program" type="_AQ084OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsPGhenEEe2dEb0vlBzM_g" type="_AMmkMOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsPGhunEEe2dEb0vlBzM_g" name="latencyReport" specification="_AMoZYOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsPGh-nEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>/*&#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
&#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {&#xD;
   var time = 0;&#xD;
&#xD;
   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   /* get snk of last link in the flow, which is also the Flow snk node */&#xD;
   String snk = nodes[flowSnkIndex];&#xD;
   /* get the src of last link in the flow */&#xD;
   String src = nodes[flowSnkIndex - 1];&#xD;
   /* get (column) indexes into programTable of these nodes */&#xD;
   var snkIndex = nodeIndex.get(snk);&#xD;
   var srcIndex = nodeIndex.get(src);&#xD;
   /* get the array containing the number of transmissions required for each link in the flow */&#xD;
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
   /* get the number of transmission required for the last link in the flow */&#xD;
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
   var instance = 0;&#xD;
   while (time &lt; workload.getHyperPeriod()) {&#xD;
     /* get next release time and absolute deadline of the flow */&#xD;
     var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
     // var latency = 0;&#xD;
     time = releaseTime;&#xD;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
     while (time &lt; nextReleaseTime) {&#xD;
       /* get instruction strings at these to locations */&#xD;
       String instr1 = programTable.get(time, srcIndex);&#xD;
       String instr2 = programTable.get(time, snkIndex);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
       if (numTxProcessed == numTxRequired) {&#xD;
         /*&#xD;
          * all required Tx attempts have been made compute and record latency&#xD;
          */&#xD;
         var latency = time - releaseTime + 1;&#xD;
         // report latency&#xD;
         String latencyMsg =&#xD;
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
         if (latency > deadline) {&#xD;
           /* deadline missed, so color the text red */&#xD;
           latencyMsg += DEADLINE_MISS;&#xD;
         }&#xD;
         latencyMsg += &quot;\n&quot;;&#xD;
         latencyReport.add(latencyMsg);&#xD;
         time = nextReleaseTime;&#xD;
       } else {&#xD;
         time++;&#xD;
       }&#xD;
&#xD;
     }&#xD;
     if (numTxProcessed &lt; numTxRequired) {&#xD;
       /*&#xD;
        * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
        * printed with the schedulers built&#xD;
        */&#xD;
       String latencyMsg =&#xD;
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
               flowName, instance);&#xD;
       latencyReport.add(latencyMsg);&#xD;
     }&#xD;
     instance++;&#xD;
   }&#xD;
   String flowSeparator = FLOW_SEPARATOR;&#xD;
   latencyReport.add(flowSeparator);&#xD;
 }&#xD;
 return latencyReport;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsPGiOnEEe2dEb0vlBzM_g" name="numMatchingTx" specification="_AMpAcOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsPGienEEe2dEb0vlBzM_g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsPGiunEEe2dEb0vlBzM_g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsPGi-nEEe2dEb0vlBzM_g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsPGjOnEEe2dEb0vlBzM_g" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsPGjenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var dsl = new WarpDSL();&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AMoZYOnEEe2dEb0vlBzM_g" name="latencyReport" method="_AsPGhunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnESoOnEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AMpAcOnEEe2dEb0vlBzM_g" name="numMatchingTx" method="_AsPGiOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AMpAcenEEe2dEb0vlBzM_g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AMpAcunEEe2dEb0vlBzM_g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AMpAc-nEEe2dEb0vlBzM_g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AMpAdOnEEe2dEb0vlBzM_g" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AMpAdenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AnDrkOnEEe2dEb0vlBzM_g" name="LatencyAnalysis" visibility="package" method="_AsPGgOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AnDrkunEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AnDrk-nEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AnDrkenEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnDrlOnEEe2dEb0vlBzM_g" type="_AMmkMOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AnDrlenEEe2dEb0vlBzM_g" name="LatencyAnalysis" visibility="package" method="_AsPGg-nEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AnDrl-nEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AnDrmOnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AnDrlunEEe2dEb0vlBzM_g" name="program" type="_AQ084OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnDrmenEEe2dEb0vlBzM_g" type="_AMmkMOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AMsq0OnEEe2dEb0vlBzM_g" name="LatencyVisualization">
              <ownedComment xmi:id="_AtV5x-nEEe2dEb0vlBzM_g">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2022 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.3&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_AnFgwOnEEe2dEb0vlBzM_g" general="_AOPi8OnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aq0xQenEEe2dEb0vlBzM_g" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aq0xQunEEe2dEb0vlBzM_g" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aq0xQ-nEEe2dEb0vlBzM_g" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aq1YUOnEEe2dEb0vlBzM_g" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aq1YUenEEe2dEb0vlBzM_g" name="warp" visibility="private" type="_ANjmcOnEEe2dEb0vlBzM_g" association="_AuGuwenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aq1YU-nEEe2dEb0vlBzM_g" name="la" visibility="private" type="_AMmkMOnEEe2dEb0vlBzM_g" association="_AuHV0enEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsPtkOnEEe2dEb0vlBzM_g" name="LatencyVisualization" specification="_AnE5sOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsPtkenEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsPtkunEEe2dEb0vlBzM_g" type="_AMsq0OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AnE5sOnEEe2dEb0vlBzM_g" name="LatencyVisualization" visibility="package" method="_AsPtkOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AnE5sunEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AnE5s-nEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AnE5senEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnE5tOnEEe2dEb0vlBzM_g" type="_AMsq0OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AMvHEOnEEe2dEb0vlBzM_g" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_ApZ08OnEEe2dEb0vlBzM_g" client="_AMvHEOnEEe2dEb0vlBzM_g" supplier="_AmlKcOnEEe2dEb0vlBzM_g" contract="_AmlKcOnEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsPtk-nEEe2dEb0vlBzM_g" name="compare" specification="_ApacAenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsPtlOnEEe2dEb0vlBzM_g" name="obj1" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsPtlenEEe2dEb0vlBzM_g" name="obj2" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsPtlunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ApacAenEEe2dEb0vlBzM_g" name="compare" method="_AsPtk-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ApbDEOnEEe2dEb0vlBzM_g" name="obj1" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_ApbDEenEEe2dEb0vlBzM_g" name="obj2" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_ApbDEunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AMxjUOnEEe2dEb0vlBzM_g" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_ApbqIunEEe2dEb0vlBzM_g" client="_AMxjUOnEEe2dEb0vlBzM_g" supplier="_AmlKcOnEEe2dEb0vlBzM_g" contract="_AmlKcOnEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsPtl-nEEe2dEb0vlBzM_g" name="compare" specification="_ApcRMenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsPtmOnEEe2dEb0vlBzM_g" name="obj1" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsPtmenEEe2dEb0vlBzM_g" name="obj2" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsPtmunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ApcRMenEEe2dEb0vlBzM_g" name="compare" method="_AsPtl-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Apc4QOnEEe2dEb0vlBzM_g" name="obj1" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Apc4QenEEe2dEb0vlBzM_g" name="obj2" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Apc4QunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AMzYgOnEEe2dEb0vlBzM_g" name="Node">
              <generalization xmi:id="_AnHV9OnEEe2dEb0vlBzM_g" general="_APdq8OnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aq1_YOnEEe2dEb0vlBzM_g" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aq1_YenEEe2dEb0vlBzM_g" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aq1_YunEEe2dEb0vlBzM_g" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aq1_Y-nEEe2dEb0vlBzM_g" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aq2mcOnEEe2dEb0vlBzM_g" name="edges" type="_AmS2kOnEEe2dEb0vlBzM_g" isReadOnly="true" association="_AuHV1OnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aq2mcunEEe2dEb0vlBzM_g" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aq3NgOnEEe2dEb0vlBzM_g" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_ApdfUOnEEe2dEb0vlBzM_g" client="_AMzYgOnEEe2dEb0vlBzM_g" supplier="_Ao764unEEe2dEb0vlBzM_g" contract="_Ao764unEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsQUoOnEEe2dEb0vlBzM_g" name="Node" specification="_AM0moOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsQUoenEEe2dEb0vlBzM_g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsQUounEEe2dEb0vlBzM_g" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsQUo-nEEe2dEb0vlBzM_g" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsQUpOnEEe2dEb0vlBzM_g" type="_AMzYgOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsQUpenEEe2dEb0vlBzM_g" name="compareTo" specification="_AnGu4OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsQUpunEEe2dEb0vlBzM_g" name="node" type="_AMzYgOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsQUp-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsQUqOnEEe2dEb0vlBzM_g" name="toString" specification="_AM10wOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsQUqenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsQUqunEEe2dEb0vlBzM_g" name="addEdge" specification="_AnHV8unEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsQUq-nEEe2dEb0vlBzM_g" name="edge" type="_ALd7wOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsQUrOnEEe2dEb0vlBzM_g" name="addConflict" specification="_AM2b0unEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsQUrenEEe2dEb0vlBzM_g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsQUrunEEe2dEb0vlBzM_g" name="numEdges" specification="_AM3C4enEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsQUr-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsQUsOnEEe2dEb0vlBzM_g" name="print" specification="_AM3p8OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsQUsenEEe2dEb0vlBzM_g" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsQUsunEEe2dEb0vlBzM_g" name="print" specification="_AM4RAunEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AM0moOnEEe2dEb0vlBzM_g" name="Node" visibility="package" method="_AsQUoOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AM1NsunEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AM1Ns-nEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AM0moenEEe2dEb0vlBzM_g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AM1NsOnEEe2dEb0vlBzM_g" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AM1NsenEEe2dEb0vlBzM_g" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AM1NtOnEEe2dEb0vlBzM_g" type="_AMzYgOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AM10wOnEEe2dEb0vlBzM_g" name="toString" method="_AsQUqOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AM10wenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AM2b0unEEe2dEb0vlBzM_g" name="addConflict" method="_AsQUrOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AM3C4OnEEe2dEb0vlBzM_g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AM3C4enEEe2dEb0vlBzM_g" name="numEdges" method="_AsQUrunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AM3C4unEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AM3p8OnEEe2dEb0vlBzM_g" name="print" method="_AsQUsOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AM3p8enEEe2dEb0vlBzM_g" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AM4RAunEEe2dEb0vlBzM_g" name="print" method="_AsQUsunEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AnGu4OnEEe2dEb0vlBzM_g" name="compareTo" method="_AsQUpenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnGu4enEEe2dEb0vlBzM_g" name="node" type="_AMzYgOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnGu4unEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AnHV8unEEe2dEb0vlBzM_g" name="addEdge" method="_AsQUqunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnHV8-nEEe2dEb0vlBzM_g" name="edge" type="_ALd7wOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AM77YOnEEe2dEb0vlBzM_g" name="NodeMap">
              <ownedComment xmi:id="_AtWg0OnEEe2dEb0vlBzM_g">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_AnH9AOnEEe2dEb0vlBzM_g" general="_AKPzwOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aq3NgenEEe2dEb0vlBzM_g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aq3NgunEEe2dEb0vlBzM_g" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AM9JgOnEEe2dEb0vlBzM_g" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_AtWg0enEEe2dEb0vlBzM_g">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_AnJLJunEEe2dEb0vlBzM_g" general="_AO8tkOnEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsQ7sOnEEe2dEb0vlBzM_g" name="NonPreemptiveSchedule" specification="_AnJLIOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsQ7senEEe2dEb0vlBzM_g" name="poset" type="_ASH9YOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsQ7sunEEe2dEb0vlBzM_g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsQ7s-nEEe2dEb0vlBzM_g" type="_AM9JgOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AnJLIOnEEe2dEb0vlBzM_g" name="NonPreemptiveSchedule" visibility="package" method="_AsQ7sOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AnJLI-nEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AnJLJOnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AnJLIenEEe2dEb0vlBzM_g" name="poset" type="_ASH9YOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnJLIunEEe2dEb0vlBzM_g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnJLJenEEe2dEb0vlBzM_g" type="_AM9JgOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AM-XoOnEEe2dEb0vlBzM_g" name="NotImplentedVisualization">
              <generalization xmi:id="_AnJyMOnEEe2dEb0vlBzM_g" general="_AOPi8OnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aq30kOnEEe2dEb0vlBzM_g" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aq30kenEEe2dEb0vlBzM_g" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aq30kunEEe2dEb0vlBzM_g" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aq30k-nEEe2dEb0vlBzM_g" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aq30lOnEEe2dEb0vlBzM_g" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aq30lenEEe2dEb0vlBzM_g" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsQ7tOnEEe2dEb0vlBzM_g" name="NotImplentedVisualization" specification="_AM--sOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsQ7tenEEe2dEb0vlBzM_g" type="_AM-XoOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsQ7tunEEe2dEb0vlBzM_g" name="NotImplentedVisualization" specification="_AM_lwOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsQ7t-nEEe2dEb0vlBzM_g" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsQ7uOnEEe2dEb0vlBzM_g" type="_AM-XoOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsQ7uenEEe2dEb0vlBzM_g" name="visualization" specification="_ANAM0OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsQ7uunEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AM--sOnEEe2dEb0vlBzM_g" name="NotImplentedVisualization" visibility="package" method="_AsQ7tOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AM--senEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AM--sunEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AM--s-nEEe2dEb0vlBzM_g" type="_AM-XoOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AM_lwOnEEe2dEb0vlBzM_g" name="NotImplentedVisualization" visibility="package" method="_AsQ7tunEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AM_lwunEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AM_lw-nEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AM_lwenEEe2dEb0vlBzM_g" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AM_lxOnEEe2dEb0vlBzM_g" type="_AM-XoOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ANAM0OnEEe2dEb0vlBzM_g" name="visualization" method="_AsQ7uenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnJLJ-nEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ANCCAOnEEe2dEb0vlBzM_g" name="PeriodComparator">
              <interfaceRealization xmi:id="_ApetcOnEEe2dEb0vlBzM_g" client="_ANCCAOnEEe2dEb0vlBzM_g" supplier="_AmlKcOnEEe2dEb0vlBzM_g" contract="_AmlKcOnEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsQ7u-nEEe2dEb0vlBzM_g" name="compare" specification="_ApfUgenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsQ7vOnEEe2dEb0vlBzM_g" name="obj1" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsQ7venEEe2dEb0vlBzM_g" name="obj2" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsQ7vunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ApfUgenEEe2dEb0vlBzM_g" name="compare" method="_AsQ7u-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ApfUgunEEe2dEb0vlBzM_g" name="obj1" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_ApfUg-nEEe2dEb0vlBzM_g" name="obj2" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Apf7kOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ANEeQOnEEe2dEb0vlBzM_g" name="PreemptiveSchedule">
              <ownedComment xmi:id="_AtWg0unEEe2dEb0vlBzM_g">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_AnODpOnEEe2dEb0vlBzM_g" general="_AO8tkOnEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsRiwOnEEe2dEb0vlBzM_g" name="PreemptiveSchedule" specification="_AnKZQOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsRiwenEEe2dEb0vlBzM_g" name="poset" type="_ASH9YOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsRiwunEEe2dEb0vlBzM_g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsRiw-nEEe2dEb0vlBzM_g" type="_ANEeQOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsRixOnEEe2dEb0vlBzM_g" name="continueSearch" specification="_AnKZRunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsRixenEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsRixunEEe2dEb0vlBzM_g" name="activation" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsRix-nEEe2dEb0vlBzM_g" type="_ApgioOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsRiyOnEEe2dEb0vlBzM_g" name="toProgram" specification="_ANFsYOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsRiyenEEe2dEb0vlBzM_g" type="_ANR5oOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsRiyunEEe2dEb0vlBzM_g" name="findPreeptiveChannelAndTime" specification="_AnLnYOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsRiy-nEEe2dEb0vlBzM_g" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsRizOnEEe2dEb0vlBzM_g" name="schedulableObject" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsRizenEEe2dEb0vlBzM_g" type="_ApgioOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsSJ0OnEEe2dEb0vlBzM_g" name="findAdditionalTime" specification="_AnLnY-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsSJ0enEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsSJ0unEEe2dEb0vlBzM_g" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsSJ0-nEEe2dEb0vlBzM_g" name="a1" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsSJ1OnEEe2dEb0vlBzM_g" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsSJ1enEEe2dEb0vlBzM_g" type="_AmS2kOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsSJ1unEEe2dEb0vlBzM_g" name="findMaxTimeAvailable" specification="_AnM1gOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsSJ1-nEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsSJ2OnEEe2dEb0vlBzM_g" name="schedulableObject" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsSJ2enEEe2dEb0vlBzM_g" type="_ApgioOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsSJ2unEEe2dEb0vlBzM_g" name="availableTime" specification="_AnM1g-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsSJ2-nEEe2dEb0vlBzM_g" name="a1" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsSJ3OnEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsSJ3enEEe2dEb0vlBzM_g" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsSJ3unEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsSJ3-nEEe2dEb0vlBzM_g" name="addToSchedule" specification="_AnNckOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsSJ4OnEEe2dEb0vlBzM_g" name="next" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsSJ4enEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsSJ4unEEe2dEb0vlBzM_g" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsSJ4-nEEe2dEb0vlBzM_g" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsSJ5OnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsSJ5enEEe2dEb0vlBzM_g" name="addToSchedule" specification="_AnNclunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsSJ5unEEe2dEb0vlBzM_g" name="next" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsSJ5-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ANFsYOnEEe2dEb0vlBzM_g" name="toProgram" method="_AsRiyOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnLAVOnEEe2dEb0vlBzM_g" type="_ANR5oOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AnKZQOnEEe2dEb0vlBzM_g" name="PreemptiveSchedule" visibility="package" method="_AsRiwOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AnKZQ-nEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AnKZROnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AnKZQenEEe2dEb0vlBzM_g" name="poset" type="_ASH9YOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnKZQunEEe2dEb0vlBzM_g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnKZRenEEe2dEb0vlBzM_g" type="_ANEeQOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AnKZRunEEe2dEb0vlBzM_g" name="continueSearch" visibility="protected" method="_AsRixOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnKZR-nEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnLAUOnEEe2dEb0vlBzM_g" name="activation" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_ApgiounEEe2dEb0vlBzM_g" type="_ApgioOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AnLnYOnEEe2dEb0vlBzM_g" name="findPreeptiveChannelAndTime" visibility="private" method="_AsRiyunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnLnYenEEe2dEb0vlBzM_g" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnLnYunEEe2dEb0vlBzM_g" name="schedulableObject" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AphJsOnEEe2dEb0vlBzM_g" type="_ApgioOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AnLnY-nEEe2dEb0vlBzM_g" name="findAdditionalTime" visibility="private" method="_AsSJ0OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnLnZOnEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnLnZenEEe2dEb0vlBzM_g" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnLnZunEEe2dEb0vlBzM_g" name="a1" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnLnZ-nEEe2dEb0vlBzM_g" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AphJsenEEe2dEb0vlBzM_g" type="_AmS2kOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AnM1gOnEEe2dEb0vlBzM_g" name="findMaxTimeAvailable" visibility="private" method="_AsSJ1unEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnM1genEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnM1gunEEe2dEb0vlBzM_g" name="schedulableObject" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AphJsunEEe2dEb0vlBzM_g" type="_ApgioOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AnM1g-nEEe2dEb0vlBzM_g" name="availableTime" visibility="private" method="_AsSJ2unEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnM1hOnEEe2dEb0vlBzM_g" name="a1" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnM1henEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnM1hunEEe2dEb0vlBzM_g" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnM1h-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AnNckOnEEe2dEb0vlBzM_g" name="addToSchedule" visibility="private" method="_AsSJ3-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnNckenEEe2dEb0vlBzM_g" name="next" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnNckunEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnNck-nEEe2dEb0vlBzM_g" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnNclOnEEe2dEb0vlBzM_g" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnNclenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AnNclunEEe2dEb0vlBzM_g" name="addToSchedule" visibility="protected" method="_AsSJ5enEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnNcl-nEEe2dEb0vlBzM_g" name="next" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnODoOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ANNBIOnEEe2dEb0vlBzM_g" name="PriorityComparator">
              <interfaceRealization xmi:id="_AphwwOnEEe2dEb0vlBzM_g" client="_ANNBIOnEEe2dEb0vlBzM_g" supplier="_AmlKcOnEEe2dEb0vlBzM_g" contract="_AmlKcOnEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsSw4OnEEe2dEb0vlBzM_g" name="compare" specification="_ApiX0OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsSw4enEEe2dEb0vlBzM_g" name="obj1" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsSw4unEEe2dEb0vlBzM_g" name="obj2" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsSw4-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ApiX0OnEEe2dEb0vlBzM_g" name="compare" method="_AsSw4OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ApiX0enEEe2dEb0vlBzM_g" name="obj1" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_ApiX0unEEe2dEb0vlBzM_g" name="obj2" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_ApiX0-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ANQEcOnEEe2dEb0vlBzM_g" name="WarpPoset">
              <ownedComment xmi:id="_AtWg0-nEEe2dEb0vlBzM_g">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_AnPRxenEEe2dEb0vlBzM_g" general="_ASH9YOnEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsSw5OnEEe2dEb0vlBzM_g" name="WarpPoset" specification="_AnPRwOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsSw5enEEe2dEb0vlBzM_g" name="workload" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsSw5unEEe2dEb0vlBzM_g" type="_ANQEcOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsSw5-nEEe2dEb0vlBzM_g" name="findCoordinator" specification="_Api-4unEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsSw6OnEEe2dEb0vlBzM_g" name="nodesInFlow" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsSw6enEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AnPRwOnEEe2dEb0vlBzM_g" name="WarpPoset" visibility="package" method="_AsSw5OnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AnPRwunEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AnPRw-nEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AnPRwenEEe2dEb0vlBzM_g" name="workload" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnPRxOnEEe2dEb0vlBzM_g" type="_ANQEcOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Api-4unEEe2dEb0vlBzM_g" name="findCoordinator" visibility="protected" method="_AsSw5-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Api-4-nEEe2dEb0vlBzM_g" name="nodesInFlow" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Api-5OnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ANR5oOnEEe2dEb0vlBzM_g" name="ProgramSchedule">
              <generalization xmi:id="_AnP40OnEEe2dEb0vlBzM_g" general="_AOy8kOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aq4boOnEEe2dEb0vlBzM_g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aq4boenEEe2dEb0vlBzM_g" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsSw6unEEe2dEb0vlBzM_g" name="ProgramSchedule" specification="_ANTHwOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsSw6-nEEe2dEb0vlBzM_g" type="_ANR5oOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsSw7OnEEe2dEb0vlBzM_g" name="ProgramSchedule" specification="_ANTu0OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsSw7enEEe2dEb0vlBzM_g" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsSw7unEEe2dEb0vlBzM_g" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsSw7-nEEe2dEb0vlBzM_g" type="_ANR5oOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ANTHwOnEEe2dEb0vlBzM_g" name="ProgramSchedule" method="_AsSw6unEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_ANTHwenEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ANTHwunEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ANTHw-nEEe2dEb0vlBzM_g" type="_ANR5oOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ANTu0OnEEe2dEb0vlBzM_g" name="ProgramSchedule" visibility="package" method="_AsSw7OnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_ANTu0-nEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ANTu1OnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ANTu0enEEe2dEb0vlBzM_g" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ANTu0unEEe2dEb0vlBzM_g" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ANUV4OnEEe2dEb0vlBzM_g" type="_ANR5oOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ANU88OnEEe2dEb0vlBzM_g" name="ProgramVisualization">
              <ownedComment xmi:id="_AtWg1OnEEe2dEb0vlBzM_g">
                <body>Allows the user to generate a GUI to visualize WARP data given by .dsl files.&#xD;
If applicable, the GUI will contain minimum packet reception rate, End-to-End&#xD;
transmission reliability,&#xD;
and number of channels.&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_AnRG8-nEEe2dEb0vlBzM_g" general="_AOPi8OnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aq4bounEEe2dEb0vlBzM_g" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aq5CsOnEEe2dEb0vlBzM_g" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aq5CsenEEe2dEb0vlBzM_g" name="sourceCode" visibility="private" type="_ANR5oOnEEe2dEb0vlBzM_g" association="_AuH84enEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aq5Cs-nEEe2dEb0vlBzM_g" name="program" visibility="private" type="_AQ084OnEEe2dEb0vlBzM_g" association="_AuIj8enEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aq5pwOnEEe2dEb0vlBzM_g" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsTX8OnEEe2dEb0vlBzM_g" name="ProgramVisualization" specification="_AnQf4enEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsTX8enEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsTX8unEEe2dEb0vlBzM_g" type="_ANU88OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 System.out.println(&quot;Creating program visualization&quot;);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsTX8-nEEe2dEb0vlBzM_g" name="displayVisualization" specification="_ANWyIOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsTX9OnEEe2dEb0vlBzM_g" type="_AMYhwOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>System.out.println(&quot;Creating gui in program visualization&quot;);&#xD;
 return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsTX9enEEe2dEb0vlBzM_g" name="createHeader" specification="_ANXZMunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsTX9unEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(createTitle());&#xD;
 header.add(String.format(&quot;Scheduler Name: %s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /*&#xD;
  * The following parameters are output based on a special schedule or the fault&#xD;
  * model&#xD;
  */&#xD;
 if (program.getNumFaults() > 0) { // only specify when deterministic fault model is assumed&#xD;
   header.add(String.format(&quot;numFaults: %d\n&quot;, program.getNumFaults()));&#xD;
 }&#xD;
 header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
 header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(program.getE2e())));&#xD;
 header.add(String.format(&quot;nChannels: %d\n&quot;, program.getNumChannels()));&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsTX9-nEEe2dEb0vlBzM_g" name="createFooter" specification="_ANYAQ-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsTX-OnEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsTX-enEEe2dEb0vlBzM_g" name="createColumnHeader" specification="_ANZOYOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsTX-unEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AsTX--nEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
 String[] columnNames = new String[orderedNodes.length + 1];&#xD;
 columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first&#xD;
 /* loop through the node names, adding each to the header */&#xD;
 for (int i = 0; i &lt; orderedNodes.length; i++) {&#xD;
   columnNames[i + 1] = orderedNodes[i];&#xD;
 }&#xD;
 return columnNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsTX_OnEEe2dEb0vlBzM_g" name="createVisualizationData" specification="_ANZ1c-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsTX_enEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AsTX_unEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
   int numRows = sourceCode.getNumRows();&#xD;
   int numColumns = sourceCode.getNumColumns();&#xD;
   visualizationData = new String[numRows][numColumns + 1];&#xD;
&#xD;
   for (int row = 0; row &lt; numRows; row++) {&#xD;
     visualizationData[row][0] = String.format(&quot;%s&quot;, row);&#xD;
     for (int column = 0; column &lt; numColumns; column++) {&#xD;
       visualizationData[row][column + 1] = sourceCode.get(row, column);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return visualizationData;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsT_AOnEEe2dEb0vlBzM_g" name="createTitle" specification="_ANbDk-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsT_AenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;WARP program for graph %s\n&quot;, program.getName());&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ANWyIOnEEe2dEb0vlBzM_g" name="displayVisualization" method="_AsTX8-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnRG8OnEEe2dEb0vlBzM_g" type="_AMYhwOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ANXZMunEEe2dEb0vlBzM_g" name="createHeader" visibility="protected" method="_AsTX9enEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnRG8enEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ANYAQ-nEEe2dEb0vlBzM_g" name="createFooter" visibility="protected" method="_AsTX9-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnRG8unEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ANZOYOnEEe2dEb0vlBzM_g" name="createColumnHeader" visibility="protected" method="_AsTX-enEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ANZOYenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ANZOYunEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ANZ1c-nEEe2dEb0vlBzM_g" name="createVisualizationData" visibility="protected" method="_AsTX_OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ANacgOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ANacgenEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ANbDk-nEEe2dEb0vlBzM_g" name="createTitle" visibility="private" method="_AsT_AOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtWg1unEEe2dEb0vlBzM_g">
                  <body>Creates a title for the GUI using the name from the program.&#xD;
   * &#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_ANbqoOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AnQf4enEEe2dEb0vlBzM_g" name="ProgramVisualization" visibility="package" method="_AsTX8OnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AnQf4-nEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AnQf5OnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_AtWg1enEEe2dEb0vlBzM_g">
                  <body>Constructor for new ProgramVisualization. Used WARP file as input changes it&#xD;
   * to&#xD;
   * a program and gets the schedule and deadlines met.&#xD;
   * &#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_AnQf4unEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnQf5enEEe2dEb0vlBzM_g" type="_ANU88OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ANeG4OnEEe2dEb0vlBzM_g" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_ApkNAOnEEe2dEb0vlBzM_g" client="_ANeG4OnEEe2dEb0vlBzM_g" supplier="_AmlKcOnEEe2dEb0vlBzM_g" contract="_AmlKcOnEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsT_AunEEe2dEb0vlBzM_g" name="compare" specification="_Apk0EenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsT_A-nEEe2dEb0vlBzM_g" name="obj1" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsT_BOnEEe2dEb0vlBzM_g" name="obj2" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsT_BenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Apk0EenEEe2dEb0vlBzM_g" name="compare" method="_AsT_AunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Apk0EunEEe2dEb0vlBzM_g" name="obj1" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AplbIOnEEe2dEb0vlBzM_g" name="obj2" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AplbIenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ANf8EOnEEe2dEb0vlBzM_g" name="ReleaseTimeQueue">
              <generalization xmi:id="_ANiYUenEEe2dEb0vlBzM_g" general="_ANhxQOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aq5pwunEEe2dEb0vlBzM_g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aq6Q0OnEEe2dEb0vlBzM_g" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsT_BunEEe2dEb0vlBzM_g" name="ReleaseTimeQueue" specification="_ANhKMOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsT_B-nEEe2dEb0vlBzM_g" type="_ANf8EOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsT_COnEEe2dEb0vlBzM_g" name="ReleaseTimeQueue" specification="_AnSVEunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsT_CenEEe2dEb0vlBzM_g" name="schedulableObjects" type="_AnSVEOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsT_CunEEe2dEb0vlBzM_g" type="_ANf8EOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ANhKMOnEEe2dEb0vlBzM_g" name="ReleaseTimeQueue" visibility="package" method="_AsT_BunEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_ANhKMenEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ANhKMunEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ANhKM-nEEe2dEb0vlBzM_g" type="_ANf8EOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AnSVEunEEe2dEb0vlBzM_g" name="ReleaseTimeQueue" visibility="package" method="_AsT_COnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AnS8IOnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AnS8IenEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AnSVE-nEEe2dEb0vlBzM_g" name="schedulableObjects" type="_AnSVEOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnS8IunEEe2dEb0vlBzM_g" type="_ANf8EOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_ANjmcOnEEe2dEb0vlBzM_g" name="WarpInterface">
              <ownedComment xmi:id="_AtWg1-nEEe2dEb0vlBzM_g">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_AnTjMOnEEe2dEb0vlBzM_g" general="_AOtdAOnEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ANkNgOnEEe2dEb0vlBzM_g" name="toWorkload">
                <ownedParameter xmi:id="_AnTjMenEEe2dEb0vlBzM_g" type="_ARd2EOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ANkNgenEEe2dEb0vlBzM_g" name="toProgram">
                <ownedParameter xmi:id="_AnTjMunEEe2dEb0vlBzM_g" type="_AQ084OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ANk0kOnEEe2dEb0vlBzM_g" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_AnTjM-nEEe2dEb0vlBzM_g" type="_AQflsOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ANk0kenEEe2dEb0vlBzM_g" name="toSimulator">
                <ownedParameter xmi:id="_AnTjNOnEEe2dEb0vlBzM_g" type="_AOpLkOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ANlboOnEEe2dEb0vlBzM_g" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_AnUKQOnEEe2dEb0vlBzM_g" type="_AMmkMOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ANlboenEEe2dEb0vlBzM_g" name="toChannelAnalysis">
                <ownedParameter xmi:id="_AnUKQenEEe2dEb0vlBzM_g" type="_AKtt0OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ANmCsOnEEe2dEb0vlBzM_g" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_ANmCsenEEe2dEb0vlBzM_g" name="reliabilitiesMet">
                <ownedParameter xmi:id="_ANmCsunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ANmCs-nEEe2dEb0vlBzM_g" name="deadlinesMet">
                <ownedParameter xmi:id="_ANmCtOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ANn34OnEEe2dEb0vlBzM_g" name="ReliabilityAnalysisTest" visibility="package">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsUmEOnEEe2dEb0vlBzM_g" name="createReliabilityAnalysis" specification="_ApmpQOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsUmEenEEe2dEb0vlBzM_g" name="filename">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsUmEunEEe2dEb0vlBzM_g" name="m" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsUmE-nEEe2dEb0vlBzM_g" name="e2e" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsUmFOnEEe2dEb0vlBzM_g" name="numChanells">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsUmFenEEe2dEb0vlBzM_g" type="_AQflsOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>SystemAttributes.ScheduleChoices choice = SystemAttributes.ScheduleChoices.PRIORITY;&#xD;
		WorkLoad workload = new WorkLoad(m, e2e, filename);&#xD;
		Program program = new Program(workload, numChanells, choice);&#xD;
		ReliabilityAnalysis reliabilityAnalysis = new ReliabilityAnalysis(program);&#xD;
		return reliabilityAnalysis;&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsUmFunEEe2dEb0vlBzM_g" name="testBuildReliabiltyTableExample1a" specification="_ANoe8OnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>ReliabilityAnalysis reliabilityAnalysis = createReliabilityAnalysis(&quot;example1a.txt&quot;, 0.8, 0.99, 16);&#xD;
		ReliabilityTable reliabilityTable = reliabilityAnalysis.getReliabilities();&#xD;
		Double actual = reliabilityTable.get(12, 2);&#xD;
		Double expected = 0.896;&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsUmF-nEEe2dEb0vlBzM_g" name="testBuildReliabilityTableExample1aDifferentM" specification="_ANpGA-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>ReliabilityAnalysis reliabilityAnalysis = createReliabilityAnalysis(&quot;example1a.txt&quot;, 0.75, 0.99, 16);&#xD;
		ReliabilityTable reliabilityTable = reliabilityAnalysis.getReliabilities();&#xD;
		Double actual = reliabilityTable.get(11, 2);&#xD;
		Double expected = 0.5625;&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsUmGOnEEe2dEb0vlBzM_g" name="testBuildReliabilityTableExample1aDifferentE2E" specification="_ANptE-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>ReliabilityAnalysis reliabilityAnalysis = createReliabilityAnalysis(&quot;example1a.txt&quot;, 0.8, 0.9, 16);&#xD;
		ReliabilityTable reliabilityTable = reliabilityAnalysis.getReliabilities();&#xD;
		Double actual = reliabilityTable.get(12, 2);&#xD;
		Double expected = 0.896;&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsUmGenEEe2dEb0vlBzM_g" name="testBuildReliabiltyTableStressTest4" specification="_ANqUI-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>ReliabilityAnalysis reliabilityAnalysis = createReliabilityAnalysis(&quot;stresstest4.txt&quot;, 0.9, 0.9, 16);&#xD;
		ReliabilityTable reliabilityTable = reliabilityAnalysis.getReliabilities();&#xD;
		Double actual = reliabilityTable.get(56, 9);&#xD;
		Double expected = 0.8503056;&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsUmGunEEe2dEb0vlBzM_g" name="testBuildReliabiltyTableStressTest4DifferentM" specification="_ANq7M-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>ReliabilityAnalysis reliabilityAnalysis = createReliabilityAnalysis(&quot;stresstest4.txt&quot;, 0.8, 0.9, 16);&#xD;
		ReliabilityTable reliabilityTable = reliabilityAnalysis.getReliabilities();&#xD;
		Double actual = reliabilityTable.get(7, 4);&#xD;
		Double expected = 0.992;&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsUmG-nEEe2dEb0vlBzM_g" name="testReliabilityTableStressTest4DifferentE2E" specification="_ANriQ-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>ReliabilityAnalysis reliabilityAnalysis = createReliabilityAnalysis(&quot;stresstest4.txt&quot;, 0.9, 0.99, 16);&#xD;
		ReliabilityTable reliabilityTable = reliabilityAnalysis.getReliabilities();&#xD;
		Double actual = reliabilityTable.get(56, 9);&#xD;
		Double expected = 0.8503056;&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsUmHOnEEe2dEb0vlBzM_g" name="testVerifyReliabilitiesExample1a" specification="_ANsJU-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>ReliabilityAnalysis reliabilityAnalysis = createReliabilityAnalysis(&quot;example1a.txt&quot;, 0.8, 0.99, 16);&#xD;
		Boolean actual = reliabilityAnalysis.verifyReliabilities();&#xD;
		Boolean expected = true;&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsUmHenEEe2dEb0vlBzM_g" name="testVerifyReliabilitiesExample1aExample1DifferentM" specification="_ANswY-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>ReliabilityAnalysis reliabilityAnalysis = createReliabilityAnalysis(&quot;example1a.txt&quot;, 0.75, 0.99, 16);&#xD;
		Boolean actual = reliabilityAnalysis.verifyReliabilities();&#xD;
		Boolean expected = true;&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsUmHunEEe2dEb0vlBzM_g" name="testVerifyReliabilitiesExample1aExample1aDifferentE2E" specification="_ANtXc-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>ReliabilityAnalysis reliabilityAnalysis = createReliabilityAnalysis(&quot;example1a.txt&quot;, 0.75, 0.98, 16);&#xD;
		Boolean actual = reliabilityAnalysis.verifyReliabilities();&#xD;
		Boolean expected = false;&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsUmH-nEEe2dEb0vlBzM_g" name="testVerifyReliabilitiesExample1aStressTest4" specification="_ANt-g-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>ReliabilityAnalysis reliabilityAnalysis = createReliabilityAnalysis(&quot;stresstest4.txt&quot;, 0.9, 0.99, 16);&#xD;
		Boolean actual = reliabilityAnalysis.verifyReliabilities();&#xD;
		Boolean expected = true;&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsVNIOnEEe2dEb0vlBzM_g" name="testVerifyReliabilitiesExample1aStressTest4DifferentM" specification="_ANulk-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>ReliabilityAnalysis reliabilityAnalysis = createReliabilityAnalysis(&quot;example1a.txt&quot;, 0.75, 0.99, 16);&#xD;
		Boolean actual = reliabilityAnalysis.verifyReliabilities();&#xD;
		Boolean expected = true;&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsVNIenEEe2dEb0vlBzM_g" name="StressTest4DifferentE2E" specification="_ANvMo-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>ReliabilityAnalysis reliabilityAnalysis = createReliabilityAnalysis(&quot;example1a.txt&quot;, 0.9, 0.98, 16);&#xD;
		Boolean actual = reliabilityAnalysis.verifyReliabilities();&#xD;
		Boolean expected = false;&#xD;
		assertEquals(expected, actual);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ANoe8OnEEe2dEb0vlBzM_g" name="testBuildReliabiltyTableExample1a" visibility="package" method="_AsUmFunEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ANpGA-nEEe2dEb0vlBzM_g" name="testBuildReliabilityTableExample1aDifferentM" visibility="package" method="_AsUmF-nEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ANptE-nEEe2dEb0vlBzM_g" name="testBuildReliabilityTableExample1aDifferentE2E" visibility="package" method="_AsUmGOnEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ANqUI-nEEe2dEb0vlBzM_g" name="testBuildReliabiltyTableStressTest4" visibility="package" method="_AsUmGenEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ANq7M-nEEe2dEb0vlBzM_g" name="testBuildReliabiltyTableStressTest4DifferentM" visibility="package" method="_AsUmGunEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ANriQ-nEEe2dEb0vlBzM_g" name="testReliabilityTableStressTest4DifferentE2E" visibility="package" method="_AsUmG-nEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ANsJU-nEEe2dEb0vlBzM_g" name="testVerifyReliabilitiesExample1a" visibility="package" method="_AsUmHOnEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ANswY-nEEe2dEb0vlBzM_g" name="testVerifyReliabilitiesExample1aExample1DifferentM" visibility="package" method="_AsUmHenEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ANtXc-nEEe2dEb0vlBzM_g" name="testVerifyReliabilitiesExample1aExample1aDifferentE2E" visibility="package" method="_AsUmHunEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ANt-g-nEEe2dEb0vlBzM_g" name="testVerifyReliabilitiesExample1aStressTest4" visibility="package" method="_AsUmH-nEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ANulk-nEEe2dEb0vlBzM_g" name="testVerifyReliabilitiesExample1aStressTest4DifferentM" visibility="package" method="_AsVNIOnEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ANvMo-nEEe2dEb0vlBzM_g" name="StressTest4DifferentE2E" visibility="package" method="_AsVNIenEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ApmpQOnEEe2dEb0vlBzM_g" name="createReliabilityAnalysis" visibility="private" method="_AsUmEOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ApmpQenEEe2dEb0vlBzM_g" name="filename">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ApmpQunEEe2dEb0vlBzM_g" name="m" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_ApmpQ-nEEe2dEb0vlBzM_g" name="e2e" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_ApmpROnEEe2dEb0vlBzM_g" name="numChanells">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ApmpRenEEe2dEb0vlBzM_g" type="_AQflsOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_ANxo4OnEEe2dEb0vlBzM_g" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_AtWg2OnEEe2dEb0vlBzM_g">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ANxo4enEEe2dEb0vlBzM_g" name="minPacketReceptionRate" type="_ApmCMOnEEe2dEb0vlBzM_g" isReadOnly="true"/>
              <ownedAttribute xmi:id="_ANyP8OnEEe2dEb0vlBzM_g" name="e2e" type="_ApmCMOnEEe2dEb0vlBzM_g" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ANy3AOnEEe2dEb0vlBzM_g" name="ReliabilityRow">
              <generalization xmi:id="_AnV_cOnEEe2dEb0vlBzM_g" general="_AOLRgOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aq6Q0enEEe2dEb0vlBzM_g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aq6Q0unEEe2dEb0vlBzM_g" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsVNIunEEe2dEb0vlBzM_g" name="ReliabilityRow" specification="_ANzeEOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsVNI-nEEe2dEb0vlBzM_g" type="_ANy3AOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsVNJOnEEe2dEb0vlBzM_g" name="ReliabilityRow" specification="_ApnQUOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsVNJenEEe2dEb0vlBzM_g" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsVNJunEEe2dEb0vlBzM_g" name="element" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsVNJ-nEEe2dEb0vlBzM_g" type="_ANy3AOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsVNKOnEEe2dEb0vlBzM_g" name="ReliabilityRow" specification="_Apn3Y-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsVNKenEEe2dEb0vlBzM_g" name="rowArray" type="_ApmCMOnEEe2dEb0vlBzM_g">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AsVNKunEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsVNK-nEEe2dEb0vlBzM_g" type="_ANy3AOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ANzeEOnEEe2dEb0vlBzM_g" name="ReliabilityRow" method="_AsVNIunEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_ANzeEenEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ANzeEunEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ANzeE-nEEe2dEb0vlBzM_g" type="_ANy3AOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ApnQUOnEEe2dEb0vlBzM_g" name="ReliabilityRow" visibility="package" method="_AsVNJOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_Apn3YOnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Apn3YenEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ApnQUenEEe2dEb0vlBzM_g" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ApnQUunEEe2dEb0vlBzM_g" name="element" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Apn3YunEEe2dEb0vlBzM_g" type="_ANy3AOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Apn3Y-nEEe2dEb0vlBzM_g" name="ReliabilityRow" visibility="package" method="_AsVNKOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_Apn3ZenEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Apn3ZunEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Apn3ZOnEEe2dEb0vlBzM_g" name="rowArray" type="_ApmCMOnEEe2dEb0vlBzM_g">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Apn3aOnEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Apn3Z-nEEe2dEb0vlBzM_g" type="_ANy3AOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AN16UOnEEe2dEb0vlBzM_g" name="ReliabilityTable">
              <generalization xmi:id="_AnWmgOnEEe2dEb0vlBzM_g" general="_AOy8kOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aq6Q0-nEEe2dEb0vlBzM_g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aq634OnEEe2dEb0vlBzM_g" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsVNLOnEEe2dEb0vlBzM_g" name="ReliabilityTable" specification="_AN2hYOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsV0MOnEEe2dEb0vlBzM_g" type="_AN16UOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsV0MenEEe2dEb0vlBzM_g" name="ReliabilityTable" specification="_AN3IcOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsV0MunEEe2dEb0vlBzM_g" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsV0M-nEEe2dEb0vlBzM_g" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsV0NOnEEe2dEb0vlBzM_g" type="_AN16UOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AN2hYOnEEe2dEb0vlBzM_g" name="ReliabilityTable" method="_AsVNLOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AN2hYenEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AN2hYunEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AN2hY-nEEe2dEb0vlBzM_g" type="_AN16UOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AN3IcOnEEe2dEb0vlBzM_g" name="ReliabilityTable" visibility="package" method="_AsV0MenEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AN3Ic-nEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AN3IdOnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AN3IcenEEe2dEb0vlBzM_g" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AN3IcunEEe2dEb0vlBzM_g" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AN3IdenEEe2dEb0vlBzM_g" type="_AN16UOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AN4WkOnEEe2dEb0vlBzM_g" name="ReliabilityVisualization">
              <ownedComment xmi:id="_AtXH4OnEEe2dEb0vlBzM_g">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program.&#xD;
&lt;p>&#xD;
 *&#xD;
CS2820 Spring 2023 Project: Implement this class to create&#xD;
the file visualization that is requested in Warp.&#xD;
 *&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_AnX0penEEe2dEb0vlBzM_g" general="_AOPi8OnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aq634enEEe2dEb0vlBzM_g" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aq634unEEe2dEb0vlBzM_g" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aq634-nEEe2dEb0vlBzM_g" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aq635OnEEe2dEb0vlBzM_g" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aq635enEEe2dEb0vlBzM_g" name="warp" visibility="private" type="_ANjmcOnEEe2dEb0vlBzM_g" association="_AuJLAOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aq7e8enEEe2dEb0vlBzM_g" name="ra" visibility="private" type="_AQflsOnEEe2dEb0vlBzM_g" association="_AuJLA-nEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsV0NenEEe2dEb0vlBzM_g" name="ReliabilityVisualization" specification="_AnXNkenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsV0NunEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsV0N-nEEe2dEb0vlBzM_g" type="_AN4WkOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsV0OOnEEe2dEb0vlBzM_g" name="createTitle" specification="_AN49oOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsV0OenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&#xD;
				OBJECT_NAME + &quot; for graph &quot; + warp.getName() + &quot; created with the following parameters:&quot; + &quot;\n&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsV0OunEEe2dEb0vlBzM_g" name="displayVisualization" specification="_AN5ksenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsV0O-nEEe2dEb0vlBzM_g" type="_AMYhwOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsV0POnEEe2dEb0vlBzM_g" name="createColumnHeader" specification="_AN6y0OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsV0PenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AsV0PunEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>WorkLoad wl = this.warp.toProgram().toWorkLoad();&#xD;
		// get the flow names in priority order from the workload&#xD;
		ArrayList&lt;String> flows = wl.getFlowNamesInPriorityOrder();&#xD;
		ArrayList&lt;String> output = new ArrayList&lt;String>();&#xD;
&#xD;
		// loop through each flow and get each flows nodes from getNodesInFlow and add&#xD;
		// them to output in the format &quot;flowName:node[i]&quot;&#xD;
		for (int i = 0; i &lt; flows.size(); i++) {&#xD;
			String[] nodes = wl.getNodesInFlow(flows.get(i));&#xD;
			for (int j = 0; j &lt; nodes.length; j++) {&#xD;
				output.add(flows.get(i) + &quot;:&quot; + nodes[j]);&#xD;
			}&#xD;
		}&#xD;
		// cast output to a string array&#xD;
		String[] columnNames = output.toArray(new String[0]);&#xD;
		return columnNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsV0P-nEEe2dEb0vlBzM_g" name="createHeader" specification="_AN7Z4-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsV0QOnEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(createTitle());&#xD;
		header.add(&quot;Scheduler Name: &quot; + warp.getSchedulerName() + &quot;\n&quot;);&#xD;
		header.add(&quot;M: &quot; + warp.getMinPacketReceptionRate() + &quot;\n&quot;);&#xD;
		header.add(&quot;E2E: &quot; + warp.getE2e() + &quot;\n&quot;);&#xD;
		header.add(&quot;nChannels: &quot; + warp.getNumChannels() + &quot;\n&quot;);&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsWbQOnEEe2dEb0vlBzM_g" name="createVisualizationData" specification="_AN8A8unEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsWbQenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AsWbQunEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>ReliabilityTable reliabilities = this.ra.getReliabilities();&#xD;
		// turn the reliability table into 2d a string array&#xD;
		String[][] data = new String[reliabilities.getNumRows()][reliabilities.getNumColumns()];&#xD;
		for (int i = 0; i &lt; reliabilities.getNumRows(); i++) {&#xD;
			for (int j = 0; j &lt; reliabilities.getNumColumns(); j++) {&#xD;
				data[i][j] = reliabilities.get(i, j).toString();&#xD;
			}&#xD;
		}&#xD;
		return data;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AN49oOnEEe2dEb0vlBzM_g" name="createTitle" visibility="private" method="_AsV0OOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtXH4enEEe2dEb0vlBzM_g">
                  <body>createTitle creates the title for the reliability analysis file which is the&#xD;
	 * object name and the graph name</body>
                </ownedComment>
                <ownedParameter xmi:id="_AN5ksOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AN5ksenEEe2dEb0vlBzM_g" name="displayVisualization" method="_AsV0OunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnX0o-nEEe2dEb0vlBzM_g" type="_AMYhwOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AN6y0OnEEe2dEb0vlBzM_g" name="createColumnHeader" visibility="protected" method="_AsV0POnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AN6y0enEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AN6y0unEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AN7Z4-nEEe2dEb0vlBzM_g" name="createHeader" visibility="protected" method="_AsV0P-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnX0pOnEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AN8A8unEEe2dEb0vlBzM_g" name="createVisualizationData" visibility="protected" method="_AsWbQOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AN8A8-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AN8A9OnEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AnXNkenEEe2dEb0vlBzM_g" name="ReliabilityVisualization" visibility="package" method="_AsV0NenEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AnX0oOnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AnX0oenEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AnXNkunEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnX0ounEEe2dEb0vlBzM_g" type="_AN4WkOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AN_EQOnEEe2dEb0vlBzM_g" name="ReliabilityVisualizationTest">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsWbQ-nEEe2dEb0vlBzM_g" name="createReliabilityVisualization" specification="_ApoecOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsWbROnEEe2dEb0vlBzM_g" name="filename">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsWbRenEEe2dEb0vlBzM_g" name="m" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsWbRunEEe2dEb0vlBzM_g" name="e2e" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsWbR-nEEe2dEb0vlBzM_g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsWbSOnEEe2dEb0vlBzM_g" type="_AN4WkOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>SystemAttributes.ScheduleChoices choice = SystemAttributes.ScheduleChoices.PRIORITY;&#xD;
     WorkLoad workload = new WorkLoad(m, e2e, filename);&#xD;
     WarpInterface warp = new WarpSystem(workload, numChannels, choice);&#xD;
     ReliabilityVisualization viz = new ReliabilityVisualization(warp);&#xD;
     return viz;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsWbSenEEe2dEb0vlBzM_g" name="testCreateHeaderExample" specification="_AN_rUOnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String filename = &quot;example.txt&quot;;&#xD;
     Double m = 0.9;&#xD;
     Double e2e = 0.99;&#xD;
     int numChannels = 16;&#xD;
     ReliabilityVisualization viz = createReliabilityVisualization(filename, m, e2e, numChannels);&#xD;
     String expected = &quot;Reliability Analysis for graph Example created with the following parameters:\n&quot; +&#xD;
             &quot;Scheduler Name: Priority\n&quot; +&#xD;
             &quot;M: 0.9\n&quot; +&#xD;
             &quot;E2E: 0.99\n&quot; +&#xD;
             &quot;nChannels: 16\n&quot;;&#xD;
     String actual = viz.createHeader().toString();&#xD;
     assertEquals(expected, actual);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsWbSunEEe2dEb0vlBzM_g" name="testCreateHeaderExampleDifferentVals" specification="_AOA5cOnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String filename = &quot;example.txt&quot;;&#xD;
     Double m = 0.8;&#xD;
     Double e2e = 0.88;&#xD;
     int numChannels = 16;&#xD;
     ReliabilityVisualization viz = createReliabilityVisualization(filename, m, e2e, numChannels);&#xD;
     String expected = &quot;Reliability Analysis for graph Example created with the following parameters:\n&quot; +&#xD;
             &quot;Scheduler Name: Priority\n&quot; +&#xD;
             &quot;M: 0.8\n&quot; +&#xD;
             &quot;E2E: 0.88\n&quot; +&#xD;
             &quot;nChannels: 16\n&quot;;&#xD;
     String actual = viz.createHeader().toString();&#xD;
     assertEquals(expected, actual);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsWbS-nEEe2dEb0vlBzM_g" name="testCreateHeaderExample1a" specification="_AOBggOnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String filename = &quot;example1a.txt&quot;;&#xD;
     Double m = 0.9;&#xD;
     Double e2e = 0.99;&#xD;
     int numChannels = 16;&#xD;
     ReliabilityVisualization viz = createReliabilityVisualization(filename, m, e2e, numChannels);&#xD;
     String expected = &quot;Reliability Analysis for graph Example1A created with the following parameters:\n&quot; +&#xD;
             &quot;Scheduler Name: Priority\n&quot; +&#xD;
             &quot;M: 0.9\n&quot; +&#xD;
             &quot;E2E: 0.99\n&quot; +&#xD;
             &quot;nChannels: 16\n&quot;;&#xD;
     String actual = viz.createHeader().toString();&#xD;
     assertEquals(expected, actual);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsWbTOnEEe2dEb0vlBzM_g" name="testCreateHeaderExample1aDifferentVals" specification="_AOBghOnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String filename = &quot;example.txt&quot;;&#xD;
     Double m = 0.7;&#xD;
     Double e2e = 0.77;&#xD;
     int numChannels = 18;&#xD;
     ReliabilityVisualization viz = createReliabilityVisualization(filename, m, e2e, numChannels);&#xD;
     String expected = &quot;Reliability Analysis for graph Example created with the following parameters:\n&quot; +&#xD;
             &quot;Scheduler Name: Priority\n&quot; +&#xD;
             &quot;M: 0.7\n&quot; +&#xD;
             &quot;E2E: 0.77\n&quot; +&#xD;
             &quot;nChannels: 18\n&quot;;&#xD;
     String actual = viz.createHeader().toString();&#xD;
     assertEquals(expected, actual);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsWbTenEEe2dEb0vlBzM_g" name="testCreateHeaderStressTest4" specification="_AOCHk-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String filename = &quot;StressTest4.txt&quot;;&#xD;
     Double m = 0.9;&#xD;
     Double e2e = 0.99;&#xD;
     int numChannels = 16;&#xD;
     ReliabilityVisualization viz = createReliabilityVisualization(filename, m, e2e, numChannels);&#xD;
     String expected = &quot;Reliability Analysis for graph StressTest4 created with the following parameters:\n&quot; +&#xD;
             &quot;Scheduler Name: Priority\n&quot; +&#xD;
             &quot;M: 0.9\n&quot; +&#xD;
             &quot;E2E: 0.99\n&quot; +&#xD;
             &quot;nChannels: 16\n&quot;;&#xD;
     String actual = viz.createHeader().toString();&#xD;
     assertEquals(expected, actual);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsXCUOnEEe2dEb0vlBzM_g" name="testCreateVisualizationDataExample" specification="_AOCHl-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String filename = &quot;example.txt&quot;;&#xD;
     Double m = 0.9;&#xD;
     Double e2e = 0.99;&#xD;
     int numChannels = 16;&#xD;
     ReliabilityVisualization viz = createReliabilityVisualization(filename, m, e2e, numChannels);&#xD;
     int height = 100;&#xD;
     int width = 6;&#xD;
     String[][] expected = new String[height][width];&#xD;
     for (int i = 0; i &lt; height; i++) {&#xD;
         for (int j = 0; j &lt; width; j++) {&#xD;
             expected[i][j] = &quot;0.0&quot;;&#xD;
         }&#xD;
     }&#xD;
     String[][] actual = viz.createVisualizationData();&#xD;
     assertEquals(expected, actual);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsXCUenEEe2dEb0vlBzM_g" name="testCreateVisualizationDataExample1a" specification="_AOCuo-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String filename = &quot;example1a.txt&quot;;&#xD;
     Double m = 0.9;&#xD;
     Double e2e = 0.99;&#xD;
     int numChannels = 16;&#xD;
     ReliabilityVisualization viz = createReliabilityVisualization(filename, m, e2e, numChannels);&#xD;
     int height = 20;&#xD;
     int width = 6;&#xD;
     String[][] expected = new String[height][width];&#xD;
     for (int i = 0; i &lt; height; i++) {&#xD;
         for (int j = 0; j &lt; width; j++) {&#xD;
             expected[i][j] = &quot;0.0&quot;;&#xD;
         }&#xD;
     }&#xD;
     String[][] actual = viz.createVisualizationData();&#xD;
     assertEquals(expected, actual);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsXCUunEEe2dEb0vlBzM_g" name="testCreateVisualizationDataStressTest4" specification="_AODVs-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String filename = &quot;StressTest4.txt&quot;;&#xD;
     Double m = 0.9;&#xD;
     Double e2e = 0.99;&#xD;
     int numChannels = 16;&#xD;
     ReliabilityVisualization viz = createReliabilityVisualization(filename, m, e2e, numChannels);&#xD;
     int height = 300;&#xD;
     int width = 58;&#xD;
     String[][] expected = new String[height][width];&#xD;
     for (int i = 0; i &lt; height; i++) {&#xD;
         for (int j = 0; j &lt; width; j++) {&#xD;
             expected[i][j] = &quot;0.0&quot;;&#xD;
         }&#xD;
     }&#xD;
     String[][] actual = viz.createVisualizationData();&#xD;
     assertEquals(expected, actual);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsXCU-nEEe2dEb0vlBzM_g" name="testCreateColumnHeaderExample" specification="_AOD8wunEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String filename = &quot;example.txt&quot;;&#xD;
     Double m = 0.9;&#xD;
     Double e2e = 0.99;&#xD;
     int numChannels = 16;&#xD;
     ReliabilityVisualization viz = createReliabilityVisualization(filename, m, e2e, numChannels);&#xD;
&#xD;
     String[] columnHeader = viz.createColumnHeader();&#xD;
&#xD;
     String[] expected = { &quot;F0:A&quot;, &quot;F0:B&quot;, &quot;F0:C&quot;, &quot;F1:C&quot;, &quot;F1:B&quot;, &quot;F1:A&quot; };&#xD;
&#xD;
     assertArrayEquals(expected, columnHeader);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsXCVOnEEe2dEb0vlBzM_g" name="testCreateColumnHeaderExample1a" specification="_AOEj0unEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String filename = &quot;example1a.txt&quot;;&#xD;
     Double m = 0.9;&#xD;
     Double e2e = 0.99;&#xD;
     int numChannels = 16;&#xD;
     ReliabilityVisualization viz = createReliabilityVisualization(filename, m, e2e, numChannels);&#xD;
&#xD;
     String[] columnHeader = viz.createColumnHeader();&#xD;
&#xD;
     String[] expected = { &quot;F0:A&quot;, &quot;F0:B&quot;, &quot;F0:C&quot;, &quot;F1:C&quot;, &quot;F1:B&quot;, &quot;F1:A&quot; };&#xD;
&#xD;
     assertArrayEquals(expected, columnHeader);&#xD;
&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsXCVenEEe2dEb0vlBzM_g" name="testCreateColumnHeaderStressTest4" specification="_AOFK4OnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String filename = &quot;StressTest4.txt&quot;;&#xD;
     Double m = 0.9;&#xD;
     Double e2e = 0.99;&#xD;
     int numChannels = 16;&#xD;
     ReliabilityVisualization viz = createReliabilityVisualization(filename, m, e2e, numChannels);&#xD;
&#xD;
     String[] columnHeader = viz.createColumnHeader();&#xD;
&#xD;
     String[] expected = { &quot;F1:B&quot;, &quot;F1:C&quot;, &quot;F1:D&quot;, &quot;F2:C&quot;, &quot;F2:D&quot;, &quot;F2:E&quot;, &quot;F2:F&quot;,&#xD;
             &quot;F2:G&quot;, &quot;F2:H&quot;, &quot;F2:I&quot;, &quot;F3:C&quot;, &quot;F3:D&quot;, &quot;F3:E&quot;, &quot;F3:J&quot;,&#xD;
             &quot;F3:K&quot;, &quot;F3:L&quot;, &quot;F4:A&quot;, &quot;F4:B&quot;, &quot;F4:C&quot;, &quot;F4:D&quot;, &quot;F4:E&quot;,&#xD;
             &quot;F4:J&quot;, &quot;F4:K&quot;, &quot;F4:L&quot;, &quot;F5:A&quot;, &quot;F5:B&quot;, &quot;F5:C&quot;, &quot;F5:D&quot;,&#xD;
             &quot;F5:E&quot;, &quot;F6:B&quot;, &quot;F6:C&quot;, &quot;F6:D&quot;, &quot;F7:A&quot;, &quot;F7:B&quot;, &quot;F7:C&quot;,&#xD;
             &quot;F7:D&quot;, &quot;F7:E&quot;, &quot;F8:C&quot;, &quot;F8:D&quot;, &quot;F8:E&quot;, &quot;F8:F&quot;, &quot;F8:G&quot;,&#xD;
             &quot;F8:H&quot;, &quot;F8:I&quot;, &quot;F9:A&quot;, &quot;F9:B&quot;, &quot;F9:C&quot;, &quot;F9:D&quot;, &quot;F9:E&quot;,&#xD;
             &quot;F9:J&quot;, &quot;F9:K&quot;, &quot;F9:L&quot;, &quot;F10:C&quot;, &quot;F10:D&quot;, &quot;F10:E&quot;, &quot;F10:J&quot;,&#xD;
             &quot;F10:K&quot;, &quot;F10:L&quot; };&#xD;
&#xD;
     assertArrayEquals(expected, columnHeader);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsXCVunEEe2dEb0vlBzM_g" name="testCreateColumnHeaderEmptyFlows" specification="_AOFx8OnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String filename = &quot;EmptyFlows.txt&quot;;&#xD;
		Double m = 0.9;&#xD;
		Double e2e = 0.99;&#xD;
		int numChannels = 16;&#xD;
		&#xD;
		IndexOutOfBoundsException thrown = assertThrows(&#xD;
				IndexOutOfBoundsException.class,&#xD;
		           () -> createReliabilityVisualization(filename, m, e2e, numChannels)&#xD;
		    );&#xD;
		&#xD;
	    String expectedMessage = &quot;Index -1 out of bounds for length 0&quot;;&#xD;
	    String actualMessage = thrown.getMessage();&#xD;
&#xD;
	    assertTrue(actualMessage.contains(expectedMessage));&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AN_rUOnEEe2dEb0vlBzM_g" name="testCreateHeaderExample" visibility="package" method="_AsWbSenEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AOA5cOnEEe2dEb0vlBzM_g" name="testCreateHeaderExampleDifferentVals" visibility="package" method="_AsWbSunEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AOBggOnEEe2dEb0vlBzM_g" name="testCreateHeaderExample1a" visibility="package" method="_AsWbS-nEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AOBghOnEEe2dEb0vlBzM_g" name="testCreateHeaderExample1aDifferentVals" visibility="package" method="_AsWbTOnEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AOCHk-nEEe2dEb0vlBzM_g" name="testCreateHeaderStressTest4" visibility="package" method="_AsWbTenEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AOCHl-nEEe2dEb0vlBzM_g" name="testCreateVisualizationDataExample" visibility="package" method="_AsXCUOnEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AOCuo-nEEe2dEb0vlBzM_g" name="testCreateVisualizationDataExample1a" visibility="package" method="_AsXCUenEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AODVs-nEEe2dEb0vlBzM_g" name="testCreateVisualizationDataStressTest4" visibility="package" method="_AsXCUunEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AOD8wunEEe2dEb0vlBzM_g" name="testCreateColumnHeaderExample" visibility="package" method="_AsXCU-nEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AOEj0unEEe2dEb0vlBzM_g" name="testCreateColumnHeaderExample1a" visibility="package" method="_AsXCVOnEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AOFK4OnEEe2dEb0vlBzM_g" name="testCreateColumnHeaderStressTest4" visibility="package" method="_AsXCVenEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AOFx8OnEEe2dEb0vlBzM_g" name="testCreateColumnHeaderEmptyFlows" visibility="package" method="_AsXCVunEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ApoecOnEEe2dEb0vlBzM_g" name="createReliabilityVisualization" visibility="private" method="_AsWbQ-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ApoecenEEe2dEb0vlBzM_g" name="filename">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ApoecunEEe2dEb0vlBzM_g" name="m" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AppFgOnEEe2dEb0vlBzM_g" name="e2e" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AppFgenEEe2dEb0vlBzM_g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AppFgunEEe2dEb0vlBzM_g" type="_AN4WkOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AOHnIOnEEe2dEb0vlBzM_g" name="ReportVisualization">
              <generalization xmi:id="_AnaQ5enEEe2dEb0vlBzM_g" general="_AOPi8OnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aq8GAOnEEe2dEb0vlBzM_g" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aq8GAenEEe2dEb0vlBzM_g" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aq8GAunEEe2dEb0vlBzM_g" name="content" visibility="private" type="_ALaRYOnEEe2dEb0vlBzM_g" association="_AuJyEenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aq8GBOnEEe2dEb0vlBzM_g" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsXCV-nEEe2dEb0vlBzM_g" name="ReportVisualization" specification="_AnZp0OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsXCWOnEEe2dEb0vlBzM_g" name="fm" type="_ALqJAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsXCWenEEe2dEb0vlBzM_g" name="warp" type="_AOtdAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsXCWunEEe2dEb0vlBzM_g" name="content" type="_ALaRYOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsXCW-nEEe2dEb0vlBzM_g" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsXCXOnEEe2dEb0vlBzM_g" type="_AOHnIOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsXpYOnEEe2dEb0vlBzM_g" name="visualization" specification="_AOI1QOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsXpYenEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsXpYunEEe2dEb0vlBzM_g" name="createReport" specification="_AOJcUenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsXpY-nEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AOI1QOnEEe2dEb0vlBzM_g" name="visualization" method="_AsXpYOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnaQ4-nEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AOJcUenEEe2dEb0vlBzM_g" name="createReport" visibility="private" method="_AsXpYunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnaQ5OnEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AnZp0OnEEe2dEb0vlBzM_g" name="ReportVisualization" visibility="package" method="_AsXCV-nEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AnaQ4OnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AnaQ4enEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AnZp0enEEe2dEb0vlBzM_g" name="fm" type="_ALqJAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnZp0unEEe2dEb0vlBzM_g" name="warp" type="_AOtdAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnZp0-nEEe2dEb0vlBzM_g" name="content" type="_ALaRYOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnZp1OnEEe2dEb0vlBzM_g" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnaQ4unEEe2dEb0vlBzM_g" type="_AOHnIOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AOLRgOnEEe2dEb0vlBzM_g" name="Row">
              <generalization xmi:id="_ApqTpunEEe2dEb0vlBzM_g" general="_AmS2kOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aq8tEenEEe2dEb0vlBzM_g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aq8tEunEEe2dEb0vlBzM_g" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsXpZOnEEe2dEb0vlBzM_g" name="Row" specification="_AOMfoenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsXpZenEEe2dEb0vlBzM_g" type="_AOLRgOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsXpZunEEe2dEb0vlBzM_g" name="Row" specification="_AppskOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsXpZ-nEEe2dEb0vlBzM_g" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsXpaOnEEe2dEb0vlBzM_g" name="element" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsXpaenEEe2dEb0vlBzM_g" type="_AOLRgOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsXpaunEEe2dEb0vlBzM_g" name="Row" specification="_ApqToOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsXpa-nEEe2dEb0vlBzM_g" name="rowArray" type="_ApLygOnEEe2dEb0vlBzM_g">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AsXpbOnEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsXpbenEEe2dEb0vlBzM_g" type="_AOLRgOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsYQcOnEEe2dEb0vlBzM_g" name="Row" specification="_AONtwOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsYQcenEEe2dEb0vlBzM_g" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsYQcunEEe2dEb0vlBzM_g" type="_AOLRgOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AOMfoenEEe2dEb0vlBzM_g" name="Row" method="_AsXpZOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AOMfounEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AOMfo-nEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AONGsOnEEe2dEb0vlBzM_g" type="_AOLRgOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AONtwOnEEe2dEb0vlBzM_g" name="Row" visibility="package" method="_AsYQcOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AONtwunEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AONtw-nEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AONtwenEEe2dEb0vlBzM_g" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AONtxOnEEe2dEb0vlBzM_g" type="_AOLRgOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AppskOnEEe2dEb0vlBzM_g" name="Row" visibility="package" method="_AsXpZunEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_Appsk-nEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AppslOnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AppskenEEe2dEb0vlBzM_g" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AppskunEEe2dEb0vlBzM_g" name="element" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AppslenEEe2dEb0vlBzM_g" type="_AOLRgOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ApqToOnEEe2dEb0vlBzM_g" name="Row" visibility="package" method="_AsXpaunEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_ApqTounEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ApqTo-nEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ApqToenEEe2dEb0vlBzM_g" name="rowArray" type="_ApLygOnEEe2dEb0vlBzM_g">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ApqTpenEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ApqTpOnEEe2dEb0vlBzM_g" type="_AOLRgOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AOPi8OnEEe2dEb0vlBzM_g" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_AtXH4unEEe2dEb0vlBzM_g">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Aq9UIOnEEe2dEb0vlBzM_g" name="fm" visibility="private" type="_ALqJAOnEEe2dEb0vlBzM_g" association="_AuJyFOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aq9UIunEEe2dEb0vlBzM_g" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aq9UJOnEEe2dEb0vlBzM_g" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aq97MenEEe2dEb0vlBzM_g" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aq97MunEEe2dEb0vlBzM_g" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aq97M-nEEe2dEb0vlBzM_g" name="visualizationData" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Aq97NOnEEe2dEb0vlBzM_g" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsYQc-nEEe2dEb0vlBzM_g" name="VisualizationObject" specification="_AnbfAOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsYQdOnEEe2dEb0vlBzM_g" name="fm" type="_ALqJAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsYQdenEEe2dEb0vlBzM_g" name="workLoad" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsYQdunEEe2dEb0vlBzM_g" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsYQd-nEEe2dEb0vlBzM_g" type="_AOPi8OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,&#xD;
     String.valueOf(workLoad.getMinPacketReceptionRate()), String.valueOf(workLoad.getE2e()));&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsYQeOnEEe2dEb0vlBzM_g" name="VisualizationObject" specification="_AncGEOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsYQeenEEe2dEb0vlBzM_g" name="fm" type="_ALqJAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsYQeunEEe2dEb0vlBzM_g" name="warp" type="_AOtdAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsYQe-nEEe2dEb0vlBzM_g" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsYQfOnEEe2dEb0vlBzM_g" type="_AOPi8OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults());&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e());&#xD;
 }&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsYQfenEEe2dEb0vlBzM_g" name="VisualizationObject" specification="_AncGF-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsYQfunEEe2dEb0vlBzM_g" name="fm" type="_ALqJAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsYQf-nEEe2dEb0vlBzM_g" name="warp" type="_AOtdAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsYQgOnEEe2dEb0vlBzM_g" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsYQgenEEe2dEb0vlBzM_g" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsYQgunEEe2dEb0vlBzM_g" type="_AOPi8OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getNumFaults()) + nameExtension;&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e())&#xD;
           + nameExtension;&#xD;
 }&#xD;
&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsYQg-nEEe2dEb0vlBzM_g" name="VisualizationObject" specification="_AnctJunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsYQhOnEEe2dEb0vlBzM_g" name="fm" type="_ALqJAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsYQhenEEe2dEb0vlBzM_g" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsYQhunEEe2dEb0vlBzM_g" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsYQh-nEEe2dEb0vlBzM_g" type="_AOPi8OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = nameExtension;&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsY3gOnEEe2dEb0vlBzM_g" name="nameExtension" specification="_AprhwOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsY3genEEe2dEb0vlBzM_g" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsY3gunEEe2dEb0vlBzM_g" name="m" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsY3g-nEEe2dEb0vlBzM_g" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsY3hOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension =&#xD;
     String.format(&quot;%s-%sM-%sE2E&quot;, schName, String.valueOf(m), String.valueOf(e2e));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsY3henEEe2dEb0vlBzM_g" name="nameExtension" specification="_AOSmQOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsY3hunEEe2dEb0vlBzM_g" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsY3h-nEEe2dEb0vlBzM_g" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsY3iOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;, schName, String.valueOf(numFaults));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsY3ienEEe2dEb0vlBzM_g" name="getFileManager" specification="_AOSmROnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsY3iunEEe2dEb0vlBzM_g" type="_ALqJAOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return fm;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsY3i-nEEe2dEb0vlBzM_g" name="visualization" specification="_AOTNUOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsY3jOnEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 var data = createVisualizationData();&#xD;
&#xD;
 if (data != null) {&#xD;
   String nodeString = String.join(&quot;\t&quot;, createColumnHeader()) + &quot;\n&quot;;&#xD;
   content.add(nodeString);&#xD;
&#xD;
   for (int rowIndex = 0; rowIndex &lt; data.length; rowIndex++) {&#xD;
     var row = data[rowIndex];&#xD;
     String rowString = String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
     content.add(rowString);&#xD;
   }&#xD;
 } else {&#xD;
   content.add(NOT_IMPLEMENTED);&#xD;
 }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsZekOnEEe2dEb0vlBzM_g" name="createFile" specification="_AOT0YOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsZekenEEe2dEb0vlBzM_g" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsZekunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsZek-nEEe2dEb0vlBzM_g" name="fileVisualization" specification="_AOT0Y-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsZelOnEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 fileContent.addAll(visualization());&#xD;
 fileContent.addAll(createFooter());&#xD;
 return fileContent;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsZelenEEe2dEb0vlBzM_g" name="displayVisualization" specification="_AOUbcOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsZelunEEe2dEb0vlBzM_g" type="_AMYhwOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return null; // not implemented&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsZel-nEEe2dEb0vlBzM_g" name="createHeader" specification="_AOUbcenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsZemOnEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsZemenEEe2dEb0vlBzM_g" name="createFooter" specification="_AOVCgOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsZemunEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsZem-nEEe2dEb0vlBzM_g" name="createColumnHeader" specification="_AOVCgenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsZenOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AsZenenEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new String[] {NOT_IMPLEMENTED};&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsZenunEEe2dEb0vlBzM_g" name="createVisualizationData" specification="_AOVpkenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsZen-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AsZeoOnEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualizationData; // not implemented--returns null&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AOSmQOnEEe2dEb0vlBzM_g" name="nameExtension" visibility="private" method="_AsY3henEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AOSmQenEEe2dEb0vlBzM_g" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AOSmQunEEe2dEb0vlBzM_g" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AOSmQ-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AOSmROnEEe2dEb0vlBzM_g" name="getFileManager" method="_AsY3ienEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtXH4-nEEe2dEb0vlBzM_g">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_AndUMOnEEe2dEb0vlBzM_g" type="_ALqJAOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AOTNUOnEEe2dEb0vlBzM_g" name="visualization" method="_AsY3i-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AndUMenEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AOT0YOnEEe2dEb0vlBzM_g" name="createFile" method="_AsZekOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AOT0YenEEe2dEb0vlBzM_g" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AOT0YunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AOT0Y-nEEe2dEb0vlBzM_g" name="fileVisualization" method="_AsZek-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AndUMunEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AOUbcOnEEe2dEb0vlBzM_g" name="displayVisualization" method="_AsZelenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AndUM-nEEe2dEb0vlBzM_g" type="_AMYhwOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AOUbcenEEe2dEb0vlBzM_g" name="createHeader" visibility="protected" method="_AsZel-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AndUNOnEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AOVCgOnEEe2dEb0vlBzM_g" name="createFooter" visibility="protected" method="_AsZemenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AndUNenEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AOVCgenEEe2dEb0vlBzM_g" name="createColumnHeader" visibility="protected" method="_AsZem-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AOVCgunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AOVCg-nEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AOVpkenEEe2dEb0vlBzM_g" name="createVisualizationData" visibility="protected" method="_AsZenunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AOVpkunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AOVpk-nEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AnbfAOnEEe2dEb0vlBzM_g" name="VisualizationObject" visibility="package" method="_AsYQc-nEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AnbfBOnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AnbfBenEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AnbfAenEEe2dEb0vlBzM_g" name="fm" type="_ALqJAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnbfAunEEe2dEb0vlBzM_g" name="workLoad" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnbfA-nEEe2dEb0vlBzM_g" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnbfBunEEe2dEb0vlBzM_g" type="_AOPi8OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AncGEOnEEe2dEb0vlBzM_g" name="VisualizationObject" visibility="package" method="_AsYQeOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AncGFOnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AncGFenEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AncGEenEEe2dEb0vlBzM_g" name="fm" type="_ALqJAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AncGEunEEe2dEb0vlBzM_g" name="warp" type="_AOtdAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AncGE-nEEe2dEb0vlBzM_g" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AncGFunEEe2dEb0vlBzM_g" type="_AOPi8OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AncGF-nEEe2dEb0vlBzM_g" name="VisualizationObject" visibility="package" method="_AsYQfenEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AnctI-nEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AnctJOnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AncGGOnEEe2dEb0vlBzM_g" name="fm" type="_ALqJAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnctIOnEEe2dEb0vlBzM_g" name="warp" type="_AOtdAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnctIenEEe2dEb0vlBzM_g" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnctIunEEe2dEb0vlBzM_g" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnctJenEEe2dEb0vlBzM_g" type="_AOPi8OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AnctJunEEe2dEb0vlBzM_g" name="VisualizationObject" visibility="package" method="_AsYQg-nEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AnctKunEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AnctK-nEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AnctJ-nEEe2dEb0vlBzM_g" name="fm" type="_ALqJAOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnctKOnEEe2dEb0vlBzM_g" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnctKenEEe2dEb0vlBzM_g" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnctLOnEEe2dEb0vlBzM_g" type="_AOPi8OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AprhwOnEEe2dEb0vlBzM_g" name="nameExtension" visibility="private" method="_AsY3gOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AprhwenEEe2dEb0vlBzM_g" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AprhwunEEe2dEb0vlBzM_g" name="m" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Aprhw-nEEe2dEb0vlBzM_g" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AprhxOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AOaiEOnEEe2dEb0vlBzM_g" name="SchedulableObjectQueue">
              <generalization xmi:id="_AOdlYOnEEe2dEb0vlBzM_g" general="_ANhxQOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aq_JUOnEEe2dEb0vlBzM_g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aq_JUenEEe2dEb0vlBzM_g" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsaFoOnEEe2dEb0vlBzM_g" name="SchedulableObjectQueue" specification="_ApsI0OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsaFoenEEe2dEb0vlBzM_g" name="comparitor" type="_AmlKcOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsaFounEEe2dEb0vlBzM_g" type="_AOaiEOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsaFo-nEEe2dEb0vlBzM_g" name="SchedulableObjectQueue" specification="_AptW8OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsaFpOnEEe2dEb0vlBzM_g" name="comparitor" type="_AmlKcOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsaFpenEEe2dEb0vlBzM_g" name="schedulableObjects" type="_AnSVEOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsaFpunEEe2dEb0vlBzM_g" type="_AOaiEOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ApsI0OnEEe2dEb0vlBzM_g" name="SchedulableObjectQueue" visibility="package" method="_AsaFoOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_ApsI0unEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ApsI0-nEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ApsI0enEEe2dEb0vlBzM_g" name="comparitor" type="_AmlKcOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_ApsI1OnEEe2dEb0vlBzM_g" type="_AOaiEOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AptW8OnEEe2dEb0vlBzM_g" name="SchedulableObjectQueue" visibility="package" method="_AsaFo-nEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AptW8-nEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AptW9OnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AptW8enEEe2dEb0vlBzM_g" name="comparitor" type="_AmlKcOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AptW8unEEe2dEb0vlBzM_g" name="schedulableObjects" type="_AnSVEOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AptW9enEEe2dEb0vlBzM_g" type="_AOaiEOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AOgBoOnEEe2dEb0vlBzM_g" name="VisualizationFactory">
              <ownedComment xmi:id="_AtXH5OnEEe2dEb0vlBzM_g">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsaFp-nEEe2dEb0vlBzM_g" name="createProgramVisualization" specification="_AnfwcenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsaFqOnEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsaFqenEEe2dEb0vlBzM_g" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsaFqunEEe2dEb0vlBzM_g" name="choice" type="_AO4cIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsaFq-nEEe2dEb0vlBzM_g" type="_AO31EOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsaFrOnEEe2dEb0vlBzM_g" name="createWorkLoadVisualization" specification="_AngXgenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsaFrenEEe2dEb0vlBzM_g" name="workload" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsaFrunEEe2dEb0vlBzM_g" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsaFr-nEEe2dEb0vlBzM_g" name="choice" type="_AO5qQunEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsaFsOnEEe2dEb0vlBzM_g" type="_AO31EOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AnfwcenEEe2dEb0vlBzM_g" name="createProgramVisualization" isStatic="true" method="_AsaFp-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnfwcunEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Anfwc-nEEe2dEb0vlBzM_g" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnfwdOnEEe2dEb0vlBzM_g" name="choice" type="_AO4cIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AngXgOnEEe2dEb0vlBzM_g" type="_AO31EOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AngXgenEEe2dEb0vlBzM_g" name="createWorkLoadVisualization" isStatic="true" method="_AsaFrOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AngXgunEEe2dEb0vlBzM_g" name="workload" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AngXg-nEEe2dEb0vlBzM_g" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AngXhOnEEe2dEb0vlBzM_g" name="choice" type="_AO5qQunEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AngXhenEEe2dEb0vlBzM_g" type="_AO31EOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AOjE8OnEEe2dEb0vlBzM_g" name="ScheduleTable">
              <generalization xmi:id="_Ang-kOnEEe2dEb0vlBzM_g" general="_AOy8kOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aq_JUunEEe2dEb0vlBzM_g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aq_JU-nEEe2dEb0vlBzM_g" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsassOnEEe2dEb0vlBzM_g" name="ScheduleTable" specification="_AOjsAOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsassenEEe2dEb0vlBzM_g" type="_AOjE8OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsassunEEe2dEb0vlBzM_g" name="ScheduleTable" specification="_AOk6IOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asass-nEEe2dEb0vlBzM_g" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsastOnEEe2dEb0vlBzM_g" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsastenEEe2dEb0vlBzM_g" type="_AOjE8OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AOjsAOnEEe2dEb0vlBzM_g" name="ScheduleTable" visibility="package" method="_AsassOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AOkTEOnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AOkTEenEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AOkTEunEEe2dEb0vlBzM_g" type="_AOjE8OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AOk6IOnEEe2dEb0vlBzM_g" name="ScheduleTable" visibility="package" method="_AsassunEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AOlhMOnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AOlhMenEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AOk6IenEEe2dEb0vlBzM_g" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AOk6IunEEe2dEb0vlBzM_g" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AOlhMunEEe2dEb0vlBzM_g" type="_AOjE8OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AOmvUOnEEe2dEb0vlBzM_g" name="ScheduleTime">
              <ownedAttribute xmi:id="_Aq_JVOnEEe2dEb0vlBzM_g" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aq_wYOnEEe2dEb0vlBzM_g" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsastunEEe2dEb0vlBzM_g" name="ScheduleTime" specification="_AOnWYOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asast-nEEe2dEb0vlBzM_g" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsasuOnEEe2dEb0vlBzM_g" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsasuenEEe2dEb0vlBzM_g" type="_AOmvUOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AOnWYOnEEe2dEb0vlBzM_g" name="ScheduleTime" visibility="package" method="_AsastunEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AOn9cunEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AOn9c-nEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AOn9cOnEEe2dEb0vlBzM_g" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AOn9cenEEe2dEb0vlBzM_g" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AOn9dOnEEe2dEb0vlBzM_g" type="_AOmvUOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AOpLkOnEEe2dEb0vlBzM_g" name="SimulatorInput">
              <ownedComment xmi:id="_AtXH5enEEe2dEb0vlBzM_g">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AOpyoOnEEe2dEb0vlBzM_g" name="SortedPeriodQueue">
              <generalization xmi:id="_AOsO4OnEEe2dEb0vlBzM_g" general="_ANhxQOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aq_wYenEEe2dEb0vlBzM_g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Aq_wYunEEe2dEb0vlBzM_g" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsasuunEEe2dEb0vlBzM_g" name="SortedPeriodQueue" specification="_AOrAwOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asasu-nEEe2dEb0vlBzM_g" type="_AOpyoOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsasvOnEEe2dEb0vlBzM_g" name="SortedPeriodQueue" specification="_AnhloOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsasvenEEe2dEb0vlBzM_g" name="schedulableObjects" type="_AnSVEOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsasvunEEe2dEb0vlBzM_g" type="_AOpyoOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AOrAwOnEEe2dEb0vlBzM_g" name="SortedPeriodQueue" visibility="package" method="_AsasuunEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AOrn0OnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AOrn0enEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AOrn0unEEe2dEb0vlBzM_g" type="_AOpyoOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AnhloOnEEe2dEb0vlBzM_g" name="SortedPeriodQueue" visibility="package" method="_AsasvOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AnhlounEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Anhlo-nEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AnhloenEEe2dEb0vlBzM_g" name="schedulableObjects" type="_AnSVEOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnhlpOnEEe2dEb0vlBzM_g" type="_AOpyoOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_AOtdAOnEEe2dEb0vlBzM_g" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_AnizwOnEEe2dEb0vlBzM_g" general="_ANxo4OnEEe2dEb0vlBzM_g"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_AOuEEOnEEe2dEb0vlBzM_g" name="ScheduleChoices">
                <ownedLiteral xmi:id="_AOurIOnEEe2dEb0vlBzM_g" name="PRIORITY"/>
                <ownedLiteral xmi:id="_AOurIenEEe2dEb0vlBzM_g" name="RM"/>
                <ownedLiteral xmi:id="_AOurIunEEe2dEb0vlBzM_g" name="DM"/>
                <ownedLiteral xmi:id="_AOurI-nEEe2dEb0vlBzM_g" name="RTHART"/>
                <ownedLiteral xmi:id="_AOurJOnEEe2dEb0vlBzM_g" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_AOurJenEEe2dEb0vlBzM_g" name="POSET_RM"/>
                <ownedLiteral xmi:id="_AOvSMOnEEe2dEb0vlBzM_g" name="POSET_DM"/>
                <ownedLiteral xmi:id="_AOvSMenEEe2dEb0vlBzM_g" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_AOvSMunEEe2dEb0vlBzM_g" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_AOvSM-nEEe2dEb0vlBzM_g" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_AOvSNOnEEe2dEb0vlBzM_g" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_AOv5QOnEEe2dEb0vlBzM_g" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_AOv5QenEEe2dEb0vlBzM_g" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_AOv5QunEEe2dEb0vlBzM_g" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AOv5Q-nEEe2dEb0vlBzM_g" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AOwgUOnEEe2dEb0vlBzM_g" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AOwgUenEEe2dEb0vlBzM_g" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AOxHYOnEEe2dEb0vlBzM_g" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AOxHYenEEe2dEb0vlBzM_g" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AOxucOnEEe2dEb0vlBzM_g" name="SystemFactory">
              <ownedComment xmi:id="_AtXu8OnEEe2dEb0vlBzM_g">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsbTwOnEEe2dEb0vlBzM_g" name="create" specification="_Anja0enEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsbTwenEEe2dEb0vlBzM_g" name="workload" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsbTwunEEe2dEb0vlBzM_g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsbTw-nEEe2dEb0vlBzM_g" name="choice" type="_AOuEEOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsbTxOnEEe2dEb0vlBzM_g" type="_ANjmcOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Anja0enEEe2dEb0vlBzM_g" name="create" isStatic="true" method="_AsbTwOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Anja0unEEe2dEb0vlBzM_g" name="workload" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Anja0-nEEe2dEb0vlBzM_g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnkB4OnEEe2dEb0vlBzM_g" name="choice" type="_AOuEEOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnkB4enEEe2dEb0vlBzM_g" type="_ANjmcOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AOy8kOnEEe2dEb0vlBzM_g" name="Table">
              <generalization xmi:id="_ApvMIenEEe2dEb0vlBzM_g" general="_AmS2kOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Aq_wY-nEEe2dEb0vlBzM_g" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArAXcOnEEe2dEb0vlBzM_g" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsbTxenEEe2dEb0vlBzM_g" name="Table" specification="_AO0KsOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsbTxunEEe2dEb0vlBzM_g" type="_AOy8kOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsbTx-nEEe2dEb0vlBzM_g" name="Table" specification="_AO0xwOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsbTyOnEEe2dEb0vlBzM_g" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsbTyenEEe2dEb0vlBzM_g" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsbTyunEEe2dEb0vlBzM_g" type="_AOy8kOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsbTy-nEEe2dEb0vlBzM_g" name="getNumRows" specification="_AO1Y0OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsbTzOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsbTzenEEe2dEb0vlBzM_g" name="getNumColumns" specification="_AO1Y0unEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsbTzunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsbTz-nEEe2dEb0vlBzM_g" name="set" specification="_ApulEOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsbT0OnEEe2dEb0vlBzM_g" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsbT0enEEe2dEb0vlBzM_g" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsbT0unEEe2dEb0vlBzM_g" name="element" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsbT0-nEEe2dEb0vlBzM_g" name="get" specification="_AO1_4OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsbT1OnEEe2dEb0vlBzM_g" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsbT1enEEe2dEb0vlBzM_g" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsbT1unEEe2dEb0vlBzM_g" type="_ApLygOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AO0KsOnEEe2dEb0vlBzM_g" name="Table" method="_AsbTxenEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AO0KsenEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AO0KsunEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AO0Ks-nEEe2dEb0vlBzM_g" type="_AOy8kOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AO0xwOnEEe2dEb0vlBzM_g" name="Table" method="_AsbTx-nEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AO0xw-nEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AO0xxOnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AO0xwenEEe2dEb0vlBzM_g" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AO0xwunEEe2dEb0vlBzM_g" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AO0xxenEEe2dEb0vlBzM_g" type="_AOy8kOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AO1Y0OnEEe2dEb0vlBzM_g" name="getNumRows" method="_AsbTy-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AO1Y0enEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AO1Y0unEEe2dEb0vlBzM_g" name="getNumColumns" method="_AsbTzenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AO1Y0-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AO1_4OnEEe2dEb0vlBzM_g" name="get" method="_AsbT0-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AO1_4enEEe2dEb0vlBzM_g" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AO2m8OnEEe2dEb0vlBzM_g" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ApvMIOnEEe2dEb0vlBzM_g" type="_ApLygOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ApulEOnEEe2dEb0vlBzM_g" name="set" method="_AsbTz-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ApulEenEEe2dEb0vlBzM_g" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ApulEunEEe2dEb0vlBzM_g" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ApulE-nEEe2dEb0vlBzM_g" name="element" type="_ApLygOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_AO31EOnEEe2dEb0vlBzM_g" name="Visualization">
              <ownedComment xmi:id="_AtXu8enEEe2dEb0vlBzM_g">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_AO4cIOnEEe2dEb0vlBzM_g" name="SystemChoices">
                <ownedLiteral xmi:id="_AO5DMenEEe2dEb0vlBzM_g" name="SOURCE"/>
                <ownedLiteral xmi:id="_AO5DMunEEe2dEb0vlBzM_g" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_AO5DM-nEEe2dEb0vlBzM_g" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_AO5DNOnEEe2dEb0vlBzM_g" name="LATENCY"/>
                <ownedLiteral xmi:id="_AO5DNenEEe2dEb0vlBzM_g" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_AO5qQOnEEe2dEb0vlBzM_g" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_AO5qQenEEe2dEb0vlBzM_g" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_AO5qQunEEe2dEb0vlBzM_g" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_AO6RUenEEe2dEb0vlBzM_g" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_AO64YOnEEe2dEb0vlBzM_g" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_AO64YenEEe2dEb0vlBzM_g" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_AO64YunEEe2dEb0vlBzM_g" name="toDisplay"/>
              <ownedOperation xmi:id="_AO7fcOnEEe2dEb0vlBzM_g" name="toFile"/>
              <ownedOperation xmi:id="_AO7fcenEEe2dEb0vlBzM_g" name="toString">
                <ownedParameter xmi:id="_AO7fcunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AO8tkOnEEe2dEb0vlBzM_g" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_AtXu8unEEe2dEb0vlBzM_g">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ArAXcenEEe2dEb0vlBzM_g" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArAXcunEEe2dEb0vlBzM_g" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArAXc-nEEe2dEb0vlBzM_g" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArA-genEEe2dEb0vlBzM_g" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArA-g-nEEe2dEb0vlBzM_g" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArA-hOnEEe2dEb0vlBzM_g" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArBlkenEEe2dEb0vlBzM_g" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArBlk-nEEe2dEb0vlBzM_g" name="schedule" visibility="protected" type="_AOjE8OnEEe2dEb0vlBzM_g" association="_AuKZIenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_ArCMoenEEe2dEb0vlBzM_g" name="poset" visibility="protected" type="_ASH9YOnEEe2dEb0vlBzM_g" association="_AuLAMenEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asb60OnEEe2dEb0vlBzM_g" name="Schedule" specification="_AnlQAOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asb60enEEe2dEb0vlBzM_g" name="poset" type="_ASH9YOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Asb60unEEe2dEb0vlBzM_g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Asb60-nEEe2dEb0vlBzM_g" type="_AO8tkOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asch4OnEEe2dEb0vlBzM_g" name="getSchedule" specification="_APBmEOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asch4enEEe2dEb0vlBzM_g" type="_AOjE8OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asch4unEEe2dEb0vlBzM_g" name="buildSchedule" specification="_APCNIOnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asch4-nEEe2dEb0vlBzM_g" name="toProgram" specification="_APCNIenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asch5OnEEe2dEb0vlBzM_g" type="_ANR5oOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asch5enEEe2dEb0vlBzM_g" name="replaceNullWithSleep" specification="_Anl3FOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asch5unEEe2dEb0vlBzM_g" name="program" type="_ANR5oOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asch5-nEEe2dEb0vlBzM_g" name="fakeSchedulingToTestRest" specification="_AnmeIOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asch6OnEEe2dEb0vlBzM_g" name="next" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asch6enEEe2dEb0vlBzM_g" name="getChannelAndSetStartTime" specification="_AnmeIunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asch6unEEe2dEb0vlBzM_g" name="schedulableObject" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Asch6-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asch7OnEEe2dEb0vlBzM_g" name="findChannelAndTime" specification="_AnnFMOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asch7enEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Asch7unEEe2dEb0vlBzM_g" name="schedulableObject" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Asch7-nEEe2dEb0vlBzM_g" type="_AO_J0OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asch8OnEEe2dEb0vlBzM_g" name="continueSearch" specification="_AnnFNOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asch8enEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Asch8unEEe2dEb0vlBzM_g" name="activation" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Asch8-nEEe2dEb0vlBzM_g" type="_AO_J0OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsdI8OnEEe2dEb0vlBzM_g" name="noOtherChannelConflicts" specification="_AnnsQenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsdI8enEEe2dEb0vlBzM_g" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsdI8unEEe2dEb0vlBzM_g" name="schedulableObject" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsdI8-nEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsdI9OnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsdI9enEEe2dEb0vlBzM_g" name="conflictsExist" specification="_AnoTU-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsdI9unEEe2dEb0vlBzM_g" name="obj" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsdI9-nEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsdI-OnEEe2dEb0vlBzM_g" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsdI-enEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsdI-unEEe2dEb0vlBzM_g" name="freeOfCoordinatorConflicts" specification="_Ano6YOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsdI--nEEe2dEb0vlBzM_g" name="obj" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsdI_OnEEe2dEb0vlBzM_g" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsdI_enEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsdI_unEEe2dEb0vlBzM_g" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsdI_-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsdJAOnEEe2dEb0vlBzM_g" name="isAvailable" specification="_Ano6ZunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsdJAenEEe2dEb0vlBzM_g" name="a1" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsdJAunEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsdJA-nEEe2dEb0vlBzM_g" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsdJBOnEEe2dEb0vlBzM_g" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsdJBenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsdJBunEEe2dEb0vlBzM_g" name="isAvailable" specification="_AnphdenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsdJB-nEEe2dEb0vlBzM_g" name="a1" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsdJCOnEEe2dEb0vlBzM_g" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsdJCenEEe2dEb0vlBzM_g" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsdJCunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsdwAOnEEe2dEb0vlBzM_g" name="timeRemaining" specification="_APF3gOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsdwAenEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsdwAunEEe2dEb0vlBzM_g" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsdwA-nEEe2dEb0vlBzM_g" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsdwBOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsdwBenEEe2dEb0vlBzM_g" name="canCombineEntriesInPlace" specification="_AnqIgOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsdwBunEEe2dEb0vlBzM_g" name="a1" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsdwB-nEEe2dEb0vlBzM_g" name="a2" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsdwCOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsdwCenEEe2dEb0vlBzM_g" name="combinedEntriesInPlace" specification="_AnqIhOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsdwCunEEe2dEb0vlBzM_g" name="a1" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsdwC-nEEe2dEb0vlBzM_g" name="a2" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsdwDOnEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsdwDenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsdwDunEEe2dEb0vlBzM_g" name="addToSchedule" specification="_AnqvkenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsdwD-nEEe2dEb0vlBzM_g" name="next" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsdwEOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsdwEenEEe2dEb0vlBzM_g" name="reportNotSchedulable" specification="_AnqvlOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsdwEunEEe2dEb0vlBzM_g" name="object" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsdwE-nEEe2dEb0vlBzM_g" name="printVerbose" specification="_APHssOnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsdwFOnEEe2dEb0vlBzM_g" name="print" specification="_APHssenEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_APBmEOnEEe2dEb0vlBzM_g" name="getSchedule" method="_Asch4OnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtXu9enEEe2dEb0vlBzM_g">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_Anl3EunEEe2dEb0vlBzM_g" type="_AOjE8OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_APCNIOnEEe2dEb0vlBzM_g" name="buildSchedule" visibility="private" method="_Asch4unEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_APCNIenEEe2dEb0vlBzM_g" name="toProgram" method="_Asch4-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Anl3E-nEEe2dEb0vlBzM_g" type="_ANR5oOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_APF3gOnEEe2dEb0vlBzM_g" name="timeRemaining" visibility="protected" method="_AsdwAOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtXu--nEEe2dEb0vlBzM_g">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_APF3genEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_APF3gunEEe2dEb0vlBzM_g" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_APF3g-nEEe2dEb0vlBzM_g" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_APGekOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_APHssOnEEe2dEb0vlBzM_g" name="printVerbose" method="_AsdwE-nEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_APHssenEEe2dEb0vlBzM_g" name="print" method="_AsdwFOnEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AnlQAOnEEe2dEb0vlBzM_g" name="Schedule" visibility="package" method="_Asb60OnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AnlQA-nEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Anl3EOnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AnlQAenEEe2dEb0vlBzM_g" name="poset" type="_ASH9YOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnlQAunEEe2dEb0vlBzM_g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Anl3EenEEe2dEb0vlBzM_g" type="_AO8tkOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Anl3FOnEEe2dEb0vlBzM_g" name="replaceNullWithSleep" visibility="private" method="_Asch5enEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtXu9unEEe2dEb0vlBzM_g">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_Anl3FenEEe2dEb0vlBzM_g" name="program" type="_ANR5oOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AnmeIOnEEe2dEb0vlBzM_g" name="fakeSchedulingToTestRest" visibility="private" method="_Asch5-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnmeIenEEe2dEb0vlBzM_g" name="next" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AnmeIunEEe2dEb0vlBzM_g" name="getChannelAndSetStartTime" visibility="protected" method="_Asch6enEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtXu9-nEEe2dEb0vlBzM_g">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_AnmeI-nEEe2dEb0vlBzM_g" name="schedulableObject" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnmeJOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AnnFMOnEEe2dEb0vlBzM_g" name="findChannelAndTime" visibility="protected" method="_Asch7OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnnFMenEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnnFMunEEe2dEb0vlBzM_g" name="schedulableObject" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnnFM-nEEe2dEb0vlBzM_g" type="_AO_J0OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AnnFNOnEEe2dEb0vlBzM_g" name="continueSearch" visibility="protected" method="_Asch8OnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtXu-OnEEe2dEb0vlBzM_g">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_AnnFNenEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnnFNunEEe2dEb0vlBzM_g" name="activation" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnnsQOnEEe2dEb0vlBzM_g" type="_AO_J0OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AnnsQenEEe2dEb0vlBzM_g" name="noOtherChannelConflicts" visibility="protected" method="_AsdI8OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnnsQunEEe2dEb0vlBzM_g" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnoTUOnEEe2dEb0vlBzM_g" name="schedulableObject" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnoTUenEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnoTUunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AnoTU-nEEe2dEb0vlBzM_g" name="conflictsExist" visibility="protected" method="_AsdI9enEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnoTVOnEEe2dEb0vlBzM_g" name="obj" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnoTVenEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnoTVunEEe2dEb0vlBzM_g" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnoTV-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ano6YOnEEe2dEb0vlBzM_g" name="freeOfCoordinatorConflicts" visibility="protected" method="_AsdI-unEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ano6YenEEe2dEb0vlBzM_g" name="obj" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Ano6YunEEe2dEb0vlBzM_g" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ano6Y-nEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ano6ZOnEEe2dEb0vlBzM_g" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ano6ZenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ano6ZunEEe2dEb0vlBzM_g" name="isAvailable" visibility="protected" method="_AsdJAOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtXu-enEEe2dEb0vlBzM_g">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_AnphcOnEEe2dEb0vlBzM_g" name="a1" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnphcenEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnphcunEEe2dEb0vlBzM_g" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Anphc-nEEe2dEb0vlBzM_g" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnphdOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AnphdenEEe2dEb0vlBzM_g" name="isAvailable" visibility="protected" method="_AsdJBunEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtXu-unEEe2dEb0vlBzM_g">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_AnphdunEEe2dEb0vlBzM_g" name="a1" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Anphd-nEEe2dEb0vlBzM_g" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnpheOnEEe2dEb0vlBzM_g" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnpheenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AnqIgOnEEe2dEb0vlBzM_g" name="canCombineEntriesInPlace" visibility="private" method="_AsdwBenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnqIgenEEe2dEb0vlBzM_g" name="a1" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnqIgunEEe2dEb0vlBzM_g" name="a2" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnqIg-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AnqIhOnEEe2dEb0vlBzM_g" name="combinedEntriesInPlace" visibility="private" method="_AsdwCenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnqIhenEEe2dEb0vlBzM_g" name="a1" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnqIhunEEe2dEb0vlBzM_g" name="a2" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnqIh-nEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnqvkOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AnqvkenEEe2dEb0vlBzM_g" name="addToSchedule" visibility="protected" method="_AsdwDunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnqvkunEEe2dEb0vlBzM_g" name="next" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Anqvk-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AnqvlOnEEe2dEb0vlBzM_g" name="reportNotSchedulable" visibility="private" method="_AsdwEenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnqvlenEEe2dEb0vlBzM_g" name="object" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_AO_J0OnEEe2dEb0vlBzM_g" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_ArCMo-nEEe2dEb0vlBzM_g" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ArCzsenEEe2dEb0vlBzM_g" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asb61OnEEe2dEb0vlBzM_g" name="ScheduleLocation" specification="_AO_w4OnEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_Asb61enEEe2dEb0vlBzM_g" type="_AO_J0OnEEe2dEb0vlBzM_g" direction="return"/>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asb61unEEe2dEb0vlBzM_g" name="ScheduleLocation" specification="_APAX8OnEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_Asb61-nEEe2dEb0vlBzM_g" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Asb62OnEEe2dEb0vlBzM_g" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Asb62enEEe2dEb0vlBzM_g" type="_AO_J0OnEEe2dEb0vlBzM_g" direction="return"/>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asb62unEEe2dEb0vlBzM_g" name="getChannel" specification="_APA_AOnEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_Asb62-nEEe2dEb0vlBzM_g" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asb63OnEEe2dEb0vlBzM_g" name="getTime" specification="_APA_AunEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_Asb63enEEe2dEb0vlBzM_g" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_AO_w4OnEEe2dEb0vlBzM_g" name="ScheduleLocation" visibility="package" method="_Asb61OnEEe2dEb0vlBzM_g">
                  <eAnnotations xmi:id="_AO_w4enEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_AO_w4unEEe2dEb0vlBzM_g" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_AO_w4-nEEe2dEb0vlBzM_g" type="_AO_J0OnEEe2dEb0vlBzM_g" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_APAX8OnEEe2dEb0vlBzM_g" name="ScheduleLocation" visibility="package" method="_Asb61unEEe2dEb0vlBzM_g">
                  <eAnnotations xmi:id="_APAX8-nEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_APAX9OnEEe2dEb0vlBzM_g" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_APAX8enEEe2dEb0vlBzM_g" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_APAX8unEEe2dEb0vlBzM_g" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_APAX9enEEe2dEb0vlBzM_g" type="_AO_J0OnEEe2dEb0vlBzM_g" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_APA_AOnEEe2dEb0vlBzM_g" name="getChannel" visibility="protected" method="_Asb62unEEe2dEb0vlBzM_g">
                  <ownedComment xmi:id="_AtXu8-nEEe2dEb0vlBzM_g">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_APA_AenEEe2dEb0vlBzM_g" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_APA_AunEEe2dEb0vlBzM_g" name="getTime" visibility="protected" method="_Asb63OnEEe2dEb0vlBzM_g">
                  <ownedComment xmi:id="_AtXu9OnEEe2dEb0vlBzM_g">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_APA_A-nEEe2dEb0vlBzM_g" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_APT58OnEEe2dEb0vlBzM_g" name="VisualizationImplementation">
              <ownedComment xmi:id="_AtXu_OnEEe2dEb0vlBzM_g">
                <body>Handles visualizations for Warp program outputs.&#xD;
This includes creating either GraphViz files (.gv) or WARP files (.wf) and&#xD;
displaying graphs in a new window.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ArDawOnEEe2dEb0vlBzM_g" name="visualization" visibility="private" type="_ALaRYOnEEe2dEb0vlBzM_g" association="_AuLnQenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_ArEB0enEEe2dEb0vlBzM_g" name="fileContent" visibility="private" type="_ALaRYOnEEe2dEb0vlBzM_g" association="_AuMOUenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_ArEB0-nEEe2dEb0vlBzM_g" name="window" visibility="private" type="_AMYhwOnEEe2dEb0vlBzM_g" association="_AuM1YenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_ArEo4enEEe2dEb0vlBzM_g" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArEo4-nEEe2dEb0vlBzM_g" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArFP8OnEEe2dEb0vlBzM_g" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArFP8unEEe2dEb0vlBzM_g" name="fm" visibility="private" type="_ALqJAOnEEe2dEb0vlBzM_g" association="_AuNccenEEe2dEb0vlBzM_g">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArFP8-nEEe2dEb0vlBzM_g" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArF3AenEEe2dEb0vlBzM_g" name="warp" visibility="private" type="_ANjmcOnEEe2dEb0vlBzM_g" association="_AuODgenEEe2dEb0vlBzM_g">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArF3AunEEe2dEb0vlBzM_g" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArF3BOnEEe2dEb0vlBzM_g" name="workLoad" visibility="private" type="_ARd2EOnEEe2dEb0vlBzM_g" association="_AuPRoOnEEe2dEb0vlBzM_g">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArF3BenEEe2dEb0vlBzM_g" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArGeEenEEe2dEb0vlBzM_g" name="visualizationObject" visibility="private" type="_AOPi8OnEEe2dEb0vlBzM_g" association="_AuP4sOnEEe2dEb0vlBzM_g"/>
              <interfaceRealization xmi:id="_AnskwOnEEe2dEb0vlBzM_g" client="_APT58OnEEe2dEb0vlBzM_g" supplier="_AO31EOnEEe2dEb0vlBzM_g" contract="_AO31EOnEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AseXEOnEEe2dEb0vlBzM_g" name="VisualizationImplementation" specification="_ApxBUenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AseXEenEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AseXEunEEe2dEb0vlBzM_g" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AseXE-nEEe2dEb0vlBzM_g" name="choice" type="_ApwaQOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AseXFOnEEe2dEb0vlBzM_g" type="_APT58OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AseXFenEEe2dEb0vlBzM_g" name="VisualizationImplementation" specification="_ApyPcenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AseXFunEEe2dEb0vlBzM_g" name="workLoad" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AseXF-nEEe2dEb0vlBzM_g" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AseXGOnEEe2dEb0vlBzM_g" name="choice" type="_ApxoZunEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AseXGenEEe2dEb0vlBzM_g" type="_APT58OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AseXGunEEe2dEb0vlBzM_g" name="toDisplay" specification="_APVvIOnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>System.out.println(&quot;Displaying visualization in toDisplay()&quot;);&#xD;
 System.out.println(visualization);&#xD;
 window = visualizationObject.displayVisualization();&#xD;
 if (window != null) {&#xD;
   window.setVisible();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AseXG-nEEe2dEb0vlBzM_g" name="toFile" specification="_APWWM-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ase-IOnEEe2dEb0vlBzM_g" name="toString" specification="_APW9Q-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ase-IenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ase-IunEEe2dEb0vlBzM_g" name="createVisualization" specification="_Apy2gOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ase-I-nEEe2dEb0vlBzM_g" name="choice" type="_ApwaQOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case RELIABILITIES:&#xD;
     // TODO Implement Reliability Analysis Visualization&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case SIMULATOR_INPUT:&#xD;
     // TODO Implement Simulator Input Visualization&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
&#xD;
   case LATENCY:&#xD;
     // TODO Implement Latency Analysis Visualization&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case CHANNEL:&#xD;
     // TODO Implement Channel Analysis Visualization&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp,&#xD;
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(&#xD;
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ase-JOnEEe2dEb0vlBzM_g" name="createVisualization" specification="_Apy2gunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ase-JenEEe2dEb0vlBzM_g" name="choice" type="_ApxoZunEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case COMUNICATION_GRAPH:&#xD;
     // createWarpVisualization();&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ase-JunEEe2dEb0vlBzM_g" name="createVisualization" specification="_ApzdkOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ase-J-nEEe2dEb0vlBzM_g" name="obj" type="_ApLygOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 /* display is file content printed to console */&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
 visualizationObject = obj;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ase-KOnEEe2dEb0vlBzM_g" name="createFileNameTemplate" specification="_APYLYOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ase-KenEEe2dEb0vlBzM_g" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ase-KunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 // Now create the fileNameTemplate using full output path and input filename&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_APVvIOnEEe2dEb0vlBzM_g" name="toDisplay" method="_AseXGunEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_APWWM-nEEe2dEb0vlBzM_g" name="toFile" method="_AseXG-nEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_APW9Q-nEEe2dEb0vlBzM_g" name="toString" method="_Ase-IOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_APXkUOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_APYLYOnEEe2dEb0vlBzM_g" name="createFileNameTemplate" visibility="private" method="_Ase-KOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtYWA-nEEe2dEb0vlBzM_g">
                  <body>Generates full path to output file.&#xD;
   * &#xD;
   * @param outputDirectory&#xD;
   * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_APYLYenEEe2dEb0vlBzM_g" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_APYycOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ApxBUenEEe2dEb0vlBzM_g" name="VisualizationImplementation" method="_AseXEOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_ApxoY-nEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ApxoZOnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_AtYWAOnEEe2dEb0vlBzM_g">
                  <body>Creates visualization from warp program output.&#xD;
   * &#xD;
   * @param warp            WarpInterface object.&#xD;
   * @param outputDirectory Where to save the visualization&#xD;
   * @param choice          Type of visualization to create. @see Visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_ApxoYOnEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_ApxoYenEEe2dEb0vlBzM_g" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ApxoYunEEe2dEb0vlBzM_g" name="choice" type="_ApwaQOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_ApxoZenEEe2dEb0vlBzM_g" type="_APT58OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ApyPcenEEe2dEb0vlBzM_g" name="VisualizationImplementation" method="_AseXFenEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_ApyPdenEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ApyPdunEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_AtYWAenEEe2dEb0vlBzM_g">
                  <body>Creates visualization from given workload.&#xD;
   * &#xD;
   * @param workLoad        WorkLoad object&#xD;
   * @param outputDirectory Where to save the visualization&#xD;
   * @param choice          Type of visualization to create. @see Visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_ApyPcunEEe2dEb0vlBzM_g" name="workLoad" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_ApyPc-nEEe2dEb0vlBzM_g" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ApyPdOnEEe2dEb0vlBzM_g" name="choice" type="_ApxoZunEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_ApyPd-nEEe2dEb0vlBzM_g" type="_APT58OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Apy2gOnEEe2dEb0vlBzM_g" name="createVisualization" visibility="private" method="_Ase-IunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Apy2genEEe2dEb0vlBzM_g" name="choice" type="_ApwaQOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Apy2gunEEe2dEb0vlBzM_g" name="createVisualization" visibility="private" method="_Ase-JOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtYWAunEEe2dEb0vlBzM_g">
                  <body>Generates visualization from workload choice.&#xD;
   * Either communication graph, graphviz, or input graph.&#xD;
   * &#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_Apy2g-nEEe2dEb0vlBzM_g" name="choice" type="_ApxoZunEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ApzdkOnEEe2dEb0vlBzM_g" name="createVisualization" visibility="private" method="_Ase-JunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ApzdkenEEe2dEb0vlBzM_g" name="obj" type="_ApLygOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_APdq8OnEEe2dEb0vlBzM_g" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_ArHFIOnEEe2dEb0vlBzM_g" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArHFIenEEe2dEb0vlBzM_g" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArHFIunEEe2dEb0vlBzM_g" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArHFI-nEEe2dEb0vlBzM_g" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArHsMOnEEe2dEb0vlBzM_g" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArHsMenEEe2dEb0vlBzM_g" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArHsMunEEe2dEb0vlBzM_g" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArHsM-nEEe2dEb0vlBzM_g" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArHsNOnEEe2dEb0vlBzM_g" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArHsNenEEe2dEb0vlBzM_g" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArHsNunEEe2dEb0vlBzM_g" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArITQenEEe2dEb0vlBzM_g" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArITQunEEe2dEb0vlBzM_g" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArITQ-nEEe2dEb0vlBzM_g" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArI6UOnEEe2dEb0vlBzM_g" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArI6UunEEe2dEb0vlBzM_g" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArI6VOnEEe2dEb0vlBzM_g" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArJhYenEEe2dEb0vlBzM_g" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArJhYunEEe2dEb0vlBzM_g" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArJhY-nEEe2dEb0vlBzM_g" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArJhZOnEEe2dEb0vlBzM_g" name="predecessor" type="_APdq8OnEEe2dEb0vlBzM_g" association="_AtYWBOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_ArKIcOnEEe2dEb0vlBzM_g" name="endTimes" visibility="private" type="_ANhxQOnEEe2dEb0vlBzM_g" association="_AuQfwOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_ArKvgenEEe2dEb0vlBzM_g" name="subObjects" type="_AnwPIenEEe2dEb0vlBzM_g" isReadOnly="true" association="_AuRG0OnEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsflMOnEEe2dEb0vlBzM_g" name="SchedulableObject" specification="_APguQOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsflMenEEe2dEb0vlBzM_g" type="_APdq8OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsflMunEEe2dEb0vlBzM_g" name="SchedulableObject" specification="_AnxdQOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsflM-nEEe2dEb0vlBzM_g" name="obj" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsflNOnEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsflNenEEe2dEb0vlBzM_g" type="_APdq8OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsflNunEEe2dEb0vlBzM_g" name="SchedulableObject" specification="_APhVUOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsflN-nEEe2dEb0vlBzM_g" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsflOOnEEe2dEb0vlBzM_g" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsflOenEEe2dEb0vlBzM_g" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsflOunEEe2dEb0vlBzM_g" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsflO-nEEe2dEb0vlBzM_g" type="_APdq8OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsflPOnEEe2dEb0vlBzM_g" name="SchedulableObject" specification="_APijcOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsflPenEEe2dEb0vlBzM_g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsflPunEEe2dEb0vlBzM_g" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsflP-nEEe2dEb0vlBzM_g" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsflQOnEEe2dEb0vlBzM_g" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsflQenEEe2dEb0vlBzM_g" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsflQunEEe2dEb0vlBzM_g" type="_APdq8OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsflQ-nEEe2dEb0vlBzM_g" name="setDefaultParameters" specification="_APjKgunEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsflROnEEe2dEb0vlBzM_g" name="getAllEndTimes" specification="_APjKg-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsflRenEEe2dEb0vlBzM_g" type="_ANhxQOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsflRunEEe2dEb0vlBzM_g" name="addToEndTimes" specification="_APkYoOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsflR-nEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsgMQOnEEe2dEb0vlBzM_g" name="peekEndTimes" specification="_APkYounEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsgMQenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsgMQunEEe2dEb0vlBzM_g" name="pollEndTimes" specification="_APk_sOnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsgMQ-nEEe2dEb0vlBzM_g" name="addSubObject" specification="_AnyEUOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsgMROnEEe2dEb0vlBzM_g" name="obj" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsgMRenEEe2dEb0vlBzM_g" name="getName" specification="_APk_senEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsgMRunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsgMR-nEEe2dEb0vlBzM_g" name="setName" specification="_APlmwOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsgMSOnEEe2dEb0vlBzM_g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsgMSenEEe2dEb0vlBzM_g" name="getReleaseTime" specification="_APlmwunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsgMSunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsgMS-nEEe2dEb0vlBzM_g" name="getPhase" specification="_APmN0OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsgMTOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsgMTenEEe2dEb0vlBzM_g" name="getStartTime" specification="_APmN0unEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsgMTunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsgMT-nEEe2dEb0vlBzM_g" name="setEndTime" specification="_APm04OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsgMUOnEEe2dEb0vlBzM_g" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsgzUOnEEe2dEb0vlBzM_g" name="setStartTime" specification="_APm04unEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsgzUenEEe2dEb0vlBzM_g" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsgzUunEEe2dEb0vlBzM_g" name="setReleaseTime" specification="_APnb8OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsgzU-nEEe2dEb0vlBzM_g" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsgzVOnEEe2dEb0vlBzM_g" name="setPeriod" specification="_APoDAOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsgzVenEEe2dEb0vlBzM_g" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsgzVunEEe2dEb0vlBzM_g" name="setPhase" specification="_APoDAunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsgzV-nEEe2dEb0vlBzM_g" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsgzWOnEEe2dEb0vlBzM_g" name="setNextReleaseTime" specification="_APoqEOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsgzWenEEe2dEb0vlBzM_g" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsgzWunEEe2dEb0vlBzM_g" name="maxPhaseComparison" specification="_AnyEUunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsgzW-nEEe2dEb0vlBzM_g" name="obj2" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsgzXOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsgzXenEEe2dEb0vlBzM_g" name="maxPhaseComparison" specification="_AnyEVenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsgzXunEEe2dEb0vlBzM_g" name="obj1" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsgzX-nEEe2dEb0vlBzM_g" name="obj2" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsgzYOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsgzYenEEe2dEb0vlBzM_g" name="deadlineComparison" specification="_AnyrY-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsgzYunEEe2dEb0vlBzM_g" name="obj2" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsgzY-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AshaYOnEEe2dEb0vlBzM_g" name="deadlineComparison" specification="_AnyrZunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AshaYenEEe2dEb0vlBzM_g" name="obj1" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AshaYunEEe2dEb0vlBzM_g" name="obj2" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AshaY-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AshaZOnEEe2dEb0vlBzM_g" name="periodComparison" specification="_AnzScunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AshaZenEEe2dEb0vlBzM_g" name="obj2" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AshaZunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AshaZ-nEEe2dEb0vlBzM_g" name="periodComparison" specification="_AnzSdenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AshaaOnEEe2dEb0vlBzM_g" name="obj1" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AshaaenEEe2dEb0vlBzM_g" name="obj2" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AshaaunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ashaa-nEEe2dEb0vlBzM_g" name="priorityComparison" specification="_Anz5gOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AshabOnEEe2dEb0vlBzM_g" name="obj2" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AshabenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AshabunEEe2dEb0vlBzM_g" name="priorityComparison" specification="_Anz5g-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ashab-nEEe2dEb0vlBzM_g" name="obj1" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AshacOnEEe2dEb0vlBzM_g" name="obj2" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AshacenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AshacunEEe2dEb0vlBzM_g" name="releaseTimeComparison" specification="_An0gkOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Ashac-nEEe2dEb0vlBzM_g" name="obj2" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AshadOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AshadenEEe2dEb0vlBzM_g" name="releaseTimeComparison" specification="_An0gk-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AshadunEEe2dEb0vlBzM_g" name="obj1" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Ashad-nEEe2dEb0vlBzM_g" name="obj2" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AshaeOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsiBcOnEEe2dEb0vlBzM_g" name="LatestReleaseTimeComparison" specification="_An0gl-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsiBcenEEe2dEb0vlBzM_g" name="obj2" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsiBcunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsiBc-nEEe2dEb0vlBzM_g" name="LatestReleaseTimeComparison" specification="_An1HoenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsiBdOnEEe2dEb0vlBzM_g" name="obj1" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsiBdenEEe2dEb0vlBzM_g" name="obj2" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsiBdunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsiBd-nEEe2dEb0vlBzM_g" name="compareAscendingOrder" specification="_APrGUOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsiBeOnEEe2dEb0vlBzM_g" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsiBeenEEe2dEb0vlBzM_g" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsiBeunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsiBe-nEEe2dEb0vlBzM_g" name="compareDescendingOrder" specification="_APrtYOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsiBfOnEEe2dEb0vlBzM_g" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsiBfenEEe2dEb0vlBzM_g" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsiBfunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsiBf-nEEe2dEb0vlBzM_g" name="print" specification="_APsUcOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsiBgOnEEe2dEb0vlBzM_g" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsiBgenEEe2dEb0vlBzM_g" name="print" specification="_APsUcunEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_APguQOnEEe2dEb0vlBzM_g" name="SchedulableObject" visibility="package" method="_AsflMOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_APguQenEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_APguQunEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_APguQ-nEEe2dEb0vlBzM_g" type="_APdq8OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_APhVUOnEEe2dEb0vlBzM_g" name="SchedulableObject" visibility="package" method="_AsflNunEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_APh8ZOnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_APh8ZenEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_APh8YOnEEe2dEb0vlBzM_g" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_APh8YenEEe2dEb0vlBzM_g" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_APh8YunEEe2dEb0vlBzM_g" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_APh8Y-nEEe2dEb0vlBzM_g" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_APh8ZunEEe2dEb0vlBzM_g" type="_APdq8OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_APijcOnEEe2dEb0vlBzM_g" name="SchedulableObject" visibility="package" method="_AsflPOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_APijdunEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_APjKgOnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_APijcenEEe2dEb0vlBzM_g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_APijcunEEe2dEb0vlBzM_g" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_APijc-nEEe2dEb0vlBzM_g" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_APijdOnEEe2dEb0vlBzM_g" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_APijdenEEe2dEb0vlBzM_g" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_APjKgenEEe2dEb0vlBzM_g" type="_APdq8OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_APjKgunEEe2dEb0vlBzM_g" name="setDefaultParameters" visibility="private" method="_AsflQ-nEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_APjKg-nEEe2dEb0vlBzM_g" name="getAllEndTimes" method="_AsflROnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtYWB-nEEe2dEb0vlBzM_g">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_AnxdRunEEe2dEb0vlBzM_g" type="_ANhxQOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_APkYoOnEEe2dEb0vlBzM_g" name="addToEndTimes" method="_AsflRunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_APkYoenEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_APkYounEEe2dEb0vlBzM_g" name="peekEndTimes" method="_AsgMQOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_APkYo-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_APk_sOnEEe2dEb0vlBzM_g" name="pollEndTimes" method="_AsgMQunEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_APk_senEEe2dEb0vlBzM_g" name="getName" method="_AsgMRenEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtYWCOnEEe2dEb0vlBzM_g">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_APk_sunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_APlmwOnEEe2dEb0vlBzM_g" name="setName" method="_AsgMR-nEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtY9EOnEEe2dEb0vlBzM_g">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_APlmwenEEe2dEb0vlBzM_g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_APlmwunEEe2dEb0vlBzM_g" name="getReleaseTime" method="_AsgMSenEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtY9EenEEe2dEb0vlBzM_g">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_APlmw-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_APmN0OnEEe2dEb0vlBzM_g" name="getPhase" method="_AsgMS-nEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtY9EunEEe2dEb0vlBzM_g">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_APmN0enEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_APmN0unEEe2dEb0vlBzM_g" name="getStartTime" method="_AsgMTenEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtY9E-nEEe2dEb0vlBzM_g">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_APmN0-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_APm04OnEEe2dEb0vlBzM_g" name="setEndTime" method="_AsgMT-nEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtY9FOnEEe2dEb0vlBzM_g">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_APm04enEEe2dEb0vlBzM_g" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_APm04unEEe2dEb0vlBzM_g" name="setStartTime" method="_AsgzUOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtY9FenEEe2dEb0vlBzM_g">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_APm04-nEEe2dEb0vlBzM_g" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_APnb8OnEEe2dEb0vlBzM_g" name="setReleaseTime" method="_AsgzUunEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtY9FunEEe2dEb0vlBzM_g">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_APnb8enEEe2dEb0vlBzM_g" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_APoDAOnEEe2dEb0vlBzM_g" name="setPeriod" method="_AsgzVOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtY9F-nEEe2dEb0vlBzM_g">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_APoDAenEEe2dEb0vlBzM_g" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_APoDAunEEe2dEb0vlBzM_g" name="setPhase" method="_AsgzVunEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtY9GOnEEe2dEb0vlBzM_g">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_APoDA-nEEe2dEb0vlBzM_g" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_APoqEOnEEe2dEb0vlBzM_g" name="setNextReleaseTime" method="_AsgzWOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtY9GenEEe2dEb0vlBzM_g">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_APoqEenEEe2dEb0vlBzM_g" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_APrGUOnEEe2dEb0vlBzM_g" name="compareAscendingOrder" method="_AsiBd-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_APrGUenEEe2dEb0vlBzM_g" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_APrGUunEEe2dEb0vlBzM_g" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_APrGU-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_APrtYOnEEe2dEb0vlBzM_g" name="compareDescendingOrder" method="_AsiBe-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_APrtYenEEe2dEb0vlBzM_g" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_APrtYunEEe2dEb0vlBzM_g" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_APrtY-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_APsUcOnEEe2dEb0vlBzM_g" name="print" method="_AsiBf-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_APsUcenEEe2dEb0vlBzM_g" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_APsUcunEEe2dEb0vlBzM_g" name="print" method="_AsiBgenEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AnxdQOnEEe2dEb0vlBzM_g" name="SchedulableObject" visibility="package" method="_AsflMunEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AnxdQ-nEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AnxdROnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_AtYWBunEEe2dEb0vlBzM_g">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_AnxdQenEEe2dEb0vlBzM_g" name="obj" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnxdQunEEe2dEb0vlBzM_g" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AnxdRenEEe2dEb0vlBzM_g" type="_APdq8OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AnyEUOnEEe2dEb0vlBzM_g" name="addSubObject" method="_AsgMQ-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnyEUenEEe2dEb0vlBzM_g" name="obj" type="_APdq8OnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AnyEUunEEe2dEb0vlBzM_g" name="maxPhaseComparison" method="_AsgzWunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnyEU-nEEe2dEb0vlBzM_g" name="obj2" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnyEVOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AnyEVenEEe2dEb0vlBzM_g" name="maxPhaseComparison" method="_AsgzXenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnyrYOnEEe2dEb0vlBzM_g" name="obj1" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnyrYenEEe2dEb0vlBzM_g" name="obj2" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnyrYunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AnyrY-nEEe2dEb0vlBzM_g" name="deadlineComparison" method="_AsgzYenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnyrZOnEEe2dEb0vlBzM_g" name="obj2" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnyrZenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AnyrZunEEe2dEb0vlBzM_g" name="deadlineComparison" method="_AshaYOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnyrZ-nEEe2dEb0vlBzM_g" name="obj1" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnzScOnEEe2dEb0vlBzM_g" name="obj2" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnzScenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AnzScunEEe2dEb0vlBzM_g" name="periodComparison" method="_AshaZOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnzSc-nEEe2dEb0vlBzM_g" name="obj2" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnzSdOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AnzSdenEEe2dEb0vlBzM_g" name="periodComparison" method="_AshaZ-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AnzSdunEEe2dEb0vlBzM_g" name="obj1" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnzSd-nEEe2dEb0vlBzM_g" name="obj2" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AnzSeOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Anz5gOnEEe2dEb0vlBzM_g" name="priorityComparison" method="_Ashaa-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Anz5genEEe2dEb0vlBzM_g" name="obj2" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Anz5gunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Anz5g-nEEe2dEb0vlBzM_g" name="priorityComparison" method="_AshabunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Anz5hOnEEe2dEb0vlBzM_g" name="obj1" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Anz5henEEe2dEb0vlBzM_g" name="obj2" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Anz5hunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_An0gkOnEEe2dEb0vlBzM_g" name="releaseTimeComparison" method="_AshacunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_An0gkenEEe2dEb0vlBzM_g" name="obj2" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_An0gkunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_An0gk-nEEe2dEb0vlBzM_g" name="releaseTimeComparison" method="_AshadenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_An0glOnEEe2dEb0vlBzM_g" name="obj1" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_An0glenEEe2dEb0vlBzM_g" name="obj2" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_An0glunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_An0gl-nEEe2dEb0vlBzM_g" name="LatestReleaseTimeComparison" method="_AsiBcOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_An0gmOnEEe2dEb0vlBzM_g" name="obj2" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_An1HoOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_An1HoenEEe2dEb0vlBzM_g" name="LatestReleaseTimeComparison" method="_AsiBc-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_An1HounEEe2dEb0vlBzM_g" name="obj1" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_An1Ho-nEEe2dEb0vlBzM_g" name="obj2" type="_APdq8OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_An1HpOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AP36oOnEEe2dEb0vlBzM_g" name="Warp">
              <ownedComment xmi:id="_AtZkIOnEEe2dEb0vlBzM_g">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ArMksOnEEe2dEb0vlBzM_g" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArMksenEEe2dEb0vlBzM_g" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArMksunEEe2dEb0vlBzM_g" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_ApmCMOnEEe2dEb0vlBzM_g" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArMks-nEEe2dEb0vlBzM_g" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArMktOnEEe2dEb0vlBzM_g" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_ApmCMOnEEe2dEb0vlBzM_g" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArNLwOnEEe2dEb0vlBzM_g" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArNLwenEEe2dEb0vlBzM_g" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArNLwunEEe2dEb0vlBzM_g" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArNLw-nEEe2dEb0vlBzM_g" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_AOuEEOnEEe2dEb0vlBzM_g" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArNLxOnEEe2dEb0vlBzM_g" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArNLxenEEe2dEb0vlBzM_g" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArNLxunEEe2dEb0vlBzM_g" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArNLx-nEEe2dEb0vlBzM_g" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArNy0enEEe2dEb0vlBzM_g" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArNy0-nEEe2dEb0vlBzM_g" name="minLQ" visibility="private" isStatic="true" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_ArOZ4enEEe2dEb0vlBzM_g" name="e2e" visibility="private" isStatic="true" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_ArOZ4-nEEe2dEb0vlBzM_g" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArPA8enEEe2dEb0vlBzM_g" name="guiRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArPA8-nEEe2dEb0vlBzM_g" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArPoAOnEEe2dEb0vlBzM_g" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArPoAunEEe2dEb0vlBzM_g" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArQPEOnEEe2dEb0vlBzM_g" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArQPEunEEe2dEb0vlBzM_g" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArQPFOnEEe2dEb0vlBzM_g" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArQ2IenEEe2dEb0vlBzM_g" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArQ2I-nEEe2dEb0vlBzM_g" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArRdMenEEe2dEb0vlBzM_g" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArRdMunEEe2dEb0vlBzM_g" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArRdNOnEEe2dEb0vlBzM_g" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArSEQOnEEe2dEb0vlBzM_g" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArSEQunEEe2dEb0vlBzM_g" name="schedulerSelected" visibility="private" isStatic="true" type="_AOuEEOnEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsiogOnEEe2dEb0vlBzM_g" name="main" specification="_AP698OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsiogenEEe2dEb0vlBzM_g" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AsiogunEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
 setWarpParameters(args);&#xD;
&#xD;
 // and print out the values if in verbose mode&#xD;
 if (verboseMode) {&#xD;
   printWarpParameters();&#xD;
 }&#xD;
&#xD;
 // Create and visualize the workload&#xD;
 // inputFile string, which may be null,&#xD;
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
 if (allRequested) {&#xD;
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
     visualize(workLoad, choice); // visualize all Program choices&#xD;
   }&#xD;
   // Create and visualize the Warp System&#xD;
   if (schedulerRequested) {&#xD;
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
     verifyPerformanceRequirements(warp);&#xD;
     for (SystemChoices choice : SystemChoices.values()) {&#xD;
       visualize(warp, choice); // visualize all System choices&#xD;
     }&#xD;
   } else { // create a system for all scheduler choices&#xD;
     for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
       schedulerSelected = sch;&#xD;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
       verifyPerformanceRequirements(warp);&#xD;
       for (SystemChoices choice : SystemChoices.values()) {&#xD;
         visualize(warp, choice); // visualize all System choices&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 } else { // visualize warp workload, source program and other requested items&#xD;
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
   if (wfRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
   }&#xD;
   if (gvRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
   }&#xD;
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
   verifyPerformanceRequirements(warp);&#xD;
   visualize(warp, SystemChoices.SOURCE);&#xD;
   if (caRequested) {&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
   if (laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY);&#xD;
   }&#xD;
   if (latencyRequested || laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
   }&#xD;
   if (raRequested) {&#xD;
     visualize(warp, SystemChoices.RELIABILITIES);&#xD;
   }&#xD;
 }&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsjPkOnEEe2dEb0vlBzM_g" name="visualize" specification="_An6AIOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsjPkenEEe2dEb0vlBzM_g" name="workLoad" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsjPkunEEe2dEb0vlBzM_g" name="choice" type="_AO5qQunEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>var viz =&#xD;
     VisualizationFactory.createWorkLoadVisualization(workLoad, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   if (verboseMode) {&#xD;
     System.out.println(viz.toString());&#xD;
   }&#xD;
   viz.toFile();&#xD;
   if (guiRequested) {&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsjPk-nEEe2dEb0vlBzM_g" name="visualize" specification="_An6nMenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsjPlOnEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsjPlenEEe2dEb0vlBzM_g" name="choice" type="_AO4cIOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createProgramVisualization(warp, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   viz.toFile();&#xD;
   if (guiRequested &amp;&amp; schedulerRequested) {&#xD;
     /* Only display window when a specific scheduler has been requested */&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsjPlunEEe2dEb0vlBzM_g" name="verifyPerformanceRequirements" specification="_An6nNOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsjPl-nEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
 verifyReliabilities(warp);&#xD;
 verifyNoChannelConflicts(warp);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsjPmOnEEe2dEb0vlBzM_g" name="verifyReliabilities" specification="_An7OQOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsjPmenEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
   /* RealTime HART doesn't adhere to reliability targets */&#xD;
   if (!warp.reliabilitiesMet()) {&#xD;
     System.err.printf(&#xD;
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
             + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   } else if (verboseMode) {&#xD;
     System.out.printf(&#xD;
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsjPmunEEe2dEb0vlBzM_g" name="verifyDeadlines" specification="_An7OQunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsjPm-nEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
   visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsjPnOnEEe2dEb0vlBzM_g" name="verifyNoChannelConflicts" specification="_An7OROnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsjPnenEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
   System.err&#xD;
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
   if (!caRequested) { // only need to create the visualization if not already requested&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsjPnunEEe2dEb0vlBzM_g" name="setWarpParameters" specification="_AP8zIOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsjPn-nEEe2dEb0vlBzM_g" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AsjPoOnEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this&#xD;
                                                      // function--need to set up globals?&#xD;
&#xD;
 // create holder objects for storing results ...&#xD;
 // BooleanHolder debug = new BooleanHolder();&#xD;
 StringHolder schedulerSelected = new StringHolder();&#xD;
 IntHolder channels = new IntHolder();&#xD;
 IntHolder faults = new IntHolder();&#xD;
 DoubleHolder m = new DoubleHolder();&#xD;
 DoubleHolder end2end = new DoubleHolder();&#xD;
 BooleanHolder gui = new BooleanHolder();&#xD;
 BooleanHolder gv = new BooleanHolder();&#xD;
 BooleanHolder wf = new BooleanHolder();&#xD;
 BooleanHolder ra = new BooleanHolder();&#xD;
 BooleanHolder la = new BooleanHolder();&#xD;
 BooleanHolder ca = new BooleanHolder();&#xD;
 BooleanHolder s = new BooleanHolder();&#xD;
 BooleanHolder all = new BooleanHolder();&#xD;
 BooleanHolder latency = new BooleanHolder();&#xD;
 BooleanHolder verbose = new BooleanHolder();&#xD;
 StringHolder input = new StringHolder();&#xD;
 StringHolder output = new StringHolder();&#xD;
&#xD;
 // create the parser and specify the allowed options ...&#xD;
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,&#xD;
     schedulerSelected);&#xD;
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
 parser.addOption(&#xD;
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,&#xD;
     end2end);&#xD;
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,&#xD;
     faults);&#xD;
 parser.addOption(&quot;-gui %v #create a gui visualizations&quot;, gui);&#xD;
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
 parser.addOption(&#xD;
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
     wf);&#xD;
 parser.addOption(&#xD;
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,&#xD;
     ra);&#xD;
 parser.addOption(&#xD;
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
 parser.addOption(&#xD;
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,&#xD;
     output);&#xD;
 parser.addOption(&#xD;
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
     verbose);&#xD;
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
 // $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
&#xD;
 // match the arguments ...&#xD;
 parser.matchAllArgs(args);&#xD;
&#xD;
 // Set WARP system configuration options&#xD;
 if (channels.value > 0) {&#xD;
   nChannels = channels.value; // set option specified&#xD;
 } else {&#xD;
   nChannels = NUM_CHANNELS; // set to default&#xD;
 }&#xD;
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
   numFaults = faults.value; // set option specified&#xD;
 } else {&#xD;
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
 }&#xD;
 if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   minLQ = m.value; // set option specified&#xD;
 } else {&#xD;
   minLQ = MIN_LQ; // set to default&#xD;
 }&#xD;
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   e2e = end2end.value; // set option specified&#xD;
 } else {&#xD;
   e2e = E2E; // set to default&#xD;
 }&#xD;
 if (output.value != null) { // default output subdirectory (from working directory)&#xD;
   outputSubDirectory = output.value; // set option specified&#xD;
 } else {&#xD;
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
 }&#xD;
&#xD;
 guiRequested = gui.value; // GraphVis file requested flag&#xD;
 gvRequested = gv.value; // GraphVis file requested flag&#xD;
 wfRequested = wf.value; // WARP file requested flag&#xD;
 raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
 laRequested = la.value; // Latency Analysis file requested flag&#xD;
 caRequested = ca.value; // Latency Analysis file requested flag&#xD;
 simRequested = s.value; // Simulation file requested flag&#xD;
 allRequested = all.value; // all out files requested flag&#xD;
 latencyRequested = latency.value; // latency report requested flag&#xD;
 verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
 inputFile = input.value; // input file specified&#xD;
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
   schedulerRequested = true;&#xD;
   switch (schedulerSelected.value) {&#xD;
     case &quot;priority&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
&#xD;
     case &quot;rm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
       break;&#xD;
&#xD;
     case &quot;dm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
       break;&#xD;
&#xD;
     case &quot;rtHart&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
       break;&#xD;
&#xD;
     case &quot;poset&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
       break;&#xD;
&#xD;
     default:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
   }&#xD;
 } else { // null value when no scheduler specified; so use default&#xD;
   Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsjPoenEEe2dEb0vlBzM_g" name="printWarpParameters" specification="_AP9aMunEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>// print all system configuration parameters&#xD;
 // Print out each of the system configuration values&#xD;
 System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
 System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
 System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
 System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
 System.out.println(&quot;\tguiRequest flag=&quot; + guiRequested);&#xD;
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
 if (inputFile != null) {&#xD;
   System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
 } else {&#xD;
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
 }&#xD;
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AP698OnEEe2dEb0vlBzM_g" name="main" isStatic="true" method="_AsiogOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtZkIenEEe2dEb0vlBzM_g">
                  <body>The main entry point for the application.&#xD;
   * Run with -help argument for more information about commands.&#xD;
   * @param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_AP698enEEe2dEb0vlBzM_g" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AP7lAOnEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AP8zIOnEEe2dEb0vlBzM_g" name="setWarpParameters" visibility="private" isStatic="true" method="_AsjPnunEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtZkKOnEEe2dEb0vlBzM_g">
                  <body>Parses program arguments and assigns each attribute.&#xD;
   * &#xD;
   * @param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_AP8zIenEEe2dEb0vlBzM_g" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AP9aMOnEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AP9aMunEEe2dEb0vlBzM_g" name="printWarpParameters" visibility="private" isStatic="true" method="_AsjPoenEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtZkKenEEe2dEb0vlBzM_g">
                  <body>Displays warp parameters to console.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_An6AIOnEEe2dEb0vlBzM_g" name="visualize" visibility="private" isStatic="true" method="_AsjPkOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtZkIunEEe2dEb0vlBzM_g">
                  <body>Visualizes workload by creating visualization object from workload object.&#xD;
   * Either prints to console or displays GUI depending on workload choice.&#xD;
   * &#xD;
   * @param workLoad&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_An6AIenEEe2dEb0vlBzM_g" name="workLoad" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_An6nMOnEEe2dEb0vlBzM_g" name="choice" type="_AO5qQunEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_An6nMenEEe2dEb0vlBzM_g" name="visualize" visibility="private" isStatic="true" method="_AsjPk-nEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtZkI-nEEe2dEb0vlBzM_g">
                  <body>Visualizes workload by creating visualization object from WarpInterface object.&#xD;
   * Saves visualization to file.&#xD;
   * &#xD;
   * @param workLoad&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_An6nMunEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_An6nM-nEEe2dEb0vlBzM_g" name="choice" type="_AO4cIOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_An6nNOnEEe2dEb0vlBzM_g" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_AsjPlunEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtZkJOnEEe2dEb0vlBzM_g">
                  <body>Verifies deadlines, reliabilities, and channel conflicts.&#xD;
   * &#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_An6nNenEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_An7OQOnEEe2dEb0vlBzM_g" name="verifyReliabilities" visibility="private" isStatic="true" method="_AsjPmOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtZkJenEEe2dEb0vlBzM_g">
                  <body>Verifies end to end reliabilities and displays to console.&#xD;
   * &#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_An7OQenEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_An7OQunEEe2dEb0vlBzM_g" name="verifyDeadlines" visibility="private" isStatic="true" method="_AsjPmunEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtZkJunEEe2dEb0vlBzM_g">
                  <body>Verifies that all flows meet their deadlines.&#xD;
   * &#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_An7OQ-nEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_An7OROnEEe2dEb0vlBzM_g" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_AsjPnOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtZkJ-nEEe2dEb0vlBzM_g">
                  <body>Checks for conflicts between channels and prints to console.&#xD;
   * &#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_An7ORenEEe2dEb0vlBzM_g" name="warp" type="_ANjmcOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AQIZUOnEEe2dEb0vlBzM_g" name="WarpDSL">
              <ownedComment xmi:id="_AtZkKunEEe2dEb0vlBzM_g">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ArSrUOnEEe2dEb0vlBzM_g" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArSrUenEEe2dEb0vlBzM_g" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArTSYOnEEe2dEb0vlBzM_g" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArTSYenEEe2dEb0vlBzM_g" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArTSYunEEe2dEb0vlBzM_g" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArTSY-nEEe2dEb0vlBzM_g" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AskdtOnEEe2dEb0vlBzM_g" name="getInstructionParameters" specification="_AQQVIOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AskdtenEEe2dEb0vlBzM_g" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AskdtunEEe2dEb0vlBzM_g" type="_AmS2kOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AQQVIOnEEe2dEb0vlBzM_g" name="getInstructionParameters" method="_AskdtOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AQQ8MOnEEe2dEb0vlBzM_g" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ap4WEOnEEe2dEb0vlBzM_g" type="_AmS2kOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_AQJncOnEEe2dEb0vlBzM_g" name="InstructionParameters">
                <ownedAttribute xmi:id="_ArTSZOnEEe2dEb0vlBzM_g" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArTSZenEEe2dEb0vlBzM_g" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ArTSZunEEe2dEb0vlBzM_g" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArT5cOnEEe2dEb0vlBzM_g" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ArT5cenEEe2dEb0vlBzM_g" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArT5cunEEe2dEb0vlBzM_g" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ArT5c-nEEe2dEb0vlBzM_g" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArT5dOnEEe2dEb0vlBzM_g" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ArT5denEEe2dEb0vlBzM_g" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArT5dunEEe2dEb0vlBzM_g" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ArUggOnEEe2dEb0vlBzM_g" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArUggenEEe2dEb0vlBzM_g" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ArUgg-nEEe2dEb0vlBzM_g" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArUghOnEEe2dEb0vlBzM_g" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asj2oOnEEe2dEb0vlBzM_g" name="getCoordinator" specification="_AQK1kOnEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_Asj2oenEEe2dEb0vlBzM_g" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asj2ounEEe2dEb0vlBzM_g" name="setCoordinator" specification="_AQMDsOnEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_Asj2o-nEEe2dEb0vlBzM_g" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asj2pOnEEe2dEb0vlBzM_g" name="setName" specification="_AQMDsunEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_Asj2penEEe2dEb0vlBzM_g" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asj2punEEe2dEb0vlBzM_g" name="setFlow" specification="_AQMqwenEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_Asj2p-nEEe2dEb0vlBzM_g" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asj2qOnEEe2dEb0vlBzM_g" name="setSrc" specification="_AQNR0OnEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_Asj2qenEEe2dEb0vlBzM_g" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asj2qunEEe2dEb0vlBzM_g" name="setSnk" specification="_AQN44OnEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_Asj2q-nEEe2dEb0vlBzM_g" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AskdsOnEEe2dEb0vlBzM_g" name="setChannel" specification="_AQOf8OnEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_AskdsenEEe2dEb0vlBzM_g" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AskdsunEEe2dEb0vlBzM_g" name="unused" specification="_AQOf8unEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_Askds-nEEe2dEb0vlBzM_g" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_AQK1kOnEEe2dEb0vlBzM_g" name="getCoordinator" method="_Asj2oOnEEe2dEb0vlBzM_g">
                  <ownedComment xmi:id="_AtZkK-nEEe2dEb0vlBzM_g">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_AQLcoOnEEe2dEb0vlBzM_g" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_AQMDsOnEEe2dEb0vlBzM_g" name="setCoordinator" method="_Asj2ounEEe2dEb0vlBzM_g">
                  <ownedComment xmi:id="_AtZkLOnEEe2dEb0vlBzM_g">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_AQMDsenEEe2dEb0vlBzM_g" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_AQMDsunEEe2dEb0vlBzM_g" name="setName" visibility="private" method="_Asj2pOnEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_AQMqwOnEEe2dEb0vlBzM_g" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_AQMqwenEEe2dEb0vlBzM_g" name="setFlow" visibility="private" method="_Asj2punEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_AQMqwunEEe2dEb0vlBzM_g" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_AQNR0OnEEe2dEb0vlBzM_g" name="setSrc" visibility="private" method="_Asj2qOnEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_AQNR0enEEe2dEb0vlBzM_g" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_AQN44OnEEe2dEb0vlBzM_g" name="setSnk" visibility="private" method="_Asj2qunEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_AQN44enEEe2dEb0vlBzM_g" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_AQOf8OnEEe2dEb0vlBzM_g" name="setChannel" visibility="private" method="_AskdsOnEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_AQOf8enEEe2dEb0vlBzM_g" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_AQOf8unEEe2dEb0vlBzM_g" name="unused" method="_AskdsunEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_AQPHAOnEEe2dEb0vlBzM_g" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_AQSKUOnEEe2dEb0vlBzM_g" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_Ap5kMenEEe2dEb0vlBzM_g" general="_Ap49IOnEEe2dEb0vlBzM_g"/>
                <ownedAttribute xmi:id="_ArVHkOnEEe2dEb0vlBzM_g" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ArVuoOnEEe2dEb0vlBzM_g" name="instructionParametersArrayList" visibility="package" type="_AmS2kOnEEe2dEb0vlBzM_g" association="_AuRt4enEEe2dEb0vlBzM_g"/>
                <ownedAttribute xmi:id="_ArWVsOnEEe2dEb0vlBzM_g" name="instructionParameters" visibility="package" type="_AQJncOnEEe2dEb0vlBzM_g" association="_AuSU8enEEe2dEb0vlBzM_g"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Askdt-nEEe2dEb0vlBzM_g" name="ListenerDsl" specification="_AQSxYOnEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_AskduOnEEe2dEb0vlBzM_g" type="_AQSKUOnEEe2dEb0vlBzM_g" direction="return"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AskduenEEe2dEb0vlBzM_g" name="getInstructionParameters" specification="_AQTYc-nEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_AskduunEEe2dEb0vlBzM_g" type="_AmS2kOnEEe2dEb0vlBzM_g" direction="return"/>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Askdu-nEEe2dEb0vlBzM_g" name="enterAction" specification="_An-RkenEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_AskdvOnEEe2dEb0vlBzM_g" name="ctx" type="_An9qgOnEEe2dEb0vlBzM_g"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AskdvenEEe2dEb0vlBzM_g" name="exitAction" specification="_An-4ounEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_AskdvunEEe2dEb0vlBzM_g" name="ctx" type="_An9qgOnEEe2dEb0vlBzM_g"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AslEwOnEEe2dEb0vlBzM_g" name="exitFlowName" specification="_AoAGwOnEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_AslEwenEEe2dEb0vlBzM_g" name="ctx" type="_An_fsunEEe2dEb0vlBzM_g"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AslEwunEEe2dEb0vlBzM_g" name="exitCmd" specification="_AoAt0enEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_AslEw-nEEe2dEb0vlBzM_g" name="ctx" type="_AoAGxenEEe2dEb0vlBzM_g"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AslExOnEEe2dEb0vlBzM_g" name="exitSrcNode" specification="_AoB78OnEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_AslExenEEe2dEb0vlBzM_g" name="ctx" type="_AoBU4unEEe2dEb0vlBzM_g"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AslExunEEe2dEb0vlBzM_g" name="exitSnkNode" specification="_AoCjAenEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_AslEx-nEEe2dEb0vlBzM_g" name="ctx" type="_AoB79enEEe2dEb0vlBzM_g"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AslEyOnEEe2dEb0vlBzM_g" name="exitChannel" specification="_AoDxIenEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_AslEyenEEe2dEb0vlBzM_g" name="ctx" type="_AoDKEunEEe2dEb0vlBzM_g"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_AQSxYOnEEe2dEb0vlBzM_g" name="ListenerDsl" visibility="package" method="_Askdt-nEEe2dEb0vlBzM_g">
                  <eAnnotations xmi:id="_AQTYcOnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_AQTYcenEEe2dEb0vlBzM_g" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_AQTYcunEEe2dEb0vlBzM_g" type="_AQSKUOnEEe2dEb0vlBzM_g" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_AQTYc-nEEe2dEb0vlBzM_g" name="getInstructionParameters" method="_AskduenEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_Ap5kMOnEEe2dEb0vlBzM_g" type="_AmS2kOnEEe2dEb0vlBzM_g" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_An-RkenEEe2dEb0vlBzM_g" name="enterAction" method="_Askdu-nEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_An-RkunEEe2dEb0vlBzM_g" name="ctx" type="_An9qgOnEEe2dEb0vlBzM_g"/>
                </ownedOperation>
                <ownedOperation xmi:id="_An-4ounEEe2dEb0vlBzM_g" name="exitAction" method="_AskdvenEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_An-4o-nEEe2dEb0vlBzM_g" name="ctx" type="_An9qgOnEEe2dEb0vlBzM_g"/>
                </ownedOperation>
                <ownedOperation xmi:id="_AoAGwOnEEe2dEb0vlBzM_g" name="exitFlowName" method="_AslEwOnEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_AoAGwenEEe2dEb0vlBzM_g" name="ctx" type="_An_fsunEEe2dEb0vlBzM_g"/>
                </ownedOperation>
                <ownedOperation xmi:id="_AoAt0enEEe2dEb0vlBzM_g" name="exitCmd" method="_AslEwunEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_AoAt0unEEe2dEb0vlBzM_g" name="ctx" type="_AoAGxenEEe2dEb0vlBzM_g"/>
                </ownedOperation>
                <ownedOperation xmi:id="_AoB78OnEEe2dEb0vlBzM_g" name="exitSrcNode" method="_AslExOnEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_AoB78enEEe2dEb0vlBzM_g" name="ctx" type="_AoBU4unEEe2dEb0vlBzM_g"/>
                </ownedOperation>
                <ownedOperation xmi:id="_AoCjAenEEe2dEb0vlBzM_g" name="exitSnkNode" method="_AslExunEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_AoCjAunEEe2dEb0vlBzM_g" name="ctx" type="_AoB79enEEe2dEb0vlBzM_g"/>
                </ownedOperation>
                <ownedOperation xmi:id="_AoDxIenEEe2dEb0vlBzM_g" name="exitChannel" method="_AslEyOnEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_AoDxIunEEe2dEb0vlBzM_g" name="ctx" type="_AoDKEunEEe2dEb0vlBzM_g"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AQflsOnEEe2dEb0vlBzM_g" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_AtaLMOnEEe2dEb0vlBzM_g">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages&#xD;
transmitted in flows for the WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The&#xD;
end-to-end reliability for each flow, flow:src->sink, is computed iteratively&#xD;
as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released.&#xD;
All other initial probabilities are 0.0. (That is, the reset of the nodes in&#xD;
the flow have an initial probability value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState =&#xD;
(1-M)*PrevSnkNodeState + M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by&#xD;
the node SinkNode. Thus, the NewSinkNodeState probability will increase each&#xD;
time a push or pull is executed with SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the&#xD;
message reaching that node, and the end-to-end reliability of a flow is the&#xD;
value of the last Flow:SinkNode probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2023 Project: Implement this class to compute the probabilities&#xD;
the comprise the ReliablityMatrix, which is the core of the file&#xD;
visualization that is requested in Warp.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the&#xD;
instructions for each node, in each time slot, to extract the src and snk&#xD;
nodes in the instruction and then apply the message success probability&#xD;
equation defined above.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to&#xD;
extract the src and snk nodes from the instruction string in a program&#xD;
schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ArW8wOnEEe2dEb0vlBzM_g" name="E2E_M_CONSTRUCTOR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArW8wenEEe2dEb0vlBzM_g" value="&quot;E2E_M_CONSTRUCTOR&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArXj0OnEEe2dEb0vlBzM_g" name="NUM_FAULTS_CONSTRUCTOR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArXj0enEEe2dEb0vlBzM_g" value="&quot;NUM_FAULTS_CONSTRUCTOR&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArXj0unEEe2dEb0vlBzM_g" name="e2e" visibility="private" type="_ApmCMOnEEe2dEb0vlBzM_g">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArXj0-nEEe2dEb0vlBzM_g" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArXj1enEEe2dEb0vlBzM_g" name="minPacketReceptionRate" visibility="private" type="_ApmCMOnEEe2dEb0vlBzM_g">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArYK4OnEEe2dEb0vlBzM_g" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArYK4unEEe2dEb0vlBzM_g" name="numFaults" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArYK4-nEEe2dEb0vlBzM_g" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArYx8enEEe2dEb0vlBzM_g" name="program" visibility="private" type="_AQ084OnEEe2dEb0vlBzM_g" association="_AuS8AenEEe2dEb0vlBzM_g">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArYx8unEEe2dEb0vlBzM_g" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArYx9OnEEe2dEb0vlBzM_g" name="constructorUsed" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArYx9enEEe2dEb0vlBzM_g" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArZZAenEEe2dEb0vlBzM_g" name="reliabilityTable" visibility="private" type="_AN16UOnEEe2dEb0vlBzM_g" association="_AuTjEenEEe2dEb0vlBzM_g">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArZZAunEEe2dEb0vlBzM_g" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArZZBOnEEe2dEb0vlBzM_g" name="nodeMap" visibility="private" type="_AmRocOnEEe2dEb0vlBzM_g" association="_AuUKIenEEe2dEb0vlBzM_g">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_AraAEenEEe2dEb0vlBzM_g" value="new HashMap&lt;String, ReliabilityNode>()"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Aslr1-nEEe2dEb0vlBzM_g" name="ReliabilityAnalysis" specification="_Ap7ZYOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Aslr2OnEEe2dEb0vlBzM_g" name="e2e" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Aslr2enEEe2dEb0vlBzM_g" name="minPacketReceptionRate" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Aslr2unEEe2dEb0vlBzM_g" type="_AQflsOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
		this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
		this.constructorUsed = E2E_M_CONSTRUCTOR;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Aslr2-nEEe2dEb0vlBzM_g" name="ReliabilityAnalysis" specification="_AQmTYOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Aslr3OnEEe2dEb0vlBzM_g" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Aslr3enEEe2dEb0vlBzM_g" type="_AQflsOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>this.numFaults = numFaults;&#xD;
		this.constructorUsed = NUM_FAULTS_CONSTRUCTOR;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsmS4OnEEe2dEb0vlBzM_g" name="numTxAttemptsPerLinkAndTotalTxAttempts" specification="_Ap8AdOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsmS4enEEe2dEb0vlBzM_g" name="flow" type="_AL0hEOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsmS4unEEe2dEb0vlBzM_g" name="e2e" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsmS4-nEEe2dEb0vlBzM_g" name="M" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsmS5OnEEe2dEb0vlBzM_g" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsmS5enEEe2dEb0vlBzM_g" type="_AmS2kOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
		var nNodesInFlow = nodesInFlow.size();&#xD;
		// The last entry will contain the worst-case cost of&#xD;
		// transmitting E2E in isolation&#xD;
		// ArrayList&lt;Integer> nPushes = Array(repeating: 0, count: nNodesInFlow+1);&#xD;
		ArrayList&lt;Integer> nPushes = new ArrayList&lt;Integer>();// Array to track nPushes for each node in this&#xD;
		for (int i = 0; i &lt; nNodesInFlow + 1; i++) {&#xD;
			// initialize to all 0 values&#xD;
			nPushes.add(0);&#xD;
		}&#xD;
		// flow (same as nTx per link)&#xD;
		var nHops = nNodesInFlow - 1;&#xD;
		// minLinkReliablityNeded is the minimum reliability needed per link in a flow&#xD;
		// to hit E2E reliability for the flow&#xD;
		// Use the max function to handle rounding error when e2e == 1.0.&#xD;
		Double minLinkReliablityNeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops)));&#xD;
&#xD;
		// Now compute reliability of packet reaching each node in the given time slot&#xD;
		// Start with a 2-D reliability window that is a 2-D matrix of no size&#xD;
		// each row is a time slot, stating at time 0&#xD;
		// each column represents the reliability of the packet reaching that node at&#xD;
		// the current time slot (i.e., the row it is in)&#xD;
		// will add rows as we compute reliabilities until the final reliability is&#xD;
		// reached for all nodes.&#xD;
		ReliabilityTable reliabilityWindow = new ReliabilityTable();&#xD;
		ReliabilityRow newReliabilityRow = new ReliabilityRow();&#xD;
		for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
			newReliabilityRow.add(0.0); // create the the row initialized with 0.0 values&#xD;
		}&#xD;
		reliabilityWindow.add(newReliabilityRow); // now add row to the reliability window, Time 0&#xD;
		ReliabilityRow tmpVector = reliabilityWindow.get(0);&#xD;
		ArrayList&lt;Double> currentReliabilityRow = new ArrayList&lt;Double>();&#xD;
		for (int i = 0; i &lt; tmpVector.size(); i++) {&#xD;
			currentReliabilityRow.add(tmpVector.get(i));&#xD;
		}&#xD;
		// var currentReliabilityRow = (Double[]) reliabilityWindow.get(0).toArray();&#xD;
		// Want reliabilityWindow[0][0] = 1.0 (i.e., P(packet@FlowSrc) = 1&#xD;
		// but I din't want to mess with the newReliablityRow vector I use below&#xD;
		// So, we initialize this first entry to 1.0, which is reliabilityWindow[0][0]&#xD;
		// We will then update this row with computed values for each node and put it&#xD;
		// back in the matrix&#xD;
		currentReliabilityRow.set(0, 1.0); // initialize (i.e., P(packet@FlowSrc) = 1&#xD;
		Double e2eReliabilityState = currentReliabilityRow.get(nNodesInFlow - 1);&#xD;
		// the analysis will end when the 2e2 reliability metrix is met,&#xD;
		// initially the state is not met and will be 0 with this statement&#xD;
&#xD;
		var timeSlot = 0; // start time at 0&#xD;
		while (e2eReliabilityState &lt; e2e) { // change to while and increment increment timeSlot becuase we don't know&#xD;
											// how long this schedule window will last&#xD;
			ArrayList&lt;Double> prevReliabilityRow = new ArrayList&lt;Double>(currentReliabilityRow);&#xD;
			currentReliabilityRow.clear();&#xD;
			for (int i = 0; i &lt; newReliabilityRow.size(); i++) {&#xD;
				currentReliabilityRow.add(newReliabilityRow.get(i));&#xD;
			}&#xD;
&#xD;
			// If working through a schedule, the reliability window at time slot should be&#xD;
			// used.&#xD;
			// Use each flow from source to sink to update reliability computations.&#xD;
			// The update formula for the state probabilities is: nextState = (1-M) *&#xD;
			// prevState + M*NextHighestFlowState,&#xD;
			// where MinLQ is used for M. The new sink node state is calculated as:&#xD;
			// NewSinkNodeState = (1-M)PrevSnkNodeState + MPrevSrcNodeState.&#xD;
			// loop through each node in the flow and update the sates for each link (i.e.,&#xD;
			// sink->src pair)&#xD;
			for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) {&#xD;
&#xD;
				var flowSrcNodeindex = nodeIndex;&#xD;
				var flowSnkNodeindex = nodeIndex + 1;&#xD;
				var prevSrcNodeState = prevReliabilityRow.get(flowSrcNodeindex);&#xD;
				var prevSnkNodeState = prevReliabilityRow.get(flowSnkNodeindex);&#xD;
				Double nextSnkState;&#xD;
				// Push until PrevSnk state > e2e to ensure next node reaches target E2E, but&#xD;
				// skip if there is no&#xD;
				// chance of success (i.e., source doesn't havepacket).&#xD;
				if ((prevSnkNodeState &lt; minLinkReliablityNeded) &amp;&amp; prevSrcNodeState > 0) {&#xD;
&#xD;
					// Need to continue attempting to transmit, so update current state.&#xD;
					nextSnkState = ((1.0 - M) * prevSnkNodeState) + (M * prevSrcNodeState);&#xD;
					// increment the number of pushes for for this node to snk node&#xD;
					nPushes.set(nodeIndex, nPushes.get(nodeIndex) + 1);&#xD;
&#xD;
				} else {&#xD;
					// snk node has met its reliability, so move on to the next node and record the&#xD;
					// reliability met&#xD;
					nextSnkState = prevSnkNodeState;&#xD;
				}&#xD;
				// If probabilities are non-decreasing, update by carrying the old value forward&#xD;
				// if we were previously higher.&#xD;
				if (currentReliabilityRow.get(flowSrcNodeindex) &lt; prevReliabilityRow.get(flowSrcNodeindex)) {&#xD;
&#xD;
					currentReliabilityRow.set(flowSrcNodeindex, prevReliabilityRow.get(flowSrcNodeindex));&#xD;
					// Carry forward the previous state for the src node, which may be overwritten&#xD;
					// later by another instruction in this slot&#xD;
				}&#xD;
				currentReliabilityRow.set(flowSnkNodeindex, nextSnkState);&#xD;
			}&#xD;
&#xD;
			e2eReliabilityState = currentReliabilityRow.get(nNodesInFlow - 1);&#xD;
			ReliabilityRow currentReliabilityVector = new ReliabilityRow();&#xD;
			// convert the row to a vector so we can add it to the reliability window&#xD;
			Collections.addAll(currentReliabilityVector, currentReliabilityRow.toArray(new Double[0]));&#xD;
			if (timeSlot &lt; reliabilityWindow.size()) {&#xD;
				reliabilityWindow.set(timeSlot, (currentReliabilityVector));&#xD;
			} else {&#xD;
				reliabilityWindow.add(currentReliabilityVector);&#xD;
			}&#xD;
			// increase to next time slot&#xD;
			timeSlot += 1;&#xD;
		}&#xD;
		var size = reliabilityWindow.size();&#xD;
		// The total (worst-case) cost to transmit E2E in isolation with&#xD;
&#xD;
		nPushes.set(nNodesInFlow, size);&#xD;
		// specified reliability target is the number of rows in the reliabilityWindow&#xD;
		for (Object row : reliabilityWindow.toArray()) {&#xD;
			System.out.println(row);&#xD;
		}&#xD;
		return nPushes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsmS5unEEe2dEb0vlBzM_g" name="getFixedTxPerLinkAndTotalTxCost" specification="_AoG0cOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsmS5-nEEe2dEb0vlBzM_g" name="flow" type="_AL0hEOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsmS6OnEEe2dEb0vlBzM_g" type="_AmS2kOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
		var nNodesInFlow = nodesInFlow.size();&#xD;
		ArrayList&lt;Integer> txArrayList = new ArrayList&lt;Integer>();&#xD;
		/*&#xD;
		 * Each node will have at most numFaults+1 transmissions. Because we don't know&#xD;
		 * which nodes will&#xD;
		 * send the message over an edge, we give the cost to each node.&#xD;
		 */&#xD;
		for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
			txArrayList.add(numFaults + 1);&#xD;
		}&#xD;
		/*&#xD;
		 * now compute the maximum # of TX, assuming at most numFaults occur on an edge&#xD;
		 * per period, and&#xD;
		 * each edge requires at least one successful TX.&#xD;
		 */&#xD;
		var numEdgesInFlow = nNodesInFlow - 1;&#xD;
		var maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
		txArrayList.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
		return txArrayList;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsmS6enEEe2dEb0vlBzM_g" name="numTxPerLinkAndTotalTxCost" specification="_AoHbgOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsmS6unEEe2dEb0vlBzM_g" name="flow" type="_AL0hEOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsmS6-nEEe2dEb0vlBzM_g" type="_AmS2kOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>if (this.constructorUsed.equals(E2E_M_CONSTRUCTOR)) {&#xD;
			return this.numTxAttemptsPerLinkAndTotalTxAttempts(flow, this.e2e, this.minPacketReceptionRate, true);&#xD;
		}&#xD;
		return this.getFixedTxPerLinkAndTotalTxCost(flow);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsmS7OnEEe2dEb0vlBzM_g" name="ReliabilityAnalysis" specification="_AoICkOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsmS7enEEe2dEb0vlBzM_g" name="program" type="_AQ084OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsmS7unEEe2dEb0vlBzM_g" type="_AQflsOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>this.program = program;&#xD;
		buildReliabilityTable();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsmS7-nEEe2dEb0vlBzM_g" name="buildReliabilityTable" specification="_AQovoOnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>WorkLoad wl = program.toWorkLoad();&#xD;
		ArrayList&lt;String> flowNames = wl.getFlowNamesInPriorityOrder();&#xD;
		FlowMap flows = wl.getFlows();&#xD;
		ArrayList&lt;ReliabilityNode> reliabilityNodes = new ArrayList&lt;ReliabilityNode>();&#xD;
		int numCols = 0;&#xD;
&#xD;
		// create hashmap of reliabiltyNodes to quickly look up period, parent flow,&#xD;
		// etc...&#xD;
		for (String flowName : flowNames) {&#xD;
			Flow flow = flows.get(flowName);&#xD;
			Integer flowPeriod = flow.getPeriod();&#xD;
			ArrayList&lt;Node> nodes = flow.getNodes();&#xD;
			for (int i = 0; i &lt; nodes.size(); i++) {&#xD;
				String nodeName = nodes.get(i).toString();&#xD;
				ReliabilityNode reliabilityNode;&#xD;
				if (i == 0) {&#xD;
					reliabilityNode = new ReliabilityNode(nodeName, flowName, true, i, flowPeriod);&#xD;
					reliabilityNode.prevR = 1.0;&#xD;
				} else {&#xD;
					reliabilityNode = new ReliabilityNode(nodeName, flowName, false, i, flowPeriod);&#xD;
				}&#xD;
				reliabilityNodes.add(reliabilityNode);&#xD;
				numCols++;&#xD;
&#xD;
				nodeMap.put(flowName + &quot;:&quot; + nodeName, reliabilityNode);&#xD;
&#xD;
			}&#xD;
		}&#xD;
&#xD;
		int numRows = program.getSchedule().getNumRows();&#xD;
		reliabilityTable = new ReliabilityTable(numRows, numCols);&#xD;
&#xD;
		// set source nodes to 1.0&#xD;
		for (int i = 0; i &lt; reliabilityNodes.size(); i++) {&#xD;
			ReliabilityNode rNode = reliabilityNodes.get(i);&#xD;
			if (rNode.isSourceNode == true) {&#xD;
				for (int j = 0; j &lt; numRows; j++) {&#xD;
					reliabilityTable.get(j).set(i, 1.0);&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// calculate appropriate reliabilities&#xD;
		WarpDSL dsl = new WarpDSL();&#xD;
		ProgramSchedule schedule = program.getSchedule();&#xD;
		for (int i = 0; i &lt; numRows; i++) {&#xD;
			InstructionTimeSlot timeSlot = schedule.get(i);&#xD;
			for (String instruction : timeSlot) {&#xD;
&#xD;
				// parse instructions for each timeslot&#xD;
				ArrayList&lt;InstructionParameters> instructionParameters = dsl.getInstructionParameters(instruction);&#xD;
&#xD;
				// calculate reliability for each instruction in a timeslot&#xD;
				for (InstructionParameters instructionParameter : instructionParameters) {&#xD;
					fillInReliabilities(instructionParameter, reliabilityNodes, i, numRows);&#xD;
				}&#xD;
			}&#xD;
&#xD;
			// at the end of each row, adjust prevR for all reliability node, and check for&#xD;
			// new period&#xD;
			for (int n = 0; n &lt; reliabilityNodes.size(); n++) {&#xD;
				Double r = reliabilityTable.get(i, n);&#xD;
				ReliabilityNode reliabilityNode = reliabilityNodes.get(n);&#xD;
				reliabilityNode.prevR = r;&#xD;
&#xD;
				// if new period, reset prev reliability value (prevR)&#xD;
				int period = reliabilityNode.period;&#xD;
				if ((i + 1) % period == 0) {&#xD;
&#xD;
					// change prevR depending on if it's a source node&#xD;
					if (reliabilityNode.isSourceNode == true) {&#xD;
						reliabilityNode.prevR = 1.0;&#xD;
					} else {&#xD;
						reliabilityNode.prevR = 0.0;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsmS8OnEEe2dEb0vlBzM_g" name="fillInReliabilities" specification="_Ap9OkunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsmS8enEEe2dEb0vlBzM_g" name="instructionParameter" type="_AQJncOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsmS8unEEe2dEb0vlBzM_g" name="reliabilityNodes" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsmS8-nEEe2dEb0vlBzM_g" name="row_index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsmS9OnEEe2dEb0vlBzM_g" name="numRows">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>String flowName = instructionParameter.getFlow();&#xD;
		String srcName = instructionParameter.getSrc();&#xD;
		String snkName = instructionParameter.getSnk();&#xD;
&#xD;
		if (flowName.equals(&quot;unused&quot;)) {&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		ReliabilityNode rNodeSrc = nodeMap.get(flowName + &quot;:&quot; + srcName);&#xD;
		ReliabilityNode rNodeSnk = nodeMap.get(flowName + &quot;:&quot; + snkName);&#xD;
&#xD;
		int src_index = reliabilityNodes.indexOf(rNodeSrc);&#xD;
		int snk_index = reliabilityNodes.indexOf(rNodeSnk);&#xD;
&#xD;
		double nextR = calcNextNodeReliability(rNodeSrc.prevR, rNodeSnk.prevR);&#xD;
&#xD;
		// fill in rest of table up until new period&#xD;
		int rowsToFill = rNodeSnk.period - (row_index % rNodeSnk.period);&#xD;
		for (int k = 0; k &lt; rowsToFill; k++) {&#xD;
			reliabilityTable.get(k + row_index).set(snk_index, nextR);&#xD;
		}&#xD;
&#xD;
		return;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsmS9enEEe2dEb0vlBzM_g" name="calcNextNodeReliability" specification="_Ap-csOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsmS9unEEe2dEb0vlBzM_g" name="prevSrc" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsmS9-nEEe2dEb0vlBzM_g" name="prevSnk" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsmS-OnEEe2dEb0vlBzM_g" type="_ApmCMOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>double M = program.getMinPacketReceptionRate();&#xD;
		return (1 - M) * prevSnk + M * prevSrc;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsmS-enEEe2dEb0vlBzM_g" name="getReliabilities" specification="_AQp9wOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsmS-unEEe2dEb0vlBzM_g" type="_AN16UOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return this.reliabilityTable;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asm58OnEEe2dEb0vlBzM_g" name="verifyReliabilities" specification="_AQp9wenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asm58enEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>int numRows = reliabilityTable.size();&#xD;
		ReliabilityRow lastRow = reliabilityTable.get(numRows - 1);&#xD;
&#xD;
		for (double reliability : lastRow) {&#xD;
			if (reliability &lt; e2e) {&#xD;
				return false;&#xD;
			}&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AQmTYOnEEe2dEb0vlBzM_g" name="ReliabilityAnalysis" method="_Aslr2-nEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AQmTYunEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AQmTY-nEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_AtaLM-nEEe2dEb0vlBzM_g">
                  <body>Creates a ReliabilityAnalysis object and sets the current constructor used to&#xD;
	 * NUM_FAULTS_CONSTRUCTOR.&#xD;
	 * &#xD;
	 * @param numFaults&#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_AQmTYenEEe2dEb0vlBzM_g" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AQm6cOnEEe2dEb0vlBzM_g" type="_AQflsOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AQovoOnEEe2dEb0vlBzM_g" name="buildReliabilityTable" visibility="private" method="_AsmS7-nEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtaLOOnEEe2dEb0vlBzM_g">
                  <body>Builds the reliability table for the program.&#xD;
	 * Use the program from the constructor to get a workload and then use the&#xD;
	 * workload to get the flows in priority order&#xD;
	 * We also have a new class called reliability node which is a node in the&#xD;
	 * reliability table. We use this to keep track of the&#xD;
	 * source nodes as well as other useful information.&#xD;
	 * Then use the program to get the schedule which we can use to get the number&#xD;
	 * of columns. We get the number of columns from the flows&#xD;
	 * By looping through and adding up the total number of nodes. Then we can&#xD;
	 * instantiate the reliability table with the number of columns and rows&#xD;
	 * Finally we loop through our reliability table making sure the entire column&#xD;
	 * for each source node is a 1.0 then we call our helper&#xD;
	 * method to build the reliability table. We call the helper when we have an if&#xD;
	 * statement in our schedule.&#xD;
	 * &#xD;
	 * @return void</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_AQp9wOnEEe2dEb0vlBzM_g" name="getReliabilities" method="_AsmS-enEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtaLO-nEEe2dEb0vlBzM_g">
                  <body>Getter for reliability table&#xD;
	 * &#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_AoIpoOnEEe2dEb0vlBzM_g" type="_AN16UOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AQp9wenEEe2dEb0vlBzM_g" name="verifyReliabilities" method="_Asm58OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AQqk0OnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AoG0cOnEEe2dEb0vlBzM_g" name="getFixedTxPerLinkAndTotalTxCost" method="_AsmS5unEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtaLNenEEe2dEb0vlBzM_g">
                  <body>Calculates the fixed transmission per link, the total transmission cost, and&#xD;
	 * returns it.&#xD;
	 * &#xD;
	 * @param flow&#xD;
	 * @return txArrayList</body>
                </ownedComment>
                <ownedParameter xmi:id="_AoG0cenEEe2dEb0vlBzM_g" name="flow" type="_AL0hEOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Ap9OkOnEEe2dEb0vlBzM_g" type="_AmS2kOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AoHbgOnEEe2dEb0vlBzM_g" name="numTxPerLinkAndTotalTxCost" method="_AsmS6enEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtaLNunEEe2dEb0vlBzM_g">
                  <body>Calculates the number of transmissions per link and total cost based on which&#xD;
	 * constructor was used.&#xD;
	 * &#xD;
	 * @param flow&#xD;
	 * @return ArrayList&lt;Integer></body>
                </ownedComment>
                <ownedParameter xmi:id="_AoHbgenEEe2dEb0vlBzM_g" name="flow" type="_AL0hEOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Ap9OkenEEe2dEb0vlBzM_g" type="_AmS2kOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AoICkOnEEe2dEb0vlBzM_g" name="ReliabilityAnalysis" method="_AsmS7OnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AoICkunEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AoICk-nEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_AtaLN-nEEe2dEb0vlBzM_g">
                  <body>Initializes the reliability table for the program through calling&#xD;
	 * buildReliabilityTable.&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_AoICkenEEe2dEb0vlBzM_g" name="program" type="_AQ084OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AoIClOnEEe2dEb0vlBzM_g" type="_AQflsOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ap7ZYOnEEe2dEb0vlBzM_g" name="ReliabilityAnalysis" method="_Aslr1-nEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_Ap8AcenEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Ap8AcunEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_AtaLMunEEe2dEb0vlBzM_g">
                  <body>Creates a ReliabilityAnalysis object and sets the current constructor used to&#xD;
	 * E2E_M_CONSTRUCTOR.&#xD;
	 * &#xD;
	 * @param e2e&#xD;
	 * @param minPacketReceptionRate</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ap7ZYenEEe2dEb0vlBzM_g" name="e2e" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Ap8AcOnEEe2dEb0vlBzM_g" name="minPacketReceptionRate" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Ap8Ac-nEEe2dEb0vlBzM_g" type="_AQflsOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ap8AdOnEEe2dEb0vlBzM_g" name="numTxAttemptsPerLinkAndTotalTxAttempts" method="_AsmS4OnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtaLNOnEEe2dEb0vlBzM_g">
                  <body>Creates an array list of the number of transmission attempts per link and the&#xD;
	 * total transmission attempts.&#xD;
	 * &#xD;
	 * @param flow&#xD;
	 * @param e2e&#xD;
	 * @param M&#xD;
	 * @param optimizationRequested&#xD;
	 * @return nPushesArrayList</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ap8AdenEEe2dEb0vlBzM_g" name="flow" type="_AL0hEOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Ap8AdunEEe2dEb0vlBzM_g" name="e2e" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Ap8ngOnEEe2dEb0vlBzM_g" name="M" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Ap8ngenEEe2dEb0vlBzM_g" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ap8ng-nEEe2dEb0vlBzM_g" type="_AmS2kOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ap9OkunEEe2dEb0vlBzM_g" name="fillInReliabilities" visibility="private" method="_AsmS8OnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtaLOenEEe2dEb0vlBzM_g">
                  <body>Fill in a row of the reliability table by copying the most recently&#xD;
	 * calculated&#xD;
	 * ReliabilityNode and copies it down to the end of the period.&#xD;
	 * &#xD;
	 * @param instructionParameter&#xD;
	 * @param reliabilityNodes&#xD;
	 * @param prevR1&#xD;
	 * @param prevR2&#xD;
	 * @return void</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ap9Ok-nEEe2dEb0vlBzM_g" name="instructionParameter" type="_AQJncOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Ap9OlOnEEe2dEb0vlBzM_g" name="reliabilityNodes" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Ap9OlenEEe2dEb0vlBzM_g" name="row_index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ap9OlunEEe2dEb0vlBzM_g" name="numRows">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ap-csOnEEe2dEb0vlBzM_g" name="calcNextNodeReliability" visibility="private" method="_AsmS9enEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtaLOunEEe2dEb0vlBzM_g">
                  <body>Helper method to calculate the next node reliability. Uses the minimum packet&#xD;
	 * reception rate and to calculate the next node reliability.&#xD;
	 * &#xD;
	 * &#xD;
	 * @param prevSrc&#xD;
	 * @param prevSnk&#xD;
	 * @return NewSinkNodeState: the probability that the message has been received&#xD;
	 *         by the nodeSinkNode.&#xD;
	 *         The NewSinkNodeState probability will increases each time we push or&#xD;
	 *         pull&#xD;
	 *         with SinkNode as a listener.</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ap-csenEEe2dEb0vlBzM_g" name="prevSrc" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Ap-csunEEe2dEb0vlBzM_g" name="prevSnk" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Ap-cs-nEEe2dEb0vlBzM_g" type="_ApmCMOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_AQiB8OnEEe2dEb0vlBzM_g" name="ReliabilityNode" visibility="package">
                <ownedComment xmi:id="_AtaLMenEEe2dEb0vlBzM_g">
                  <body>ReliabiltyNode is a helper class that stores the information of a node in a&#xD;
	 * flow.&#xD;
	 * This information is used to calculate the reliability of the node for the&#xD;
	 * ReliabilityTable.</body>
                </ownedComment>
                <ownedAttribute xmi:id="_AraAE-nEEe2dEb0vlBzM_g" name="nodeName" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_AranIenEEe2dEb0vlBzM_g" name="flowName" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_AranI-nEEe2dEb0vlBzM_g" name="isSourceNode" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ArbOMenEEe2dEb0vlBzM_g" name="columnIndex" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ArbOM-nEEe2dEb0vlBzM_g" name="period" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_Arb1QenEEe2dEb0vlBzM_g" name="prevR" visibility="package" type="_ApmCMOnEEe2dEb0vlBzM_g">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_Arb1QunEEe2dEb0vlBzM_g" value="0.0"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Aslr0OnEEe2dEb0vlBzM_g" name="ReliabilityNode" specification="_AQj3IOnEEe2dEb0vlBzM_g">
                  <ownedParameter xmi:id="_Aslr0enEEe2dEb0vlBzM_g" name="nodeName">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Aslr0unEEe2dEb0vlBzM_g" name="flowName">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Aslr0-nEEe2dEb0vlBzM_g" name="isSourceNode">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Aslr1OnEEe2dEb0vlBzM_g" name="columnIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Aslr1enEEe2dEb0vlBzM_g" name="period">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Aslr1unEEe2dEb0vlBzM_g" type="_AQiB8OnEEe2dEb0vlBzM_g" direction="return"/>
                  <language>java</language>
                  <body>this.nodeName = nodeName;&#xD;
			this.flowName = flowName;&#xD;
			this.isSourceNode = isSourceNode;&#xD;
			this.columnIndex = columnIndex;&#xD;
			this.period = period;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_AQj3IOnEEe2dEb0vlBzM_g" name="ReliabilityNode" visibility="package" method="_Aslr0OnEEe2dEb0vlBzM_g">
                  <eAnnotations xmi:id="_AQj3JunEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_AQkeMOnEEe2dEb0vlBzM_g" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_AQj3IenEEe2dEb0vlBzM_g" name="nodeName">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_AQj3IunEEe2dEb0vlBzM_g" name="flowName">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_AQj3I-nEEe2dEb0vlBzM_g" name="isSourceNode">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_AQj3JOnEEe2dEb0vlBzM_g" name="columnIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_AQj3JenEEe2dEb0vlBzM_g" name="period">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_AQkeMenEEe2dEb0vlBzM_g" type="_AQiB8OnEEe2dEb0vlBzM_g" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AQ084OnEEe2dEb0vlBzM_g" name="Program">
              <ownedComment xmi:id="_AtaLPOnEEe2dEb0vlBzM_g">
                <body>Contains the main logic for constructing schedules given a schedule choice and number of channels.&#xD;
&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ArccUOnEEe2dEb0vlBzM_g" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArccUenEEe2dEb0vlBzM_g" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArdDYOnEEe2dEb0vlBzM_g" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArdDYenEEe2dEb0vlBzM_g" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArdDYunEEe2dEb0vlBzM_g" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArdDY-nEEe2dEb0vlBzM_g" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArdDZOnEEe2dEb0vlBzM_g" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArdqcOnEEe2dEb0vlBzM_g" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArdqcenEEe2dEb0vlBzM_g" name="workLoad" visibility="package" type="_ARd2EOnEEe2dEb0vlBzM_g" association="_AuUxMenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AreRgOnEEe2dEb0vlBzM_g" name="scheduleBuilt" visibility="package" type="_ANR5oOnEEe2dEb0vlBzM_g" association="_AuVYQenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AreRgunEEe2dEb0vlBzM_g" name="SchedulerSelected" visibility="package" type="_Ap_q0OnEEe2dEb0vlBzM_g" association="_AuV_UenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Are4kenEEe2dEb0vlBzM_g" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Are4k-nEEe2dEb0vlBzM_g" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArffoenEEe2dEb0vlBzM_g" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Arffo-nEEe2dEb0vlBzM_g" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArgGsOnEEe2dEb0vlBzM_g" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArgGsunEEe2dEb0vlBzM_g" name="channelsAvailable" visibility="package" type="_AKz0cOnEEe2dEb0vlBzM_g" association="_AuXNcOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_ArgtwOnEEe2dEb0vlBzM_g" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArgtwunEEe2dEb0vlBzM_g" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArgtxOnEEe2dEb0vlBzM_g" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArhU0enEEe2dEb0vlBzM_g" name="deadlineMisses" visibility="private" type="_ALaRYOnEEe2dEb0vlBzM_g" association="_AuX0gOnEEe2dEb0vlBzM_g"/>
              <interfaceRealization xmi:id="_AoLs8enEEe2dEb0vlBzM_g" client="_AQ084OnEEe2dEb0vlBzM_g" supplier="_AOtdAOnEEe2dEb0vlBzM_g" contract="_AOtdAOnEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asm58unEEe2dEb0vlBzM_g" name="Program" specification="_AqAR4enEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asm58-nEEe2dEb0vlBzM_g" name="workLoad" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Asm59OnEEe2dEb0vlBzM_g" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Asm59enEEe2dEb0vlBzM_g" name="choice" type="_Ap_q0OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Asm59unEEe2dEb0vlBzM_g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Asm59-nEEe2dEb0vlBzM_g" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Asm5-OnEEe2dEb0vlBzM_g" type="_AQ084OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asm5-enEEe2dEb0vlBzM_g" name="Program" specification="_AqA49-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asm5-unEEe2dEb0vlBzM_g" name="workLoad" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Asm5--nEEe2dEb0vlBzM_g" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Asm5_OnEEe2dEb0vlBzM_g" name="choice" type="_Ap_q0OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Asm5_enEEe2dEb0vlBzM_g" type="_AQ084OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsnhAOnEEe2dEb0vlBzM_g" name="setDefaultParameters" specification="_AoM7EOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsnhAenEEe2dEb0vlBzM_g" name="workLoad" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsnhAunEEe2dEb0vlBzM_g" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsnhA-nEEe2dEb0vlBzM_g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsnhBOnEEe2dEb0vlBzM_g" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsnhBenEEe2dEb0vlBzM_g" name="toWorkLoad" specification="_AQ5OUOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsnhBunEEe2dEb0vlBzM_g" type="_ARd2EOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsnhB-nEEe2dEb0vlBzM_g" name="buildProgram" specification="_AqBgBunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsnhCOnEEe2dEb0vlBzM_g" name="choice" type="_Ap_q0OnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsnhCenEEe2dEb0vlBzM_g" name="buildOriginalProgram" specification="_AQ51YOnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); &#xD;
   // create a time slot for nNodes, each initialized with a SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { &#xD;
     	// don't push for last node, so stop at node n-1, which is 2 less than count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); &#xD;
         // make sure precedence constraints on flow are preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { &#xD;
         	// instructionIndex is beyond current schedule length. Increase schedule and channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); &#xD;
             // create a time slot for nNodes, each initialized with a SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); &#xD;
             // need make sure we have channels available for all slots. instructionIndex may be >&#xD;
             // initialized size of array because of phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); &#xD;
               // create a time slot for nNodes, each initialized with a SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; &#xD;
           // get instruction scheduled for snk to execute in the prior time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { &#xD;
             	// The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; &#xD;
               // get instruction scheduled for sink/curentNodeName) to execute in the prior time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { &#xD;
             	  // will try to push and pull to/from the same node, so use the prior instruction channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsnhCunEEe2dEb0vlBzM_g" name="waitInstruction" specification="_AQ51YenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsnhC-nEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsnhDOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsnhDenEEe2dEb0vlBzM_g" name="elseWaitInstruction" specification="_AQ6ccenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsnhDunEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsnhD-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsnhEOnEEe2dEb0vlBzM_g" name="elsePullClause" specification="_AQ7DgOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsnhEenEEe2dEb0vlBzM_g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsnhEunEEe2dEb0vlBzM_g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsnhE-nEEe2dEb0vlBzM_g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsnhFOnEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsnhFenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsoIEOnEEe2dEb0vlBzM_g" name="hasPushInstruction" specification="_AQ7qkOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsoIEenEEe2dEb0vlBzM_g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsoIEunEEe2dEb0vlBzM_g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsoIE-nEEe2dEb0vlBzM_g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsoIFOnEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsoIFenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsoIFunEEe2dEb0vlBzM_g" name="pushInstruction" specification="_AQ8RounEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsoIF-nEEe2dEb0vlBzM_g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsoIGOnEEe2dEb0vlBzM_g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsoIGenEEe2dEb0vlBzM_g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsoIGunEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsoIG-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsoIHOnEEe2dEb0vlBzM_g" name="getFirstChannelInInstruction" specification="_AQ84tenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsoIHenEEe2dEb0vlBzM_g" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsoIHunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsoIH-nEEe2dEb0vlBzM_g" name="findNextAvailableInstructionTimeSlot" specification="_AoNiIenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsoIIOnEEe2dEb0vlBzM_g" name="schedule" type="_ANR5oOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsoIIenEEe2dEb0vlBzM_g" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsoIIunEEe2dEb0vlBzM_g" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsoII-nEEe2dEb0vlBzM_g" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsoIJOnEEe2dEb0vlBzM_g" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsoIJenEEe2dEb0vlBzM_g" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AsoIJunEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsoIJ-nEEe2dEb0vlBzM_g" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AsoIKOnEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsoIKenEEe2dEb0vlBzM_g" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsoIKunEEe2dEb0vlBzM_g" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsoIK-nEEe2dEb0vlBzM_g" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsoILOnEEe2dEb0vlBzM_g" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsoILenEEe2dEb0vlBzM_g" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsoILunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsoIL-nEEe2dEb0vlBzM_g" name="slotIsAvailable" specification="_AoOwQOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsoIMOnEEe2dEb0vlBzM_g" name="currentInstructionTimeSlot" type="_AMjg4OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsoIMenEEe2dEb0vlBzM_g" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsoIMunEEe2dEb0vlBzM_g" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsoIM-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsovIOnEEe2dEb0vlBzM_g" name="findNextAvailableChannel" specification="_AoOwRenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsovIenEEe2dEb0vlBzM_g" name="schedule" type="_ANR5oOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsovIunEEe2dEb0vlBzM_g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsovI-nEEe2dEb0vlBzM_g" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsovJOnEEe2dEb0vlBzM_g" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsovJenEEe2dEb0vlBzM_g" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsovJunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check&#xD;
                           // this result&#xD;
&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
 InstructionTimeSlot priorInstructionTimeSlot;&#xD;
&#xD;
 var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
 if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in&#xD;
                        // that slot, which have to be avoided here&#xD;
   Integer priorTime = currentTime - 1;&#xD;
   priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
   var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
   var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
   // extract the channels used by the src and snk nodes in the prior time slot and store them in&#xD;
   // an array&#xD;
   var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get&#xD;
                                                                                           // the&#xD;
                                                                                           // parameters&#xD;
                                                                                           // from&#xD;
                                                                                           // the&#xD;
                                                                                           // instruction&#xD;
                                                                                           // in&#xD;
                                                                                           // the&#xD;
                                                                                           // src&#xD;
                                                                                           // node's&#xD;
                                                                                           // prior&#xD;
                                                                                           // time&#xD;
                                                                                           // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
   instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the&#xD;
                                                                                       // parameters&#xD;
                                                                                       // from&#xD;
                                                                                       // the&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in the&#xD;
                                                                                       // snk&#xD;
                                                                                       // node's&#xD;
                                                                                       // prior&#xD;
                                                                                       // time&#xD;
                                                                                       // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
 }&#xD;
 Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node&#xD;
 channel++; // increment the channel because we don't use the same channel in consecutive time&#xD;
            // slots for the same node&#xD;
 if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits&#xD;
                                    // max&#xD;
   channel = 0;&#xD;
 }&#xD;
 var channelFound = false;&#xD;
 while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of&#xD;
                                                // channels to assign&#xD;
   var channelString = String.valueOf(channel);&#xD;
   var channelRemoved = channels.remove(channelString);&#xD;
   if (channelRemoved) {&#xD;
     // newChannel has the channel&#xD;
     newChannel = channelString;&#xD;
     channelFound = true;&#xD;
   } else {&#xD;
     // try another channel&#xD;
     channel += 1;&#xD;
     if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel&#xD;
                                        // hits max&#xD;
       channel = 0;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsovJ-nEEe2dEb0vlBzM_g" name="selectPriority" specification="_AQ-t4OnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsovKOnEEe2dEb0vlBzM_g" name="selectRM" specification="_AQ_U8OnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsovKenEEe2dEb0vlBzM_g" name="selectDM" specification="_AQ_U8enEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsovKunEEe2dEb0vlBzM_g" name="selectRtHART" specification="_AQ_U8unEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsovK-nEEe2dEb0vlBzM_g" name="setScheduleSelected" specification="_AqCHEOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsovLOnEEe2dEb0vlBzM_g" name="choice" type="_Ap_q0OnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsovLenEEe2dEb0vlBzM_g" name="setSchedule" specification="_AoPXVOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsovLunEEe2dEb0vlBzM_g" name="schedule" type="_ANR5oOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsovL-nEEe2dEb0vlBzM_g" name="getSchedule" specification="_AQ_8AOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsovMOnEEe2dEb0vlBzM_g" type="_ANR5oOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsovMenEEe2dEb0vlBzM_g" name="getSchedulerName" specification="_ARAjEOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsovMunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsovM-nEEe2dEb0vlBzM_g" name="getSchChoice" specification="_ARBKI-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsovNOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AspWMOnEEe2dEb0vlBzM_g" name="getNumChannels" specification="_ARBxMenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AspWMenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AspWMunEEe2dEb0vlBzM_g" name="getNumTransmissions" specification="_ARCYQunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AspWM-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AspWNOnEEe2dEb0vlBzM_g" name="getRealTimeHartFlag" specification="_ARC_UunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AspWNenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AspWNunEEe2dEb0vlBzM_g" name="setRealTimeHartFlag" specification="_ARC_VOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AspWN-nEEe2dEb0vlBzM_g" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AspWOOnEEe2dEb0vlBzM_g" name="getMinPacketReceptionRate" specification="_ARDmYOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AspWOenEEe2dEb0vlBzM_g" type="_ApmCMOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AspWOunEEe2dEb0vlBzM_g" name="getE2e" specification="_ARENcunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AspWO-nEEe2dEb0vlBzM_g" type="_ApmCMOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AspWPOnEEe2dEb0vlBzM_g" name="getName" specification="_ARE0gunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AspWPenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AspWPunEEe2dEb0vlBzM_g" name="getOptimizationFlag" specification="_ARFbk-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AspWP-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asp9QOnEEe2dEb0vlBzM_g" name="deadlineMisses" specification="_ARGCo-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asp9QenEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asp9QunEEe2dEb0vlBzM_g" name="getNumFaults" specification="_ARGpsOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asp9Q-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asp9ROnEEe2dEb0vlBzM_g" name="getNodeMapIndex" specification="_ARHQwunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asp9RenEEe2dEb0vlBzM_g" type="_AmRocOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
                                                                  // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndexMap = new HashMap&lt;String, Integer>(); // create a new mapping from node names to&#xD;
                                                    // index in schedule&#xD;
 // table&#xD;
 var nNodes = orderedNodes.length;&#xD;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
   var name = orderedNodes[index];&#xD;
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
 }&#xD;
 return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AQ5OUOnEEe2dEb0vlBzM_g" name="toWorkLoad" method="_AsnhBenEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtaLPenEEe2dEb0vlBzM_g">
                  <body>Getter method to retrieve workLoad from which schedules are built.</body>
                </ownedComment>
                <ownedParameter xmi:id="_AoNiIOnEEe2dEb0vlBzM_g" type="_ARd2EOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AQ51YOnEEe2dEb0vlBzM_g" name="buildOriginalProgram" method="_AsnhCenEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AQ51YenEEe2dEb0vlBzM_g" name="waitInstruction" visibility="private" method="_AsnhCunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AQ51YunEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AQ6ccOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AQ6ccenEEe2dEb0vlBzM_g" name="elseWaitInstruction" visibility="private" method="_AsnhDenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AQ6ccunEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AQ6cc-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AQ7DgOnEEe2dEb0vlBzM_g" name="elsePullClause" visibility="private" method="_AsnhEOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AQ7DgenEEe2dEb0vlBzM_g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AQ7DgunEEe2dEb0vlBzM_g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AQ7Dg-nEEe2dEb0vlBzM_g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AQ7DhOnEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AQ7DhenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AQ7qkOnEEe2dEb0vlBzM_g" name="hasPushInstruction" visibility="private" method="_AsoIEOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AQ7qkenEEe2dEb0vlBzM_g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AQ7qkunEEe2dEb0vlBzM_g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AQ7qk-nEEe2dEb0vlBzM_g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AQ8RoOnEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AQ8RoenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AQ8RounEEe2dEb0vlBzM_g" name="pushInstruction" visibility="private" method="_AsoIFunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AQ84sOnEEe2dEb0vlBzM_g" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AQ84senEEe2dEb0vlBzM_g" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AQ84sunEEe2dEb0vlBzM_g" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AQ84s-nEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AQ84tOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AQ84tenEEe2dEb0vlBzM_g" name="getFirstChannelInInstruction" visibility="private" method="_AsoIHOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AQ9fwOnEEe2dEb0vlBzM_g" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AQ9fwenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AQ-t4OnEEe2dEb0vlBzM_g" name="selectPriority" method="_AsovJ-nEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AQ_U8OnEEe2dEb0vlBzM_g" name="selectRM" method="_AsovKOnEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AQ_U8enEEe2dEb0vlBzM_g" name="selectDM" method="_AsovKenEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AQ_U8unEEe2dEb0vlBzM_g" name="selectRtHART" method="_AsovKunEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AQ_8AOnEEe2dEb0vlBzM_g" name="getSchedule" method="_AsovL-nEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtayQOnEEe2dEb0vlBzM_g">
                  <body>Getter method to retrieve built schedule from program.</body>
                </ownedComment>
                <ownedParameter xmi:id="_AoPXVunEEe2dEb0vlBzM_g" type="_ANR5oOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ARAjEOnEEe2dEb0vlBzM_g" name="getSchedulerName" method="_AsovMenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARAjEenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARBKI-nEEe2dEb0vlBzM_g" name="getSchChoice" method="_AsovM-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARBxMOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARBxMenEEe2dEb0vlBzM_g" name="getNumChannels" method="_AspWMOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARBxMunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARCYQunEEe2dEb0vlBzM_g" name="getNumTransmissions" method="_AspWMunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARCYQ-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARC_UunEEe2dEb0vlBzM_g" name="getRealTimeHartFlag" visibility="private" method="_AspWNOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARC_U-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARC_VOnEEe2dEb0vlBzM_g" name="setRealTimeHartFlag" visibility="private" method="_AspWNunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARC_VenEEe2dEb0vlBzM_g" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARDmYOnEEe2dEb0vlBzM_g" name="getMinPacketReceptionRate" method="_AspWOOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AqCHEunEEe2dEb0vlBzM_g" type="_ApmCMOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ARENcunEEe2dEb0vlBzM_g" name="getE2e" method="_AspWOunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AqCuIOnEEe2dEb0vlBzM_g" type="_ApmCMOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ARE0gunEEe2dEb0vlBzM_g" name="getName" method="_AspWPOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARE0g-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARFbk-nEEe2dEb0vlBzM_g" name="getOptimizationFlag" method="_AspWPunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARFblOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARGCo-nEEe2dEb0vlBzM_g" name="deadlineMisses" method="_Asp9QOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AoP-YOnEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ARGpsOnEEe2dEb0vlBzM_g" name="getNumFaults" method="_Asp9QunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARGpsenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARHQwunEEe2dEb0vlBzM_g" name="getNodeMapIndex" method="_Asp9ROnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtayQenEEe2dEb0vlBzM_g">
                  <body>Maps nodes from workload to their respective indexes.&#xD;
   * &#xD;
   * @return HashMap of node indexes</body>
                </ownedComment>
                <ownedParameter xmi:id="_AqCuIenEEe2dEb0vlBzM_g" type="_AmRocOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AoM7EOnEEe2dEb0vlBzM_g" name="setDefaultParameters" visibility="private" method="_AsnhAOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AoM7EenEEe2dEb0vlBzM_g" name="workLoad" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AoM7EunEEe2dEb0vlBzM_g" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AoM7E-nEEe2dEb0vlBzM_g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AoM7FOnEEe2dEb0vlBzM_g" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AoNiIenEEe2dEb0vlBzM_g" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_AsoIH-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AoNiIunEEe2dEb0vlBzM_g" name="schedule" type="_ANR5oOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AoNiI-nEEe2dEb0vlBzM_g" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AoNiJOnEEe2dEb0vlBzM_g" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AoNiJenEEe2dEb0vlBzM_g" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AoNiJunEEe2dEb0vlBzM_g" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AoOJMOnEEe2dEb0vlBzM_g" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AoOJOOnEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AoOJMenEEe2dEb0vlBzM_g" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AoOJOenEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AoOJMunEEe2dEb0vlBzM_g" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AoOJM-nEEe2dEb0vlBzM_g" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AoOJNOnEEe2dEb0vlBzM_g" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AoOJNenEEe2dEb0vlBzM_g" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AoOJNunEEe2dEb0vlBzM_g" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AoOJN-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AoOwQOnEEe2dEb0vlBzM_g" name="slotIsAvailable" visibility="private" method="_AsoIL-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AoOwQenEEe2dEb0vlBzM_g" name="currentInstructionTimeSlot" type="_AMjg4OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AoOwQunEEe2dEb0vlBzM_g" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AoOwQ-nEEe2dEb0vlBzM_g" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AoOwROnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AoOwRenEEe2dEb0vlBzM_g" name="findNextAvailableChannel" visibility="private" method="_AsovIOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AoOwRunEEe2dEb0vlBzM_g" name="schedule" type="_ANR5oOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AoOwR-nEEe2dEb0vlBzM_g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AoPXUOnEEe2dEb0vlBzM_g" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AoPXUenEEe2dEb0vlBzM_g" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AoPXUunEEe2dEb0vlBzM_g" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AoPXU-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AoPXVOnEEe2dEb0vlBzM_g" name="setSchedule" visibility="private" method="_AsovLenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AoPXVenEEe2dEb0vlBzM_g" name="schedule" type="_ANR5oOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AqAR4enEEe2dEb0vlBzM_g" name="Program" visibility="package" method="_Asm58unEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AqA49OnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AqA49enEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AqAR4unEEe2dEb0vlBzM_g" name="workLoad" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AqA48OnEEe2dEb0vlBzM_g" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AqA48enEEe2dEb0vlBzM_g" name="choice" type="_Ap_q0OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AqA48unEEe2dEb0vlBzM_g" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AqA48-nEEe2dEb0vlBzM_g" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AqA49unEEe2dEb0vlBzM_g" type="_AQ084OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AqA49-nEEe2dEb0vlBzM_g" name="Program" visibility="package" method="_Asm5-enEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AqBgA-nEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AqBgBOnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AqBgAOnEEe2dEb0vlBzM_g" name="workLoad" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AqBgAenEEe2dEb0vlBzM_g" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AqBgAunEEe2dEb0vlBzM_g" name="choice" type="_Ap_q0OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AqBgBenEEe2dEb0vlBzM_g" type="_AQ084OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AqBgBunEEe2dEb0vlBzM_g" name="buildProgram" method="_AsnhB-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AqBgB-nEEe2dEb0vlBzM_g" name="choice" type="_Ap_q0OnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AqCHEOnEEe2dEb0vlBzM_g" name="setScheduleSelected" visibility="private" method="_AsovK-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AqCHEenEEe2dEb0vlBzM_g" name="choice" type="_Ap_q0OnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ARPzoOnEEe2dEb0vlBzM_g" name="WarpSystem">
              <ownedComment xmi:id="_AtayQunEEe2dEb0vlBzM_g">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Arii8OnEEe2dEb0vlBzM_g" name="program" visibility="private" type="_AQ084OnEEe2dEb0vlBzM_g" association="_AuYbkenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_ArjKAOnEEe2dEb0vlBzM_g" name="workLoad" visibility="private" type="_ARd2EOnEEe2dEb0vlBzM_g" association="_AuZCoenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_ArjKAunEEe2dEb0vlBzM_g" name="ra" visibility="private" type="_AQflsOnEEe2dEb0vlBzM_g" association="_AuZpsenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_ArjxEOnEEe2dEb0vlBzM_g" name="la" visibility="private" type="_AMmkMOnEEe2dEb0vlBzM_g" association="_AuaQwenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_ArjxEunEEe2dEb0vlBzM_g" name="ca" visibility="private" type="_AKtt0OnEEe2dEb0vlBzM_g" association="_Aua30enEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_ArkYIOnEEe2dEb0vlBzM_g" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Ark_MunEEe2dEb0vlBzM_g" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ark_M-nEEe2dEb0vlBzM_g" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArlmQOnEEe2dEb0vlBzM_g" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArlmQenEEe2dEb0vlBzM_g" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_AoSaoOnEEe2dEb0vlBzM_g" client="_ARPzoOnEEe2dEb0vlBzM_g" supplier="_ANjmcOnEEe2dEb0vlBzM_g" contract="_ANjmcOnEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsqkUunEEe2dEb0vlBzM_g" name="WarpSystem" specification="_AqD8QOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsqkU-nEEe2dEb0vlBzM_g" name="workLoad" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsqkVOnEEe2dEb0vlBzM_g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsqkVenEEe2dEb0vlBzM_g" name="choice" type="_Ap_q0OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsqkVunEEe2dEb0vlBzM_g" type="_ARPzoOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
 this.numChannels = numChannels;&#xD;
 createProgram(workLoad, numChannels, choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsqkV-nEEe2dEb0vlBzM_g" name="toWorkload" specification="_ARRBwOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsqkWOnEEe2dEb0vlBzM_g" type="_ARd2EOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsrLYOnEEe2dEb0vlBzM_g" name="toProgram" specification="_ARRo0-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsrLYenEEe2dEb0vlBzM_g" type="_AQ084OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return program;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsrLYunEEe2dEb0vlBzM_g" name="toReliabilityAnalysis" specification="_ARSP4-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsrLY-nEEe2dEb0vlBzM_g" type="_AQflsOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);&#xD;
 return ra;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsrLZOnEEe2dEb0vlBzM_g" name="toSimulator" specification="_ARS28unEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsrLZenEEe2dEb0vlBzM_g" type="_AOpLkOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsrLZunEEe2dEb0vlBzM_g" name="toLatencyAnalysis" specification="_ARTeAunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsrLZ-nEEe2dEb0vlBzM_g" type="_AMmkMOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
 return la;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsrLaOnEEe2dEb0vlBzM_g" name="toChannelAnalysis" specification="_ARUFEunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsrLaenEEe2dEb0vlBzM_g" type="_AKtt0OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
 return ca;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsrLaunEEe2dEb0vlBzM_g" name="reliabilitiesMet" specification="_ARUsIunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsrLa-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
   ra = new ReliabilityAnalysis(program);&#xD;
 }&#xD;
 return ra.verifyReliabilities();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsrLbOnEEe2dEb0vlBzM_g" name="deadlinesMet" specification="_ARVTMunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsrLbenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
 if (program.deadlineMisses().size() > 0) {&#xD;
   result = false;&#xD;
 }&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsrLbunEEe2dEb0vlBzM_g" name="createProgram" specification="_AqEjVunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsrLb-nEEe2dEb0vlBzM_g" name="workLoad" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsrLcOnEEe2dEb0vlBzM_g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsrLcenEEe2dEb0vlBzM_g" name="choice" type="_Ap_q0OnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsrycOnEEe2dEb0vlBzM_g" name="getNumFaults" specification="_ARV6QOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsrycenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsrycunEEe2dEb0vlBzM_g" name="getMinPacketReceptionRate" specification="_ARWhUunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asryc-nEEe2dEb0vlBzM_g" type="_ApmCMOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsrydOnEEe2dEb0vlBzM_g" name="getE2e" specification="_ARXIYunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsrydenEEe2dEb0vlBzM_g" type="_ApmCMOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsrydunEEe2dEb0vlBzM_g" name="getName" specification="_ARXvcunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asryd-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsryeOnEEe2dEb0vlBzM_g" name="getSchedulerName" specification="_ARYWgunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsryeenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsryeunEEe2dEb0vlBzM_g" name="getNumTransmissions" specification="_ARY9kenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asrye-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsryfOnEEe2dEb0vlBzM_g" name="getOptimizationFlag" specification="_ARZkoOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsryfenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ARRBwOnEEe2dEb0vlBzM_g" name="toWorkload" method="_AsqkV-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AoTBsOnEEe2dEb0vlBzM_g" type="_ARd2EOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ARRo0-nEEe2dEb0vlBzM_g" name="toProgram" method="_AsrLYOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AoTBsenEEe2dEb0vlBzM_g" type="_AQ084OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ARSP4-nEEe2dEb0vlBzM_g" name="toReliabilityAnalysis" method="_AsrLYunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AoTBsunEEe2dEb0vlBzM_g" type="_AQflsOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ARS28unEEe2dEb0vlBzM_g" name="toSimulator" method="_AsrLZOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AoTBs-nEEe2dEb0vlBzM_g" type="_AOpLkOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ARTeAunEEe2dEb0vlBzM_g" name="toLatencyAnalysis" method="_AsrLZunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AoTBtOnEEe2dEb0vlBzM_g" type="_AMmkMOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ARUFEunEEe2dEb0vlBzM_g" name="toChannelAnalysis" method="_AsrLaOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AoTBtenEEe2dEb0vlBzM_g" type="_AKtt0OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ARUsIunEEe2dEb0vlBzM_g" name="reliabilitiesMet" method="_AsrLaunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARUsI-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARVTMunEEe2dEb0vlBzM_g" name="deadlinesMet" method="_AsrLbOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARVTM-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARV6QOnEEe2dEb0vlBzM_g" name="getNumFaults" method="_AsrycOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARV6QenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARWhUunEEe2dEb0vlBzM_g" name="getMinPacketReceptionRate" method="_AsrycunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AqFKYunEEe2dEb0vlBzM_g" type="_ApmCMOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ARXIYunEEe2dEb0vlBzM_g" name="getE2e" method="_AsrydOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AqFKY-nEEe2dEb0vlBzM_g" type="_ApmCMOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ARXvcunEEe2dEb0vlBzM_g" name="getName" method="_AsrydunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARXvc-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARYWgunEEe2dEb0vlBzM_g" name="getSchedulerName" method="_AsryeOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARYWg-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARY9kenEEe2dEb0vlBzM_g" name="getNumTransmissions" method="_AsryeunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARY9kunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARZkoOnEEe2dEb0vlBzM_g" name="getOptimizationFlag" method="_AsryfOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARZkoenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARZkpenEEe2dEb0vlBzM_g" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_AqD8QOnEEe2dEb0vlBzM_g" name="WarpSystem" method="_AsqkUunEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AqEjU-nEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AqEjVOnEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AqEjUOnEEe2dEb0vlBzM_g" name="workLoad" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AqEjUenEEe2dEb0vlBzM_g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AqEjUunEEe2dEb0vlBzM_g" name="choice" type="_Ap_q0OnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AqEjVenEEe2dEb0vlBzM_g" type="_ARPzoOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AqEjVunEEe2dEb0vlBzM_g" name="createProgram" visibility="private" method="_AsrLbunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AqEjV-nEEe2dEb0vlBzM_g" name="workLoad" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AqFKYOnEEe2dEb0vlBzM_g" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AqFKYenEEe2dEb0vlBzM_g" name="choice" type="_Ap_q0OnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ARd2EOnEEe2dEb0vlBzM_g" name="WorkLoad">
              <ownedComment xmi:id="_AtayQ-nEEe2dEb0vlBzM_g">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_AoX6M-nEEe2dEb0vlBzM_g" general="_AR0bYOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_ArmNUOnEEe2dEb0vlBzM_g" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArmNUenEEe2dEb0vlBzM_g" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArmNUunEEe2dEb0vlBzM_g" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Arm0YOnEEe2dEb0vlBzM_g" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Arm0YenEEe2dEb0vlBzM_g" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Arm0YunEEe2dEb0vlBzM_g" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Arm0Y-nEEe2dEb0vlBzM_g" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Arm0ZOnEEe2dEb0vlBzM_g" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Arm0ZenEEe2dEb0vlBzM_g" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Arm0ZunEEe2dEb0vlBzM_g" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArnbcOnEEe2dEb0vlBzM_g" name="minPacketReceptionRate" type="_ApmCMOnEEe2dEb0vlBzM_g" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArnbcenEEe2dEb0vlBzM_g" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArnbcunEEe2dEb0vlBzM_g" name="e2e" visibility="private" type="_ApmCMOnEEe2dEb0vlBzM_g">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Arnbc-nEEe2dEb0vlBzM_g" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArnbdenEEe2dEb0vlBzM_g" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_AroCgOnEEe2dEb0vlBzM_g" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AroCgenEEe2dEb0vlBzM_g" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_AroCgunEEe2dEb0vlBzM_g" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_AroChOnEEe2dEb0vlBzM_g" name="flows" type="_AMIDEOnEEe2dEb0vlBzM_g" association="_AtbZUOnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AropkOnEEe2dEb0vlBzM_g" name="nodes" type="_AM77YOnEEe2dEb0vlBzM_g" association="_AtbZUunEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AropkenEEe2dEb0vlBzM_g" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Aropk-nEEe2dEb0vlBzM_g" name="flowNamesInOriginalOrder" type="_AmS2kOnEEe2dEb0vlBzM_g" association="_Aube4enEEe2dEb0vlBzM_g">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArpQoenEEe2dEb0vlBzM_g" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArpQounEEe2dEb0vlBzM_g" name="flowNamesInPriorityOrder" type="_AmS2kOnEEe2dEb0vlBzM_g" association="_AucF8enEEe2dEb0vlBzM_g">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Arp3senEEe2dEb0vlBzM_g" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_AoWFA-nEEe2dEb0vlBzM_g" client="_ARd2EOnEEe2dEb0vlBzM_g" supplier="_ANxo4OnEEe2dEb0vlBzM_g" contract="_ANxo4OnEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AssZgOnEEe2dEb0vlBzM_g" name="WorkLoad" specification="_AqG_kOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AssZgenEEe2dEb0vlBzM_g" name="m" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AssZgunEEe2dEb0vlBzM_g" name="e2e" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AssZg-nEEe2dEb0vlBzM_g" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AssZhOnEEe2dEb0vlBzM_g" type="_ARd2EOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AssZhenEEe2dEb0vlBzM_g" name="WorkLoad" specification="_AqHmo-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AssZhunEEe2dEb0vlBzM_g" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AssZh-nEEe2dEb0vlBzM_g" name="m" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AssZiOnEEe2dEb0vlBzM_g" name="e2e" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AssZienEEe2dEb0vlBzM_g" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AssZiunEEe2dEb0vlBzM_g" type="_ARd2EOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
	&#xD;
 setDefaultParameters();&#xD;
	&#xD;
 this.numFaults = numFaults;&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
	&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AssZi-nEEe2dEb0vlBzM_g" name="setDefaultParameters" specification="_ARgSUOnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AssZjOnEEe2dEb0vlBzM_g" name="getE2e" specification="_ARg5YOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AssZjenEEe2dEb0vlBzM_g" type="_ApmCMOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AstAkOnEEe2dEb0vlBzM_g" name="getIntForFlowNames" specification="_ARg5YenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AstAkenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AstAkunEEe2dEb0vlBzM_g" name="getName" specification="_ARg5Y-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AstAk-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AstAlOnEEe2dEb0vlBzM_g" name="setMinPacketReceptionRate" specification="_AqINtOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AstAlenEEe2dEb0vlBzM_g" name="minPacketReceptionRate" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AstAlunEEe2dEb0vlBzM_g" name="getMaxPhase" specification="_ARhgcenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AstAl-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AstAmOnEEe2dEb0vlBzM_g" name="getMinPeriod" specification="_ARhgc-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AstAmenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AstAmunEEe2dEb0vlBzM_g" name="setE2e" specification="_AqI0wOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AstAm-nEEe2dEb0vlBzM_g" name="e2e" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AstAnOnEEe2dEb0vlBzM_g" name="setIntForFlowNames" specification="_ARiHgOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AstAnenEEe2dEb0vlBzM_g" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AstAnunEEe2dEb0vlBzM_g" name="setName" specification="_ARiHgunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AstAn-nEEe2dEb0vlBzM_g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AstnoOnEEe2dEb0vlBzM_g" name="setNodeChannel" specification="_ARiukOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AstnoenEEe2dEb0vlBzM_g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AstnounEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Astno-nEEe2dEb0vlBzM_g" name="getNodeChannel" specification="_ARiuk-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AstnpOnEEe2dEb0vlBzM_g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AstnpenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AstnpunEEe2dEb0vlBzM_g" name="addFlow" specification="_ARjVoenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Astnp-nEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
  * default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
  * This will create a default priority equal to the order listed in the input graph file. We&#xD;
  * also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
  * initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
  * optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
  * over written&#xD;
  */&#xD;
 if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AstnqOnEEe2dEb0vlBzM_g" name="isIntForNodeNames" specification="_ARjVo-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AstnqenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints&#xD;
 return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AstnqunEEe2dEb0vlBzM_g" name="isIntForFlowNames" specification="_ARjVpenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Astnq-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AstnrOnEEe2dEb0vlBzM_g" name="addNodeToFlow" specification="_ARj8senEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AstnrenEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AstnrunEEe2dEb0vlBzM_g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Astnr-nEEe2dEb0vlBzM_g" name="getFlowPriority" specification="_ARj8tOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AstnsOnEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AstnsenEEe2dEb0vlBzM_g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AstnsunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Astns-nEEe2dEb0vlBzM_g" name="setFlowPriority" specification="_ARkjw-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AstntOnEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AstntenEEe2dEb0vlBzM_g" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsuOsOnEEe2dEb0vlBzM_g" name="setFlowPeriod" specification="_ARlK0OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsuOsenEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsuOsunEEe2dEb0vlBzM_g" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsuOs-nEEe2dEb0vlBzM_g" name="setFlowDeadline" specification="_ARlK0-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsuOtOnEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsuOtenEEe2dEb0vlBzM_g" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsuOtunEEe2dEb0vlBzM_g" name="setFlowPhase" specification="_ARlx4OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsuOt-nEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsuOuOnEEe2dEb0vlBzM_g" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsuOuenEEe2dEb0vlBzM_g" name="getFlowIndex" specification="_ARlx4-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsuOuunEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsuOu-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsuOvOnEEe2dEb0vlBzM_g" name="getFlowPriority" specification="_ARmY8OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsuOvenEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsuOvunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsuOv-nEEe2dEb0vlBzM_g" name="getFlowPeriod" specification="_ARmY8-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsuOwOnEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsuOwenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsuOwunEEe2dEb0vlBzM_g" name="getFlowDeadline" specification="_ARmY9unEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsuOw-nEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsuOxOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsuOxenEEe2dEb0vlBzM_g" name="getFlowPhase" specification="_ARmY-enEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsuOxunEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsuOx-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asu1wOnEEe2dEb0vlBzM_g" name="getFlowTxAttemptsPerLink" specification="_ARnAAOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asu1wenEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Asu1wunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asu1w-nEEe2dEb0vlBzM_g" name="setFlowsInPriorityOrder" specification="_ARnAA-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asu1xOnEEe2dEb0vlBzM_g" name="setFlowsInDMorder" specification="_ARnABOnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asu1xenEEe2dEb0vlBzM_g" name="setFlowsInRMorder" specification="_ARnnEOnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asu1xunEEe2dEb0vlBzM_g" name="setFlowsInRealTimeHARTorder" specification="_ARnnEenEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asu1x-nEEe2dEb0vlBzM_g" name="finalizeCurrentFlow" specification="_ARnnEunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asu1yOnEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asu1yenEEe2dEb0vlBzM_g" name="nextReleaseTime" specification="_ARnnFOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asu1yunEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Asu1y-nEEe2dEb0vlBzM_g" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Asu1zOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asu1zenEEe2dEb0vlBzM_g" name="nextAbsoluteDeadline" specification="_ARoOI-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asu1zunEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Asu1z-nEEe2dEb0vlBzM_g" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Asu10OnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asu10enEEe2dEb0vlBzM_g" name="finalizeFlowWithE2eParameters" specification="_ARo1MOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asu10unEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 var m = minPacketReceptionRate; // shorten the name :-)&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
                     // and when m == 1.0&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ReliabilityAnalysis linkTxAndTotalCost =&#xD;
       new ReliabilityAnalysis(e2e, m);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost.numTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asvc0OnEEe2dEb0vlBzM_g" name="finalizeFlowWithFixedFaultTolerance" specification="_ARo1MunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asvc0enEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ReliabilityAnalysis linkTxAndTotalCost = new ReliabilityAnalysis(numFaults); &#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost.numTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asvc0unEEe2dEb0vlBzM_g" name="getNodeNamesOrderedAlphabetically" specification="_ARo1NOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asvc0-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Asvc1OnEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asvc1enEEe2dEb0vlBzM_g" name="getFlow" specification="_ARpcQunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asvc1unEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Asvc1-nEEe2dEb0vlBzM_g" type="_AL0hEOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asvc2OnEEe2dEb0vlBzM_g" name="getFlowNames" specification="_ARqDUOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asvc2enEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Asvc2unEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asvc2-nEEe2dEb0vlBzM_g" name="getNodeIndex" specification="_ARqqYOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asvc3OnEEe2dEb0vlBzM_g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Asvc3enEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asvc3unEEe2dEb0vlBzM_g" name="getNodesInFlow" specification="_ARqqY-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asvc3-nEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Asvc4OnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Asvc4enEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asvc4unEEe2dEb0vlBzM_g" name="getHyperPeriod" specification="_ARrRcenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asvc4-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
   // var dm = new Utlitities();&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod&#xD;
                                                                      // so far and the current&#xD;
                                                                      // period, then update the&#xD;
                                                                      // hyperPeriod with that&#xD;
                                                                      // value&#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asvc5OnEEe2dEb0vlBzM_g" name="getTotalTxAttemptsInFlow" specification="_ARrRc-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asvc5enEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Asvc5unEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AswD4OnEEe2dEb0vlBzM_g" name="getNumTxAttemptsPerLink" specification="_ARr4genEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AswD4enEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AswD4unEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AswD4-nEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of&#xD;
                                         // others&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AswD5OnEEe2dEb0vlBzM_g" name="addEdge" specification="_AoX6MOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AswD5enEEe2dEb0vlBzM_g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AswD5unEEe2dEb0vlBzM_g" name="edge" type="_ALd7wOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AswD5-nEEe2dEb0vlBzM_g" name="maxFlowLength" specification="_ARsfkOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AswD6OnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ARgSUOnEEe2dEb0vlBzM_g" name="setDefaultParameters" visibility="private" method="_AssZi-nEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtbZVunEEe2dEb0vlBzM_g">
                  <body>Sets the default parameters for the nodes and flows.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_ARg5YOnEEe2dEb0vlBzM_g" name="getE2e" method="_AssZjOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtbZV-nEEe2dEb0vlBzM_g">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_AqINs-nEEe2dEb0vlBzM_g" type="_ApmCMOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ARg5YenEEe2dEb0vlBzM_g" name="getIntForFlowNames" method="_AstAkOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcAYOnEEe2dEb0vlBzM_g">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_ARg5YunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARg5Y-nEEe2dEb0vlBzM_g" name="getName" method="_AstAkunEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcAYenEEe2dEb0vlBzM_g">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_ARhgcOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARhgcenEEe2dEb0vlBzM_g" name="getMaxPhase" method="_AstAlunEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcAY-nEEe2dEb0vlBzM_g">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_ARhgcunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARhgc-nEEe2dEb0vlBzM_g" name="getMinPeriod" method="_AstAmOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcAZOnEEe2dEb0vlBzM_g">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_ARhgdOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARiHgOnEEe2dEb0vlBzM_g" name="setIntForFlowNames" method="_AstAnOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcAZunEEe2dEb0vlBzM_g">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ARiHgenEEe2dEb0vlBzM_g" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARiHgunEEe2dEb0vlBzM_g" name="setName" method="_AstAnunEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcAZ-nEEe2dEb0vlBzM_g">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ARiHg-nEEe2dEb0vlBzM_g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARiukOnEEe2dEb0vlBzM_g" name="setNodeChannel" method="_AstnoOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcAaOnEEe2dEb0vlBzM_g">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ARiukenEEe2dEb0vlBzM_g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ARiukunEEe2dEb0vlBzM_g" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARiuk-nEEe2dEb0vlBzM_g" name="getNodeChannel" method="_Astno-nEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcAaenEEe2dEb0vlBzM_g">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_ARiulOnEEe2dEb0vlBzM_g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ARjVoOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARjVoenEEe2dEb0vlBzM_g" name="addFlow" method="_AstnpunEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcAaunEEe2dEb0vlBzM_g">
                  <body>Adds a new flow to the Flows dictionary.&#xD;
   * &#xD;
   * @param flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_ARjVounEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARjVo-nEEe2dEb0vlBzM_g" name="isIntForNodeNames" method="_AstnqOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARjVpOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARjVpenEEe2dEb0vlBzM_g" name="isIntForFlowNames" method="_AstnqunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARj8sOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARj8senEEe2dEb0vlBzM_g" name="addNodeToFlow" method="_AstnrOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcAa-nEEe2dEb0vlBzM_g">
                  <body>Adds a node to the specified flow. If the node is not in the flow, it will create &#xD;
   * a new Node.&#xD;
   * &#xD;
   * @param flowName the name of the flow to be added to&#xD;
   * @param nodeName the name of the node to be added</body>
                </ownedComment>
                <ownedParameter xmi:id="_ARj8sunEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ARj8s-nEEe2dEb0vlBzM_g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARj8tOnEEe2dEb0vlBzM_g" name="getFlowPriority" method="_Astnr-nEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcAbOnEEe2dEb0vlBzM_g">
                  <body>Gets the flow priority of the node by finding the source node and setting its index.&#xD;
   * &#xD;
   * @param flowName the name of the flow to be searched&#xD;
   * @param nodeName the name of the node to be found&#xD;
   * @return priority the priority of the node</body>
                </ownedComment>
                <ownedParameter xmi:id="_ARkjwOnEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ARkjwenEEe2dEb0vlBzM_g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ARkjwunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARkjw-nEEe2dEb0vlBzM_g" name="setFlowPriority" method="_Astns-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARkjxOnEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ARkjxenEEe2dEb0vlBzM_g" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARlK0OnEEe2dEb0vlBzM_g" name="setFlowPeriod" method="_AsuOsOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARlK0enEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ARlK0unEEe2dEb0vlBzM_g" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARlK0-nEEe2dEb0vlBzM_g" name="setFlowDeadline" method="_AsuOs-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARlK1OnEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ARlK1enEEe2dEb0vlBzM_g" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARlx4OnEEe2dEb0vlBzM_g" name="setFlowPhase" method="_AsuOtunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARlx4enEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ARlx4unEEe2dEb0vlBzM_g" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARlx4-nEEe2dEb0vlBzM_g" name="getFlowIndex" method="_AsuOuenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARlx5OnEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ARlx5enEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARmY8OnEEe2dEb0vlBzM_g" name="getFlowPriority" method="_AsuOvOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARmY8enEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ARmY8unEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARmY8-nEEe2dEb0vlBzM_g" name="getFlowPeriod" method="_AsuOv-nEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcAbenEEe2dEb0vlBzM_g">
                  <body>Gets the period of the given flow.&#xD;
   *  &#xD;
   * @param flowName&#xD;
   * @return the period of the given flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_ARmY9OnEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ARmY9enEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARmY9unEEe2dEb0vlBzM_g" name="getFlowDeadline" method="_AsuOwunEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcAbunEEe2dEb0vlBzM_g">
                  <body>Gets the deadline of the given flow.&#xD;
   * &#xD;
   * @param flowName &#xD;
   * @return the deadline of the given flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_ARmY9-nEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ARmY-OnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARmY-enEEe2dEb0vlBzM_g" name="getFlowPhase" method="_AsuOxenEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcAb-nEEe2dEb0vlBzM_g">
                  <body>Gets the phase of the given flow.&#xD;
   * &#xD;
   * @param flowName&#xD;
   * @return the phase of the given flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_ARmY-unEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ARmY--nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARnAAOnEEe2dEb0vlBzM_g" name="getFlowTxAttemptsPerLink" method="_Asu1wOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcncOnEEe2dEb0vlBzM_g">
                  <body>Gets the number of flow transmissions attempts per link.&#xD;
   * &#xD;
   * @param flowName&#xD;
   * @return numTxPerLink the value of transmission attempts per link</body>
                </ownedComment>
                <ownedParameter xmi:id="_ARnAAenEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ARnAAunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARnAA-nEEe2dEb0vlBzM_g" name="setFlowsInPriorityOrder" method="_Asu1w-nEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcncenEEe2dEb0vlBzM_g">
                  <body>Sorts the flows in order based on priority, then puts the ordered flow names into an ArrayList.&#xD;
   *</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_ARnABOnEEe2dEb0vlBzM_g" name="setFlowsInDMorder" method="_Asu1xOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcncunEEe2dEb0vlBzM_g">
                  <body>Sorts the flows based on deadline, putting ordered flow into an ArrayList.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_ARnnEOnEEe2dEb0vlBzM_g" name="setFlowsInRMorder" method="_Asu1xenEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_Atcnc-nEEe2dEb0vlBzM_g">
                  <body>Sorts the flows in order based on period, putting ordered flow names into an ArrayList.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_ARnnEenEEe2dEb0vlBzM_g" name="setFlowsInRealTimeHARTorder" method="_Asu1xunEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ARnnEunEEe2dEb0vlBzM_g" name="finalizeCurrentFlow" method="_Asu1x-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARnnE-nEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARnnFOnEEe2dEb0vlBzM_g" name="nextReleaseTime" method="_Asu1yenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARoOIOnEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ARoOIenEEe2dEb0vlBzM_g" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ARoOIunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARoOI-nEEe2dEb0vlBzM_g" name="nextAbsoluteDeadline" method="_Asu1zenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARoOJOnEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ARoOJenEEe2dEb0vlBzM_g" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ARoOJunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARo1MOnEEe2dEb0vlBzM_g" name="finalizeFlowWithE2eParameters" visibility="private" method="_Asu10enEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARo1MenEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARo1MunEEe2dEb0vlBzM_g" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_Asvc0OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARo1M-nEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARo1NOnEEe2dEb0vlBzM_g" name="getNodeNamesOrderedAlphabetically" method="_Asvc0unEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcndOnEEe2dEb0vlBzM_g">
                  <body>Gets a String array of node names ordered alphabetically. If the node names &#xD;
   * are all integers, converts integers to alpha representation of integers.&#xD;
   * &#xD;
   * @return nodeNames array of node names</body>
                </ownedComment>
                <ownedParameter xmi:id="_ARo1NenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ARpcQOnEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARpcQunEEe2dEb0vlBzM_g" name="getFlow" visibility="private" method="_Asvc1enEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ARpcQ-nEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AoXTIOnEEe2dEb0vlBzM_g" type="_AL0hEOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ARqDUOnEEe2dEb0vlBzM_g" name="getFlowNames" method="_Asvc2OnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcndenEEe2dEb0vlBzM_g">
                  <body>Gets an array of flow names in the order they were read from&#xD;
   * the graph file.&#xD;
   * &#xD;
   * @return the name of the flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_ARqDUenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ARqDUunEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARqqYOnEEe2dEb0vlBzM_g" name="getNodeIndex" method="_Asvc2-nEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcndunEEe2dEb0vlBzM_g">
                  <body>Returns the index of the node from the dictionary of nodes&#xD;
   * &#xD;
   * @param nodeName the name of the node to be found&#xD;
   * @return index the index of the found node</body>
                </ownedComment>
                <ownedParameter xmi:id="_ARqqYenEEe2dEb0vlBzM_g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ARqqYunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARqqY-nEEe2dEb0vlBzM_g" name="getNodesInFlow" method="_Asvc3unEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_Atcnd-nEEe2dEb0vlBzM_g">
                  <body>Gets node names in order they appear in flow specification.&#xD;
   * &#xD;
   * @param flowName &#xD;
   * @return nodes array of node names in flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_ARqqZOnEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ARqqZenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ARqqZunEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARrRcenEEe2dEb0vlBzM_g" name="getHyperPeriod" method="_Asvc4unEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcneOnEEe2dEb0vlBzM_g">
                  <body>Gets the hyper period, the least common multiple of all the periods.&#xD;
   * &#xD;
   * @return hyperPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_ARrRcunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARrRc-nEEe2dEb0vlBzM_g" name="getTotalTxAttemptsInFlow" method="_Asvc5OnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcneenEEe2dEb0vlBzM_g">
                  <body>Gets the total transmission attempts in the flow.&#xD;
   * &#xD;
   * @param flowName &#xD;
   * @return totalCost total transmission attempts</body>
                </ownedComment>
                <ownedParameter xmi:id="_ARrRdOnEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ARr4gOnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARr4genEEe2dEb0vlBzM_g" name="getNumTxAttemptsPerLink" method="_AswD4OnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcneunEEe2dEb0vlBzM_g">
                  <body>Gets an array of the number of transmissions needed for each link&#xD;
   * to meet E2E target. &#xD;
   * &#xD;
   * @param flowName&#xD;
   * @return Integer value of the number of transmission attempts per link</body>
                </ownedComment>
                <ownedParameter xmi:id="_ARr4gunEEe2dEb0vlBzM_g" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ARr4g-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ARr4hOnEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ARsfkOnEEe2dEb0vlBzM_g" name="maxFlowLength" method="_AswD5-nEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcnfOnEEe2dEb0vlBzM_g">
                  <body>Gets the max length of the flow. &#xD;
   * &#xD;
   * @return maxLength</body>
                </ownedComment>
                <ownedParameter xmi:id="_ARsfkenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AoX6MOnEEe2dEb0vlBzM_g" name="addEdge" method="_AswD5OnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_Atcne-nEEe2dEb0vlBzM_g">
                  <body>Adds an edge to a node.&#xD;
&#xD;
@param nodeName&#xD;
@param edge</body>
                </ownedComment>
                <ownedParameter xmi:id="_AoX6MenEEe2dEb0vlBzM_g" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AoX6MunEEe2dEb0vlBzM_g" name="edge" type="_ALd7wOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AqG_kOnEEe2dEb0vlBzM_g" name="WorkLoad" visibility="package" method="_AssZgOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AqHmoOnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AqHmoenEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_AtbZVOnEEe2dEb0vlBzM_g">
                  <body>&#xD;
   * Creates a Workload object using the parameters minimum packet reception rate, End-to-End, and the file name. &#xD;
   * Then builds nodes and flows.&#xD;
   * &#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_AqG_kenEEe2dEb0vlBzM_g" name="m" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AqG_kunEEe2dEb0vlBzM_g" name="e2e" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AqG_k-nEEe2dEb0vlBzM_g" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AqHmounEEe2dEb0vlBzM_g" type="_ARd2EOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AqHmo-nEEe2dEb0vlBzM_g" name="WorkLoad" visibility="package" method="_AssZhenEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AqINsOnEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AqINsenEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_AtbZVenEEe2dEb0vlBzM_g">
                  <body>&#xD;
   * Then builds the nodes and flows.&#xD;
   * &#xD;
   * @param numFaults&#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_AqHmpOnEEe2dEb0vlBzM_g" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AqHmpenEEe2dEb0vlBzM_g" name="m" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AqHmpunEEe2dEb0vlBzM_g" name="e2e" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AqHmp-nEEe2dEb0vlBzM_g" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AqINsunEEe2dEb0vlBzM_g" type="_ARd2EOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AqINtOnEEe2dEb0vlBzM_g" name="setMinPacketReceptionRate" method="_AstAlOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcAYunEEe2dEb0vlBzM_g">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_AqINtenEEe2dEb0vlBzM_g" name="minPacketReceptionRate" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AqI0wOnEEe2dEb0vlBzM_g" name="setE2e" method="_AstAmunEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtcAZenEEe2dEb0vlBzM_g">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_AqI0wenEEe2dEb0vlBzM_g" name="e2e" type="_ApmCMOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AR0bYOnEEe2dEb0vlBzM_g" name="WorkLoadDescription">
              <ownedComment xmi:id="_AtdOgOnEEe2dEb0vlBzM_g">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4 Fall 2022</body>
              </ownedComment>
              <generalization xmi:id="_AobkkunEEe2dEb0vlBzM_g" general="_AOPi8OnEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_ArrF0OnEEe2dEb0vlBzM_g" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArrF0enEEe2dEb0vlBzM_g" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArrF0unEEe2dEb0vlBzM_g" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ArrF0-nEEe2dEb0vlBzM_g" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Arrs4OnEEe2dEb0vlBzM_g" name="FILE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Arrs4enEEe2dEb0vlBzM_g" value="&quot;StressTest.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Arrs4unEEe2dEb0vlBzM_g" name="description" visibility="private" type="_ALaRYOnEEe2dEb0vlBzM_g" association="_AuctAenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Arrs5OnEEe2dEb0vlBzM_g" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArsT8enEEe2dEb0vlBzM_g" name="fm" visibility="private" type="_ALqJAOnEEe2dEb0vlBzM_g" association="_AudUEenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_Ars7AOnEEe2dEb0vlBzM_g" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Aswq8OnEEe2dEb0vlBzM_g" name="WorkLoadDescription" specification="_AR1CcOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Aswq8enEEe2dEb0vlBzM_g" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Aswq8unEEe2dEb0vlBzM_g" type="_AR0bYOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
 this.fm = this.getFileManager();&#xD;
 initialize(inputFileName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Aswq8-nEEe2dEb0vlBzM_g" name="visualization" specification="_AR1pgenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Aswq9OnEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Aswq9enEEe2dEb0vlBzM_g" name="fileVisualization" specification="_AR2QkunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Aswq9unEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsxSAOnEEe2dEb0vlBzM_g" name="toString" specification="_AR23ounEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsxSAenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsxSAunEEe2dEb0vlBzM_g" name="initialize" specification="_AR3esunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsxSA-nEEe2dEb0vlBzM_g" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
 InputGraphFile gf = new InputGraphFile(fm);&#xD;
 inputGraphString = gf.readGraphFile(inputFile);&#xD;
 this.inputFileName = gf.getGraphFileName();&#xD;
 description = new Description(inputGraphString);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsxSBOnEEe2dEb0vlBzM_g" name="main" specification="_AR3etOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsxSBenEEe2dEb0vlBzM_g" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AsxSBunEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>//Initiating new WorkLoadDescription w/ FILE&#xD;
	  //FILE is a static final variable initialized at the beginning of the file&#xD;
	  //allowing for quick swap of files&#xD;
	   WorkLoadDescription wldTest = new WorkLoadDescription(FILE);&#xD;
	   //Initializing new array list for which elements of the file will be stored&#xD;
	   ArrayList&lt;String> testFile = new ArrayList&lt;String>();&#xD;
	   //for loop to add elements from wldTest to Array list skipping the title line&#xD;
	   for(int i = 1 ; i &lt; wldTest.visualization().size(); i++) {&#xD;
		   testFile.add(wldTest.visualization().get(i));&#xD;
	   }&#xD;
	   //Sorting the new ArrayList&#xD;
	   Collections.sort(testFile);&#xD;
	   //Print out the input file name without suffix&#xD;
	   System.out.println(wldTest.getInputFileName().replace(&quot;.txt&quot;, &quot;&quot;));&#xD;
	   //for loop goes through the new ArrayList skipping the final &quot;}&quot;&#xD;
	   for(int i = 0 ; i &lt; testFile.size() - 1; i++ ) {&#xD;
		   //if condition skips blank lines&#xD;
		   if (testFile.get(i).isBlank()) {&#xD;
			   continue;&#xD;
		   }&#xD;
		   //Printing out results formatted to example, trimming leading or ending blank space&#xD;
		   System.out.println(&quot;Flow &quot; + (i + 1) +&quot;: &quot; + testFile.get(i).trim() );&#xD;
		   &#xD;
	   }&#xD;
	   &#xD;
	   &#xD;
	  &#xD;
	   &#xD;
	   &#xD;
	  &#xD;
&#xD;
	   	   &#xD;
	   &#xD;
	   </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AR1CcOnEEe2dEb0vlBzM_g" name="WorkLoadDescription" visibility="package" method="_Aswq8OnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AR1CcunEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AR1Cc-nEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AR1CcenEEe2dEb0vlBzM_g" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AR1pgOnEEe2dEb0vlBzM_g" type="_AR0bYOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AR1pgenEEe2dEb0vlBzM_g" name="visualization" method="_Aswq8-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AobkkOnEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AR2QkunEEe2dEb0vlBzM_g" name="fileVisualization" method="_Aswq9enEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AobkkenEEe2dEb0vlBzM_g" type="_ALaRYOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AR23ounEEe2dEb0vlBzM_g" name="toString" method="_AsxSAOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AR23o-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AR3esunEEe2dEb0vlBzM_g" name="initialize" visibility="private" method="_AsxSAunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AR3es-nEEe2dEb0vlBzM_g" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AR3etOnEEe2dEb0vlBzM_g" name="main" isStatic="true" method="_AsxSBOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AR3etenEEe2dEb0vlBzM_g" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AR4FwOnEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AR568OnEEe2dEb0vlBzM_g" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_AtdOgenEEe2dEb0vlBzM_g">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_AqKp8OnEEe2dEb0vlBzM_g" general="_Am1CEenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_ArtiEOnEEe2dEb0vlBzM_g" name="workLoad" visibility="package" type="_ARd2EOnEEe2dEb0vlBzM_g" association="_Aud7IenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_ArtiEunEEe2dEb0vlBzM_g" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsxSB-nEEe2dEb0vlBzM_g" name="WorkLoadListener" specification="_AocLoOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsxSCOnEEe2dEb0vlBzM_g" name="workLoad" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AsxSCenEEe2dEb0vlBzM_g" type="_AR568OnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsxSCunEEe2dEb0vlBzM_g" name="buildNodesAndFlows" specification="_AocysOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsxSC-nEEe2dEb0vlBzM_g" name="workLoad" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsxSDOnEEe2dEb0vlBzM_g" name="testPrintStdOut" specification="_AR6iAOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsxSDenEEe2dEb0vlBzM_g" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asx5EOnEEe2dEb0vlBzM_g" name="enterWarpName" specification="_AocysunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asx5EenEEe2dEb0vlBzM_g" name="ctx" type="_Am23QOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asx5EunEEe2dEb0vlBzM_g" name="enterFlowName" specification="_AodZwunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asx5E-nEEe2dEb0vlBzM_g" name="ctx" type="_Am4scunEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asx5FOnEEe2dEb0vlBzM_g" name="exitPriority" specification="_AoeA1OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asx5FenEEe2dEb0vlBzM_g" name="ctx" type="_AoeA0unEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asx5FunEEe2dEb0vlBzM_g" name="exitPeriod" specification="_AofO8enEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asx5F-nEEe2dEb0vlBzM_g" name="ctx" type="_Aoen4-nEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asx5GOnEEe2dEb0vlBzM_g" name="exitDeadline" specification="_Aof2AunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asx5GenEEe2dEb0vlBzM_g" name="ctx" type="_Aof2AOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asx5GunEEe2dEb0vlBzM_g" name="exitPhase" specification="_AohEIenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asx5G-nEEe2dEb0vlBzM_g" name="ctx" type="_AogdE-nEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asx5HOnEEe2dEb0vlBzM_g" name="exitSrcNode" specification="_AohEJunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asx5HenEEe2dEb0vlBzM_g" name="ctx" type="_Am5Tg-nEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Asx5HunEEe2dEb0vlBzM_g" name="exitSnkNode" specification="_AohrNOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Asx5H-nEEe2dEb0vlBzM_g" name="ctx" type="_Am6hoOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsygIOnEEe2dEb0vlBzM_g" name="exitFlow" specification="_Aoi5UOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsygIenEEe2dEb0vlBzM_g" name="ctx" type="_Am7Is-nEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AR6iAOnEEe2dEb0vlBzM_g" name="testPrintStdOut" method="_AsxSDOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AR6iAenEEe2dEb0vlBzM_g" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AocLoOnEEe2dEb0vlBzM_g" name="WorkLoadListener" visibility="private" method="_AsxSB-nEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AocLounEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_AocLo-nEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_AocLoenEEe2dEb0vlBzM_g" name="workLoad" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AocLpOnEEe2dEb0vlBzM_g" type="_AR568OnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AocysOnEEe2dEb0vlBzM_g" name="buildNodesAndFlows" isStatic="true" method="_AsxSCunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AocysenEEe2dEb0vlBzM_g" name="workLoad" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AocysunEEe2dEb0vlBzM_g" name="enterWarpName" method="_Asx5EOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Aocys-nEEe2dEb0vlBzM_g" name="ctx" type="_Am23QOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AodZwunEEe2dEb0vlBzM_g" name="enterFlowName" method="_Asx5EunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AodZw-nEEe2dEb0vlBzM_g" name="ctx" type="_Am4scunEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AoeA1OnEEe2dEb0vlBzM_g" name="exitPriority" method="_Asx5FOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AoeA1enEEe2dEb0vlBzM_g" name="ctx" type="_AoeA0unEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AofO8enEEe2dEb0vlBzM_g" name="exitPeriod" method="_Asx5FunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AofO8unEEe2dEb0vlBzM_g" name="ctx" type="_Aoen4-nEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Aof2AunEEe2dEb0vlBzM_g" name="exitDeadline" method="_Asx5GOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Aof2A-nEEe2dEb0vlBzM_g" name="ctx" type="_Aof2AOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AohEIenEEe2dEb0vlBzM_g" name="exitPhase" method="_Asx5GunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AohEIunEEe2dEb0vlBzM_g" name="ctx" type="_AogdE-nEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AohEJunEEe2dEb0vlBzM_g" name="exitSrcNode" method="_Asx5HOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AohrMOnEEe2dEb0vlBzM_g" name="ctx" type="_Am5Tg-nEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AohrNOnEEe2dEb0vlBzM_g" name="exitSnkNode" method="_Asx5HunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AohrNenEEe2dEb0vlBzM_g" name="ctx" type="_Am6hoOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Aoi5UOnEEe2dEb0vlBzM_g" name="exitFlow" method="_AsygIOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Aoi5UenEEe2dEb0vlBzM_g" name="ctx" type="_Am7Is-nEEe2dEb0vlBzM_g"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_AR8-QOnEEe2dEb0vlBzM_g" name="WorkLoadTest" visibility="package">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AsygIunEEe2dEb0vlBzM_g" name="createDefaultWorkload" specification="_AR9lUOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AsygI-nEEe2dEb0vlBzM_g" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AsygJOnEEe2dEb0vlBzM_g" type="_ARd2EOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>int numFaults = 0;&#xD;
		double minLQ = 0.9;&#xD;
		double e2e = 0.99;&#xD;
		WorkLoad workload = new WorkLoad(numFaults, minLQ, e2e, inputFileName);&#xD;
		return workload;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AszHMOnEEe2dEb0vlBzM_g" name="testAddFlow" specification="_AR9lUunEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addFlow(&quot;F2&quot;);&#xD;
		workload.addFlow(&quot;F3&quot;);&#xD;
		workload.addFlow(&quot;F4&quot;);&#xD;
		workload.addFlow(&quot;F5&quot;);&#xD;
		workload.addFlow(&quot;F6&quot;);&#xD;
		var expected = new String[] {&quot;F0&quot;, &quot;F1&quot;, &quot;F2&quot;, &quot;F3&quot;, &quot;F4&quot;, &quot;F5&quot;, &quot;F6&quot;};&#xD;
		var flows = workload.getFlowNamesInOriginalOrder();&#xD;
		for(int i = 0; i &lt; flows.size(); i++) {&#xD;
			var msg = String.format(&quot;At index %d: Flow expected: %s, was: %s.&quot;, i, expected[i], flows.get(i));&#xD;
			assertEquals(msg, flows.get(i), expected[i] );&#xD;
		}&#xD;
		&#xD;
			&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AszHMenEEe2dEb0vlBzM_g" name="testAddFlowJustNumbers" specification="_AR-MY-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addFlow(&quot;2&quot;);&#xD;
		workload.addFlow(&quot;3&quot;);&#xD;
		workload.addFlow(&quot;4&quot;);&#xD;
		workload.addFlow(&quot;5&quot;);&#xD;
		workload.addFlow(&quot;6&quot;);&#xD;
		workload.addFlow(&quot;7&quot;);&#xD;
		var expected = new String[] {&quot;F0&quot;, &quot;F1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;};&#xD;
		var flows = workload.getFlowNamesInOriginalOrder();&#xD;
		for(int i = 0; i &lt; flows.size(); i++) {&#xD;
			var msg = String.format(&quot;At index %d: Flow expected: %s, was: %s.&quot;, i, expected[i], flows.get(i));&#xD;
			assertEquals(msg, flows.get(i), expected[i] );&#xD;
		}	&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AszHMunEEe2dEb0vlBzM_g" name="testAddNodeToFlow" specification="_AR-zc-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addNodeToFlow(&quot;F1&quot;, &quot;D&quot;);&#xD;
		workload.addNodeToFlow(&quot;F1&quot;, &quot;E&quot;);&#xD;
		workload.addNodeToFlow(&quot;F1&quot;, &quot;F&quot;);&#xD;
		var expected = new String[] {&quot;C&quot;, &quot;B&quot;, &quot;A&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;};&#xD;
		var nodes = workload.getNodesInFlow(&quot;F1&quot;);&#xD;
		for(int i = 0; i &lt; nodes.length; i++) {&#xD;
			var msg = String.format(&quot;At index %d: Node expected: %s was: %s&quot;, i, expected[i], nodes[i]);&#xD;
			assertEquals(msg, expected[i], nodes[i]);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AszHM-nEEe2dEb0vlBzM_g" name="testAddNodeToFlowAddingToNewFlow" specification="_AR_agunEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addFlow(&quot;testFlow&quot;);&#xD;
		workload.addNodeToFlow(&quot;testFlow&quot;, &quot;A&quot;);&#xD;
		workload.addNodeToFlow(&quot;testFlow&quot;, &quot;B&quot;);&#xD;
		workload.addNodeToFlow(&quot;testFlow&quot;, &quot;C&quot;);&#xD;
		var expected = new String[] {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;};&#xD;
		var nodes = workload.getNodesInFlow(&quot;testFlow&quot;);&#xD;
		for(int i = 0; i &lt; nodes.length; i++) {&#xD;
			var msg = String.format(&quot;At index %d: Node expected: %s was: %s&quot;, i, expected[i], nodes[i]);&#xD;
			assertEquals(msg, expected[i], nodes[i]);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AszHNOnEEe2dEb0vlBzM_g" name="testGetTotalTxAttemptsInFlow" specification="_ASABkOnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		var expected = new int[] {5, 4};&#xD;
		var flows = workload.getFlowNames();&#xD;
		for(int i = 0; i &lt; flows.length; i++) {&#xD;
			int attempts = workload.getTotalTxAttemptsInFlow(flows[i]);&#xD;
			var msg = String.format(&quot;expected Tx Attempts: %d was: %d&quot;, expected[i], attempts);&#xD;
&#xD;
			assertEquals(msg, expected[i], attempts); &#xD;
		}&#xD;
		&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AszHNenEEe2dEb0vlBzM_g" name="testGetFlowPriority" specification="_ASABlOnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		var flows = workload.getFlowNamesInPriorityOrder();&#xD;
		var expectedP = new int[] {0, 1};&#xD;
		for(int i = 0; i &lt; flows.size(); i++) {&#xD;
			int flowPriority = workload.getFlowPriority(flows.get(i));&#xD;
			var msg = String.format(&quot;Expected Priority: %d Actual Priority: %d &quot;, expectedP[i], flowPriority);&#xD;
			assertEquals(msg, expectedP[i], flowPriority);	&#xD;
		}	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AszHNunEEe2dEb0vlBzM_g" name="testSetFlowPriority" specification="_ASAoo-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		//set integer to set the priority&#xD;
		Integer j = 0;&#xD;
		var flows = workload.getFlowNamesInPriorityOrder();&#xD;
		//for loops starts at the end of the list&#xD;
		for(int i = flows.size(); i > 0; i-- ) {&#xD;
			//sets the priority using j then increases j by 1&#xD;
			workload.setFlowPriority(flows.get(i), j );&#xD;
			j++;&#xD;
			var priority = workload.getFlowPriority(flows.get(i));&#xD;
			var msg = String.format(&quot;Expected Priority: %d Actual Priority: %d &quot;, j, priority);&#xD;
			assertEquals(msg, j, priority);&#xD;
		}&#xD;
		&#xD;
		&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AszHN-nEEe2dEb0vlBzM_g" name="testGetFlowTxAttemptsPerLink" specification="_ASBPsOnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addFlow(&quot;test&quot;);&#xD;
		var flows = workload.getFlowNames();&#xD;
		var expected = new int[] {3, 3, 1};&#xD;
		for(int i = 0; i &lt; flows.length; i++) {&#xD;
		int attempts = workload.getFlowTxAttemptsPerLink(flows[i]);&#xD;
		String msg = String.format(&quot;Expected No. of Tx: %d Actual No. of Tx: %d &quot;, expected[i], attempts);&#xD;
		assertEquals(msg, expected[i], attempts);&#xD;
		}&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AszuQOnEEe2dEb0vlBzM_g" name="testSetFlowsInRMOrder" specification="_ASBPtOnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
	    workload.setFlowsInRMorder();&#xD;
	    var flows = workload.getFlowNamesInPriorityOrder();&#xD;
		var expected = new String[] {&quot;F0&quot;, &quot;F1&quot; };&#xD;
		for(int i = 0; i &lt; flows.size(); i++ ) {&#xD;
			var msg = String.format(&quot;Expected Flow at index %d: %s Actual Flow: %s &quot;,i, expected[i], flows.get(i));&#xD;
			&#xD;
			assertEquals(msg, expected[i], flows.get(i).toString());&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AszuQenEEe2dEb0vlBzM_g" name="testSetFlowsInRMOrderChangePriorityandPeriod" specification="_ASB2w-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.setFlowPriority(&quot;F1&quot;, 0);&#xD;
		workload.setFlowPeriod(&quot;F1&quot;, 5);&#xD;
		workload.setFlowsInRMorder();&#xD;
		var flows = workload.getFlowNamesInPriorityOrder();&#xD;
		var expected = new String[] {&quot;F1&quot;, &quot;F0&quot; };&#xD;
		  for(int i = 0; i &lt; flows.size(); i++ ) {&#xD;
			var msg = String.format(&quot;Expected Flow at index %d: %s Actual Flow: %s &quot;,i, expected[i], flows.get(i));&#xD;
				&#xD;
			assertEquals(msg, expected[i], flows.get(i).toString());&#xD;
	}&#xD;
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AszuQunEEe2dEb0vlBzM_g" name="testGetNodeNamesInAlphabeticalOrder" specification="_ASCd0OnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		var expected = new String[] {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;,};&#xD;
		var actual = workload.getNodeNamesOrderedAlphabetically();&#xD;
		for(int i = 0; i &lt; actual.length; i++) {&#xD;
			var node = actual[i];&#xD;
			var msg = String.format(&quot;At index: %d Node expected: %s Actual Node: %s&quot;, i, expected[i], node);&#xD;
			assertEquals(msg, expected[i], node);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AszuQ-nEEe2dEb0vlBzM_g" name="testGetNodeNamesInAlphabeticalOrderExtraNodes" specification="_ASCd1OnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		workload.addNodeToFlow(&quot;F0&quot;, &quot;1&quot;);&#xD;
		workload.addNodeToFlow(&quot;F1&quot;, &quot;O&quot;);&#xD;
		workload.addNodeToFlow(&quot;F0&quot;, &quot;N&quot;);&#xD;
		workload.addNodeToFlow(&quot;F1&quot;, &quot;2&quot;);&#xD;
		var expected = new String[] {&quot;1&quot;, &quot;2&quot;, &quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;N&quot;, &quot;O&quot;};&#xD;
		var actual = workload.getNodeNamesOrderedAlphabetically();&#xD;
		for(int i = 0; i &lt; actual.length; i++) {&#xD;
			var node = actual[i];&#xD;
			var msg = String.format(&quot;At index: %d Node expected: %s Actual Node: %s&quot;, i, expected[i], node);&#xD;
			assertEquals(msg, expected[i], node);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AszuROnEEe2dEb0vlBzM_g" name="getFlowNames" specification="_ASCd1enEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		String[] actual = workload.getFlowNames();&#xD;
		String[] expected = {&quot;F0&quot;, &quot;F1&quot;};&#xD;
		assertArrayEquals(actual, expected, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AszuRenEEe2dEb0vlBzM_g" name="getNodeIndex_exists" specification="_ASDE4-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int actual = workload.getNodeIndex(&quot;D&quot;);&#xD;
		int expected = 3;&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AszuRunEEe2dEb0vlBzM_g" name="getNodeIndex_doesNotExist" specification="_ASDr8unEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int actual = workload.getNodeIndex(&quot;&quot;);&#xD;
		int expected = 0;&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_AszuR-nEEe2dEb0vlBzM_g" name="getNodesInFlow" specification="_ASDr9unEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		String[] actual = workload.getNodesInFlow(&quot;F0&quot;);&#xD;
		String[] expected = {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;};&#xD;
		assertArrayEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As0VUOnEEe2dEb0vlBzM_g" name="getHyperPeriod_Short" specification="_ASETA-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String fileName = &quot;Example4.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int actual = workload.getHyperPeriod();&#xD;
		int expected = 20;&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As0VUenEEe2dEb0vlBzM_g" name="getHyperPeriod_Long" specification="_ASE6EunEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String fileName = &quot;StressTest.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int actual = workload.getHyperPeriod();&#xD;
		int expected = 300;&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As0VUunEEe2dEb0vlBzM_g" name="getNumTxAttemptsPerLink" specification="_ASE6FunEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String fileName = &quot;StressTest.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		Integer[] actual = workload.getNumTxAttemptsPerLink(&quot;F1&quot;);&#xD;
		Integer[] expected = {3, 3, 0};&#xD;
		assertArrayEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As0VU-nEEe2dEb0vlBzM_g" name="maxFlowLength_StressTest" specification="_ASFhI-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String fileName = &quot;StressTest.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int expected = 8;&#xD;
		int actual = workload.maxFlowLength();&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As0VVOnEEe2dEb0vlBzM_g" name="maxFlowLength_LongChain" specification="_ASGIMunEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String fileName = &quot;LongChain.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		int expected = 26;&#xD;
		int actual = workload.maxFlowLength();&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As0VVenEEe2dEb0vlBzM_g" name="getFlowDeadline" specification="_ASGINunEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String fileName = &quot;Example.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		&#xD;
		String flow = &quot;F0&quot;;&#xD;
		int expected = 10;&#xD;
		&#xD;
		workload.setFlowDeadline(flow, expected);&#xD;
		int actual = workload.getFlowDeadline(flow);&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As0VVunEEe2dEb0vlBzM_g" name="setFlowDeadline" specification="_ASGvQ-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>String fileName = &quot;Example.txt&quot;;&#xD;
		WorkLoad workload = createDefaultWorkload(fileName);&#xD;
		&#xD;
		String flow = &quot;F0&quot;;&#xD;
		int expected = 10;&#xD;
		&#xD;
		workload.setFlowDeadline(flow, expected);&#xD;
		int actual = workload.getFlowDeadline(flow);&#xD;
		assertEquals(expected, actual, &quot;Testing File: &quot; + fileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_AR9lUOnEEe2dEb0vlBzM_g" name="createDefaultWorkload" visibility="private" method="_AsygIunEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_AtdOgunEEe2dEb0vlBzM_g">
                  <body>Helper method to setup workload object depending on filename.&#xD;
	 * @param inputFileName name of file to use.&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_AR9lUenEEe2dEb0vlBzM_g" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_AojgYOnEEe2dEb0vlBzM_g" type="_ARd2EOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AR9lUunEEe2dEb0vlBzM_g" name="testAddFlow" visibility="package" method="_AszHMOnEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AR-MY-nEEe2dEb0vlBzM_g" name="testAddFlowJustNumbers" visibility="package" method="_AszHMenEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AR-zc-nEEe2dEb0vlBzM_g" name="testAddNodeToFlow" visibility="package" method="_AszHMunEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_AR_agunEEe2dEb0vlBzM_g" name="testAddNodeToFlowAddingToNewFlow" visibility="package" method="_AszHM-nEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ASABkOnEEe2dEb0vlBzM_g" name="testGetTotalTxAttemptsInFlow" visibility="package" method="_AszHNOnEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ASABlOnEEe2dEb0vlBzM_g" name="testGetFlowPriority" visibility="package" method="_AszHNenEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ASAoo-nEEe2dEb0vlBzM_g" name="testSetFlowPriority" visibility="package" method="_AszHNunEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ASBPsOnEEe2dEb0vlBzM_g" name="testGetFlowTxAttemptsPerLink" visibility="package" method="_AszHN-nEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ASBPtOnEEe2dEb0vlBzM_g" name="testSetFlowsInRMOrder" visibility="package" method="_AszuQOnEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ASB2w-nEEe2dEb0vlBzM_g" name="testSetFlowsInRMOrderChangePriorityandPeriod" visibility="package" method="_AszuQenEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ASCd0OnEEe2dEb0vlBzM_g" name="testGetNodeNamesInAlphabeticalOrder" visibility="package" method="_AszuQunEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ASCd1OnEEe2dEb0vlBzM_g" name="testGetNodeNamesInAlphabeticalOrderExtraNodes" visibility="package" method="_AszuQ-nEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_Atd1kOnEEe2dEb0vlBzM_g">
                  <body>tests the getNodeNamesOrderedAlphabetically method in WorkLoad.java class. Adds extra Nodes&#xD;
	 * with names not present in the original file, then tests to see if they are sorted properly.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_ASCd1enEEe2dEb0vlBzM_g" name="getFlowNames" visibility="package" method="_AszuROnEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ASDE4-nEEe2dEb0vlBzM_g" name="getNodeIndex_exists" visibility="package" method="_AszuRenEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ASDr8unEEe2dEb0vlBzM_g" name="getNodeIndex_doesNotExist" visibility="package" method="_AszuRunEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ASDr9unEEe2dEb0vlBzM_g" name="getNodesInFlow" visibility="package" method="_AszuR-nEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ASETA-nEEe2dEb0vlBzM_g" name="getHyperPeriod_Short" visibility="package" method="_As0VUOnEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ASE6EunEEe2dEb0vlBzM_g" name="getHyperPeriod_Long" visibility="package" method="_As0VUenEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ASE6FunEEe2dEb0vlBzM_g" name="getNumTxAttemptsPerLink" visibility="package" method="_As0VUunEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ASFhI-nEEe2dEb0vlBzM_g" name="maxFlowLength_StressTest" visibility="package" method="_As0VU-nEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ASGIMunEEe2dEb0vlBzM_g" name="maxFlowLength_LongChain" visibility="package" method="_As0VVOnEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ASGINunEEe2dEb0vlBzM_g" name="getFlowDeadline" visibility="package" method="_As0VVenEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ASGvQ-nEEe2dEb0vlBzM_g" name="setFlowDeadline" visibility="package" method="_As0VVunEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ASH9YOnEEe2dEb0vlBzM_g" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_Atd1kenEEe2dEb0vlBzM_g">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_AruwMOnEEe2dEb0vlBzM_g" name="activations" visibility="private" type="_AKrRkOnEEe2dEb0vlBzM_g" association="_AueiMenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_AruwMunEEe2dEb0vlBzM_g" name="workload" visibility="private" type="_ARd2EOnEEe2dEb0vlBzM_g" association="_AufJQenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_ArvXQOnEEe2dEb0vlBzM_g" name="flows" visibility="protected" type="_AL0hEOnEEe2dEb0vlBzM_g" association="_AufwUenEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_ArvXQunEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ArvXQ-nEEe2dEb0vlBzM_g" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ArvXQenEEe2dEb0vlBzM_g" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ArvXRenEEe2dEb0vlBzM_g" name="nodes" visibility="private" type="_AMzYgOnEEe2dEb0vlBzM_g" association="_AugXYenEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_Arv-UenEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Arv-UunEEe2dEb0vlBzM_g" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Arv-UOnEEe2dEb0vlBzM_g" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Arv-VOnEEe2dEb0vlBzM_g" name="nodeMap" visibility="private" type="_AM77YOnEEe2dEb0vlBzM_g" association="_Aug-cenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_ArwlYOnEEe2dEb0vlBzM_g" name="priorityQueue" visibility="private" type="_ANhxQOnEEe2dEb0vlBzM_g" association="_AuhlgenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_ArxMcOnEEe2dEb0vlBzM_g" name="nodeConnectivityMap" visibility="protected" type="_AmRocOnEEe2dEb0vlBzM_g" association="_AuiMkenEEe2dEb0vlBzM_g"/>
              <ownedAttribute xmi:id="_ArxzgunEEe2dEb0vlBzM_g" name="activationMap" visibility="package" type="_AMJRMOnEEe2dEb0vlBzM_g" association="_AuizoenEEe2dEb0vlBzM_g"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As08YOnEEe2dEb0vlBzM_g" name="Poset" specification="_AokugOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_As08YenEEe2dEb0vlBzM_g" name="workload" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_As08YunEEe2dEb0vlBzM_g" type="_ASH9YOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As08Y-nEEe2dEb0vlBzM_g" name="getNodeConnectivity" specification="_ASJLgOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_As08ZOnEEe2dEb0vlBzM_g" type="_AmRocOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As1jcOnEEe2dEb0vlBzM_g" name="getNodeNames" specification="_ASJykenEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_As1jcenEEe2dEb0vlBzM_g" type="_AmS2kOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As1jcunEEe2dEb0vlBzM_g" name="getNodesNamesOrderedAlphabetically" specification="_ASLAsOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_As1jc-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_As1jdOnEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As1jdenEEe2dEb0vlBzM_g" name="buildPosetOfActivations" specification="_ASLnwOnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As1jdunEEe2dEb0vlBzM_g" name="createEdgeLists" specification="_ASLnwenEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As1jd-nEEe2dEb0vlBzM_g" name="createConflictLists" specification="_ASLnwunEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As1jeOnEEe2dEb0vlBzM_g" name="createGlobalConflictLists" specification="_ASLnw-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As1jeenEEe2dEb0vlBzM_g" name="createLocalConflictLists" specification="_ASLnxOnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As2KgOnEEe2dEb0vlBzM_g" name="findCoordinator" specification="_AqMfIOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_As2KgenEEe2dEb0vlBzM_g" name="nodesInFlow" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_As2KgunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As2Kg-nEEe2dEb0vlBzM_g" name="buildTxArray" specification="_AqNGMOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_As2KhOnEEe2dEb0vlBzM_g" name="nodesInFlow" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_As2KhenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_As2KhunEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As2Kh-nEEe2dEb0vlBzM_g" name="createInitialActivations" specification="_ASMO0OnEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As2KiOnEEe2dEb0vlBzM_g" name="getMaxTx" specification="_AolVkOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_As2KienEEe2dEb0vlBzM_g" name="node" type="_AMzYgOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_As2KiunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As2Ki-nEEe2dEb0vlBzM_g" name="getActivation" specification="_Aol8oOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_As2KjOnEEe2dEb0vlBzM_g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_As2KjenEEe2dEb0vlBzM_g" name="node" type="_AMzYgOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_As2KjunEEe2dEb0vlBzM_g" type="_AKTeIOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As2xkOnEEe2dEb0vlBzM_g" name="getHyperPeriod" specification="_ASMO0enEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_As2xkenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As2xkunEEe2dEb0vlBzM_g" name="getMaxPhase" specification="_ASM14enEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_As2xk-nEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As2xlOnEEe2dEb0vlBzM_g" name="orderActivations" specification="_ASM14-nEEe2dEb0vlBzM_g">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As2xlenEEe2dEb0vlBzM_g" name="getNextActivation" specification="_ASNc8OnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_As2xlunEEe2dEb0vlBzM_g" type="_AKTeIOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As2xl-nEEe2dEb0vlBzM_g" name="addActivation" specification="_Aol8penEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_As2xmOnEEe2dEb0vlBzM_g" name="activation" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_As3YoOnEEe2dEb0vlBzM_g" name="findBaseStation" specification="_ASNc8enEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_As3YoenEEe2dEb0vlBzM_g" type="_AMzYgOnEEe2dEb0vlBzM_g" direction="return"/>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ASJLgOnEEe2dEb0vlBzM_g" name="getNodeConnectivity" visibility="private" method="_As08Y-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AqL4EOnEEe2dEb0vlBzM_g" type="_AmRocOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ASJykenEEe2dEb0vlBzM_g" name="getNodeNames" method="_As1jcOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AqL4EenEEe2dEb0vlBzM_g" type="_AmS2kOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ASLAsOnEEe2dEb0vlBzM_g" name="getNodesNamesOrderedAlphabetically" method="_As1jcunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ASLAsenEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ASLAsunEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ASLnwOnEEe2dEb0vlBzM_g" name="buildPosetOfActivations" method="_As1jdenEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ASLnwenEEe2dEb0vlBzM_g" name="createEdgeLists" visibility="private" method="_As1jdunEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ASLnwunEEe2dEb0vlBzM_g" name="createConflictLists" visibility="private" method="_As1jd-nEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ASLnw-nEEe2dEb0vlBzM_g" name="createGlobalConflictLists" visibility="private" method="_As1jeOnEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ASLnxOnEEe2dEb0vlBzM_g" name="createLocalConflictLists" visibility="private" method="_As1jeenEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ASMO0OnEEe2dEb0vlBzM_g" name="createInitialActivations" visibility="private" method="_As2Kh-nEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ASMO0enEEe2dEb0vlBzM_g" name="getHyperPeriod" method="_As2xkOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ASM14OnEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ASM14enEEe2dEb0vlBzM_g" name="getMaxPhase" method="_As2xkunEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_ASM14unEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ASM14-nEEe2dEb0vlBzM_g" name="orderActivations" method="_As2xlOnEEe2dEb0vlBzM_g"/>
              <ownedOperation xmi:id="_ASNc8OnEEe2dEb0vlBzM_g" name="getNextActivation" method="_As2xlenEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_Atd1lOnEEe2dEb0vlBzM_g">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_Aol8pOnEEe2dEb0vlBzM_g" type="_AKTeIOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ASNc8enEEe2dEb0vlBzM_g" name="findBaseStation" visibility="protected" method="_As3YoOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_Atd1lunEEe2dEb0vlBzM_g">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_AomjsOnEEe2dEb0vlBzM_g" type="_AMzYgOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AokugOnEEe2dEb0vlBzM_g" name="Poset" visibility="package" method="_As08YOnEEe2dEb0vlBzM_g">
                <eAnnotations xmi:id="_AokugunEEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Aokug-nEEe2dEb0vlBzM_g" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Atd1kunEEe2dEb0vlBzM_g">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_AokugenEEe2dEb0vlBzM_g" name="workload" type="_ARd2EOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AokuhOnEEe2dEb0vlBzM_g" type="_ASH9YOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AolVkOnEEe2dEb0vlBzM_g" name="getMaxTx" visibility="private" method="_As2KiOnEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AolVkenEEe2dEb0vlBzM_g" name="node" type="_AMzYgOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AolVkunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Aol8oOnEEe2dEb0vlBzM_g" name="getActivation" visibility="private" method="_As2Ki-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_Aol8oenEEe2dEb0vlBzM_g" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Aol8ounEEe2dEb0vlBzM_g" name="node" type="_AMzYgOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_Aol8o-nEEe2dEb0vlBzM_g" type="_AKTeIOnEEe2dEb0vlBzM_g" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Aol8penEEe2dEb0vlBzM_g" name="addActivation" method="_As2xl-nEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_Atd1lenEEe2dEb0vlBzM_g">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_Aol8punEEe2dEb0vlBzM_g" name="activation" type="_AKTeIOnEEe2dEb0vlBzM_g"/>
              </ownedOperation>
              <ownedOperation xmi:id="_AqMfIOnEEe2dEb0vlBzM_g" name="findCoordinator" visibility="protected" method="_As2KgOnEEe2dEb0vlBzM_g">
                <ownedComment xmi:id="_Atd1k-nEEe2dEb0vlBzM_g">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_AqMfIenEEe2dEb0vlBzM_g" name="nodesInFlow" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AqMfIunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_AqNGMOnEEe2dEb0vlBzM_g" name="buildTxArray" visibility="private" method="_As2Kg-nEEe2dEb0vlBzM_g">
                <ownedParameter xmi:id="_AqNGMenEEe2dEb0vlBzM_g" name="nodesInFlow" type="_AmS2kOnEEe2dEb0vlBzM_g"/>
                <ownedParameter xmi:id="_AqNGMunEEe2dEb0vlBzM_g" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AqNGM-nEEe2dEb0vlBzM_g" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ApLygOnEEe2dEb0vlBzM_g" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ApgioOnEEe2dEb0vlBzM_g" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ApwaQOnEEe2dEb0vlBzM_g" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_ApxoZunEEe2dEb0vlBzM_g" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ap_q0OnEEe2dEb0vlBzM_g" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_AtUroOnEEe2dEb0vlBzM_g" name="" memberEnd="_AqmHwunEEe2dEb0vlBzM_g _AtUroenEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AtUroenEEe2dEb0vlBzM_g" name="" type="_ALd7wOnEEe2dEb0vlBzM_g" association="_AtUroOnEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AtYWBOnEEe2dEb0vlBzM_g" name="" memberEnd="_ArJhZOnEEe2dEb0vlBzM_g _AtYWBenEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AtYWBenEEe2dEb0vlBzM_g" name="" type="_APdq8OnEEe2dEb0vlBzM_g" association="_AtYWBOnEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AtbZUOnEEe2dEb0vlBzM_g" name="" memberEnd="_AroChOnEEe2dEb0vlBzM_g _AtbZUenEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AtbZUenEEe2dEb0vlBzM_g" name="" type="_ARd2EOnEEe2dEb0vlBzM_g" association="_AtbZUOnEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AtbZUunEEe2dEb0vlBzM_g" name="" memberEnd="_AropkOnEEe2dEb0vlBzM_g _AtbZU-nEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AtbZU-nEEe2dEb0vlBzM_g" name="" type="_ARd2EOnEEe2dEb0vlBzM_g" association="_AtbZUunEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_At4sUOnEEe2dEb0vlBzM_g" name="" memberEnd="_At4sUenEEe2dEb0vlBzM_g _AqYFUenEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_At4sUenEEe2dEb0vlBzM_g" name="" type="_AKTeIOnEEe2dEb0vlBzM_g" association="_At4sUOnEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_At5TYenEEe2dEb0vlBzM_g" name="" memberEnd="_At5TYunEEe2dEb0vlBzM_g _AqYsYenEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_At5TYunEEe2dEb0vlBzM_g" name="" type="_AKTeIOnEEe2dEb0vlBzM_g" association="_At5TYenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_At6hgOnEEe2dEb0vlBzM_g" name="" memberEnd="_At6hgenEEe2dEb0vlBzM_g _AqZ6gOnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_At6hgenEEe2dEb0vlBzM_g" name="" type="_AKTeIOnEEe2dEb0vlBzM_g" association="_At6hgOnEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_At7IkOnEEe2dEb0vlBzM_g" name="" memberEnd="_At7IkenEEe2dEb0vlBzM_g _AqcWwunEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_At7IkenEEe2dEb0vlBzM_g" name="" type="_AKtt0OnEEe2dEb0vlBzM_g" association="_At7IkOnEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_At7voOnEEe2dEb0vlBzM_g" name="" memberEnd="_At7voenEEe2dEb0vlBzM_g _Aqc90enEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_At7voenEEe2dEb0vlBzM_g" name="" type="_AKtt0OnEEe2dEb0vlBzM_g" association="_At7voOnEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_At8WsOnEEe2dEb0vlBzM_g" name="" memberEnd="_At8WsenEEe2dEb0vlBzM_g _AqeL8unEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_At8WsenEEe2dEb0vlBzM_g" name="" type="_AKxYMOnEEe2dEb0vlBzM_g" association="_At8WsOnEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_At89wOnEEe2dEb0vlBzM_g" name="" memberEnd="_At89wenEEe2dEb0vlBzM_g _AqeL9OnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_At89wenEEe2dEb0vlBzM_g" name="" type="_AKxYMOnEEe2dEb0vlBzM_g" association="_At89wOnEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_At9k0OnEEe2dEb0vlBzM_g" name="" memberEnd="_At9k0enEEe2dEb0vlBzM_g _AqgBIOnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_At9k0enEEe2dEb0vlBzM_g" name="" type="_AKz0cOnEEe2dEb0vlBzM_g" association="_At9k0OnEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_At9k0-nEEe2dEb0vlBzM_g" name="" memberEnd="_At9k1OnEEe2dEb0vlBzM_g _AqhPQunEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_At9k1OnEEe2dEb0vlBzM_g" name="" type="_AK9lcOnEEe2dEb0vlBzM_g" association="_At9k0-nEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_At-L4enEEe2dEb0vlBzM_g" name="" memberEnd="_At-L4unEEe2dEb0vlBzM_g _AqidYenEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_At-L4unEEe2dEb0vlBzM_g" name="" type="_AK9lcOnEEe2dEb0vlBzM_g" association="_At-L4enEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_At-y8enEEe2dEb0vlBzM_g" name="" memberEnd="_At-y8unEEe2dEb0vlBzM_g _AqjrgOnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_At-y8unEEe2dEb0vlBzM_g" name="" type="_ALOrMOnEEe2dEb0vlBzM_g" association="_At-y8enEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_At_aAenEEe2dEb0vlBzM_g" name="" memberEnd="_At_aAunEEe2dEb0vlBzM_g _Aqk5ounEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_At_aAunEEe2dEb0vlBzM_g" name="" type="_ALOrMOnEEe2dEb0vlBzM_g" association="_At_aAenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuABEenEEe2dEb0vlBzM_g" name="" memberEnd="_AuABEunEEe2dEb0vlBzM_g _AqpyIenEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuABEunEEe2dEb0vlBzM_g" name="" type="_AL0hEOnEEe2dEb0vlBzM_g" association="_AuABEenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuABFOnEEe2dEb0vlBzM_g" name="" memberEnd="_AuABFenEEe2dEb0vlBzM_g _AqqZMenEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuABFenEEe2dEb0vlBzM_g" name="" type="_AL0hEOnEEe2dEb0vlBzM_g" association="_AuABFOnEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuAoIenEEe2dEb0vlBzM_g" name="" memberEnd="_AuAoIunEEe2dEb0vlBzM_g _AqrAQenEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuAoIunEEe2dEb0vlBzM_g" name="" type="_AL0hEOnEEe2dEb0vlBzM_g" association="_AuAoIenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuBPMenEEe2dEb0vlBzM_g" name="" memberEnd="_AuBPMunEEe2dEb0vlBzM_g _AqrnUenEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuBPMunEEe2dEb0vlBzM_g" name="" type="_AL0hEOnEEe2dEb0vlBzM_g" association="_AuBPMenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuB2QOnEEe2dEb0vlBzM_g" name="" memberEnd="_AuB2QenEEe2dEb0vlBzM_g _AqrnU-nEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuB2QenEEe2dEb0vlBzM_g" name="" type="_AL0hEOnEEe2dEb0vlBzM_g" association="_AuB2QOnEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuB2Q-nEEe2dEb0vlBzM_g" name="" memberEnd="_AuB2ROnEEe2dEb0vlBzM_g _AquDkOnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuB2ROnEEe2dEb0vlBzM_g" name="" type="_AMJ4QOnEEe2dEb0vlBzM_g" association="_AuB2Q-nEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuCdUenEEe2dEb0vlBzM_g" name="" memberEnd="_AuCdUunEEe2dEb0vlBzM_g _AquqounEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuCdUunEEe2dEb0vlBzM_g" name="" type="_AMJ4QOnEEe2dEb0vlBzM_g" association="_AuCdUenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuDEYenEEe2dEb0vlBzM_g" name="" memberEnd="_AuDEYunEEe2dEb0vlBzM_g _AqvRsOnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuDEYunEEe2dEb0vlBzM_g" name="" type="_AMU3YOnEEe2dEb0vlBzM_g" association="_AuDEYenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuDrcenEEe2dEb0vlBzM_g" name="" memberEnd="_AuDrcunEEe2dEb0vlBzM_g _Aqv4wOnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuDrcunEEe2dEb0vlBzM_g" name="" type="_AMYhwOnEEe2dEb0vlBzM_g" association="_AuDrcenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuDrdOnEEe2dEb0vlBzM_g" name="" memberEnd="_AuDrdenEEe2dEb0vlBzM_g _Aqv4wunEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuDrdenEEe2dEb0vlBzM_g" name="" type="_AMYhwOnEEe2dEb0vlBzM_g" association="_AuDrdOnEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuESgenEEe2dEb0vlBzM_g" name="" memberEnd="_AuESgunEEe2dEb0vlBzM_g _Aqwf0-nEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuESgunEEe2dEb0vlBzM_g" name="" type="_AMcMIOnEEe2dEb0vlBzM_g" association="_AuESgenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuE5kenEEe2dEb0vlBzM_g" name="" memberEnd="_AuE5kunEEe2dEb0vlBzM_g _Aqy8EunEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuE5kunEEe2dEb0vlBzM_g" name="" type="_AMmkMOnEEe2dEb0vlBzM_g" association="_AuE5kenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuE5lOnEEe2dEb0vlBzM_g" name="" memberEnd="_AuFgoOnEEe2dEb0vlBzM_g _AqzjIOnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuFgoOnEEe2dEb0vlBzM_g" name="" type="_AMmkMOnEEe2dEb0vlBzM_g" association="_AuE5lOnEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuFgounEEe2dEb0vlBzM_g" name="" memberEnd="_AuFgo-nEEe2dEb0vlBzM_g _AqzjIunEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuFgo-nEEe2dEb0vlBzM_g" name="" type="_AMmkMOnEEe2dEb0vlBzM_g" association="_AuFgounEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuGHsenEEe2dEb0vlBzM_g" name="" memberEnd="_AuGHsunEEe2dEb0vlBzM_g _AqzjJOnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuGHsunEEe2dEb0vlBzM_g" name="" type="_AMmkMOnEEe2dEb0vlBzM_g" association="_AuGHsenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuGHtOnEEe2dEb0vlBzM_g" name="" memberEnd="_AuGHtenEEe2dEb0vlBzM_g _Aq0KMenEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuGHtenEEe2dEb0vlBzM_g" name="" type="_AMmkMOnEEe2dEb0vlBzM_g" association="_AuGHtOnEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuGuwenEEe2dEb0vlBzM_g" name="" memberEnd="_AuGuwunEEe2dEb0vlBzM_g _Aq1YUenEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuGuwunEEe2dEb0vlBzM_g" name="" type="_AMsq0OnEEe2dEb0vlBzM_g" association="_AuGuwenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuHV0enEEe2dEb0vlBzM_g" name="" memberEnd="_AuHV0unEEe2dEb0vlBzM_g _Aq1YU-nEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuHV0unEEe2dEb0vlBzM_g" name="" type="_AMsq0OnEEe2dEb0vlBzM_g" association="_AuHV0enEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuHV1OnEEe2dEb0vlBzM_g" name="" memberEnd="_AuHV1enEEe2dEb0vlBzM_g _Aq2mcOnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuHV1enEEe2dEb0vlBzM_g" name="" type="_AMzYgOnEEe2dEb0vlBzM_g" association="_AuHV1OnEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuH84enEEe2dEb0vlBzM_g" name="" memberEnd="_AuH84unEEe2dEb0vlBzM_g _Aq5CsenEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuH84unEEe2dEb0vlBzM_g" name="" type="_ANU88OnEEe2dEb0vlBzM_g" association="_AuH84enEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuIj8enEEe2dEb0vlBzM_g" name="" memberEnd="_AuIj8unEEe2dEb0vlBzM_g _Aq5Cs-nEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuIj8unEEe2dEb0vlBzM_g" name="" type="_ANU88OnEEe2dEb0vlBzM_g" association="_AuIj8enEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuJLAOnEEe2dEb0vlBzM_g" name="" memberEnd="_AuJLAenEEe2dEb0vlBzM_g _Aq635enEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuJLAenEEe2dEb0vlBzM_g" name="" type="_AN4WkOnEEe2dEb0vlBzM_g" association="_AuJLAOnEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuJLA-nEEe2dEb0vlBzM_g" name="" memberEnd="_AuJLBOnEEe2dEb0vlBzM_g _Aq7e8enEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuJLBOnEEe2dEb0vlBzM_g" name="" type="_AN4WkOnEEe2dEb0vlBzM_g" association="_AuJLA-nEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuJyEenEEe2dEb0vlBzM_g" name="" memberEnd="_AuJyEunEEe2dEb0vlBzM_g _Aq8GAunEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuJyEunEEe2dEb0vlBzM_g" name="" type="_AOHnIOnEEe2dEb0vlBzM_g" association="_AuJyEenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuJyFOnEEe2dEb0vlBzM_g" name="" memberEnd="_AuJyFenEEe2dEb0vlBzM_g _Aq9UIOnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuJyFenEEe2dEb0vlBzM_g" name="" type="_AOPi8OnEEe2dEb0vlBzM_g" association="_AuJyFOnEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuKZIenEEe2dEb0vlBzM_g" name="" memberEnd="_AuKZIunEEe2dEb0vlBzM_g _ArBlk-nEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuKZIunEEe2dEb0vlBzM_g" name="" type="_AO8tkOnEEe2dEb0vlBzM_g" association="_AuKZIenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuLAMenEEe2dEb0vlBzM_g" name="" memberEnd="_AuLAMunEEe2dEb0vlBzM_g _ArCMoenEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuLAMunEEe2dEb0vlBzM_g" name="" type="_AO8tkOnEEe2dEb0vlBzM_g" association="_AuLAMenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuLnQenEEe2dEb0vlBzM_g" name="" memberEnd="_AuLnQunEEe2dEb0vlBzM_g _ArDawOnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuLnQunEEe2dEb0vlBzM_g" name="" type="_APT58OnEEe2dEb0vlBzM_g" association="_AuLnQenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuMOUenEEe2dEb0vlBzM_g" name="" memberEnd="_AuMOUunEEe2dEb0vlBzM_g _ArEB0enEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuMOUunEEe2dEb0vlBzM_g" name="" type="_APT58OnEEe2dEb0vlBzM_g" association="_AuMOUenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuM1YenEEe2dEb0vlBzM_g" name="" memberEnd="_AuM1YunEEe2dEb0vlBzM_g _ArEB0-nEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuM1YunEEe2dEb0vlBzM_g" name="" type="_APT58OnEEe2dEb0vlBzM_g" association="_AuM1YenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuNccenEEe2dEb0vlBzM_g" name="" memberEnd="_AuNccunEEe2dEb0vlBzM_g _ArFP8unEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuNccunEEe2dEb0vlBzM_g" name="" type="_APT58OnEEe2dEb0vlBzM_g" association="_AuNccenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuODgenEEe2dEb0vlBzM_g" name="" memberEnd="_AuODgunEEe2dEb0vlBzM_g _ArF3AenEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuODgunEEe2dEb0vlBzM_g" name="" type="_APT58OnEEe2dEb0vlBzM_g" association="_AuODgenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuPRoOnEEe2dEb0vlBzM_g" name="" memberEnd="_AuPRoenEEe2dEb0vlBzM_g _ArF3BOnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuPRoenEEe2dEb0vlBzM_g" name="" type="_APT58OnEEe2dEb0vlBzM_g" association="_AuPRoOnEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuP4sOnEEe2dEb0vlBzM_g" name="" memberEnd="_AuP4senEEe2dEb0vlBzM_g _ArGeEenEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuP4senEEe2dEb0vlBzM_g" name="" type="_APT58OnEEe2dEb0vlBzM_g" association="_AuP4sOnEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuQfwOnEEe2dEb0vlBzM_g" name="" memberEnd="_AuQfwenEEe2dEb0vlBzM_g _ArKIcOnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuQfwenEEe2dEb0vlBzM_g" name="" type="_APdq8OnEEe2dEb0vlBzM_g" association="_AuQfwOnEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuRG0OnEEe2dEb0vlBzM_g" name="" memberEnd="_AuRG0enEEe2dEb0vlBzM_g _ArKvgenEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuRG0enEEe2dEb0vlBzM_g" name="" type="_APdq8OnEEe2dEb0vlBzM_g" association="_AuRG0OnEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuRt4enEEe2dEb0vlBzM_g" name="" memberEnd="_AuRt4unEEe2dEb0vlBzM_g _ArVuoOnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuRt4unEEe2dEb0vlBzM_g" name="" type="_AQSKUOnEEe2dEb0vlBzM_g" association="_AuRt4enEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuSU8enEEe2dEb0vlBzM_g" name="" memberEnd="_AuSU8unEEe2dEb0vlBzM_g _ArWVsOnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuSU8unEEe2dEb0vlBzM_g" name="" type="_AQSKUOnEEe2dEb0vlBzM_g" association="_AuSU8enEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuS8AenEEe2dEb0vlBzM_g" name="" memberEnd="_AuS8AunEEe2dEb0vlBzM_g _ArYx8enEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuS8AunEEe2dEb0vlBzM_g" name="" type="_AQflsOnEEe2dEb0vlBzM_g" association="_AuS8AenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuTjEenEEe2dEb0vlBzM_g" name="" memberEnd="_AuTjEunEEe2dEb0vlBzM_g _ArZZAenEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuTjEunEEe2dEb0vlBzM_g" name="" type="_AQflsOnEEe2dEb0vlBzM_g" association="_AuTjEenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuUKIenEEe2dEb0vlBzM_g" name="" memberEnd="_AuUKIunEEe2dEb0vlBzM_g _ArZZBOnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuUKIunEEe2dEb0vlBzM_g" name="" type="_AQflsOnEEe2dEb0vlBzM_g" association="_AuUKIenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuUxMenEEe2dEb0vlBzM_g" name="" memberEnd="_AuUxMunEEe2dEb0vlBzM_g _ArdqcenEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuUxMunEEe2dEb0vlBzM_g" name="" type="_AQ084OnEEe2dEb0vlBzM_g" association="_AuUxMenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuVYQenEEe2dEb0vlBzM_g" name="" memberEnd="_AuVYQunEEe2dEb0vlBzM_g _AreRgOnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuVYQunEEe2dEb0vlBzM_g" name="" type="_AQ084OnEEe2dEb0vlBzM_g" association="_AuVYQenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuV_UenEEe2dEb0vlBzM_g" name="" memberEnd="_AuV_UunEEe2dEb0vlBzM_g _AreRgunEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuV_UunEEe2dEb0vlBzM_g" name="" type="_AQ084OnEEe2dEb0vlBzM_g" association="_AuV_UenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuXNcOnEEe2dEb0vlBzM_g" name="" memberEnd="_AuXNcenEEe2dEb0vlBzM_g _ArgGsunEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuXNcenEEe2dEb0vlBzM_g" name="" type="_AQ084OnEEe2dEb0vlBzM_g" association="_AuXNcOnEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuX0gOnEEe2dEb0vlBzM_g" name="" memberEnd="_AuX0genEEe2dEb0vlBzM_g _ArhU0enEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuX0genEEe2dEb0vlBzM_g" name="" type="_AQ084OnEEe2dEb0vlBzM_g" association="_AuX0gOnEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuYbkenEEe2dEb0vlBzM_g" name="" memberEnd="_AuYbkunEEe2dEb0vlBzM_g _Arii8OnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuYbkunEEe2dEb0vlBzM_g" name="" type="_ARPzoOnEEe2dEb0vlBzM_g" association="_AuYbkenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuZCoenEEe2dEb0vlBzM_g" name="" memberEnd="_AuZCounEEe2dEb0vlBzM_g _ArjKAOnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuZCounEEe2dEb0vlBzM_g" name="" type="_ARPzoOnEEe2dEb0vlBzM_g" association="_AuZCoenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuZpsenEEe2dEb0vlBzM_g" name="" memberEnd="_AuZpsunEEe2dEb0vlBzM_g _ArjKAunEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuZpsunEEe2dEb0vlBzM_g" name="" type="_ARPzoOnEEe2dEb0vlBzM_g" association="_AuZpsenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuaQwenEEe2dEb0vlBzM_g" name="" memberEnd="_AuaQwunEEe2dEb0vlBzM_g _ArjxEOnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuaQwunEEe2dEb0vlBzM_g" name="" type="_ARPzoOnEEe2dEb0vlBzM_g" association="_AuaQwenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Aua30enEEe2dEb0vlBzM_g" name="" memberEnd="_Aua30unEEe2dEb0vlBzM_g _ArjxEunEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_Aua30unEEe2dEb0vlBzM_g" name="" type="_ARPzoOnEEe2dEb0vlBzM_g" association="_Aua30enEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Aube4enEEe2dEb0vlBzM_g" name="" memberEnd="_Aube4unEEe2dEb0vlBzM_g _Aropk-nEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_Aube4unEEe2dEb0vlBzM_g" name="" type="_ARd2EOnEEe2dEb0vlBzM_g" association="_Aube4enEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AucF8enEEe2dEb0vlBzM_g" name="" memberEnd="_AucF8unEEe2dEb0vlBzM_g _ArpQounEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AucF8unEEe2dEb0vlBzM_g" name="" type="_ARd2EOnEEe2dEb0vlBzM_g" association="_AucF8enEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuctAenEEe2dEb0vlBzM_g" name="" memberEnd="_AuctAunEEe2dEb0vlBzM_g _Arrs4unEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuctAunEEe2dEb0vlBzM_g" name="" type="_AR0bYOnEEe2dEb0vlBzM_g" association="_AuctAenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AudUEenEEe2dEb0vlBzM_g" name="" memberEnd="_AudUEunEEe2dEb0vlBzM_g _ArsT8enEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AudUEunEEe2dEb0vlBzM_g" name="" type="_AR0bYOnEEe2dEb0vlBzM_g" association="_AudUEenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Aud7IenEEe2dEb0vlBzM_g" name="" memberEnd="_Aud7IunEEe2dEb0vlBzM_g _ArtiEOnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_Aud7IunEEe2dEb0vlBzM_g" name="" type="_AR568OnEEe2dEb0vlBzM_g" association="_Aud7IenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AueiMenEEe2dEb0vlBzM_g" name="" memberEnd="_AueiMunEEe2dEb0vlBzM_g _AruwMOnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AueiMunEEe2dEb0vlBzM_g" name="" type="_ASH9YOnEEe2dEb0vlBzM_g" association="_AueiMenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AufJQenEEe2dEb0vlBzM_g" name="" memberEnd="_AufJQunEEe2dEb0vlBzM_g _AruwMunEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AufJQunEEe2dEb0vlBzM_g" name="" type="_ASH9YOnEEe2dEb0vlBzM_g" association="_AufJQenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AufwUenEEe2dEb0vlBzM_g" name="" memberEnd="_AufwUunEEe2dEb0vlBzM_g _ArvXQOnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AufwUunEEe2dEb0vlBzM_g" name="" type="_ASH9YOnEEe2dEb0vlBzM_g" association="_AufwUenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AugXYenEEe2dEb0vlBzM_g" name="" memberEnd="_AugXYunEEe2dEb0vlBzM_g _ArvXRenEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AugXYunEEe2dEb0vlBzM_g" name="" type="_ASH9YOnEEe2dEb0vlBzM_g" association="_AugXYenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Aug-cenEEe2dEb0vlBzM_g" name="" memberEnd="_Aug-cunEEe2dEb0vlBzM_g _Arv-VOnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_Aug-cunEEe2dEb0vlBzM_g" name="" type="_ASH9YOnEEe2dEb0vlBzM_g" association="_Aug-cenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuhlgenEEe2dEb0vlBzM_g" name="" memberEnd="_AuhlgunEEe2dEb0vlBzM_g _ArwlYOnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuhlgunEEe2dEb0vlBzM_g" name="" type="_ASH9YOnEEe2dEb0vlBzM_g" association="_AuhlgenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuiMkenEEe2dEb0vlBzM_g" name="" memberEnd="_AuiMkunEEe2dEb0vlBzM_g _ArxMcOnEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuiMkunEEe2dEb0vlBzM_g" name="" type="_ASH9YOnEEe2dEb0vlBzM_g" association="_AuiMkenEEe2dEb0vlBzM_g"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_AuizoenEEe2dEb0vlBzM_g" name="" memberEnd="_AuizounEEe2dEb0vlBzM_g _ArxzgunEEe2dEb0vlBzM_g">
              <ownedEnd xmi:id="_AuizounEEe2dEb0vlBzM_g" name="" type="_ASH9YOnEEe2dEb0vlBzM_g" association="_AuizoenEEe2dEb0vlBzM_g"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_ADC_k-nEEe2dEb0vlBzM_g" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_Am1CEenEEe2dEb0vlBzM_g" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_Am1CE-nEEe2dEb0vlBzM_g" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_Am1pIenEEe2dEb0vlBzM_g" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ap49IOnEEe2dEb0vlBzM_g" name="WARPdslBaseListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_AFpAkOnEEe2dEb0vlBzM_g" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_AoKe0OnEEe2dEb0vlBzM_g" name="Utilities"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_AB8MUOnEEe2dEb0vlBzM_g" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_AB8MUenEEe2dEb0vlBzM_g" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_ACaGYOnEEe2dEb0vlBzM_g" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_AmfD0OnEEe2dEb0vlBzM_g" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_AGG6oOnEEe2dEb0vlBzM_g" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_AoWFAenEEe2dEb0vlBzM_g" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ANhxQOnEEe2dEb0vlBzM_g" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AmRocOnEEe2dEb0vlBzM_g" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AmS2kOnEEe2dEb0vlBzM_g" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AmS2kunEEe2dEb0vlBzM_g" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_AmTdoenEEe2dEb0vlBzM_g" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_AmUEsenEEe2dEb0vlBzM_g" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_AmlKcOnEEe2dEb0vlBzM_g" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_AnSVEOnEEe2dEb0vlBzM_g" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AnvoEOnEEe2dEb0vlBzM_g" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_AnwPIenEEe2dEb0vlBzM_g" name="Queue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AoFmUOnEEe2dEb0vlBzM_g" name="Collections"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AoLF4enEEe2dEb0vlBzM_g" name="Arrays"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_AoU24OnEEe2dEb0vlBzM_g" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AoVd8enEEe2dEb0vlBzM_g" name="Vector"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ACxSw-nEEe2dEb0vlBzM_g" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_Amo00enEEe2dEb0vlBzM_g" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Amo00-nEEe2dEb0vlBzM_g" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AnABMOnEEe2dEb0vlBzM_g" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_AnAoQenEEe2dEb0vlBzM_g" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ACxSxOnEEe2dEb0vlBzM_g" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_ACx50OnEEe2dEb0vlBzM_g" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_Ampb4enEEe2dEb0vlBzM_g" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_AmqC8enEEe2dEb0vlBzM_g" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_AmqC8-nEEe2dEb0vlBzM_g" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ADJGMOnEEe2dEb0vlBzM_g" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_Am894OnEEe2dEb0vlBzM_g" name="Component"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Ao764enEEe2dEb0vlBzM_g" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_Ao764unEEe2dEb0vlBzM_g" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ApWKkunEEe2dEb0vlBzM_g" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_ApmCMOnEEe2dEb0vlBzM_g" name="Double"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ACxSwOnEEe2dEb0vlBzM_g" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_ACxSwenEEe2dEb0vlBzM_g" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_ACxSwunEEe2dEb0vlBzM_g" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_AmoNwOnEEe2dEb0vlBzM_g" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ACx50enEEe2dEb0vlBzM_g" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_ACx50unEEe2dEb0vlBzM_g" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_ADJtQOnEEe2dEb0vlBzM_g" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_Am-zE-nEEe2dEb0vlBzM_g" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_Am_aIenEEe2dEb0vlBzM_g" name="TableColumnModel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_AmqqAenEEe2dEb0vlBzM_g" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Am9k8enEEe2dEb0vlBzM_g" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Am-MAenEEe2dEb0vlBzM_g" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Am-zEenEEe2dEb0vlBzM_g" name="JTable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ADCYgOnEEe2dEb0vlBzM_g" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_ADCYgenEEe2dEb0vlBzM_g" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_ADC_kOnEEe2dEb0vlBzM_g" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_ADC_kenEEe2dEb0vlBzM_g" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_ADC_kunEEe2dEb0vlBzM_g" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_Amzz8-nEEe2dEb0vlBzM_g" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_Am0bAenEEe2dEb0vlBzM_g" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_Amyl0OnEEe2dEb0vlBzM_g" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_AmzM4enEEe2dEb0vlBzM_g" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_Amzz8enEEe2dEb0vlBzM_g" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ADvjIOnEEe2dEb0vlBzM_g" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_ADvjIenEEe2dEb0vlBzM_g" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_ADvjIunEEe2dEb0vlBzM_g" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_AnUKQunEEe2dEb0vlBzM_g" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_AnUxUenEEe2dEb0vlBzM_g" name="Test"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_AnYbsOnEEe2dEb0vlBzM_g" name="Assert"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ADE0w-nEEe2dEb0vlBzM_g" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_Am23QOnEEe2dEb0vlBzM_g" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Am3eU-nEEe2dEb0vlBzM_g" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Am4scunEEe2dEb0vlBzM_g" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Am5Tg-nEEe2dEb0vlBzM_g" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Am6hoOnEEe2dEb0vlBzM_g" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Am7Is-nEEe2dEb0vlBzM_g" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_AoeA0unEEe2dEb0vlBzM_g" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Aoen4-nEEe2dEb0vlBzM_g" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Aof2AOnEEe2dEb0vlBzM_g" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_AogdE-nEEe2dEb0vlBzM_g" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_AFFm8OnEEe2dEb0vlBzM_g" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_An3j4OnEEe2dEb0vlBzM_g" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_An4K8enEEe2dEb0vlBzM_g" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_An4K8-nEEe2dEb0vlBzM_g" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_An4yAenEEe2dEb0vlBzM_g" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_An5ZEenEEe2dEb0vlBzM_g" name="StringHolder"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_AFVekOnEEe2dEb0vlBzM_g" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_An9qgOnEEe2dEb0vlBzM_g" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_An_fsunEEe2dEb0vlBzM_g" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_AoAGxenEEe2dEb0vlBzM_g" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_AoBU4unEEe2dEb0vlBzM_g" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_AoB79enEEe2dEb0vlBzM_g" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_AoDKEunEEe2dEb0vlBzM_g" name="ChannelContext"/>
    </packagedElement>
    <profileApplication xmi:id="__HfWQOnDEe2dEb0vlBzM_g">
      <eAnnotations xmi:id="__HfWQenDEe2dEb0vlBzM_g" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="__HfWQunDEe2dEb0vlBzM_g" base_Package="__D1lUOnDEe2dEb0vlBzM_g">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_AKRB4OnEEe2dEb0vlBzM_g" genericsValue="T,E" base_Element="_AKPzwOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AKXIgOnEEe2dEb0vlBzM_g" base_Element="_AKWhcOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AKXIgenEEe2dEb0vlBzM_g" base_Element="_AKWhcOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AKXvkOnEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_AKYWoOnEEe2dEb0vlBzM_g" genericsValue="Edge" base_Element="_AKXvkenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AKY9sOnEEe2dEb0vlBzM_g" genericsValue="Edge" base_Element="_AKYWoenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AKaL0OnEEe2dEb0vlBzM_g" genericsValue="Edge" base_Element="_AKZkwOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AKay4OnEEe2dEb0vlBzM_g" genericsValue="Edge" base_Element="_AKaL0enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AKbZ8enEEe2dEb0vlBzM_g" genericsValue="Edge" base_Element="_AKbZ8OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AK4s8OnEEe2dEb0vlBzM_g" genericsValue="String" base_Element="_AK4F4OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ALBP0OnEEe2dEb0vlBzM_g" genericsValue="String" base_Element="_ALAowunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ALQgYenEEe2dEb0vlBzM_g" base_Element="_ALQgYOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ALRHcOnEEe2dEb0vlBzM_g" base_Element="_ALQgYOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ALRHcenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ALRugOnEEe2dEb0vlBzM_g" base_Element="_ALRHcunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ALRugenEEe2dEb0vlBzM_g" base_Element="_ALRHcunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ALRugunEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ALSVkenEEe2dEb0vlBzM_g" base_Element="_ALSVkOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ALS8oOnEEe2dEb0vlBzM_g" base_Element="_ALSVkOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ALS8oenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ALZDQOnEEe2dEb0vlBzM_g" genericsValue="T extends SchedulableObject" base_Element="_ALYcMOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ALctoOnEEe2dEb0vlBzM_g" base_Element="_ALcGk-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ALctoenEEe2dEb0vlBzM_g" base_Element="_ALcGk-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ALctounEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ALfw8OnEEe2dEb0vlBzM_g" base_Element="_ALfJ4OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ALi0QunEEe2dEb0vlBzM_g" base_Element="_ALi0QOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ALjbUOnEEe2dEb0vlBzM_g" base_Element="_ALi0QOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ALjbUenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ALkCYOnEEe2dEb0vlBzM_g" base_Element="_ALjbUunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ALkpcOnEEe2dEb0vlBzM_g" base_Element="_ALjbUunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ALkpcenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ALkpc-nEEe2dEb0vlBzM_g" base_Element="_ALkpcunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ALlQgOnEEe2dEb0vlBzM_g" base_Element="_ALkpcunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ALlQgenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_AL7OwOnEEe2dEb0vlBzM_g" genericsValue="Node" base_Element="_AL6nsOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AL710OnEEe2dEb0vlBzM_g" genericsValue="Edge" base_Element="_AL7OwenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AL9D8OnEEe2dEb0vlBzM_g" genericsValue="Integer" base_Element="_AL8c4OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AMAHQOnEEe2dEb0vlBzM_g" base_Element="_AL_gMOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AMAHQenEEe2dEb0vlBzM_g" base_Element="_AL_gMOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AMAHQunEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AMNioOnEEe2dEb0vlBzM_g" base_Element="_AMM7kOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AMNioenEEe2dEb0vlBzM_g" base_Element="_AMM7kOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AMNiounEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_AMa-AOnEEe2dEb0vlBzM_g" dimensions="2" base_Element="_AMZv4-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AMvuIOnEEe2dEb0vlBzM_g" genericsValue="T extends SchedulableObject" base_Element="_AMvHEOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AMyKYOnEEe2dEb0vlBzM_g" genericsValue="T extends SchedulableObject" base_Element="_AMxjUOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AM10wunEEe2dEb0vlBzM_g" base_Element="_AM10wOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AM2b0OnEEe2dEb0vlBzM_g" base_Element="_AM10wOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AM2b0enEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AM3p8unEEe2dEb0vlBzM_g" base_Element="_AM3p8OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AM4RAOnEEe2dEb0vlBzM_g" base_Element="_AM3p8OnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AM4RAenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AM4RA-nEEe2dEb0vlBzM_g" base_Element="_AM4RAunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AM44EOnEEe2dEb0vlBzM_g" base_Element="_AM4RAunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AM44EenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANAM0enEEe2dEb0vlBzM_g" base_Element="_ANAM0OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ANAz4OnEEe2dEb0vlBzM_g" base_Element="_ANAM0OnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ANAz4enEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ANCpEOnEEe2dEb0vlBzM_g" genericsValue="T extends SchedulableObject" base_Element="_ANCCAOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANFsYenEEe2dEb0vlBzM_g" base_Element="_ANFsYOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ANGTcOnEEe2dEb0vlBzM_g" base_Element="_ANFsYOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ANGTcenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ANOPQOnEEe2dEb0vlBzM_g" genericsValue="T extends SchedulableObject" base_Element="_ANNBIOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANWyIenEEe2dEb0vlBzM_g" base_Element="_ANWyIOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ANXZMOnEEe2dEb0vlBzM_g" base_Element="_ANWyIOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ANXZMenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANYAQOnEEe2dEb0vlBzM_g" base_Element="_ANXZMunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ANYAQenEEe2dEb0vlBzM_g" base_Element="_ANXZMunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ANYAQunEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANYnUOnEEe2dEb0vlBzM_g" base_Element="_ANYAQ-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ANYnUenEEe2dEb0vlBzM_g" base_Element="_ANYAQ-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ANYnUunEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_ANZOY-nEEe2dEb0vlBzM_g" dimensions="1" base_Element="_ANZOYOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANZ1cOnEEe2dEb0vlBzM_g" base_Element="_ANZOYOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ANZ1cenEEe2dEb0vlBzM_g" base_Element="_ANZOYOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ANZ1cunEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_ANacgunEEe2dEb0vlBzM_g" dimensions="2" base_Element="_ANZ1c-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANbDkOnEEe2dEb0vlBzM_g" base_Element="_ANZ1c-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ANbDkenEEe2dEb0vlBzM_g" base_Element="_ANZ1c-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ANbDkunEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ANet8OnEEe2dEb0vlBzM_g" genericsValue="T extends SchedulableObject" base_Element="_ANeG4OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ANgjIOnEEe2dEb0vlBzM_g" genericsValue="T extends SchedulableObject" base_Element="_ANf8EOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_ANiYUOnEEe2dEb0vlBzM_g" base_Element="_ANhxQOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ANi_YOnEEe2dEb0vlBzM_g" genericsValue="T" base_Element="_ANiYUenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANpGAOnEEe2dEb0vlBzM_g" base_Element="_ANoe8OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ANpGAenEEe2dEb0vlBzM_g" base_Element="_ANoe8OnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ANpGAunEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANptEOnEEe2dEb0vlBzM_g" base_Element="_ANpGA-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ANptEenEEe2dEb0vlBzM_g" base_Element="_ANpGA-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ANptEunEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANqUIOnEEe2dEb0vlBzM_g" base_Element="_ANptE-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ANqUIenEEe2dEb0vlBzM_g" base_Element="_ANptE-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ANqUIunEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANq7MOnEEe2dEb0vlBzM_g" base_Element="_ANqUI-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ANq7MenEEe2dEb0vlBzM_g" base_Element="_ANqUI-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ANq7MunEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANriQOnEEe2dEb0vlBzM_g" base_Element="_ANq7M-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ANriQenEEe2dEb0vlBzM_g" base_Element="_ANq7M-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ANriQunEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANsJUOnEEe2dEb0vlBzM_g" base_Element="_ANriQ-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ANsJUenEEe2dEb0vlBzM_g" base_Element="_ANriQ-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ANsJUunEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANswYOnEEe2dEb0vlBzM_g" base_Element="_ANsJU-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ANswYenEEe2dEb0vlBzM_g" base_Element="_ANsJU-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ANswYunEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANtXcOnEEe2dEb0vlBzM_g" base_Element="_ANswY-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ANtXcenEEe2dEb0vlBzM_g" base_Element="_ANswY-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ANtXcunEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANt-gOnEEe2dEb0vlBzM_g" base_Element="_ANtXc-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ANt-genEEe2dEb0vlBzM_g" base_Element="_ANtXc-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ANt-gunEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANulkOnEEe2dEb0vlBzM_g" base_Element="_ANt-g-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ANulkenEEe2dEb0vlBzM_g" base_Element="_ANt-g-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ANulkunEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANvMoOnEEe2dEb0vlBzM_g" base_Element="_ANulk-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ANvMoenEEe2dEb0vlBzM_g" base_Element="_ANulk-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ANvMounEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ANvzsOnEEe2dEb0vlBzM_g" base_Element="_ANvMo-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ANvzsenEEe2dEb0vlBzM_g" base_Element="_ANvMo-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ANvzsunEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AN6LwOnEEe2dEb0vlBzM_g" base_Element="_AN5ksenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AN6LwenEEe2dEb0vlBzM_g" base_Element="_AN5ksenEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AN6LwunEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_AN6y0-nEEe2dEb0vlBzM_g" dimensions="1" base_Element="_AN6y0OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AN7Z4OnEEe2dEb0vlBzM_g" base_Element="_AN6y0OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AN7Z4enEEe2dEb0vlBzM_g" base_Element="_AN6y0OnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AN7Z4unEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AN7Z5OnEEe2dEb0vlBzM_g" base_Element="_AN7Z4-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AN8A8OnEEe2dEb0vlBzM_g" base_Element="_AN7Z4-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AN8A8enEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_AN8oAOnEEe2dEb0vlBzM_g" dimensions="2" base_Element="_AN8A8unEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AN8oAenEEe2dEb0vlBzM_g" base_Element="_AN8A8unEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AN8oAunEEe2dEb0vlBzM_g" base_Element="_AN8A8unEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AN8oA-nEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOASYOnEEe2dEb0vlBzM_g" base_Element="_AN_rUOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AOASYenEEe2dEb0vlBzM_g" base_Element="_AN_rUOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AOASYunEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOA5cenEEe2dEb0vlBzM_g" base_Element="_AOA5cOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AOA5cunEEe2dEb0vlBzM_g" base_Element="_AOA5cOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AOA5c-nEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOBggenEEe2dEb0vlBzM_g" base_Element="_AOBggOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AOBggunEEe2dEb0vlBzM_g" base_Element="_AOBggOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AOBgg-nEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOCHkOnEEe2dEb0vlBzM_g" base_Element="_AOBghOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AOCHkenEEe2dEb0vlBzM_g" base_Element="_AOBghOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AOCHkunEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOCHlOnEEe2dEb0vlBzM_g" base_Element="_AOCHk-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AOCHlenEEe2dEb0vlBzM_g" base_Element="_AOCHk-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AOCHlunEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOCuoOnEEe2dEb0vlBzM_g" base_Element="_AOCHl-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AOCuoenEEe2dEb0vlBzM_g" base_Element="_AOCHl-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AOCuounEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AODVsOnEEe2dEb0vlBzM_g" base_Element="_AOCuo-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AODVsenEEe2dEb0vlBzM_g" base_Element="_AOCuo-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AODVsunEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AODVtOnEEe2dEb0vlBzM_g" base_Element="_AODVs-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AOD8wOnEEe2dEb0vlBzM_g" base_Element="_AODVs-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AOD8wenEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOD8w-nEEe2dEb0vlBzM_g" base_Element="_AOD8wunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AOEj0OnEEe2dEb0vlBzM_g" base_Element="_AOD8wunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AOEj0enEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOEj0-nEEe2dEb0vlBzM_g" base_Element="_AOEj0unEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AOEj1OnEEe2dEb0vlBzM_g" base_Element="_AOEj0unEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AOEj1enEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOFK4enEEe2dEb0vlBzM_g" base_Element="_AOFK4OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AOFK4unEEe2dEb0vlBzM_g" base_Element="_AOFK4OnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AOFK4-nEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOFx8enEEe2dEb0vlBzM_g" base_Element="_AOFx8OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AOFx8unEEe2dEb0vlBzM_g" base_Element="_AOFx8OnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AOFx8-nEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOI1QenEEe2dEb0vlBzM_g" base_Element="_AOI1QOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AOI1QunEEe2dEb0vlBzM_g" base_Element="_AOI1QOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AOJcUOnEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_AOMfoOnEEe2dEb0vlBzM_g" genericsValue="T" base_Element="_AOLRgOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Array xmi:id="_AOVpkOnEEe2dEb0vlBzM_g" base_Element="_AOVCgenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Array xmi:id="_AOWQoOnEEe2dEb0vlBzM_g" dimensions="2" base_Element="_AOVpkenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AObwMOnEEe2dEb0vlBzM_g" genericsValue="T extends SchedulableObject" base_Element="_AOaiEOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AOezgOnEEe2dEb0vlBzM_g" genericsValue="T" base_Element="_AOdlYOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AOqZsOnEEe2dEb0vlBzM_g" genericsValue="T extends SchedulableObject" base_Element="_AOpyoOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AOs18OnEEe2dEb0vlBzM_g" genericsValue="T" base_Element="_AOsO4OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AOuEEenEEe2dEb0vlBzM_g" base_Element="_AOuEEOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AOzjoOnEEe2dEb0vlBzM_g" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_AOy8kOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AO5DMOnEEe2dEb0vlBzM_g" base_Element="_AO4cIOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AO6RUOnEEe2dEb0vlBzM_g" base_Element="_AO5qQunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_APWWMOnEEe2dEb0vlBzM_g" base_Element="_APVvIOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_APWWMenEEe2dEb0vlBzM_g" base_Element="_APVvIOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_APWWMunEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_APW9QOnEEe2dEb0vlBzM_g" base_Element="_APWWM-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_APW9QenEEe2dEb0vlBzM_g" base_Element="_APWWM-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_APW9QunEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_APXkUenEEe2dEb0vlBzM_g" base_Element="_APW9Q-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_APXkUunEEe2dEb0vlBzM_g" base_Element="_APW9Q-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_APXkU-nEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_APjxkOnEEe2dEb0vlBzM_g" genericsValue="Integer" base_Element="_APjKg-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Array xmi:id="_AP7lAenEEe2dEb0vlBzM_g" base_Element="_AP698enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Array xmi:id="_AP9aMenEEe2dEb0vlBzM_g" base_Element="_AP8zIenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AQRjQOnEEe2dEb0vlBzM_g" genericsValue="InstructionParameters" base_Element="_AQQVIOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AQUmkOnEEe2dEb0vlBzM_g" genericsValue="InstructionParameters" base_Element="_AQTYc-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARBKIOnEEe2dEb0vlBzM_g" base_Element="_ARAjEOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ARBKIenEEe2dEb0vlBzM_g" base_Element="_ARAjEOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ARBKIunEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARBxM-nEEe2dEb0vlBzM_g" base_Element="_ARBxMenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ARCYQOnEEe2dEb0vlBzM_g" base_Element="_ARBxMenEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ARCYQenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARCYROnEEe2dEb0vlBzM_g" base_Element="_ARCYQunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ARC_UOnEEe2dEb0vlBzM_g" base_Element="_ARCYQunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ARC_UenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARDmYenEEe2dEb0vlBzM_g" base_Element="_ARDmYOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ARENcOnEEe2dEb0vlBzM_g" base_Element="_ARDmYOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ARENcenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARENc-nEEe2dEb0vlBzM_g" base_Element="_ARENcunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ARE0gOnEEe2dEb0vlBzM_g" base_Element="_ARENcunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ARE0genEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARFbkOnEEe2dEb0vlBzM_g" base_Element="_ARE0gunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ARFbkenEEe2dEb0vlBzM_g" base_Element="_ARE0gunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ARFbkunEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARGCoOnEEe2dEb0vlBzM_g" base_Element="_ARFbk-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ARGCoenEEe2dEb0vlBzM_g" base_Element="_ARFbk-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ARGCounEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARGpsunEEe2dEb0vlBzM_g" base_Element="_ARGpsOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ARHQwOnEEe2dEb0vlBzM_g" base_Element="_ARGpsOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ARHQwenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ARH30OnEEe2dEb0vlBzM_g" genericsValue="String, Integer" base_Element="_ARHQwunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARRo0OnEEe2dEb0vlBzM_g" base_Element="_ARRBwOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ARRo0enEEe2dEb0vlBzM_g" base_Element="_ARRBwOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ARRo0unEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARSP4OnEEe2dEb0vlBzM_g" base_Element="_ARRo0-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ARSP4enEEe2dEb0vlBzM_g" base_Element="_ARRo0-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ARSP4unEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARSP5OnEEe2dEb0vlBzM_g" base_Element="_ARSP4-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ARS28OnEEe2dEb0vlBzM_g" base_Element="_ARSP4-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ARS28enEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARS28-nEEe2dEb0vlBzM_g" base_Element="_ARS28unEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ARTeAOnEEe2dEb0vlBzM_g" base_Element="_ARS28unEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ARTeAenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARTeA-nEEe2dEb0vlBzM_g" base_Element="_ARTeAunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ARUFEOnEEe2dEb0vlBzM_g" base_Element="_ARTeAunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ARUFEenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARUFE-nEEe2dEb0vlBzM_g" base_Element="_ARUFEunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ARUsIOnEEe2dEb0vlBzM_g" base_Element="_ARUFEunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ARUsIenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARUsJOnEEe2dEb0vlBzM_g" base_Element="_ARUsIunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ARVTMOnEEe2dEb0vlBzM_g" base_Element="_ARUsIunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ARVTMenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARVTNOnEEe2dEb0vlBzM_g" base_Element="_ARVTMunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ARVTNenEEe2dEb0vlBzM_g" base_Element="_ARVTMunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ARVTNunEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARV6QunEEe2dEb0vlBzM_g" base_Element="_ARV6QOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ARWhUOnEEe2dEb0vlBzM_g" base_Element="_ARV6QOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ARWhUenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARWhU-nEEe2dEb0vlBzM_g" base_Element="_ARWhUunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ARXIYOnEEe2dEb0vlBzM_g" base_Element="_ARWhUunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ARXIYenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARXIY-nEEe2dEb0vlBzM_g" base_Element="_ARXIYunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ARXvcOnEEe2dEb0vlBzM_g" base_Element="_ARXIYunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ARXvcenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARXvdOnEEe2dEb0vlBzM_g" base_Element="_ARXvcunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ARYWgOnEEe2dEb0vlBzM_g" base_Element="_ARXvcunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ARYWgenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARYWhOnEEe2dEb0vlBzM_g" base_Element="_ARYWgunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ARYWhenEEe2dEb0vlBzM_g" base_Element="_ARYWgunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ARY9kOnEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARY9k-nEEe2dEb0vlBzM_g" base_Element="_ARY9kenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ARY9lOnEEe2dEb0vlBzM_g" base_Element="_ARY9kenEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ARY9lenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARZkounEEe2dEb0vlBzM_g" base_Element="_ARZkoOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ARZko-nEEe2dEb0vlBzM_g" base_Element="_ARZkoOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ARZkpOnEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ARaLsOnEEe2dEb0vlBzM_g" base_Element="_ARZkpenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ARaLsenEEe2dEb0vlBzM_g" base_Element="_ARZkpenEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ARaLsunEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_ARpcQenEEe2dEb0vlBzM_g" base_Element="_ARo1NOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Array xmi:id="_ARqDU-nEEe2dEb0vlBzM_g" dimensions="1" base_Element="_ARqDUOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Array xmi:id="_ARrRcOnEEe2dEb0vlBzM_g" base_Element="_ARqqY-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Array xmi:id="_ARr4henEEe2dEb0vlBzM_g" base_Element="_ARr4genEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AR1pgunEEe2dEb0vlBzM_g" base_Element="_AR1pgenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AR2QkOnEEe2dEb0vlBzM_g" base_Element="_AR1pgenEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AR2QkenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AR2Qk-nEEe2dEb0vlBzM_g" base_Element="_AR2QkunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AR23oOnEEe2dEb0vlBzM_g" base_Element="_AR2QkunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AR23oenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AR23pOnEEe2dEb0vlBzM_g" base_Element="_AR23ounEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AR3esOnEEe2dEb0vlBzM_g" base_Element="_AR23ounEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AR3esenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AR-MYOnEEe2dEb0vlBzM_g" base_Element="_AR9lUunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AR-MYenEEe2dEb0vlBzM_g" base_Element="_AR9lUunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AR-MYunEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AR-zcOnEEe2dEb0vlBzM_g" base_Element="_AR-MY-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AR-zcenEEe2dEb0vlBzM_g" base_Element="_AR-MY-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AR-zcunEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AR-zdOnEEe2dEb0vlBzM_g" base_Element="_AR-zc-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AR_agOnEEe2dEb0vlBzM_g" base_Element="_AR-zc-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AR_agenEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AR_ag-nEEe2dEb0vlBzM_g" base_Element="_AR_agunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AR_ahOnEEe2dEb0vlBzM_g" base_Element="_AR_agunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AR_ahenEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ASABkenEEe2dEb0vlBzM_g" base_Element="_ASABkOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ASABkunEEe2dEb0vlBzM_g" base_Element="_ASABkOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ASABk-nEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ASAooOnEEe2dEb0vlBzM_g" base_Element="_ASABlOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ASAooenEEe2dEb0vlBzM_g" base_Element="_ASABlOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ASAoounEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ASAopOnEEe2dEb0vlBzM_g" base_Element="_ASAoo-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ASAopenEEe2dEb0vlBzM_g" base_Element="_ASAoo-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ASAopunEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ASBPsenEEe2dEb0vlBzM_g" base_Element="_ASBPsOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ASBPsunEEe2dEb0vlBzM_g" base_Element="_ASBPsOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ASBPs-nEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ASB2wOnEEe2dEb0vlBzM_g" base_Element="_ASBPtOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ASB2wenEEe2dEb0vlBzM_g" base_Element="_ASBPtOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ASB2wunEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ASB2xOnEEe2dEb0vlBzM_g" base_Element="_ASB2w-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ASB2xenEEe2dEb0vlBzM_g" base_Element="_ASB2w-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ASB2xunEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ASCd0enEEe2dEb0vlBzM_g" base_Element="_ASCd0OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ASCd0unEEe2dEb0vlBzM_g" base_Element="_ASCd0OnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ASCd0-nEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ASDE4OnEEe2dEb0vlBzM_g" base_Element="_ASCd1enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ASDE4enEEe2dEb0vlBzM_g" base_Element="_ASCd1enEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ASDE4unEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ASDE5OnEEe2dEb0vlBzM_g" base_Element="_ASDE4-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ASDr8OnEEe2dEb0vlBzM_g" base_Element="_ASDE4-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ASDr8enEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ASDr8-nEEe2dEb0vlBzM_g" base_Element="_ASDr8unEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ASDr9OnEEe2dEb0vlBzM_g" base_Element="_ASDr8unEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ASDr9enEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ASETAOnEEe2dEb0vlBzM_g" base_Element="_ASDr9unEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ASETAenEEe2dEb0vlBzM_g" base_Element="_ASDr9unEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ASETAunEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ASETBOnEEe2dEb0vlBzM_g" base_Element="_ASETA-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ASE6EOnEEe2dEb0vlBzM_g" base_Element="_ASETA-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ASE6EenEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ASE6E-nEEe2dEb0vlBzM_g" base_Element="_ASE6EunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ASE6FOnEEe2dEb0vlBzM_g" base_Element="_ASE6EunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ASE6FenEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ASFhIOnEEe2dEb0vlBzM_g" base_Element="_ASE6FunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ASFhIenEEe2dEb0vlBzM_g" base_Element="_ASE6FunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ASFhIunEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ASFhJOnEEe2dEb0vlBzM_g" base_Element="_ASFhI-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ASGIMOnEEe2dEb0vlBzM_g" base_Element="_ASFhI-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ASGIMenEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ASGIM-nEEe2dEb0vlBzM_g" base_Element="_ASGIMunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ASGINOnEEe2dEb0vlBzM_g" base_Element="_ASGIMunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ASGINenEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ASGvQOnEEe2dEb0vlBzM_g" base_Element="_ASGINunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ASGvQenEEe2dEb0vlBzM_g" base_Element="_ASGINunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ASGvQunEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ASGvROnEEe2dEb0vlBzM_g" base_Element="_ASGvQ-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ASHWUOnEEe2dEb0vlBzM_g" base_Element="_ASGvQ-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ASHWUenEEe2dEb0vlBzM_g" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ASJykOnEEe2dEb0vlBzM_g" genericsValue="String, Integer" base_Element="_ASJLgOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ASKZoOnEEe2dEb0vlBzM_g" genericsValue="String" base_Element="_ASJykenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Array xmi:id="_ASLAs-nEEe2dEb0vlBzM_g" base_Element="_ASLAsOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AmSPgOnEEe2dEb0vlBzM_g" base_Element="_AmRocOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AmS2kenEEe2dEb0vlBzM_g" base_Element="_AmS2kOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AmTdoOnEEe2dEb0vlBzM_g" base_Element="_AmS2kunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AmUEsOnEEe2dEb0vlBzM_g" base_Element="_AmTdoenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AmUEsunEEe2dEb0vlBzM_g" base_Element="_AmUEsenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AmWg8-nEEe2dEb0vlBzM_g" base_Element="_AmWg8OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AmXIAOnEEe2dEb0vlBzM_g" base_Element="_AmWg8OnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AmXIAenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_AmYWIOnEEe2dEb0vlBzM_g" genericsValue="Edge" base_Element="_AmXvFenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AmY9MOnEEe2dEb0vlBzM_g" genericsValue="Edge" base_Element="_AmYWIunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AmbZcOnEEe2dEb0vlBzM_g" genericsValue="String, Activation" base_Element="_AmayYOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AmfD0enEEe2dEb0vlBzM_g" base_Element="_AmfD0OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AmiHIunEEe2dEb0vlBzM_g" base_Element="_AmhgF-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AmiHI-nEEe2dEb0vlBzM_g" base_Element="_AmhgF-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AmiHJOnEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_AmlKcenEEe2dEb0vlBzM_g" base_Element="_AmlKcOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Amm_oOnEEe2dEb0vlBzM_g" base_Element="_AmmYkOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_Amm_oenEEe2dEb0vlBzM_g" base_Element="_AmmYkOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_Amm_ounEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Amo00OnEEe2dEb0vlBzM_g" base_Element="_AmoNwOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_Amo00unEEe2dEb0vlBzM_g" base_Element="_Amo00enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_Ampb4OnEEe2dEb0vlBzM_g" base_Element="_Amo00-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AmqC8OnEEe2dEb0vlBzM_g" base_Element="_Ampb4enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AmqC8unEEe2dEb0vlBzM_g" base_Element="_AmqC8enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AmqqAOnEEe2dEb0vlBzM_g" base_Element="_AmqC8-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AmrREOnEEe2dEb0vlBzM_g" base_Element="_AmqqAenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AmtGQunEEe2dEb0vlBzM_g" base_Element="_AmsfM-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AmtGQ-nEEe2dEb0vlBzM_g" base_Element="_AmsfM-nEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AmtGROnEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_AmvigOnEEe2dEb0vlBzM_g" genericsValue="String, Flow" base_Element="_Amu7cOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AmwJkOnEEe2dEb0vlBzM_g" genericsValue="Node, Activation" base_Element="_AmvigenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AmzM4OnEEe2dEb0vlBzM_g" base_Element="_Amyl0OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_Amzz8OnEEe2dEb0vlBzM_g" base_Element="_AmzM4enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_Amzz8unEEe2dEb0vlBzM_g" base_Element="_Amzz8enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_Am0bAOnEEe2dEb0vlBzM_g" base_Element="_Amzz8-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_Am1CEOnEEe2dEb0vlBzM_g" base_Element="_Am0bAenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_Am1CEunEEe2dEb0vlBzM_g" base_Element="_Am1CEenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_Am1pIOnEEe2dEb0vlBzM_g" base_Element="_Am1CE-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_Am2QMOnEEe2dEb0vlBzM_g" base_Element="_Am1pIenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_Am23QenEEe2dEb0vlBzM_g" base_Element="_Am23QOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Am3eUOnEEe2dEb0vlBzM_g" base_Element="_Am23QunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_Am3eUenEEe2dEb0vlBzM_g" base_Element="_Am23QunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_Am3eUunEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Am4FYOnEEe2dEb0vlBzM_g" base_Element="_Am3eU-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Am4FY-nEEe2dEb0vlBzM_g" base_Element="_Am4FYenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_Am4scOnEEe2dEb0vlBzM_g" base_Element="_Am4FYenEEe2dEb0vlBzM_g">
    <annotations xmi:id="_Am4scenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Am4sc-nEEe2dEb0vlBzM_g" base_Element="_Am4scunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Am5TgOnEEe2dEb0vlBzM_g" base_Element="_Am4sdOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_Am5TgenEEe2dEb0vlBzM_g" base_Element="_Am4sdOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_Am5TgunEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Am56kOnEEe2dEb0vlBzM_g" base_Element="_Am5Tg-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Am56k-nEEe2dEb0vlBzM_g" base_Element="_Am56kenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_Am56lOnEEe2dEb0vlBzM_g" base_Element="_Am56kenEEe2dEb0vlBzM_g">
    <annotations xmi:id="_Am56lenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Am6hoenEEe2dEb0vlBzM_g" base_Element="_Am6hoOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Am7IsOnEEe2dEb0vlBzM_g" base_Element="_Am6hounEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_Am7IsenEEe2dEb0vlBzM_g" base_Element="_Am6hounEEe2dEb0vlBzM_g">
    <annotations xmi:id="_Am7IsunEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Am7vwOnEEe2dEb0vlBzM_g" base_Element="_Am7Is-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Am8W0OnEEe2dEb0vlBzM_g" base_Element="_Am7vwenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_Am8W0enEEe2dEb0vlBzM_g" base_Element="_Am7vwenEEe2dEb0vlBzM_g">
    <annotations xmi:id="_Am8W0unEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Am9k8OnEEe2dEb0vlBzM_g" base_Element="_Am894OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_Am-MAOnEEe2dEb0vlBzM_g" base_Element="_Am9k8enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_Am-zEOnEEe2dEb0vlBzM_g" base_Element="_Am-MAenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_Am-zEunEEe2dEb0vlBzM_g" base_Element="_Am-zEenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_Am_aIOnEEe2dEb0vlBzM_g" base_Element="_Am-zE-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_Am_aIunEEe2dEb0vlBzM_g" base_Element="_Am_aIenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AnAoQOnEEe2dEb0vlBzM_g" base_Element="_AnABMOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AnAoQunEEe2dEb0vlBzM_g" base_Element="_AnAoQenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AnCdcOnEEe2dEb0vlBzM_g" genericsValue="String" base_Element="_AnB2YOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AnDEgOnEEe2dEb0vlBzM_g" base_Element="_AnCdcenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AnGu4-nEEe2dEb0vlBzM_g" base_Element="_AnGu4OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AnHV8OnEEe2dEb0vlBzM_g" base_Element="_AnGu4OnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AnHV8enEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_AnIkEOnEEe2dEb0vlBzM_g" genericsValue="String, Node" base_Element="_AnH9AOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AnLAUenEEe2dEb0vlBzM_g" base_Element="_AnKZRunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AnLAUunEEe2dEb0vlBzM_g" base_Element="_AnKZRunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AnLAU-nEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_AnMOcOnEEe2dEb0vlBzM_g" genericsValue="ScheduleTime" base_Element="_AnLnY-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AnODoenEEe2dEb0vlBzM_g" base_Element="_AnNclunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AnODounEEe2dEb0vlBzM_g" base_Element="_AnNclunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AnODo-nEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_AnQf4OnEEe2dEb0vlBzM_g" genericsValue="String,InstructionTimeSlot" base_Element="_AnP40OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AnSVEenEEe2dEb0vlBzM_g" base_Element="_AnSVEOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AnS8I-nEEe2dEb0vlBzM_g" genericsValue="T" base_Element="_AnSVE-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AnUxUOnEEe2dEb0vlBzM_g" base_Element="_AnUKQunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AnUxUunEEe2dEb0vlBzM_g" base_Element="_AnUxUenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AnV_cenEEe2dEb0vlBzM_g" genericsValue="Double" base_Element="_AnV_cOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AnXNkOnEEe2dEb0vlBzM_g" genericsValue="Double,ReliabilityRow" base_Element="_AnWmgOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AnYbsenEEe2dEb0vlBzM_g" base_Element="_AnYbsOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AnfJYOnEEe2dEb0vlBzM_g" base_Element="_AneiUOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AnfwcOnEEe2dEb0vlBzM_g" base_Element="_AnfJYenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_Ang-kenEEe2dEb0vlBzM_g" genericsValue="Activation,Row&lt;Activation>" base_Element="_Ang-kOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AniMsOnEEe2dEb0vlBzM_g" genericsValue="T" base_Element="_AnhloenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_Anja0OnEEe2dEb0vlBzM_g" base_Element="_AnizwenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AnwPIOnEEe2dEb0vlBzM_g" base_Element="_AnvoEOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_Anw2MOnEEe2dEb0vlBzM_g" base_Element="_AnwPIenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_An4K8OnEEe2dEb0vlBzM_g" base_Element="_An3j4OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_An4K8unEEe2dEb0vlBzM_g" base_Element="_An4K8enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_An4yAOnEEe2dEb0vlBzM_g" base_Element="_An4K8-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_An5ZEOnEEe2dEb0vlBzM_g" base_Element="_An4yAenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_An5ZEunEEe2dEb0vlBzM_g" base_Element="_An5ZEenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_An-RkOnEEe2dEb0vlBzM_g" base_Element="_An9qgOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_An-Rk-nEEe2dEb0vlBzM_g" base_Element="_An-RkenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_An-4oOnEEe2dEb0vlBzM_g" base_Element="_An-RkenEEe2dEb0vlBzM_g">
    <annotations xmi:id="_An-4oenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_An-4pOnEEe2dEb0vlBzM_g" base_Element="_An-4ounEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_An_fsOnEEe2dEb0vlBzM_g" base_Element="_An-4ounEEe2dEb0vlBzM_g">
    <annotations xmi:id="_An_fsenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_An_fs-nEEe2dEb0vlBzM_g" base_Element="_An_fsunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AoAGwunEEe2dEb0vlBzM_g" base_Element="_AoAGwOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AoAGw-nEEe2dEb0vlBzM_g" base_Element="_AoAGwOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AoAGxOnEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_AoAt0OnEEe2dEb0vlBzM_g" base_Element="_AoAGxenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AoAt0-nEEe2dEb0vlBzM_g" base_Element="_AoAt0enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AoBU4OnEEe2dEb0vlBzM_g" base_Element="_AoAt0enEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AoBU4enEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_AoBU4-nEEe2dEb0vlBzM_g" base_Element="_AoBU4unEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AoB78unEEe2dEb0vlBzM_g" base_Element="_AoB78OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AoB78-nEEe2dEb0vlBzM_g" base_Element="_AoB78OnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AoB79OnEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_AoCjAOnEEe2dEb0vlBzM_g" base_Element="_AoB79enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AoCjA-nEEe2dEb0vlBzM_g" base_Element="_AoCjAenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AoDKEOnEEe2dEb0vlBzM_g" base_Element="_AoCjAenEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AoDKEenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_AoDxIOnEEe2dEb0vlBzM_g" base_Element="_AoDKEunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AoDxI-nEEe2dEb0vlBzM_g" base_Element="_AoDxIenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AoDxJOnEEe2dEb0vlBzM_g" base_Element="_AoDxIenEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AoDxJenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_AoFmUenEEe2dEb0vlBzM_g" base_Element="_AoFmUOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AoG0cunEEe2dEb0vlBzM_g" genericsValue="Integer" base_Element="_AoG0cOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AoHbgunEEe2dEb0vlBzM_g" genericsValue="Integer" base_Element="_AoHbgOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AoLF4OnEEe2dEb0vlBzM_g" base_Element="_AoKe0OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AoLs8OnEEe2dEb0vlBzM_g" base_Element="_AoLF4enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AoVd8OnEEe2dEb0vlBzM_g" base_Element="_AoU24OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AoWFAOnEEe2dEb0vlBzM_g" base_Element="_AoVd8enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AoWFAunEEe2dEb0vlBzM_g" base_Element="_AoWFAenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AocytOnEEe2dEb0vlBzM_g" base_Element="_AocysunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AodZwOnEEe2dEb0vlBzM_g" base_Element="_AocysunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AodZwenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AodZxOnEEe2dEb0vlBzM_g" base_Element="_AodZwunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AoeA0OnEEe2dEb0vlBzM_g" base_Element="_AodZwunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AoeA0enEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_AoeA0-nEEe2dEb0vlBzM_g" base_Element="_AoeA0unEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aoen4OnEEe2dEb0vlBzM_g" base_Element="_AoeA1OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_Aoen4enEEe2dEb0vlBzM_g" base_Element="_AoeA1OnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_Aoen4unEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_AofO8OnEEe2dEb0vlBzM_g" base_Element="_Aoen4-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AofO8-nEEe2dEb0vlBzM_g" base_Element="_AofO8enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AofO9OnEEe2dEb0vlBzM_g" base_Element="_AofO8enEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AofO9enEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Aof2AenEEe2dEb0vlBzM_g" base_Element="_Aof2AOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AogdEOnEEe2dEb0vlBzM_g" base_Element="_Aof2AunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AogdEenEEe2dEb0vlBzM_g" base_Element="_Aof2AunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AogdEunEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_AohEIOnEEe2dEb0vlBzM_g" base_Element="_AogdE-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AohEI-nEEe2dEb0vlBzM_g" base_Element="_AohEIenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AohEJOnEEe2dEb0vlBzM_g" base_Element="_AohEIenEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AohEJenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AohrMenEEe2dEb0vlBzM_g" base_Element="_AohEJunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AohrMunEEe2dEb0vlBzM_g" base_Element="_AohEJunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AohrM-nEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AoiSQOnEEe2dEb0vlBzM_g" base_Element="_AohrNOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AoiSQenEEe2dEb0vlBzM_g" base_Element="_AohrNOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AoiSQunEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aoi5UunEEe2dEb0vlBzM_g" base_Element="_Aoi5UOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_Aoi5U-nEEe2dEb0vlBzM_g" base_Element="_Aoi5UOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_Aoi5VOnEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Ao764OnEEe2dEb0vlBzM_g" genericsValue="T, E" base_Element="_Ao7T0OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_Ao8h8OnEEe2dEb0vlBzM_g" base_Element="_Ao764unEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_Ao9JAOnEEe2dEb0vlBzM_g" genericsValue="Activation" base_Element="_Ao8h8enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_Ao-XIOnEEe2dEb0vlBzM_g" genericsValue="Edge" base_Element="_Ao9wEenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_Ao_lQOnEEe2dEb0vlBzM_g" genericsValue="String" base_Element="_Ao-XIunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ApAMUOnEEe2dEb0vlBzM_g" genericsValue="String" base_Element="_Ao_lQunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ApBacOnEEe2dEb0vlBzM_g" genericsValue="ScheduleTime" base_Element="_ApAzYenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ApD2sOnEEe2dEb0vlBzM_g" genericsValue="String" base_Element="_ApDPoOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ApFr4enEEe2dEb0vlBzM_g" genericsValue="Edge" base_Element="_ApFE0unEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ApGS8OnEEe2dEb0vlBzM_g" genericsValue="String" base_Element="_ApFE0-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ApG6AunEEe2dEb0vlBzM_g" genericsValue="String" base_Element="_ApG6AenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ApIIIOnEEe2dEb0vlBzM_g" genericsValue="String" base_Element="_ApHhEenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ApIvMenEEe2dEb0vlBzM_g" genericsValue="Activation" base_Element="_ApIvMOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ApJ9UenEEe2dEb0vlBzM_g" base_Element="_ApJWQOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ApKkYOnEEe2dEb0vlBzM_g" genericsValue="Node" base_Element="_ApJWQenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ApKkYenEEe2dEb0vlBzM_g" base_Element="_ApJWQOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ApKkYunEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ApLLcenEEe2dEb0vlBzM_g" genericsValue="T" base_Element="_ApLLcOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_ApMZkOnEEe2dEb0vlBzM_g" base_Element="_ApLygOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ApNnsOnEEe2dEb0vlBzM_g" base_Element="_ApNAoOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ApNnsenEEe2dEb0vlBzM_g" base_Element="_ApNAoOnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ApNnsunEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ApOOwenEEe2dEb0vlBzM_g" genericsValue="String" base_Element="_ApOOwOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ApPc4OnEEe2dEb0vlBzM_g" genericsValue="Edge" base_Element="_ApO10OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ApRSEOnEEe2dEb0vlBzM_g" genericsValue="Flow" base_Element="_ApQrAOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ApSgMunEEe2dEb0vlBzM_g" genericsValue="Node" base_Element="_ApSgMenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ApTuUOnEEe2dEb0vlBzM_g" genericsValue="Integer" base_Element="_ApTHQenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_ApWxoOnEEe2dEb0vlBzM_g" base_Element="_ApWKkunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ApacAOnEEe2dEb0vlBzM_g" genericsValue="T" base_Element="_ApZ08OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ApbDE-nEEe2dEb0vlBzM_g" base_Element="_ApacAenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_ApbqIOnEEe2dEb0vlBzM_g" base_Element="_ApacAenEEe2dEb0vlBzM_g">
    <annotations xmi:id="_ApbqIenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ApcRMOnEEe2dEb0vlBzM_g" genericsValue="T" base_Element="_ApbqIunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Apc4Q-nEEe2dEb0vlBzM_g" base_Element="_ApcRMenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_Apc4ROnEEe2dEb0vlBzM_g" base_Element="_ApcRMenEEe2dEb0vlBzM_g">
    <annotations xmi:id="_Apc4RenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ApdfUenEEe2dEb0vlBzM_g" genericsValue="Node" base_Element="_ApdfUOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ApfUgOnEEe2dEb0vlBzM_g" genericsValue="T" base_Element="_ApetcOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Apf7kenEEe2dEb0vlBzM_g" base_Element="_ApfUgenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_Apf7kunEEe2dEb0vlBzM_g" base_Element="_ApfUgenEEe2dEb0vlBzM_g">
    <annotations xmi:id="_Apf7k-nEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ApgioenEEe2dEb0vlBzM_g" base_Element="_ApgioOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AphwwenEEe2dEb0vlBzM_g" genericsValue="T" base_Element="_AphwwOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ApiX1OnEEe2dEb0vlBzM_g" base_Element="_ApiX0OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_Api-4OnEEe2dEb0vlBzM_g" base_Element="_ApiX0OnEEe2dEb0vlBzM_g">
    <annotations xmi:id="_Api-4enEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Apjl8OnEEe2dEb0vlBzM_g" base_Element="_Api-4unEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_Apjl8enEEe2dEb0vlBzM_g" genericsValue="Node" base_Element="_Api-4-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_Apjl8unEEe2dEb0vlBzM_g" base_Element="_Api-4unEEe2dEb0vlBzM_g">
    <annotations xmi:id="_Apjl8-nEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Apk0EOnEEe2dEb0vlBzM_g" genericsValue="T" base_Element="_ApkNAOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AplbIunEEe2dEb0vlBzM_g" base_Element="_Apk0EenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Annotations xmi:id="_AplbI-nEEe2dEb0vlBzM_g" base_Element="_Apk0EenEEe2dEb0vlBzM_g">
    <annotations xmi:id="_AplbJOnEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ApmCMenEEe2dEb0vlBzM_g" base_Element="_ApmCMOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_Apq6sOnEEe2dEb0vlBzM_g" genericsValue="T" base_Element="_ApqTpunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_Apsv4OnEEe2dEb0vlBzM_g" genericsValue="T" base_Element="_ApsI0enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AptW9unEEe2dEb0vlBzM_g" genericsValue="T" base_Element="_AptW8enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_Apt-AOnEEe2dEb0vlBzM_g" genericsValue="T" base_Element="_AptW8unEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ApvMIunEEe2dEb0vlBzM_g" genericsValue="E" base_Element="_ApvMIenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_ApxBUOnEEe2dEb0vlBzM_g" base_Element="_ApwaQOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_ApyPcOnEEe2dEb0vlBzM_g" base_Element="_ApxoZunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_ApzdkunEEe2dEb0vlBzM_g" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_ApzdkOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Apzdk-nEEe2dEb0vlBzM_g" base_Element="_ApzdkOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_Ap49IenEEe2dEb0vlBzM_g" base_Element="_Ap49IOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_Ap8ngunEEe2dEb0vlBzM_g" genericsValue="Integer" base_Element="_Ap8AdOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_Ap91oOnEEe2dEb0vlBzM_g" genericsValue="ReliabilityNode" base_Element="_Ap9OlOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AqAR4OnEEe2dEb0vlBzM_g" base_Element="_Ap_q0OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AqMfI-nEEe2dEb0vlBzM_g" genericsValue="Node" base_Element="_AqMfIenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Array xmi:id="_AqNGNOnEEe2dEb0vlBzM_g" base_Element="_AqNGMOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AqNtQOnEEe2dEb0vlBzM_g" genericsValue="Node" base_Element="_AqNGMenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AqYsYOnEEe2dEb0vlBzM_g" genericsValue="String" base_Element="_AqYFUenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AqZTcOnEEe2dEb0vlBzM_g" genericsValue="Edge" base_Element="_AqYsYenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AqahkOnEEe2dEb0vlBzM_g" genericsValue="ScheduleTime" base_Element="_AqZ6gOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aqc90OnEEe2dEb0vlBzM_g" base_Element="_AqcWwunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aqc90unEEe2dEb0vlBzM_g" base_Element="_Aqc90enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aqdk4OnEEe2dEb0vlBzM_g" base_Element="_Aqc90-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqeL8-nEEe2dEb0vlBzM_g" base_Element="_AqeL8unEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqezAOnEEe2dEb0vlBzM_g" base_Element="_AqeL9OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqfaEenEEe2dEb0vlBzM_g" base_Element="_AqfaEOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqfaE-nEEe2dEb0vlBzM_g" base_Element="_AqfaEunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AqgBIenEEe2dEb0vlBzM_g" genericsValue="ChannelSet" base_Element="_AqgBIOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqgBIunEEe2dEb0vlBzM_g" base_Element="_AqgBIOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_Aqh2UOnEEe2dEb0vlBzM_g" genericsValue="Edge" base_Element="_AqhPQunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aqh2UenEEe2dEb0vlBzM_g" base_Element="_AqhPQunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqidYOnEEe2dEb0vlBzM_g" base_Element="_Aqh2UunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AqidYunEEe2dEb0vlBzM_g" genericsValue="String" base_Element="_AqidYenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqjEcOnEEe2dEb0vlBzM_g" base_Element="_AqidYenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqjEcunEEe2dEb0vlBzM_g" base_Element="_AqjEcenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqjEdOnEEe2dEb0vlBzM_g" base_Element="_AqjEc-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqkSkOnEEe2dEb0vlBzM_g" base_Element="_AqjrgOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqkSkunEEe2dEb0vlBzM_g" base_Element="_AqkSkenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aqk5oenEEe2dEb0vlBzM_g" base_Element="_Aqk5oOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aqk5o-nEEe2dEb0vlBzM_g" base_Element="_Aqk5ounEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqnV4enEEe2dEb0vlBzM_g" base_Element="_AqnV4OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqpLEOnEEe2dEb0vlBzM_g" base_Element="_AqokBenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqpLEunEEe2dEb0vlBzM_g" base_Element="_AqpLEenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqpyIOnEEe2dEb0vlBzM_g" base_Element="_AqpLE-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AqpyIunEEe2dEb0vlBzM_g" genericsValue="Node" base_Element="_AqpyIenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqqZMOnEEe2dEb0vlBzM_g" base_Element="_AqpyIenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AqqZMunEEe2dEb0vlBzM_g" genericsValue="Integer" base_Element="_AqqZMenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqrAQOnEEe2dEb0vlBzM_g" base_Element="_AqqZMenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AqrAQunEEe2dEb0vlBzM_g" genericsValue="Edge" base_Element="_AqrAQenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqrnUOnEEe2dEb0vlBzM_g" base_Element="_AqrAQenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqrnUunEEe2dEb0vlBzM_g" base_Element="_AqrnUenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqrnVOnEEe2dEb0vlBzM_g" base_Element="_AqrnU-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqtcgunEEe2dEb0vlBzM_g" base_Element="_AqtcgenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqtchOnEEe2dEb0vlBzM_g" base_Element="_Aqtcg-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AquDkenEEe2dEb0vlBzM_g" base_Element="_AquDkOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AquDk-nEEe2dEb0vlBzM_g" base_Element="_AquDkunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AquqoenEEe2dEb0vlBzM_g" base_Element="_AquqoOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aquqo-nEEe2dEb0vlBzM_g" base_Element="_AquqounEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqvRsenEEe2dEb0vlBzM_g" base_Element="_AqvRsOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aqv4wenEEe2dEb0vlBzM_g" base_Element="_Aqv4wOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aqwf0OnEEe2dEb0vlBzM_g" base_Element="_Aqv4wunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqxG4OnEEe2dEb0vlBzM_g" base_Element="_Aqwf0-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqxG4-nEEe2dEb0vlBzM_g" base_Element="_AqxG4unEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aqxt8OnEEe2dEb0vlBzM_g" base_Element="_AqxG5OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqyVAunEEe2dEb0vlBzM_g" base_Element="_AqyVAOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aqy8EOnEEe2dEb0vlBzM_g" base_Element="_AqyVA-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aqy8E-nEEe2dEb0vlBzM_g" base_Element="_Aqy8EunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqzjIenEEe2dEb0vlBzM_g" base_Element="_AqzjIOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AqzjI-nEEe2dEb0vlBzM_g" base_Element="_AqzjIunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aq0KMOnEEe2dEb0vlBzM_g" base_Element="_AqzjJOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_Aq0KMunEEe2dEb0vlBzM_g" genericsValue="String, Integer" base_Element="_Aq0KMenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aq0xQOnEEe2dEb0vlBzM_g" base_Element="_Aq0KMenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aq1YUunEEe2dEb0vlBzM_g" base_Element="_Aq1YUenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aq1YVOnEEe2dEb0vlBzM_g" base_Element="_Aq1YU-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_Aq2mcenEEe2dEb0vlBzM_g" genericsValue="Edge" base_Element="_Aq2mcOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aq5CsunEEe2dEb0vlBzM_g" base_Element="_Aq5CsenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aq5CtOnEEe2dEb0vlBzM_g" base_Element="_Aq5Cs-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aq5pwenEEe2dEb0vlBzM_g" base_Element="_Aq5pwOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aq7e8OnEEe2dEb0vlBzM_g" base_Element="_Aq635enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aq7e8unEEe2dEb0vlBzM_g" base_Element="_Aq7e8enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aq8GA-nEEe2dEb0vlBzM_g" base_Element="_Aq8GAunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aq8tEOnEEe2dEb0vlBzM_g" base_Element="_Aq8GBOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aq9UIenEEe2dEb0vlBzM_g" base_Element="_Aq9UIOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aq9UI-nEEe2dEb0vlBzM_g" base_Element="_Aq9UIunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aq97MOnEEe2dEb0vlBzM_g" base_Element="_Aq9UJOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Array xmi:id="_Aq97NenEEe2dEb0vlBzM_g" dimensions="2" base_Element="_Aq97M-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Aq-iQOnEEe2dEb0vlBzM_g" base_Element="_Aq97M-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArA-gOnEEe2dEb0vlBzM_g" base_Element="_ArAXc-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArA-gunEEe2dEb0vlBzM_g" base_Element="_ArA-genEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArBlkOnEEe2dEb0vlBzM_g" base_Element="_ArA-g-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArBlkunEEe2dEb0vlBzM_g" base_Element="_ArBlkenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArCMoOnEEe2dEb0vlBzM_g" base_Element="_ArBlk-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArCMounEEe2dEb0vlBzM_g" base_Element="_ArCMoenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArCzsOnEEe2dEb0vlBzM_g" base_Element="_ArCMo-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArCzsunEEe2dEb0vlBzM_g" base_Element="_ArCzsenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArEB0OnEEe2dEb0vlBzM_g" base_Element="_ArDawOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArEB0unEEe2dEb0vlBzM_g" base_Element="_ArEB0enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArEo4OnEEe2dEb0vlBzM_g" base_Element="_ArEB0-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArEo4unEEe2dEb0vlBzM_g" base_Element="_ArEo4enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArEo5OnEEe2dEb0vlBzM_g" base_Element="_ArEo4-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArFP8enEEe2dEb0vlBzM_g" base_Element="_ArFP8OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArF3AOnEEe2dEb0vlBzM_g" base_Element="_ArFP8unEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArF3A-nEEe2dEb0vlBzM_g" base_Element="_ArF3AenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArGeEOnEEe2dEb0vlBzM_g" base_Element="_ArF3BOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArGeEunEEe2dEb0vlBzM_g" base_Element="_ArGeEenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArITQOnEEe2dEb0vlBzM_g" base_Element="_ArHsNunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArI6UenEEe2dEb0vlBzM_g" base_Element="_ArI6UOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArI6U-nEEe2dEb0vlBzM_g" base_Element="_ArI6UunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArJhYOnEEe2dEb0vlBzM_g" base_Element="_ArI6VOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ArKIcenEEe2dEb0vlBzM_g" genericsValue="Integer" base_Element="_ArKIcOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArKvgOnEEe2dEb0vlBzM_g" base_Element="_ArKIcOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ArLWkOnEEe2dEb0vlBzM_g" genericsValue="SchedulableObject" base_Element="_ArKvgenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArNy0OnEEe2dEb0vlBzM_g" base_Element="_ArNLx-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArNy0unEEe2dEb0vlBzM_g" base_Element="_ArNy0enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArOZ4OnEEe2dEb0vlBzM_g" base_Element="_ArNy0-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArOZ4unEEe2dEb0vlBzM_g" base_Element="_ArOZ4enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArPA8OnEEe2dEb0vlBzM_g" base_Element="_ArOZ4-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArPA8unEEe2dEb0vlBzM_g" base_Element="_ArPA8enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArPA9OnEEe2dEb0vlBzM_g" base_Element="_ArPA8-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArPoAenEEe2dEb0vlBzM_g" base_Element="_ArPoAOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArPoA-nEEe2dEb0vlBzM_g" base_Element="_ArPoAunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArQPEenEEe2dEb0vlBzM_g" base_Element="_ArQPEOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArQPE-nEEe2dEb0vlBzM_g" base_Element="_ArQPEunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArQ2IOnEEe2dEb0vlBzM_g" base_Element="_ArQPFOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArQ2IunEEe2dEb0vlBzM_g" base_Element="_ArQ2IenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArRdMOnEEe2dEb0vlBzM_g" base_Element="_ArQ2I-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArRdM-nEEe2dEb0vlBzM_g" base_Element="_ArRdMenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArRdNenEEe2dEb0vlBzM_g" base_Element="_ArRdNOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArSEQenEEe2dEb0vlBzM_g" base_Element="_ArSEQOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArSEQ-nEEe2dEb0vlBzM_g" base_Element="_ArSEQunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArUggunEEe2dEb0vlBzM_g" base_Element="_ArUggOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArVHkenEEe2dEb0vlBzM_g" base_Element="_ArVHkOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ArVuoenEEe2dEb0vlBzM_g" genericsValue="InstructionParameters" base_Element="_ArVuoOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArVuounEEe2dEb0vlBzM_g" base_Element="_ArVuoOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArWVsenEEe2dEb0vlBzM_g" base_Element="_ArWVsOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArXj1OnEEe2dEb0vlBzM_g" base_Element="_ArXj0unEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArYK4enEEe2dEb0vlBzM_g" base_Element="_ArXj1enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArYx8OnEEe2dEb0vlBzM_g" base_Element="_ArYK4unEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArYx8-nEEe2dEb0vlBzM_g" base_Element="_ArYx8enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArZZAOnEEe2dEb0vlBzM_g" base_Element="_ArYx9OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArZZA-nEEe2dEb0vlBzM_g" base_Element="_ArZZAenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_AraAEOnEEe2dEb0vlBzM_g" genericsValue="String, ReliabilityNode" base_Element="_ArZZBOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AraAEunEEe2dEb0vlBzM_g" base_Element="_ArZZBOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AranIOnEEe2dEb0vlBzM_g" base_Element="_AraAE-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AranIunEEe2dEb0vlBzM_g" base_Element="_AranIenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArbOMOnEEe2dEb0vlBzM_g" base_Element="_AranI-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArbOMunEEe2dEb0vlBzM_g" base_Element="_ArbOMenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Arb1QOnEEe2dEb0vlBzM_g" base_Element="_ArbOM-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Arb1Q-nEEe2dEb0vlBzM_g" base_Element="_Arb1QenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArdqcunEEe2dEb0vlBzM_g" base_Element="_ArdqcenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AreRgenEEe2dEb0vlBzM_g" base_Element="_AreRgOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Are4kOnEEe2dEb0vlBzM_g" base_Element="_AreRgunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Are4kunEEe2dEb0vlBzM_g" base_Element="_Are4kenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArffoOnEEe2dEb0vlBzM_g" base_Element="_Are4k-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArffounEEe2dEb0vlBzM_g" base_Element="_ArffoenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArffpOnEEe2dEb0vlBzM_g" base_Element="_Arffo-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArgGsenEEe2dEb0vlBzM_g" base_Element="_ArgGsOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArgGs-nEEe2dEb0vlBzM_g" base_Element="_ArgGsunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArgtwenEEe2dEb0vlBzM_g" base_Element="_ArgtwOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Argtw-nEEe2dEb0vlBzM_g" base_Element="_ArgtwunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArhU0OnEEe2dEb0vlBzM_g" base_Element="_ArgtxOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArhU0unEEe2dEb0vlBzM_g" base_Element="_ArhU0enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Arii8enEEe2dEb0vlBzM_g" base_Element="_Arii8OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArjKAenEEe2dEb0vlBzM_g" base_Element="_ArjKAOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArjKA-nEEe2dEb0vlBzM_g" base_Element="_ArjKAunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArjxEenEEe2dEb0vlBzM_g" base_Element="_ArjxEOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArjxE-nEEe2dEb0vlBzM_g" base_Element="_ArjxEunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArkYIenEEe2dEb0vlBzM_g" base_Element="_ArkYIOnEEe2dEb0vlBzM_g">
    <associatedElement xmi:type="uml:Operation" xmi:id="_ArkYIunEEe2dEb0vlBzM_g" name="getNumChannels" method="_AsqkUOnEEe2dEb0vlBzM_g">
      <ownedParameter xmi:id="_ArkYI-nEEe2dEb0vlBzM_g" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_Ark_MOnEEe2dEb0vlBzM_g" base_Element="_ArkYIunEEe2dEb0vlBzM_g">
    <annotations xmi:id="_Ark_MenEEe2dEb0vlBzM_g" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ark_NOnEEe2dEb0vlBzM_g" base_Element="_Ark_MunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArlmQunEEe2dEb0vlBzM_g" base_Element="_ArlmQOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArnbdOnEEe2dEb0vlBzM_g" base_Element="_ArnbcunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AroCg-nEEe2dEb0vlBzM_g" base_Element="_AroCgenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AropkunEEe2dEb0vlBzM_g" base_Element="_AropkenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ArpQoOnEEe2dEb0vlBzM_g" genericsValue="String" base_Element="_Aropk-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_Arp3sOnEEe2dEb0vlBzM_g" genericsValue="String" base_Element="_ArpQounEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Arrs4-nEEe2dEb0vlBzM_g" base_Element="_Arrs4unEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArsT8OnEEe2dEb0vlBzM_g" base_Element="_Arrs5OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArsT8unEEe2dEb0vlBzM_g" base_Element="_ArsT8enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArtiEenEEe2dEb0vlBzM_g" base_Element="_ArtiEOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AruJIOnEEe2dEb0vlBzM_g" base_Element="_ArtiEunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AruwMenEEe2dEb0vlBzM_g" base_Element="_AruwMOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AruwM-nEEe2dEb0vlBzM_g" base_Element="_AruwMunEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArvXROnEEe2dEb0vlBzM_g" base_Element="_ArvXQOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Arv-U-nEEe2dEb0vlBzM_g" base_Element="_ArvXRenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Arv-VenEEe2dEb0vlBzM_g" base_Element="_Arv-VOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ArwlYenEEe2dEb0vlBzM_g" genericsValue="Activation" base_Element="_ArwlYOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArwlYunEEe2dEb0vlBzM_g" base_Element="_ArwlYOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Generics xmi:id="_ArxzgOnEEe2dEb0vlBzM_g" genericsValue="String, Integer" base_Element="_ArxMcOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ArxzgenEEe2dEb0vlBzM_g" base_Element="_ArxMcOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_AryakOnEEe2dEb0vlBzM_g" base_Element="_ArxzgunEEe2dEb0vlBzM_g"/>
  <uml:OpaqueBehavior xmi:id="_AsqkUOnEEe2dEb0vlBzM_g" name="getNumChannels" specification="_ArkYIunEEe2dEb0vlBzM_g">
    <ownedParameter xmi:id="_AsqkUenEEe2dEb0vlBzM_g" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_At5TYOnEEe2dEb0vlBzM_g" base_Element="_At4sUOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_At56cOnEEe2dEb0vlBzM_g" base_Element="_At5TYenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_At6hgunEEe2dEb0vlBzM_g" base_Element="_At6hgOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_At7IkunEEe2dEb0vlBzM_g" base_Element="_At7IkOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_At7vounEEe2dEb0vlBzM_g" base_Element="_At7voOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_At8WsunEEe2dEb0vlBzM_g" base_Element="_At8WsOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_At89wunEEe2dEb0vlBzM_g" base_Element="_At89wOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_At9k0unEEe2dEb0vlBzM_g" base_Element="_At9k0OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_At-L4OnEEe2dEb0vlBzM_g" base_Element="_At9k0-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_At-y8OnEEe2dEb0vlBzM_g" base_Element="_At-L4enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_At_aAOnEEe2dEb0vlBzM_g" base_Element="_At-y8enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuABEOnEEe2dEb0vlBzM_g" base_Element="_At_aAenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuABE-nEEe2dEb0vlBzM_g" base_Element="_AuABEenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuAoIOnEEe2dEb0vlBzM_g" base_Element="_AuABFOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuBPMOnEEe2dEb0vlBzM_g" base_Element="_AuAoIenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuBPM-nEEe2dEb0vlBzM_g" base_Element="_AuBPMenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuB2QunEEe2dEb0vlBzM_g" base_Element="_AuB2QOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuCdUOnEEe2dEb0vlBzM_g" base_Element="_AuB2Q-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuDEYOnEEe2dEb0vlBzM_g" base_Element="_AuCdUenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuDrcOnEEe2dEb0vlBzM_g" base_Element="_AuDEYenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuDrc-nEEe2dEb0vlBzM_g" base_Element="_AuDrcenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuESgOnEEe2dEb0vlBzM_g" base_Element="_AuDrdOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuE5kOnEEe2dEb0vlBzM_g" base_Element="_AuESgenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuE5k-nEEe2dEb0vlBzM_g" base_Element="_AuE5kenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuFgoenEEe2dEb0vlBzM_g" base_Element="_AuE5lOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuGHsOnEEe2dEb0vlBzM_g" base_Element="_AuFgounEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuGHs-nEEe2dEb0vlBzM_g" base_Element="_AuGHsenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuGuwOnEEe2dEb0vlBzM_g" base_Element="_AuGHtOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuHV0OnEEe2dEb0vlBzM_g" base_Element="_AuGuwenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuHV0-nEEe2dEb0vlBzM_g" base_Element="_AuHV0enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuH84OnEEe2dEb0vlBzM_g" base_Element="_AuHV1OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuIj8OnEEe2dEb0vlBzM_g" base_Element="_AuH84enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuIj8-nEEe2dEb0vlBzM_g" base_Element="_AuIj8enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuJLAunEEe2dEb0vlBzM_g" base_Element="_AuJLAOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuJyEOnEEe2dEb0vlBzM_g" base_Element="_AuJLA-nEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuJyE-nEEe2dEb0vlBzM_g" base_Element="_AuJyEenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuKZIOnEEe2dEb0vlBzM_g" base_Element="_AuJyFOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuLAMOnEEe2dEb0vlBzM_g" base_Element="_AuKZIenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuLnQOnEEe2dEb0vlBzM_g" base_Element="_AuLAMenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuMOUOnEEe2dEb0vlBzM_g" base_Element="_AuLnQenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuM1YOnEEe2dEb0vlBzM_g" base_Element="_AuMOUenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuNccOnEEe2dEb0vlBzM_g" base_Element="_AuM1YenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuODgOnEEe2dEb0vlBzM_g" base_Element="_AuNccenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuOqkOnEEe2dEb0vlBzM_g" base_Element="_AuODgenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuPRounEEe2dEb0vlBzM_g" base_Element="_AuPRoOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuP4sunEEe2dEb0vlBzM_g" base_Element="_AuP4sOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuQfwunEEe2dEb0vlBzM_g" base_Element="_AuQfwOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuRt4OnEEe2dEb0vlBzM_g" base_Element="_AuRG0OnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuSU8OnEEe2dEb0vlBzM_g" base_Element="_AuRt4enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuS8AOnEEe2dEb0vlBzM_g" base_Element="_AuSU8enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuTjEOnEEe2dEb0vlBzM_g" base_Element="_AuS8AenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuUKIOnEEe2dEb0vlBzM_g" base_Element="_AuTjEenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuUxMOnEEe2dEb0vlBzM_g" base_Element="_AuUKIenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuVYQOnEEe2dEb0vlBzM_g" base_Element="_AuUxMenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuV_UOnEEe2dEb0vlBzM_g" base_Element="_AuVYQenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuWmYOnEEe2dEb0vlBzM_g" base_Element="_AuV_UenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuXNcunEEe2dEb0vlBzM_g" base_Element="_AuXNcOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuYbkOnEEe2dEb0vlBzM_g" base_Element="_AuX0gOnEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuZCoOnEEe2dEb0vlBzM_g" base_Element="_AuYbkenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuZpsOnEEe2dEb0vlBzM_g" base_Element="_AuZCoenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuaQwOnEEe2dEb0vlBzM_g" base_Element="_AuZpsenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_Aua30OnEEe2dEb0vlBzM_g" base_Element="_AuaQwenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_Aube4OnEEe2dEb0vlBzM_g" base_Element="_Aua30enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AucF8OnEEe2dEb0vlBzM_g" base_Element="_Aube4enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuctAOnEEe2dEb0vlBzM_g" base_Element="_AucF8enEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AudUEOnEEe2dEb0vlBzM_g" base_Element="_AuctAenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_Aud7IOnEEe2dEb0vlBzM_g" base_Element="_AudUEenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AueiMOnEEe2dEb0vlBzM_g" base_Element="_Aud7IenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AufJQOnEEe2dEb0vlBzM_g" base_Element="_AueiMenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AufwUOnEEe2dEb0vlBzM_g" base_Element="_AufJQenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AugXYOnEEe2dEb0vlBzM_g" base_Element="_AufwUenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_Aug-cOnEEe2dEb0vlBzM_g" base_Element="_AugXYenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuhlgOnEEe2dEb0vlBzM_g" base_Element="_Aug-cenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuiMkOnEEe2dEb0vlBzM_g" base_Element="_AuhlgenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AuizoOnEEe2dEb0vlBzM_g" base_Element="_AuiMkenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Reference xmi:id="_AujasOnEEe2dEb0vlBzM_g" base_Element="_AuizoenEEe2dEb0vlBzM_g"/>
  <UMLLabProfile:Patch xmi:id="_CXz3gOnEEe2dEb0vlBzM_g" base_Element="_ALd7wOnEEe2dEb0vlBzM_g" patchText="@@ -351,26 +351,24 @@&#xA; um EdgeState&#xA;-()&#xA;  %7B%0D%0A%09%09RELEAS&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_CX2TwOnEEe2dEb0vlBzM_g" base_Element="_AMmkMOnEEe2dEb0vlBzM_g" patchText="@@ -254,22 +254,25 @@&#xA; MISS%22;%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_CX260OnEEe2dEb0vlBzM_g" base_Element="_AOtdAOnEEe2dEb0vlBzM_g" patchText="@@ -113,18 +113,16 @@&#xA; eChoices&#xA;-()&#xA;  %7B%0D%0A%09   &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_CX3h4OnEEe2dEb0vlBzM_g" base_Element="_AO31EOnEEe2dEb0vlBzM_g" patchText="@@ -145,26 +145,24 @@&#xA; ystemChoices&#xA;-()&#xA;  %7B%0D%0A    SOUR&#xA;@@ -284,18 +284,16 @@&#xA; dChoices&#xA;-()&#xA;  %7B%0D%0A    &#xA;" conflicting="false"/>
</xmi:XMI>
